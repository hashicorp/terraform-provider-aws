# Generated by internal/generate/servicesemgrep/main.go; DO NOT EDIT.
rules:
  - id: aws-in-func-name
    languages:
      - go
    message: Do not use "AWS" in func name inside AWS Provider
    paths:
      include:
        - internal
      exclude:
        - internal/service/securitylake/aws_log_source.go
        - internal/service/securitylake/aws_log_source_test.go
        - internal/service/*/service_endpoints_gen_test.go
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AWS"
      - focus-metavariable: $NAME
    severity: WARNING
  - id: aws-in-const-name
    languages:
      - go
    message: Do not use "AWS" in const name inside AWS Provider
    paths:
      include:
        - internal
      exclude:
        - internal/service/securitylake/aws_log_source.go
        - internal/service/*/service_endpoints_gen_test.go
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AWS"
            - pattern-not-regex: "[Aa]wsSdkId"
    severity: WARNING
  - id: aws-in-var-name
    languages:
      - go
    message: Do not use "AWS" in var name inside AWS Provider
    paths:
      include:
        - internal
      exclude:
        - internal/service/securitylake/aws_log_source.go
        - internal/service/securitylake/exports_test.go
        - internal/service/*/service_endpoints_gen_test.go
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)AWS"
            - pattern-not-regex: "[Aa]wsSdkId"
    severity: WARNING
{{- range $i, $s := .BadCaps }}
  - id: caps{{- $i }}-in-func-name
    languages:
      - go
    message: Use correct caps in func name (i.e., HTTPS or https, not Https) (see list at https://github.com/hashicorp/terraform-provider-aws/blob/main/names/caps.md)
    paths:
      include:
        - internal
    patterns:
      - pattern: func $NAME( ... ) { ... }
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "({{ $s }})"
      - focus-metavariable: $NAME
    severity: WARNING
  - id: caps{{- $i }}-in-const-name
    languages:
      - go
    message: Use correct caps in const name (i.e., HTTPS or https, not Https) (see list at https://github.com/hashicorp/terraform-provider-aws/blob/main/names/caps.md)
    paths:
      include:
        - internal
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "({{ $s }})"
    severity: WARNING
  - id: caps{{- $i }}-in-var-name
    languages:
      - go
    message: Use correct caps in var name (i.e., HTTPS or https, not Https) (see list at https://github.com/hashicorp/terraform-provider-aws/blob/main/names/caps.md)
    paths:
      include:
        - internal
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "({{ $s }})"
    severity: WARNING
{{- end }}
  - id: ec2-in-func-name
    languages:
      - go
    message: Do not use "EC2" in func name inside ec2 package
    paths:
      include:
        - internal/service/ec2
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EC2"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: ec2-in-const-name
    languages:
      - go
    message: Do not use "EC2" in const name inside ec2 package
    paths:
      include:
        - internal/service/ec2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EC2"
    severity: WARNING
  - id: ec2-in-var-name
    languages:
      - go
    message: Do not use "EC2" in var name inside ec2 package
    paths:
      include:
        - internal/service/ec2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)EC2"
    severity: WARNING
