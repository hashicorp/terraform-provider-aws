// Code generated by internal/generate/resolveendpoints/main.go; DO NOT EDIT.

// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

package conns

import (
	"context"
	"os"

	"github.com/aws/aws-sdk-go-v2/aws"
)

func (c *AWSClient) resolveEndpoint(ctx context.Context, servicePackageName string) string {
	endpoint := c.endpoints[servicePackageName]
	if endpoint != "" {
		return endpoint
	}

	// Only SDK v1 packages. This is already supported by SDK v2.
	switch servicePackageName {

	case "simpledb":
		endpoint = aws.ToString(c.awsConfig.BaseEndpoint)
		svc := os.Getenv("AWS_ENDPOINT_URL_SIMPLEDB")
		if svc != "" {
			return svc
		}

		if base := os.Getenv("AWS_ENDPOINT_URL"); base != "" {
			return base
		}

		endpoint, found, err := resolveServiceBaseEndpoint(ctx, "SimpleDB", c.awsConfig.ConfigSources)
		if found && err == nil {
			return endpoint
		}

	}

	return endpoint
}
