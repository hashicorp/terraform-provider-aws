// Code generated by "internal/generate/listpages/main.go -ListOps=ListApiKeys,ListDomainNames,ListGraphqlApis"; DO NOT EDIT.

package appsync

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/appsync"
)

func listAPIKeysPages(ctx context.Context, conn *appsync.Client, input *appsync.ListApiKeysInput, fn func(*appsync.ListApiKeysOutput, bool) bool, optFns ...func(*appsync.Options)) error {
	for {
		output, err := conn.ListApiKeys(ctx, input, optFns...)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.NextToken = output.NextToken
	}
	return nil
}
func listDomainNamesPages(ctx context.Context, conn *appsync.Client, input *appsync.ListDomainNamesInput, fn func(*appsync.ListDomainNamesOutput, bool) bool, optFns ...func(*appsync.Options)) error {
	for {
		output, err := conn.ListDomainNames(ctx, input, optFns...)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.NextToken = output.NextToken
	}
	return nil
}
func listGraphQLAPIsPages(ctx context.Context, conn *appsync.Client, input *appsync.ListGraphqlApisInput, fn func(*appsync.ListGraphqlApisOutput, bool) bool, optFns ...func(*appsync.Options)) error {
	for {
		output, err := conn.ListGraphqlApis(ctx, input, optFns...)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.NextToken = output.NextToken
	}
	return nil
}
