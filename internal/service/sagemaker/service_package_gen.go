// Code generated by internal/generate/servicepackage/main.go; DO NOT EDIT.

package sagemaker

import (
	"context"

	aws_sdkv1 "github.com/aws/aws-sdk-go/aws"
	session_sdkv1 "github.com/aws/aws-sdk-go/aws/session"
	sagemaker_sdkv1 "github.com/aws/aws-sdk-go/service/sagemaker"
	"github.com/hashicorp/terraform-plugin-log/tflog"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  DataSourcePrebuiltECRImage,
			TypeName: "aws_sagemaker_prebuilt_ecr_image",
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  ResourceApp,
			TypeName: "aws_sagemaker_app",
			Name:     "App",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceAppImageConfig,
			TypeName: "aws_sagemaker_app_image_config",
			Name:     "App Image Config",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceCodeRepository,
			TypeName: "aws_sagemaker_code_repository",
			Name:     "Code Repository",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceDataQualityJobDefinition,
			TypeName: "aws_sagemaker_data_quality_job_definition",
			Name:     "Data Quality Job Definition",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceDevice,
			TypeName: "aws_sagemaker_device",
		},
		{
			Factory:  ResourceDeviceFleet,
			TypeName: "aws_sagemaker_device_fleet",
			Name:     "Device Fleet",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceDomain,
			TypeName: "aws_sagemaker_domain",
			Name:     "Domain",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceEndpoint,
			TypeName: "aws_sagemaker_endpoint",
			Name:     "Endpoint",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceEndpointConfiguration,
			TypeName: "aws_sagemaker_endpoint_configuration",
			Name:     "Endpoint Configuration",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceFeatureGroup,
			TypeName: "aws_sagemaker_feature_group",
			Name:     "Feature Group",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceFlowDefinition,
			TypeName: "aws_sagemaker_flow_definition",
			Name:     "Flow Definition",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceHumanTaskUI,
			TypeName: "aws_sagemaker_human_task_ui",
			Name:     "Human Task UI",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceImage,
			TypeName: "aws_sagemaker_image",
			Name:     "Image",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceImageVersion,
			TypeName: "aws_sagemaker_image_version",
		},
		{
			Factory:  ResourceModel,
			TypeName: "aws_sagemaker_model",
			Name:     "Model",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceModelPackageGroup,
			TypeName: "aws_sagemaker_model_package_group",
			Name:     "Model Package Group",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceModelPackageGroupPolicy,
			TypeName: "aws_sagemaker_model_package_group_policy",
		},
		{
			Factory:  ResourceMonitoringSchedule,
			TypeName: "aws_sagemaker_monitoring_schedule",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceNotebookInstance,
			TypeName: "aws_sagemaker_notebook_instance",
			Name:     "Notebook Instance",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceNotebookInstanceLifeCycleConfiguration,
			TypeName: "aws_sagemaker_notebook_instance_lifecycle_configuration",
		},
		{
			Factory:  ResourcePipeline,
			TypeName: "aws_sagemaker_pipeline",
			Name:     "Pipeline",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceProject,
			TypeName: "aws_sagemaker_project",
			Name:     "Project",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceServicecatalogPortfolioStatus,
			TypeName: "aws_sagemaker_servicecatalog_portfolio_status",
		},
		{
			Factory:  ResourceSpace,
			TypeName: "aws_sagemaker_space",
			Name:     "Space",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceStudioLifecycleConfig,
			TypeName: "aws_sagemaker_studio_lifecycle_config",
			Name:     "Studio Lifecycle Config",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceUserProfile,
			TypeName: "aws_sagemaker_user_profile",
			Name:     "User Profile",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  ResourceWorkforce,
			TypeName: "aws_sagemaker_workforce",
		},
		{
			Factory:  ResourceWorkteam,
			TypeName: "aws_sagemaker_workteam",
			Name:     "Workteam",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.SageMaker
}

// NewConn returns a new AWS SDK for Go v1 client for this service package's AWS API.
func (p *servicePackage) NewConn(ctx context.Context, config map[string]any) (*sagemaker_sdkv1.SageMaker, error) {
	sess := config[names.AttrSession].(*session_sdkv1.Session)

	cfg := aws_sdkv1.Config{}

	if endpoint := config[names.AttrEndpoint].(string); endpoint != "" {
		tflog.Debug(ctx, "setting endpoint", map[string]any{
			"tf_aws.endpoint": endpoint,
		})
		cfg.Endpoint = aws_sdkv1.String(endpoint)
	} else {
		cfg.EndpointResolver = newEndpointResolverSDKv1(ctx)
	}

	return sagemaker_sdkv1.New(sess.Copy(&cfg)), nil
}

func ServicePackage(ctx context.Context) conns.ServicePackage {
	return &servicePackage{}
}
