// Code generated by "internal/generate/listpages/main.go -ListOps=GetRelationalDatabases,GetLoadBalancers,GetDisks,GetDistributions,GetDomains -InputPaginator=PageToken -OutputPaginator=NextPageToken -AWSSDKVersion=2"; DO NOT EDIT.

package lightsail

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/aws/aws-sdk-go-v2/service/lightsail"
)

func getDisksPages(ctx context.Context, conn *lightsail.Client, input *lightsail.GetDisksInput, fn func(*lightsail.GetDisksOutput, bool) bool) error {
	for {
		output, err := conn.GetDisks(ctx, input)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextPageToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.PageToken = output.NextPageToken
	}
	return nil
}
func getDistributionsPages(ctx context.Context, conn *lightsail.Client, input *lightsail.GetDistributionsInput, fn func(*lightsail.GetDistributionsOutput, bool) bool) error {
	for {
		output, err := conn.GetDistributions(ctx, input)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextPageToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.PageToken = output.NextPageToken
	}
	return nil
}
func getDomainsPages(ctx context.Context, conn *lightsail.Client, input *lightsail.GetDomainsInput, fn func(*lightsail.GetDomainsOutput, bool) bool) error {
	for {
		output, err := conn.GetDomains(ctx, input)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextPageToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.PageToken = output.NextPageToken
	}
	return nil
}
func getLoadBalancersPages(ctx context.Context, conn *lightsail.Client, input *lightsail.GetLoadBalancersInput, fn func(*lightsail.GetLoadBalancersOutput, bool) bool) error {
	for {
		output, err := conn.GetLoadBalancers(ctx, input)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextPageToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.PageToken = output.NextPageToken
	}
	return nil
}
func getRelationalDatabasesPages(ctx context.Context, conn *lightsail.Client, input *lightsail.GetRelationalDatabasesInput, fn func(*lightsail.GetRelationalDatabasesOutput, bool) bool) error {
	for {
		output, err := conn.GetRelationalDatabases(ctx, input)
		if err != nil {
			return err
		}

		lastPage := aws.ToString(output.NextPageToken) == ""
		if !fn(output, lastPage) || lastPage {
			break
		}

		input.PageToken = output.NextPageToken
	}
	return nil
}
