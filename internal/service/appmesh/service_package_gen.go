// Code generated by internal/generate/servicepackage/main.go; DO NOT EDIT.

package appmesh

import (
	"context"

	aws_sdkv2 "github.com/aws/aws-sdk-go-v2/aws"
	appmesh_sdkv2 "github.com/aws/aws-sdk-go-v2/service/appmesh"
	"github.com/hashicorp/terraform-provider-aws/internal/conns"
	"github.com/hashicorp/terraform-provider-aws/internal/types"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []*types.ServicePackageFrameworkDataSource {
	return []*types.ServicePackageFrameworkDataSource{}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []*types.ServicePackageFrameworkResource {
	return []*types.ServicePackageFrameworkResource{}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) []*types.ServicePackageSDKDataSource {
	return []*types.ServicePackageSDKDataSource{
		{
			Factory:  dataSourceGatewayRoute,
			TypeName: "aws_appmesh_gateway_route",
			Name:     "Gateway Route",
			Tags:     &types.ServicePackageResourceTags{},
		},
		{
			Factory:  dataSourceMesh,
			TypeName: "aws_appmesh_mesh",
			Name:     "Service Mesh",
			Tags:     &types.ServicePackageResourceTags{},
		},
		{
			Factory:  dataSourceRoute,
			TypeName: "aws_appmesh_route",
			Name:     "Route",
			Tags:     &types.ServicePackageResourceTags{},
		},
		{
			Factory:  dataSourceVirtualGateway,
			TypeName: "aws_appmesh_virtual_gateway",
			Name:     "Virtual Gateway",
			Tags:     &types.ServicePackageResourceTags{},
		},
		{
			Factory:  dataSourceVirtualNode,
			TypeName: "aws_appmesh_virtual_node",
			Name:     "Virtual Node",
			Tags:     &types.ServicePackageResourceTags{},
		},
		{
			Factory:  dataSourceVirtualRouter,
			TypeName: "aws_appmesh_virtual_router",
			Name:     "Virtual Router",
			Tags:     &types.ServicePackageResourceTags{},
		},
		{
			Factory:  dataSourceVirtualService,
			TypeName: "aws_appmesh_virtual_service",
			Name:     "Virtual Service",
			Tags:     &types.ServicePackageResourceTags{},
		},
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) []*types.ServicePackageSDKResource {
	return []*types.ServicePackageSDKResource{
		{
			Factory:  resourceGatewayRoute,
			TypeName: "aws_appmesh_gateway_route",
			Name:     "Gateway Route",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  resourceMesh,
			TypeName: "aws_appmesh_mesh",
			Name:     "Service Mesh",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  resourceRoute,
			TypeName: "aws_appmesh_route",
			Name:     "Route",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  resourceVirtualGateway,
			TypeName: "aws_appmesh_virtual_gateway",
			Name:     "Virtual Gateway",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  resourceVirtualNode,
			TypeName: "aws_appmesh_virtual_node",
			Name:     "Virtual Node",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  resourceVirtualRouter,
			TypeName: "aws_appmesh_virtual_router",
			Name:     "Virtual Router",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
		{
			Factory:  resourceVirtualService,
			TypeName: "aws_appmesh_virtual_service",
			Name:     "Virtual Service",
			Tags: &types.ServicePackageResourceTags{
				IdentifierAttribute: names.AttrARN,
			},
		},
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.AppMesh
}

// NewClient returns a new AWS SDK for Go v2 client for this service package's AWS API.
func (p *servicePackage) NewClient(ctx context.Context, config map[string]any) (*appmesh_sdkv2.Client, error) {
	cfg := *(config["aws_sdkv2_config"].(*aws_sdkv2.Config))

	return appmesh_sdkv2.NewFromConfig(cfg,
		appmesh_sdkv2.WithEndpointResolverV2(newEndpointResolverSDKv2()),
		withBaseEndpoint(config[names.AttrEndpoint].(string)),
	), nil
}

func ServicePackage(ctx context.Context) conns.ServicePackage {
	return &servicePackage{}
}
