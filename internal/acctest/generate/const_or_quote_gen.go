// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0
// Code generated by internal/generate/acctestconsts/main.go; DO NOT EDIT.

package generate

import (
	"fmt"
)

// ConstOrQuote returns the constant name for the given attribute if it exists.
// Otherwise, it returns the attribute quoted. This is intended for use in
// generated code and templates.
func ConstOrQuote(constant string) string {
	allConstants := map[string]string{
		"123456789012":          "Ct12Digit",
		"basic":                 "CtBasic",
		"certificate_pem":       "CtCertificatePEM",
		"disappears":            "CtDisappears",
		"false":                 "CtFalse",
		"FALSE":                 "CtFalseCaps",
		"key1":                  "CtKey1",
		"key2":                  "CtKey2",
		"name":                  "CtName",
		"overlapkey1":           "CtOverlapKey1",
		"overlapkey2":           "CtOverlapKey2",
		"private_key_pem":       "CtPrivateKeyPEM",
		"providerkey1":          "CtProviderKey1",
		"provider_tags":         "CtProviderTags",
		"providervalue1":        "CtProviderValue1",
		"providervalue1again":   "CtProviderValue1Again",
		"providervalue1updated": "CtProviderValue1Updated",
		"rName":                 "CtRName",
		"resourcekey1":          "CtResourceKey1",
		"resourcekey2":          "CtResourceKey2",
		"resource_owner":        "CtResourceOwner",
		"resource_tags":         "CtResourceTags",
		"resourcevalue1":        "CtResourceValue1",
		"resourcevalue1again":   "CtResourceValue1Again",
		"resourcevalue1updated": "CtResourceValue1Updated",
		"resourcevalue2":        "CtResourceValue2",
		"resourcevalue2updated": "CtResourceValue2Updated",
		"rule.#":                "CtRulePound",
		"tags_all.%":            "CtTagsAllPercent",
		"tags.key1":             "CtTagsKey1",
		"tags.key2":             "CtTagsKey2",
		"tags.%":                "CtTagsPercent",
		"true":                  "CtTrue",
		"TRUE":                  "CtTrueCaps",
		"value1":                "CtValue1",
		"value1updated":         "CtValue1Updated",
		"value2":                "CtValue2",
	}

	if v, ok := allConstants[constant]; ok {
		return fmt.Sprintf("acctest.%s", v)
	}
	return fmt.Sprintf("%q", constant)
}
