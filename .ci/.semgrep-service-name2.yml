# Generated by internal/generate/servicesemgrep/main.go; DO NOT EDIT.
rules:
  - id: iot-in-test-name
    languages:
      - go
    message: Include "IoT" in test name
    paths:
      include:
        - internal/service/iot/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoT"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iot-in-const-name
    languages:
      - go
    message: Do not use "IoT" in const name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
    severity: WARNING
  - id: iot-in-var-name
    languages:
      - go
    message: Do not use "IoT" in var name inside iot package
    paths:
      include:
        - internal/service/iot
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoT"
    severity: WARNING
  - id: iotanalytics-in-func-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in func name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
      exclude:
        - internal/service/iotanalytics/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: iotanalytics-in-test-name
    languages:
      - go
    message: Include "IoTAnalytics" in test name
    paths:
      include:
        - internal/service/iotanalytics/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoTAnalytics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iotanalytics-in-const-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in const name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
    severity: WARNING
  - id: iotanalytics-in-var-name
    languages:
      - go
    message: Do not use "IoTAnalytics" in var name inside iotanalytics package
    paths:
      include:
        - internal/service/iotanalytics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTAnalytics"
    severity: WARNING
  - id: iotevents-in-func-name
    languages:
      - go
    message: Do not use "IoTEvents" in func name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
      exclude:
        - internal/service/iotevents/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: iotevents-in-test-name
    languages:
      - go
    message: Include "IoTEvents" in test name
    paths:
      include:
        - internal/service/iotevents/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIoTEvents"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: iotevents-in-const-name
    languages:
      - go
    message: Do not use "IoTEvents" in const name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
    severity: WARNING
  - id: iotevents-in-var-name
    languages:
      - go
    message: Do not use "IoTEvents" in var name inside iotevents package
    paths:
      include:
        - internal/service/iotevents
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IoTEvents"
    severity: WARNING
  - id: ipam-in-test-name
    languages:
      - go
    message: Include "IPAM" in test name
    paths:
      include:
        - internal/service/ec2/ipam_*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIPAM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ivs-in-func-name
    languages:
      - go
    message: Do not use "IVS" in func name inside ivs package
    paths:
      include:
        - internal/service/ivs
      exclude:
        - internal/service/ivs/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IVS"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: ivs-in-test-name
    languages:
      - go
    message: Include "IVS" in test name
    paths:
      include:
        - internal/service/ivs/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIVS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ivs-in-const-name
    languages:
      - go
    message: Do not use "IVS" in const name inside ivs package
    paths:
      include:
        - internal/service/ivs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IVS"
    severity: WARNING
  - id: ivs-in-var-name
    languages:
      - go
    message: Do not use "IVS" in var name inside ivs package
    paths:
      include:
        - internal/service/ivs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IVS"
    severity: WARNING
  - id: ivschat-in-func-name
    languages:
      - go
    message: Do not use "IVSChat" in func name inside ivschat package
    paths:
      include:
        - internal/service/ivschat
      exclude:
        - internal/service/ivschat/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IVSChat"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: ivschat-in-test-name
    languages:
      - go
    message: Include "IVSChat" in test name
    paths:
      include:
        - internal/service/ivschat/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccIVSChat"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ivschat-in-const-name
    languages:
      - go
    message: Do not use "IVSChat" in const name inside ivschat package
    paths:
      include:
        - internal/service/ivschat
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IVSChat"
    severity: WARNING
  - id: ivschat-in-var-name
    languages:
      - go
    message: Do not use "IVSChat" in var name inside ivschat package
    paths:
      include:
        - internal/service/ivschat
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)IVSChat"
    severity: WARNING
  - id: kafka-in-func-name
    languages:
      - go
    message: Do not use "Kafka" in func name inside kafka package
    paths:
      include:
        - internal/service/kafka
      exclude:
        - internal/service/kafka/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kafka-in-test-name
    languages:
      - go
    message: Include "Kafka" in test name
    paths:
      include:
        - internal/service/kafka/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKafka"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafka-in-const-name
    languages:
      - go
    message: Do not use "Kafka" in const name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
    severity: WARNING
  - id: kafka-in-var-name
    languages:
      - go
    message: Do not use "Kafka" in var name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kafka"
    severity: WARNING
  - id: kafkaconnect-in-func-name
    languages:
      - go
    message: Do not use "KafkaConnect" in func name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
      exclude:
        - internal/service/kafkaconnect/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kafkaconnect-in-test-name
    languages:
      - go
    message: Include "KafkaConnect" in test name
    paths:
      include:
        - internal/service/kafkaconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKafkaConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kafkaconnect-in-const-name
    languages:
      - go
    message: Do not use "KafkaConnect" in const name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
    severity: WARNING
  - id: kafkaconnect-in-var-name
    languages:
      - go
    message: Do not use "KafkaConnect" in var name inside kafkaconnect package
    paths:
      include:
        - internal/service/kafkaconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KafkaConnect"
    severity: WARNING
  - id: kendra-in-func-name
    languages:
      - go
    message: Do not use "Kendra" in func name inside kendra package
    paths:
      include:
        - internal/service/kendra
      exclude:
        - internal/service/kendra/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kendra"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kendra-in-test-name
    languages:
      - go
    message: Include "Kendra" in test name
    paths:
      include:
        - internal/service/kendra/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKendra"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kendra-in-const-name
    languages:
      - go
    message: Do not use "Kendra" in const name inside kendra package
    paths:
      include:
        - internal/service/kendra
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kendra"
    severity: WARNING
  - id: kendra-in-var-name
    languages:
      - go
    message: Do not use "Kendra" in var name inside kendra package
    paths:
      include:
        - internal/service/kendra
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kendra"
    severity: WARNING
  - id: keyspaces-in-func-name
    languages:
      - go
    message: Do not use "Keyspaces" in func name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
      exclude:
        - internal/service/keyspaces/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: keyspaces-in-test-name
    languages:
      - go
    message: Include "Keyspaces" in test name
    paths:
      include:
        - internal/service/keyspaces/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKeyspaces"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: keyspaces-in-const-name
    languages:
      - go
    message: Do not use "Keyspaces" in const name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
    severity: WARNING
  - id: keyspaces-in-var-name
    languages:
      - go
    message: Do not use "Keyspaces" in var name inside keyspaces package
    paths:
      include:
        - internal/service/keyspaces
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Keyspaces"
    severity: WARNING
  - id: kinesis-in-func-name
    languages:
      - go
    message: Do not use "Kinesis" in func name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
      exclude:
        - internal/service/kinesis/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kinesis-in-test-name
    languages:
      - go
    message: Include "Kinesis" in test name
    paths:
      include:
        - internal/service/kinesis/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesis"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesis-in-const-name
    languages:
      - go
    message: Do not use "Kinesis" in const name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
    severity: WARNING
  - id: kinesis-in-var-name
    languages:
      - go
    message: Do not use "Kinesis" in var name inside kinesis package
    paths:
      include:
        - internal/service/kinesis
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Kinesis"
    severity: WARNING
  - id: kinesisanalytics-in-func-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in func name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
      exclude:
        - internal/service/kinesisanalytics/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kinesisanalytics-in-test-name
    languages:
      - go
    message: Include "KinesisAnalytics" in test name
    paths:
      include:
        - internal/service/kinesisanalytics/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisAnalytics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalytics-in-const-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in const name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
    severity: WARNING
  - id: kinesisanalytics-in-var-name
    languages:
      - go
    message: Do not use "KinesisAnalytics" in var name inside kinesisanalytics package
    paths:
      include:
        - internal/service/kinesisanalytics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalytics"
    severity: WARNING
  - id: kinesisanalyticsv2-in-func-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in func name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
      exclude:
        - internal/service/kinesisanalyticsv2/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kinesisanalyticsv2-in-test-name
    languages:
      - go
    message: Include "KinesisAnalyticsV2" in test name
    paths:
      include:
        - internal/service/kinesisanalyticsv2/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisAnalyticsV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisanalyticsv2-in-const-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in const name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
    severity: WARNING
  - id: kinesisanalyticsv2-in-var-name
    languages:
      - go
    message: Do not use "KinesisAnalyticsV2" in var name inside kinesisanalyticsv2 package
    paths:
      include:
        - internal/service/kinesisanalyticsv2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisAnalyticsV2"
    severity: WARNING
  - id: kinesisvideo-in-func-name
    languages:
      - go
    message: Do not use "KinesisVideo" in func name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
      exclude:
        - internal/service/kinesisvideo/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kinesisvideo-in-test-name
    languages:
      - go
    message: Include "KinesisVideo" in test name
    paths:
      include:
        - internal/service/kinesisvideo/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKinesisVideo"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kinesisvideo-in-const-name
    languages:
      - go
    message: Do not use "KinesisVideo" in const name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
    severity: WARNING
  - id: kinesisvideo-in-var-name
    languages:
      - go
    message: Do not use "KinesisVideo" in var name inside kinesisvideo package
    paths:
      include:
        - internal/service/kinesisvideo
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KinesisVideo"
    severity: WARNING
  - id: kms-in-func-name
    languages:
      - go
    message: Do not use "KMS" in func name inside kms package
    paths:
      include:
        - internal/service/kms
      exclude:
        - internal/service/kms/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: kms-in-test-name
    languages:
      - go
    message: Include "KMS" in test name
    paths:
      include:
        - internal/service/kms/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccKMS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: kms-in-const-name
    languages:
      - go
    message: Do not use "KMS" in const name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
    severity: WARNING
  - id: kms-in-var-name
    languages:
      - go
    message: Do not use "KMS" in var name inside kms package
    paths:
      include:
        - internal/service/kms
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)KMS"
    severity: WARNING
  - id: lakeformation-in-func-name
    languages:
      - go
    message: Do not use "LakeFormation" in func name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
      exclude:
        - internal/service/lakeformation/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lakeformation-in-test-name
    languages:
      - go
    message: Include "LakeFormation" in test name
    paths:
      include:
        - internal/service/lakeformation/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLakeFormation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lakeformation-in-const-name
    languages:
      - go
    message: Do not use "LakeFormation" in const name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
    severity: WARNING
  - id: lakeformation-in-var-name
    languages:
      - go
    message: Do not use "LakeFormation" in var name inside lakeformation package
    paths:
      include:
        - internal/service/lakeformation
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LakeFormation"
    severity: WARNING
  - id: lambda-in-func-name
    languages:
      - go
    message: Do not use "Lambda" in func name inside lambda package
    paths:
      include:
        - internal/service/lambda
      exclude:
        - internal/service/lambda/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lambda-in-test-name
    languages:
      - go
    message: Include "Lambda" in test name
    paths:
      include:
        - internal/service/lambda/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLambda"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lambda-in-const-name
    languages:
      - go
    message: Do not use "Lambda" in const name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
    severity: WARNING
  - id: lambda-in-var-name
    languages:
      - go
    message: Do not use "Lambda" in var name inside lambda package
    paths:
      include:
        - internal/service/lambda
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lambda"
    severity: WARNING
  - id: launchwizard-in-func-name
    languages:
      - go
    message: Do not use "LaunchWizard" in func name inside launchwizard package
    paths:
      include:
        - internal/service/launchwizard
      exclude:
        - internal/service/launchwizard/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LaunchWizard"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: launchwizard-in-test-name
    languages:
      - go
    message: Include "LaunchWizard" in test name
    paths:
      include:
        - internal/service/launchwizard/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLaunchWizard"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: launchwizard-in-const-name
    languages:
      - go
    message: Do not use "LaunchWizard" in const name inside launchwizard package
    paths:
      include:
        - internal/service/launchwizard
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LaunchWizard"
    severity: WARNING
  - id: launchwizard-in-var-name
    languages:
      - go
    message: Do not use "LaunchWizard" in var name inside launchwizard package
    paths:
      include:
        - internal/service/launchwizard
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LaunchWizard"
    severity: WARNING
  - id: lex-in-func-name
    languages:
      - go
    message: Do not use "lex" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
      exclude:
        - internal/service/lexmodels/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lex-in-const-name
    languages:
      - go
    message: Do not use "lex" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
    severity: WARNING
  - id: lex-in-var-name
    languages:
      - go
    message: Do not use "lex" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lex"
    severity: WARNING
  - id: lexmodelbuilding-in-func-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
      exclude:
        - internal/service/lexmodels/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lexmodelbuilding-in-const-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
    severity: WARNING
  - id: lexmodelbuilding-in-var-name
    languages:
      - go
    message: Do not use "lexmodelbuilding" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuilding"
    severity: WARNING
  - id: lexmodelbuildingservice-in-func-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
      exclude:
        - internal/service/lexmodels/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lexmodelbuildingservice-in-const-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
    severity: WARNING
  - id: lexmodelbuildingservice-in-var-name
    languages:
      - go
    message: Do not use "lexmodelbuildingservice" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelbuildingservice"
    severity: WARNING
  - id: lexmodels-in-func-name
    languages:
      - go
    message: Do not use "LexModels" in func name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
      exclude:
        - internal/service/lexmodels/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lexmodels-in-test-name
    languages:
      - go
    message: Include "LexModels" in test name
    paths:
      include:
        - internal/service/lexmodels/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLexModels"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lexmodels-in-const-name
    languages:
      - go
    message: Do not use "LexModels" in const name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
    severity: WARNING
  - id: lexmodels-in-var-name
    languages:
      - go
    message: Do not use "LexModels" in var name inside lexmodels package
    paths:
      include:
        - internal/service/lexmodels
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexModels"
    severity: WARNING
  - id: lexmodelsv2-in-func-name
    languages:
      - go
    message: Do not use "lexmodelsv2" in func name inside lexv2models package
    paths:
      include:
        - internal/service/lexv2models
      exclude:
        - internal/service/lexv2models/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelsv2"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lexmodelsv2-in-const-name
    languages:
      - go
    message: Do not use "lexmodelsv2" in const name inside lexv2models package
    paths:
      include:
        - internal/service/lexv2models
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelsv2"
    severity: WARNING
  - id: lexmodelsv2-in-var-name
    languages:
      - go
    message: Do not use "lexmodelsv2" in var name inside lexv2models package
    paths:
      include:
        - internal/service/lexv2models
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)lexmodelsv2"
    severity: WARNING
  - id: lexv2models-in-func-name
    languages:
      - go
    message: Do not use "LexV2Models" in func name inside lexv2models package
    paths:
      include:
        - internal/service/lexv2models
      exclude:
        - internal/service/lexv2models/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexV2Models"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lexv2models-in-test-name
    languages:
      - go
    message: Include "LexV2Models" in test name
    paths:
      include:
        - internal/service/lexv2models/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLexV2Models"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lexv2models-in-const-name
    languages:
      - go
    message: Do not use "LexV2Models" in const name inside lexv2models package
    paths:
      include:
        - internal/service/lexv2models
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexV2Models"
    severity: WARNING
  - id: lexv2models-in-var-name
    languages:
      - go
    message: Do not use "LexV2Models" in var name inside lexv2models package
    paths:
      include:
        - internal/service/lexv2models
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LexV2Models"
    severity: WARNING
  - id: licensemanager-in-func-name
    languages:
      - go
    message: Do not use "LicenseManager" in func name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
      exclude:
        - internal/service/licensemanager/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: licensemanager-in-test-name
    languages:
      - go
    message: Include "LicenseManager" in test name
    paths:
      include:
        - internal/service/licensemanager/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLicenseManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: licensemanager-in-const-name
    languages:
      - go
    message: Do not use "LicenseManager" in const name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
    severity: WARNING
  - id: licensemanager-in-var-name
    languages:
      - go
    message: Do not use "LicenseManager" in var name inside licensemanager package
    paths:
      include:
        - internal/service/licensemanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LicenseManager"
    severity: WARNING
  - id: lightsail-in-func-name
    languages:
      - go
    message: Do not use "Lightsail" in func name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
      exclude:
        - internal/service/lightsail/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lightsail-in-test-name
    languages:
      - go
    message: Include "Lightsail" in test name
    paths:
      include:
        - internal/service/lightsail/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLightsail"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lightsail-in-const-name
    languages:
      - go
    message: Do not use "Lightsail" in const name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
    severity: WARNING
  - id: lightsail-in-var-name
    languages:
      - go
    message: Do not use "Lightsail" in var name inside lightsail package
    paths:
      include:
        - internal/service/lightsail
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Lightsail"
    severity: WARNING
  - id: location-in-func-name
    languages:
      - go
    message: Do not use "Location" in func name inside location package
    paths:
      include:
        - internal/service/location
      exclude:
        - internal/service/location/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: location-in-test-name
    languages:
      - go
    message: Include "Location" in test name
    paths:
      include:
        - internal/service/location/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLocation"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: location-in-const-name
    languages:
      - go
    message: Do not use "Location" in const name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
    severity: WARNING
  - id: location-in-var-name
    languages:
      - go
    message: Do not use "Location" in var name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Location"
    severity: WARNING
  - id: locationservice-in-func-name
    languages:
      - go
    message: Do not use "locationservice" in func name inside location package
    paths:
      include:
        - internal/service/location
      exclude:
        - internal/service/location/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: locationservice-in-const-name
    languages:
      - go
    message: Do not use "locationservice" in const name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
    severity: WARNING
  - id: locationservice-in-var-name
    languages:
      - go
    message: Do not use "locationservice" in var name inside location package
    paths:
      include:
        - internal/service/location
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)locationservice"
    severity: WARNING
  - id: logs-in-func-name
    languages:
      - go
    message: Do not use "Logs" in func name inside logs package
    paths:
      include:
        - internal/service/logs
      exclude:
        - internal/service/logs/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: logs-in-test-name
    languages:
      - go
    message: Include "Logs" in test name
    paths:
      include:
        - internal/service/logs/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLogs"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: logs-in-const-name
    languages:
      - go
    message: Do not use "Logs" in const name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
    severity: WARNING
  - id: logs-in-var-name
    languages:
      - go
    message: Do not use "Logs" in var name inside logs package
    paths:
      include:
        - internal/service/logs
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Logs"
    severity: WARNING
  - id: lookoutmetrics-in-func-name
    languages:
      - go
    message: Do not use "LookoutMetrics" in func name inside lookoutmetrics package
    paths:
      include:
        - internal/service/lookoutmetrics
      exclude:
        - internal/service/lookoutmetrics/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LookoutMetrics"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: lookoutmetrics-in-test-name
    languages:
      - go
    message: Include "LookoutMetrics" in test name
    paths:
      include:
        - internal/service/lookoutmetrics/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccLookoutMetrics"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: lookoutmetrics-in-const-name
    languages:
      - go
    message: Do not use "LookoutMetrics" in const name inside lookoutmetrics package
    paths:
      include:
        - internal/service/lookoutmetrics
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LookoutMetrics"
    severity: WARNING
  - id: lookoutmetrics-in-var-name
    languages:
      - go
    message: Do not use "LookoutMetrics" in var name inside lookoutmetrics package
    paths:
      include:
        - internal/service/lookoutmetrics
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)LookoutMetrics"
    severity: WARNING
  - id: m2-in-func-name
    languages:
      - go
    message: Do not use "M2" in func name inside m2 package
    paths:
      include:
        - internal/service/m2
      exclude:
        - internal/service/m2/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)M2"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: m2-in-test-name
    languages:
      - go
    message: Include "M2" in test name
    paths:
      include:
        - internal/service/m2/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccM2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: m2-in-const-name
    languages:
      - go
    message: Do not use "M2" in const name inside m2 package
    paths:
      include:
        - internal/service/m2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)M2"
    severity: WARNING
  - id: m2-in-var-name
    languages:
      - go
    message: Do not use "M2" in var name inside m2 package
    paths:
      include:
        - internal/service/m2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)M2"
    severity: WARNING
  - id: macie2-in-func-name
    languages:
      - go
    message: Do not use "Macie2" in func name inside macie2 package
    paths:
      include:
        - internal/service/macie2
      exclude:
        - internal/service/macie2/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: macie2-in-test-name
    languages:
      - go
    message: Include "Macie2" in test name
    paths:
      include:
        - internal/service/macie2/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMacie2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: macie2-in-const-name
    languages:
      - go
    message: Do not use "Macie2" in const name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
    severity: WARNING
  - id: macie2-in-var-name
    languages:
      - go
    message: Do not use "Macie2" in var name inside macie2 package
    paths:
      include:
        - internal/service/macie2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Macie2"
    severity: WARNING
  - id: managedgrafana-in-func-name
    languages:
      - go
    message: Do not use "managedgrafana" in func name inside grafana package
    paths:
      include:
        - internal/service/grafana
      exclude:
        - internal/service/grafana/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: managedgrafana-in-const-name
    languages:
      - go
    message: Do not use "managedgrafana" in const name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
    severity: WARNING
  - id: managedgrafana-in-var-name
    languages:
      - go
    message: Do not use "managedgrafana" in var name inside grafana package
    paths:
      include:
        - internal/service/grafana
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)managedgrafana"
    severity: WARNING
  - id: mediaconnect-in-func-name
    languages:
      - go
    message: Do not use "MediaConnect" in func name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
      exclude:
        - internal/service/mediaconnect/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mediaconnect-in-test-name
    languages:
      - go
    message: Include "MediaConnect" in test name
    paths:
      include:
        - internal/service/mediaconnect/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaConnect"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconnect-in-const-name
    languages:
      - go
    message: Do not use "MediaConnect" in const name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
    severity: WARNING
  - id: mediaconnect-in-var-name
    languages:
      - go
    message: Do not use "MediaConnect" in var name inside mediaconnect package
    paths:
      include:
        - internal/service/mediaconnect
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConnect"
    severity: WARNING
  - id: mediaconvert-in-func-name
    languages:
      - go
    message: Do not use "MediaConvert" in func name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
      exclude:
        - internal/service/mediaconvert/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mediaconvert-in-test-name
    languages:
      - go
    message: Include "MediaConvert" in test name
    paths:
      include:
        - internal/service/mediaconvert/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaConvert"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediaconvert-in-const-name
    languages:
      - go
    message: Do not use "MediaConvert" in const name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
    severity: WARNING
  - id: mediaconvert-in-var-name
    languages:
      - go
    message: Do not use "MediaConvert" in var name inside mediaconvert package
    paths:
      include:
        - internal/service/mediaconvert
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaConvert"
    severity: WARNING
  - id: medialive-in-func-name
    languages:
      - go
    message: Do not use "MediaLive" in func name inside medialive package
    paths:
      include:
        - internal/service/medialive
      exclude:
        - internal/service/medialive/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: medialive-in-test-name
    languages:
      - go
    message: Include "MediaLive" in test name
    paths:
      include:
        - internal/service/medialive/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaLive"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: medialive-in-const-name
    languages:
      - go
    message: Do not use "MediaLive" in const name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
    severity: WARNING
  - id: medialive-in-var-name
    languages:
      - go
    message: Do not use "MediaLive" in var name inside medialive package
    paths:
      include:
        - internal/service/medialive
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaLive"
    severity: WARNING
  - id: mediapackage-in-func-name
    languages:
      - go
    message: Do not use "MediaPackage" in func name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
      exclude:
        - internal/service/mediapackage/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mediapackage-in-test-name
    languages:
      - go
    message: Include "MediaPackage" in test name
    paths:
      include:
        - internal/service/mediapackage/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaPackage"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediapackage-in-const-name
    languages:
      - go
    message: Do not use "MediaPackage" in const name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
    severity: WARNING
  - id: mediapackage-in-var-name
    languages:
      - go
    message: Do not use "MediaPackage" in var name inside mediapackage package
    paths:
      include:
        - internal/service/mediapackage
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackage"
    severity: WARNING
  - id: mediapackagev2-in-func-name
    languages:
      - go
    message: Do not use "MediaPackageV2" in func name inside mediapackagev2 package
    paths:
      include:
        - internal/service/mediapackagev2
      exclude:
        - internal/service/mediapackagev2/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackageV2"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mediapackagev2-in-test-name
    languages:
      - go
    message: Include "MediaPackageV2" in test name
    paths:
      include:
        - internal/service/mediapackagev2/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaPackageV2"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediapackagev2-in-const-name
    languages:
      - go
    message: Do not use "MediaPackageV2" in const name inside mediapackagev2 package
    paths:
      include:
        - internal/service/mediapackagev2
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackageV2"
    severity: WARNING
  - id: mediapackagev2-in-var-name
    languages:
      - go
    message: Do not use "MediaPackageV2" in var name inside mediapackagev2 package
    paths:
      include:
        - internal/service/mediapackagev2
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaPackageV2"
    severity: WARNING
  - id: mediastore-in-func-name
    languages:
      - go
    message: Do not use "MediaStore" in func name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
      exclude:
        - internal/service/mediastore/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mediastore-in-test-name
    languages:
      - go
    message: Include "MediaStore" in test name
    paths:
      include:
        - internal/service/mediastore/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMediaStore"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mediastore-in-const-name
    languages:
      - go
    message: Do not use "MediaStore" in const name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
    severity: WARNING
  - id: mediastore-in-var-name
    languages:
      - go
    message: Do not use "MediaStore" in var name inside mediastore package
    paths:
      include:
        - internal/service/mediastore
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MediaStore"
    severity: WARNING
  - id: memorydb-in-func-name
    languages:
      - go
    message: Do not use "MemoryDB" in func name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
      exclude:
        - internal/service/memorydb/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: memorydb-in-test-name
    languages:
      - go
    message: Include "MemoryDB" in test name
    paths:
      include:
        - internal/service/memorydb/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMemoryDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: memorydb-in-const-name
    languages:
      - go
    message: Do not use "MemoryDB" in const name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
    severity: WARNING
  - id: memorydb-in-var-name
    languages:
      - go
    message: Do not use "MemoryDB" in var name inside memorydb package
    paths:
      include:
        - internal/service/memorydb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MemoryDB"
    severity: WARNING
  - id: meta-in-func-name
    languages:
      - go
    message: Do not use "Meta" in func name inside meta package
    paths:
      include:
        - internal/service/meta
      exclude:
        - internal/service/meta/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: meta-in-test-name
    languages:
      - go
    message: Include "Meta" in test name
    paths:
      include:
        - internal/service/meta/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMeta"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: meta-in-const-name
    languages:
      - go
    message: Do not use "Meta" in const name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
    severity: WARNING
  - id: meta-in-var-name
    languages:
      - go
    message: Do not use "Meta" in var name inside meta package
    paths:
      include:
        - internal/service/meta
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Meta"
    severity: WARNING
  - id: mq-in-func-name
    languages:
      - go
    message: Do not use "MQ" in func name inside mq package
    paths:
      include:
        - internal/service/mq
      exclude:
        - internal/service/mq/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mq-in-test-name
    languages:
      - go
    message: Include "MQ" in test name
    paths:
      include:
        - internal/service/mq/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMQ"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mq-in-const-name
    languages:
      - go
    message: Do not use "MQ" in const name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
    severity: WARNING
  - id: mq-in-var-name
    languages:
      - go
    message: Do not use "MQ" in var name inside mq package
    paths:
      include:
        - internal/service/mq
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MQ"
    severity: WARNING
  - id: msk-in-func-name
    languages:
      - go
    message: Do not use "msk" in func name inside kafka package
    paths:
      include:
        - internal/service/kafka
      exclude:
        - internal/service/kafka/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)msk"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: msk-in-const-name
    languages:
      - go
    message: Do not use "msk" in const name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)msk"
    severity: WARNING
  - id: msk-in-var-name
    languages:
      - go
    message: Do not use "msk" in var name inside kafka package
    paths:
      include:
        - internal/service/kafka
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)msk"
    severity: WARNING
  - id: mwaa-in-func-name
    languages:
      - go
    message: Do not use "MWAA" in func name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
      exclude:
        - internal/service/mwaa/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: mwaa-in-test-name
    languages:
      - go
    message: Include "MWAA" in test name
    paths:
      include:
        - internal/service/mwaa/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccMWAA"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: mwaa-in-const-name
    languages:
      - go
    message: Do not use "MWAA" in const name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
    severity: WARNING
  - id: mwaa-in-var-name
    languages:
      - go
    message: Do not use "MWAA" in var name inside mwaa package
    paths:
      include:
        - internal/service/mwaa
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)MWAA"
    severity: WARNING
  - id: neptune-in-func-name
    languages:
      - go
    message: Do not use "Neptune" in func name inside neptune package
    paths:
      include:
        - internal/service/neptune
      exclude:
        - internal/service/neptune/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: neptune-in-test-name
    languages:
      - go
    message: Include "Neptune" in test name
    paths:
      include:
        - internal/service/neptune/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNeptune"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: neptune-in-const-name
    languages:
      - go
    message: Do not use "Neptune" in const name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
    severity: WARNING
  - id: neptune-in-var-name
    languages:
      - go
    message: Do not use "Neptune" in var name inside neptune package
    paths:
      include:
        - internal/service/neptune
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Neptune"
    severity: WARNING
  - id: neptunegraph-in-func-name
    languages:
      - go
    message: Do not use "NeptuneGraph" in func name inside neptunegraph package
    paths:
      include:
        - internal/service/neptunegraph
      exclude:
        - internal/service/neptunegraph/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NeptuneGraph"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: neptunegraph-in-test-name
    languages:
      - go
    message: Include "NeptuneGraph" in test name
    paths:
      include:
        - internal/service/neptunegraph/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNeptuneGraph"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: neptunegraph-in-const-name
    languages:
      - go
    message: Do not use "NeptuneGraph" in const name inside neptunegraph package
    paths:
      include:
        - internal/service/neptunegraph
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NeptuneGraph"
    severity: WARNING
  - id: neptunegraph-in-var-name
    languages:
      - go
    message: Do not use "NeptuneGraph" in var name inside neptunegraph package
    paths:
      include:
        - internal/service/neptunegraph
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NeptuneGraph"
    severity: WARNING
  - id: networkfirewall-in-func-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in func name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
      exclude:
        - internal/service/networkfirewall/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: networkfirewall-in-test-name
    languages:
      - go
    message: Include "NetworkFirewall" in test name
    paths:
      include:
        - internal/service/networkfirewall/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkFirewall"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkfirewall-in-const-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in const name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
    severity: WARNING
  - id: networkfirewall-in-var-name
    languages:
      - go
    message: Do not use "NetworkFirewall" in var name inside networkfirewall package
    paths:
      include:
        - internal/service/networkfirewall
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkFirewall"
    severity: WARNING
  - id: networkmanager-in-func-name
    languages:
      - go
    message: Do not use "NetworkManager" in func name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
      exclude:
        - internal/service/networkmanager/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: networkmanager-in-test-name
    languages:
      - go
    message: Include "NetworkManager" in test name
    paths:
      include:
        - internal/service/networkmanager/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkmanager-in-const-name
    languages:
      - go
    message: Do not use "NetworkManager" in const name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
    severity: WARNING
  - id: networkmanager-in-var-name
    languages:
      - go
    message: Do not use "NetworkManager" in var name inside networkmanager package
    paths:
      include:
        - internal/service/networkmanager
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkManager"
    severity: WARNING
  - id: networkmonitor-in-func-name
    languages:
      - go
    message: Do not use "NetworkMonitor" in func name inside networkmonitor package
    paths:
      include:
        - internal/service/networkmonitor
      exclude:
        - internal/service/networkmonitor/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkMonitor"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: networkmonitor-in-test-name
    languages:
      - go
    message: Include "NetworkMonitor" in test name
    paths:
      include:
        - internal/service/networkmonitor/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccNetworkMonitor"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: networkmonitor-in-const-name
    languages:
      - go
    message: Do not use "NetworkMonitor" in const name inside networkmonitor package
    paths:
      include:
        - internal/service/networkmonitor
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkMonitor"
    severity: WARNING
  - id: networkmonitor-in-var-name
    languages:
      - go
    message: Do not use "NetworkMonitor" in var name inside networkmonitor package
    paths:
      include:
        - internal/service/networkmonitor
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)NetworkMonitor"
    severity: WARNING
  - id: oam-in-func-name
    languages:
      - go
    message: Do not use "ObservabilityAccessManager" in func name inside oam package
    paths:
      include:
        - internal/service/oam
      exclude:
        - internal/service/oam/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ObservabilityAccessManager"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: oam-in-test-name
    languages:
      - go
    message: Include "ObservabilityAccessManager" in test name
    paths:
      include:
        - internal/service/oam/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccObservabilityAccessManager"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: oam-in-const-name
    languages:
      - go
    message: Do not use "ObservabilityAccessManager" in const name inside oam package
    paths:
      include:
        - internal/service/oam
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ObservabilityAccessManager"
    severity: WARNING
  - id: oam-in-var-name
    languages:
      - go
    message: Do not use "ObservabilityAccessManager" in var name inside oam package
    paths:
      include:
        - internal/service/oam
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)ObservabilityAccessManager"
    severity: WARNING
  - id: opensearch-in-func-name
    languages:
      - go
    message: Do not use "OpenSearch" in func name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
      exclude:
        - internal/service/opensearch/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: opensearch-in-test-name
    languages:
      - go
    message: Include "OpenSearch" in test name
    paths:
      include:
        - internal/service/opensearch/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpenSearch"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearch-in-const-name
    languages:
      - go
    message: Do not use "OpenSearch" in const name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
    severity: WARNING
  - id: opensearch-in-var-name
    languages:
      - go
    message: Do not use "OpenSearch" in var name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearch"
    severity: WARNING
  - id: opensearchingestion-in-func-name
    languages:
      - go
    message: Do not use "opensearchingestion" in func name inside osis package
    paths:
      include:
        - internal/service/osis
      exclude:
        - internal/service/osis/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchingestion"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: opensearchingestion-in-const-name
    languages:
      - go
    message: Do not use "opensearchingestion" in const name inside osis package
    paths:
      include:
        - internal/service/osis
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchingestion"
    severity: WARNING
  - id: opensearchingestion-in-var-name
    languages:
      - go
    message: Do not use "opensearchingestion" in var name inside osis package
    paths:
      include:
        - internal/service/osis
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchingestion"
    severity: WARNING
  - id: opensearchserverless-in-func-name
    languages:
      - go
    message: Do not use "OpenSearchServerless" in func name inside opensearchserverless package
    paths:
      include:
        - internal/service/opensearchserverless
      exclude:
        - internal/service/opensearchserverless/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearchServerless"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: opensearchserverless-in-test-name
    languages:
      - go
    message: Include "OpenSearchServerless" in test name
    paths:
      include:
        - internal/service/opensearchserverless/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpenSearchServerless"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opensearchserverless-in-const-name
    languages:
      - go
    message: Do not use "OpenSearchServerless" in const name inside opensearchserverless package
    paths:
      include:
        - internal/service/opensearchserverless
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearchServerless"
    severity: WARNING
  - id: opensearchserverless-in-var-name
    languages:
      - go
    message: Do not use "OpenSearchServerless" in var name inside opensearchserverless package
    paths:
      include:
        - internal/service/opensearchserverless
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearchServerless"
    severity: WARNING
  - id: opensearchservice-in-func-name
    languages:
      - go
    message: Do not use "opensearchservice" in func name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
      exclude:
        - internal/service/opensearch/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: opensearchservice-in-const-name
    languages:
      - go
    message: Do not use "opensearchservice" in const name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
    severity: WARNING
  - id: opensearchservice-in-var-name
    languages:
      - go
    message: Do not use "opensearchservice" in var name inside opensearch package
    paths:
      include:
        - internal/service/opensearch
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)opensearchservice"
    severity: WARNING
  - id: opsworks-in-func-name
    languages:
      - go
    message: Do not use "OpsWorks" in func name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
      exclude:
        - internal/service/opsworks/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: opsworks-in-test-name
    languages:
      - go
    message: Include "OpsWorks" in test name
    paths:
      include:
        - internal/service/opsworks/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpsWorks"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: opsworks-in-const-name
    languages:
      - go
    message: Do not use "OpsWorks" in const name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
    severity: WARNING
  - id: opsworks-in-var-name
    languages:
      - go
    message: Do not use "OpsWorks" in var name inside opsworks package
    paths:
      include:
        - internal/service/opsworks
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpsWorks"
    severity: WARNING
  - id: organizations-in-func-name
    languages:
      - go
    message: Do not use "Organizations" in func name inside organizations package
    paths:
      include:
        - internal/service/organizations
      exclude:
        - internal/service/organizations/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: organizations-in-test-name
    languages:
      - go
    message: Include "Organizations" in test name
    paths:
      include:
        - internal/service/organizations/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOrganizations"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: organizations-in-const-name
    languages:
      - go
    message: Do not use "Organizations" in const name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
    severity: WARNING
  - id: organizations-in-var-name
    languages:
      - go
    message: Do not use "Organizations" in var name inside organizations package
    paths:
      include:
        - internal/service/organizations
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Organizations"
    severity: WARNING
  - id: osis-in-func-name
    languages:
      - go
    message: Do not use "OpenSearchIngestion" in func name inside osis package
    paths:
      include:
        - internal/service/osis
      exclude:
        - internal/service/osis/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearchIngestion"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: osis-in-test-name
    languages:
      - go
    message: Include "OpenSearchIngestion" in test name
    paths:
      include:
        - internal/service/osis/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOpenSearchIngestion"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: osis-in-const-name
    languages:
      - go
    message: Do not use "OpenSearchIngestion" in const name inside osis package
    paths:
      include:
        - internal/service/osis
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearchIngestion"
    severity: WARNING
  - id: osis-in-var-name
    languages:
      - go
    message: Do not use "OpenSearchIngestion" in var name inside osis package
    paths:
      include:
        - internal/service/osis
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)OpenSearchIngestion"
    severity: WARNING
  - id: outposts-in-func-name
    languages:
      - go
    message: Do not use "Outposts" in func name inside outposts package
    paths:
      include:
        - internal/service/outposts
      exclude:
        - internal/service/outposts/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: outposts-in-test-name
    languages:
      - go
    message: Include "Outposts" in test name
    paths:
      include:
        - internal/service/outposts/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccOutposts"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: outposts-in-const-name
    languages:
      - go
    message: Do not use "Outposts" in const name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
    severity: WARNING
  - id: outposts-in-var-name
    languages:
      - go
    message: Do not use "Outposts" in var name inside outposts package
    paths:
      include:
        - internal/service/outposts
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Outposts"
    severity: WARNING
  - id: paymentcryptography-in-func-name
    languages:
      - go
    message: Do not use "PaymentCryptography" in func name inside paymentcryptography package
    paths:
      include:
        - internal/service/paymentcryptography
      exclude:
        - internal/service/paymentcryptography/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)PaymentCryptography"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: paymentcryptography-in-test-name
    languages:
      - go
    message: Include "PaymentCryptography" in test name
    paths:
      include:
        - internal/service/paymentcryptography/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPaymentCryptography"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: paymentcryptography-in-const-name
    languages:
      - go
    message: Do not use "PaymentCryptography" in const name inside paymentcryptography package
    paths:
      include:
        - internal/service/paymentcryptography
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)PaymentCryptography"
    severity: WARNING
  - id: paymentcryptography-in-var-name
    languages:
      - go
    message: Do not use "PaymentCryptography" in var name inside paymentcryptography package
    paths:
      include:
        - internal/service/paymentcryptography
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)PaymentCryptography"
    severity: WARNING
  - id: pcaconnectorad-in-func-name
    languages:
      - go
    message: Do not use "PCAConnectorAD" in func name inside pcaconnectorad package
    paths:
      include:
        - internal/service/pcaconnectorad
      exclude:
        - internal/service/pcaconnectorad/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)PCAConnectorAD"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: pcaconnectorad-in-test-name
    languages:
      - go
    message: Include "PCAConnectorAD" in test name
    paths:
      include:
        - internal/service/pcaconnectorad/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPCAConnectorAD"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pcaconnectorad-in-const-name
    languages:
      - go
    message: Do not use "PCAConnectorAD" in const name inside pcaconnectorad package
    paths:
      include:
        - internal/service/pcaconnectorad
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)PCAConnectorAD"
    severity: WARNING
  - id: pcaconnectorad-in-var-name
    languages:
      - go
    message: Do not use "PCAConnectorAD" in var name inside pcaconnectorad package
    paths:
      include:
        - internal/service/pcaconnectorad
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)PCAConnectorAD"
    severity: WARNING
  - id: pinpoint-in-func-name
    languages:
      - go
    message: Do not use "Pinpoint" in func name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
      exclude:
        - internal/service/pinpoint/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: pinpoint-in-test-name
    languages:
      - go
    message: Include "Pinpoint" in test name
    paths:
      include:
        - internal/service/pinpoint/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPinpoint"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pinpoint-in-const-name
    languages:
      - go
    message: Do not use "Pinpoint" in const name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
    severity: WARNING
  - id: pinpoint-in-var-name
    languages:
      - go
    message: Do not use "Pinpoint" in var name inside pinpoint package
    paths:
      include:
        - internal/service/pinpoint
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pinpoint"
    severity: WARNING
  - id: pipes-in-func-name
    languages:
      - go
    message: Do not use "Pipes" in func name inside pipes package
    paths:
      include:
        - internal/service/pipes
      exclude:
        - internal/service/pipes/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pipes"
            - pattern-not-regex: ^.+Pipe[sS].*$
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: pipes-in-test-name
    languages:
      - go
    message: Include "Pipes" in test name
    paths:
      include:
        - internal/service/pipes/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPipes"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pipes-in-const-name
    languages:
      - go
    message: Do not use "Pipes" in const name inside pipes package
    paths:
      include:
        - internal/service/pipes
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pipes"
            - pattern-not-regex: ^pipeS.*
    severity: WARNING
  - id: pipes-in-var-name
    languages:
      - go
    message: Do not use "Pipes" in var name inside pipes package
    paths:
      include:
        - internal/service/pipes
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pipes"
            - pattern-not-regex: ^pipeS.*
    severity: WARNING
  - id: polly-in-func-name
    languages:
      - go
    message: Do not use "Polly" in func name inside polly package
    paths:
      include:
        - internal/service/polly
      exclude:
        - internal/service/polly/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Polly"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: polly-in-test-name
    languages:
      - go
    message: Include "Polly" in test name
    paths:
      include:
        - internal/service/polly/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPolly"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: polly-in-const-name
    languages:
      - go
    message: Do not use "Polly" in const name inside polly package
    paths:
      include:
        - internal/service/polly
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Polly"
    severity: WARNING
  - id: polly-in-var-name
    languages:
      - go
    message: Do not use "Polly" in var name inside polly package
    paths:
      include:
        - internal/service/polly
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Polly"
    severity: WARNING
  - id: pricing-in-func-name
    languages:
      - go
    message: Do not use "Pricing" in func name inside pricing package
    paths:
      include:
        - internal/service/pricing
      exclude:
        - internal/service/pricing/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: pricing-in-test-name
    languages:
      - go
    message: Include "Pricing" in test name
    paths:
      include:
        - internal/service/pricing/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccPricing"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: pricing-in-const-name
    languages:
      - go
    message: Do not use "Pricing" in const name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
    severity: WARNING
  - id: pricing-in-var-name
    languages:
      - go
    message: Do not use "Pricing" in var name inside pricing package
    paths:
      include:
        - internal/service/pricing
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Pricing"
    severity: WARNING
  - id: prometheus-in-func-name
    languages:
      - go
    message: Do not use "prometheus" in func name inside amp package
    paths:
      include:
        - internal/service/amp
      exclude:
        - internal/service/amp/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: prometheus-in-const-name
    languages:
      - go
    message: Do not use "prometheus" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
    severity: WARNING
  - id: prometheus-in-var-name
    languages:
      - go
    message: Do not use "prometheus" in var name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheus"
    severity: WARNING
  - id: prometheusservice-in-func-name
    languages:
      - go
    message: Do not use "prometheusservice" in func name inside amp package
    paths:
      include:
        - internal/service/amp
      exclude:
        - internal/service/amp/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: prometheusservice-in-const-name
    languages:
      - go
    message: Do not use "prometheusservice" in const name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
    severity: WARNING
  - id: prometheusservice-in-var-name
    languages:
      - go
    message: Do not use "prometheusservice" in var name inside amp package
    paths:
      include:
        - internal/service/amp
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)prometheusservice"
    severity: WARNING
  - id: qbusiness-in-func-name
    languages:
      - go
    message: Do not use "QBusiness" in func name inside qbusiness package
    paths:
      include:
        - internal/service/qbusiness
      exclude:
        - internal/service/qbusiness/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QBusiness"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: qbusiness-in-test-name
    languages:
      - go
    message: Include "QBusiness" in test name
    paths:
      include:
        - internal/service/qbusiness/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQBusiness"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: qbusiness-in-const-name
    languages:
      - go
    message: Do not use "QBusiness" in const name inside qbusiness package
    paths:
      include:
        - internal/service/qbusiness
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QBusiness"
    severity: WARNING
  - id: qbusiness-in-var-name
    languages:
      - go
    message: Do not use "QBusiness" in var name inside qbusiness package
    paths:
      include:
        - internal/service/qbusiness
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QBusiness"
    severity: WARNING
  - id: qldb-in-func-name
    languages:
      - go
    message: Do not use "QLDB" in func name inside qldb package
    paths:
      include:
        - internal/service/qldb
      exclude:
        - internal/service/qldb/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: qldb-in-test-name
    languages:
      - go
    message: Include "QLDB" in test name
    paths:
      include:
        - internal/service/qldb/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQLDB"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: qldb-in-const-name
    languages:
      - go
    message: Do not use "QLDB" in const name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
    severity: WARNING
  - id: qldb-in-var-name
    languages:
      - go
    message: Do not use "QLDB" in var name inside qldb package
    paths:
      include:
        - internal/service/qldb
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QLDB"
    severity: WARNING
  - id: quicksight-in-func-name
    languages:
      - go
    message: Do not use "QuickSight" in func name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
      exclude:
        - internal/service/quicksight/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: quicksight-in-test-name
    languages:
      - go
    message: Include "QuickSight" in test name
    paths:
      include:
        - internal/service/quicksight/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccQuickSight"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: quicksight-in-const-name
    languages:
      - go
    message: Do not use "QuickSight" in const name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
    severity: WARNING
  - id: quicksight-in-var-name
    languages:
      - go
    message: Do not use "QuickSight" in var name inside quicksight package
    paths:
      include:
        - internal/service/quicksight
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)QuickSight"
    severity: WARNING
  - id: ram-in-func-name
    languages:
      - go
    message: Do not use "RAM" in func name inside ram package
    paths:
      include:
        - internal/service/ram
      exclude:
        - internal/service/ram/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
            - pattern-not-regex: Framework
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: ram-in-test-name
    languages:
      - go
    message: Include "RAM" in test name
    paths:
      include:
        - internal/service/ram/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRAM"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: ram-in-const-name
    languages:
      - go
    message: Do not use "RAM" in const name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
            - pattern-not-regex: "(?i)Param"
    severity: WARNING
  - id: ram-in-var-name
    languages:
      - go
    message: Do not use "RAM" in var name inside ram package
    paths:
      include:
        - internal/service/ram
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RAM"
            - pattern-not-regex: "(?i)Param"
    severity: WARNING
  - id: rbin-in-func-name
    languages:
      - go
    message: Do not use "RBin" in func name inside rbin package
    paths:
      include:
        - internal/service/rbin
      exclude:
        - internal/service/rbin/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RBin"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: rbin-in-test-name
    languages:
      - go
    message: Include "RBin" in test name
    paths:
      include:
        - internal/service/rbin/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRBin"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: rbin-in-const-name
    languages:
      - go
    message: Do not use "RBin" in const name inside rbin package
    paths:
      include:
        - internal/service/rbin
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RBin"
    severity: WARNING
  - id: rbin-in-var-name
    languages:
      - go
    message: Do not use "RBin" in var name inside rbin package
    paths:
      include:
        - internal/service/rbin
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RBin"
    severity: WARNING
  - id: rds-in-func-name
    languages:
      - go
    message: Do not use "RDS" in func name inside rds package
    paths:
      include:
        - internal/service/rds
      exclude:
        - internal/service/rds/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: rds-in-test-name
    languages:
      - go
    message: Include "RDS" in test name
    paths:
      include:
        - internal/service/rds/*_test.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-not-regex: "^TestAccRDS"
            - pattern-regex: ^TestAcc.*
    severity: WARNING
  - id: rds-in-const-name
    languages:
      - go
    message: Do not use "RDS" in const name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
    severity: WARNING
  - id: rds-in-var-name
    languages:
      - go
    message: Do not use "RDS" in var name inside rds package
    paths:
      include:
        - internal/service/rds
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)RDS"
    severity: WARNING
  - id: recyclebin-in-func-name
    languages:
      - go
    message: Do not use "recyclebin" in func name inside rbin package
    paths:
      include:
        - internal/service/rbin
      exclude:
        - internal/service/rbin/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)recyclebin"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
  - id: recyclebin-in-const-name
    languages:
      - go
    message: Do not use "recyclebin" in const name inside rbin package
    paths:
      include:
        - internal/service/rbin
    patterns:
      - pattern: const $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)recyclebin"
    severity: WARNING
  - id: recyclebin-in-var-name
    languages:
      - go
    message: Do not use "recyclebin" in var name inside rbin package
    paths:
      include:
        - internal/service/rbin
    patterns:
      - pattern: var $NAME = ...
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)recyclebin"
    severity: WARNING
  - id: redshift-in-func-name
    languages:
      - go
    message: Do not use "Redshift" in func name inside redshift package
    paths:
      include:
        - internal/service/redshift
      exclude:
        - internal/service/redshift/list_pages_gen.go
    patterns:
      - pattern: func $NAME( ... )
      - metavariable-pattern:
          metavariable: $NAME
          patterns:
            - pattern-regex: "(?i)Redshift"
      - focus-metavariable: $NAME
      - pattern-not: func $NAME($T *testing.T)
    severity: WARNING
