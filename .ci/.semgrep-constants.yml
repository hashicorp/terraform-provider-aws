# Generated by internal/generate/attrconsts/main.go; DO NOT EDIT.

rules:
  - id: literal-arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrARN` for the string literal "arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"arn"'
      - pattern-not-regex: '"arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrARN"

  - id: literal-arns-string-constant
    languages: [go]
    message: Use the constant `names.AttrARNs` for the string literal "arns"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"arns"'
      - pattern-not-regex: '"arns":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrARNs"

  - id: literal-aws_account_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrAWSAccountID` for the string literal "aws_account_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"aws_account_id"'
      - pattern-not-regex: '"aws_account_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAWSAccountID"

  - id: literal-access_key-string-constant
    languages: [go]
    message: Use the constant `names.AttrAccessKey` for the string literal "access_key"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"access_key"'
      - pattern-not-regex: '"access_key":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAccessKey"

  - id: literal-account_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrAccountID` for the string literal "account_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"account_id"'
      - pattern-not-regex: '"account_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAccountID"

  - id: literal-action-string-constant
    languages: [go]
    message: Use the constant `names.AttrAction` for the string literal "action"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"action"'
      - pattern-not-regex: '"action":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAction"

  - id: literal-actions-string-constant
    languages: [go]
    message: Use the constant `names.AttrActions` for the string literal "actions"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"actions"'
      - pattern-not-regex: '"actions":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrActions"

  - id: literal-address-string-constant
    languages: [go]
    message: Use the constant `names.AttrAddress` for the string literal "address"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"address"'
      - pattern-not-regex: '"address":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAddress"

  - id: literal-alias-string-constant
    languages: [go]
    message: Use the constant `names.AttrAlias` for the string literal "alias"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"alias"'
      - pattern-not-regex: '"alias":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAlias"

  - id: literal-allocated_storage-string-constant
    languages: [go]
    message: Use the constant `names.AttrAllocatedStorage` for the string literal "allocated_storage"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"allocated_storage"'
      - pattern-not-regex: '"allocated_storage":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAllocatedStorage"

  - id: literal-allow_major_version_upgrade-string-constant
    languages: [go]
    message: Use the constant `names.AttrAllowMajorVersionUpgrade` for the string literal "allow_major_version_upgrade"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"allow_major_version_upgrade"'
      - pattern-not-regex: '"allow_major_version_upgrade":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAllowMajorVersionUpgrade"

  - id: literal-application_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrApplicationID` for the string literal "application_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"application_id"'
      - pattern-not-regex: '"application_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrApplicationID"

  - id: literal-apply_immediately-string-constant
    languages: [go]
    message: Use the constant `names.AttrApplyImmediately` for the string literal "apply_immediately"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"apply_immediately"'
      - pattern-not-regex: '"apply_immediately":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrApplyImmediately"

  - id: literal-association_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrAssociationID` for the string literal "association_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"association_id"'
      - pattern-not-regex: '"association_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAssociationID"

  - id: literal-attributes-string-constant
    languages: [go]
    message: Use the constant `names.AttrAttributes` for the string literal "attributes"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"attributes"'
      - pattern-not-regex: '"attributes":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAttributes"

  - id: literal-auto_minor_version_upgrade-string-constant
    languages: [go]
    message: Use the constant `names.AttrAutoMinorVersionUpgrade` for the string literal "auto_minor_version_upgrade"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"auto_minor_version_upgrade"'
      - pattern-not-regex: '"auto_minor_version_upgrade":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAutoMinorVersionUpgrade"

  - id: literal-availability_zone-string-constant
    languages: [go]
    message: Use the constant `names.AttrAvailabilityZone` for the string literal "availability_zone"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"availability_zone"'
      - pattern-not-regex: '"availability_zone":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAvailabilityZone"

  - id: literal-availability_zones-string-constant
    languages: [go]
    message: Use the constant `names.AttrAvailabilityZones` for the string literal "availability_zones"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"availability_zones"'
      - pattern-not-regex: '"availability_zones":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrAvailabilityZones"

  - id: literal-bucket-string-constant
    languages: [go]
    message: Use the constant `names.AttrBucket` for the string literal "bucket"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"bucket"'
      - pattern-not-regex: '"bucket":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrBucket"

  - id: literal-bucket_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrBucketName` for the string literal "bucket_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"bucket_name"'
      - pattern-not-regex: '"bucket_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrBucketName"

  - id: literal-bucket_prefix-string-constant
    languages: [go]
    message: Use the constant `names.AttrBucketPrefix` for the string literal "bucket_prefix"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"bucket_prefix"'
      - pattern-not-regex: '"bucket_prefix":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrBucketPrefix"

  - id: literal-cidr_block-string-constant
    languages: [go]
    message: Use the constant `names.AttrCIDRBlock` for the string literal "cidr_block"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"cidr_block"'
      - pattern-not-regex: '"cidr_block":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCIDRBlock"

  - id: literal-capacity_provider_strategy-string-constant
    languages: [go]
    message: Use the constant `names.AttrCapacityProviderStrategy` for the string literal "capacity_provider_strategy"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"capacity_provider_strategy"'
      - pattern-not-regex: '"capacity_provider_strategy":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCapacityProviderStrategy"

  - id: literal-catalog_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrCatalogID` for the string literal "catalog_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"catalog_id"'
      - pattern-not-regex: '"catalog_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCatalogID"

  - id: literal-certificate-string-constant
    languages: [go]
    message: Use the constant `names.AttrCertificate` for the string literal "certificate"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"certificate"'
      - pattern-not-regex: '"certificate":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCertificate"

  - id: literal-certificate_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrCertificateARN` for the string literal "certificate_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"certificate_arn"'
      - pattern-not-regex: '"certificate_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCertificateARN"

  - id: literal-certificate_chain-string-constant
    languages: [go]
    message: Use the constant `names.AttrCertificateChain` for the string literal "certificate_chain"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"certificate_chain"'
      - pattern-not-regex: '"certificate_chain":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCertificateChain"

  - id: literal-client_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrClientID` for the string literal "client_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"client_id"'
      - pattern-not-regex: '"client_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrClientID"

  - id: literal-client_secret-string-constant
    languages: [go]
    message: Use the constant `names.AttrClientSecret` for the string literal "client_secret"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"client_secret"'
      - pattern-not-regex: '"client_secret":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrClientSecret"

  - id: literal-cloudwatch_log_group_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrCloudWatchLogGroupARN` for the string literal "cloudwatch_log_group_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"cloudwatch_log_group_arn"'
      - pattern-not-regex: '"cloudwatch_log_group_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCloudWatchLogGroupARN"

  - id: literal-cloudwatch_logs-string-constant
    languages: [go]
    message: Use the constant `names.AttrCloudWatchLogs` for the string literal "cloudwatch_logs"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"cloudwatch_logs"'
      - pattern-not-regex: '"cloudwatch_logs":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCloudWatchLogs"

  - id: literal-cluster_identifier-string-constant
    languages: [go]
    message: Use the constant `names.AttrClusterIdentifier` for the string literal "cluster_identifier"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"cluster_identifier"'
      - pattern-not-regex: '"cluster_identifier":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrClusterIdentifier"

  - id: literal-cluster_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrClusterName` for the string literal "cluster_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"cluster_name"'
      - pattern-not-regex: '"cluster_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrClusterName"

  - id: literal-comment-string-constant
    languages: [go]
    message: Use the constant `names.AttrComment` for the string literal "comment"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"comment"'
      - pattern-not-regex: '"comment":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrComment"

  - id: literal-condition-string-constant
    languages: [go]
    message: Use the constant `names.AttrCondition` for the string literal "condition"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"condition"'
      - pattern-not-regex: '"condition":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCondition"

  - id: literal-configuration-string-constant
    languages: [go]
    message: Use the constant `names.AttrConfiguration` for the string literal "configuration"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"configuration"'
      - pattern-not-regex: '"configuration":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrConfiguration"

  - id: literal-connection_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrConnectionID` for the string literal "connection_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"connection_id"'
      - pattern-not-regex: '"connection_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrConnectionID"

  - id: literal-content-string-constant
    languages: [go]
    message: Use the constant `names.AttrContent` for the string literal "content"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"content"'
      - pattern-not-regex: '"content":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrContent"

  - id: literal-content_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrContentType` for the string literal "content_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"content_type"'
      - pattern-not-regex: '"content_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrContentType"

  - id: literal-create_time-string-constant
    languages: [go]
    message: Use the constant `names.AttrCreateTime` for the string literal "create_time"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"create_time"'
      - pattern-not-regex: '"create_time":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCreateTime"

  - id: literal-created_at-string-constant
    languages: [go]
    message: Use the constant `names.AttrCreatedAt` for the string literal "created_at"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"created_at"'
      - pattern-not-regex: '"created_at":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCreatedAt"

  - id: literal-created_date-string-constant
    languages: [go]
    message: Use the constant `names.AttrCreatedDate` for the string literal "created_date"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"created_date"'
      - pattern-not-regex: '"created_date":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCreatedDate"

  - id: literal-created_time-string-constant
    languages: [go]
    message: Use the constant `names.AttrCreatedTime` for the string literal "created_time"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"created_time"'
      - pattern-not-regex: '"created_time":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCreatedTime"

  - id: literal-creation_date-string-constant
    languages: [go]
    message: Use the constant `names.AttrCreationDate` for the string literal "creation_date"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"creation_date"'
      - pattern-not-regex: '"creation_date":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCreationDate"

  - id: literal-creation_time-string-constant
    languages: [go]
    message: Use the constant `names.AttrCreationTime` for the string literal "creation_time"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"creation_time"'
      - pattern-not-regex: '"creation_time":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrCreationTime"

  - id: literal-dns_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrDNSName` for the string literal "dns_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"dns_name"'
      - pattern-not-regex: '"dns_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDNSName"

  - id: literal-database-string-constant
    languages: [go]
    message: Use the constant `names.AttrDatabase` for the string literal "database"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"database"'
      - pattern-not-regex: '"database":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDatabase"

  - id: literal-database_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrDatabaseName` for the string literal "database_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"database_name"'
      - pattern-not-regex: '"database_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDatabaseName"

  - id: literal-default_action-string-constant
    languages: [go]
    message: Use the constant `names.AttrDefaultAction` for the string literal "default_action"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"default_action"'
      - pattern-not-regex: '"default_action":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDefaultAction"

  - id: literal-default_value-string-constant
    languages: [go]
    message: Use the constant `names.AttrDefaultValue` for the string literal "default_value"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"default_value"'
      - pattern-not-regex: '"default_value":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDefaultValue"

  - id: literal-delete_on_termination-string-constant
    languages: [go]
    message: Use the constant `names.AttrDeleteOnTermination` for the string literal "delete_on_termination"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"delete_on_termination"'
      - pattern-not-regex: '"delete_on_termination":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDeleteOnTermination"

  - id: literal-deletion_protection-string-constant
    languages: [go]
    message: Use the constant `names.AttrDeletionProtection` for the string literal "deletion_protection"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"deletion_protection"'
      - pattern-not-regex: '"deletion_protection":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDeletionProtection"

  - id: literal-description-string-constant
    languages: [go]
    message: Use the constant `names.AttrDescription` for the string literal "description"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"description"'
      - pattern-not-regex: '"description":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDescription"

  - id: literal-destination-string-constant
    languages: [go]
    message: Use the constant `names.AttrDestination` for the string literal "destination"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"destination"'
      - pattern-not-regex: '"destination":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDestination"

  - id: literal-destination_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrDestinationARN` for the string literal "destination_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"destination_arn"'
      - pattern-not-regex: '"destination_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDestinationARN"

  - id: literal-device_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrDeviceName` for the string literal "device_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"device_name"'
      - pattern-not-regex: '"device_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDeviceName"

  - id: literal-display_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrDisplayName` for the string literal "display_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"display_name"'
      - pattern-not-regex: '"display_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDisplayName"

  - id: literal-domain-string-constant
    languages: [go]
    message: Use the constant `names.AttrDomain` for the string literal "domain"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"domain"'
      - pattern-not-regex: '"domain":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDomain"

  - id: literal-domain_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrDomainName` for the string literal "domain_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"domain_name"'
      - pattern-not-regex: '"domain_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDomainName"

  - id: literal-duration-string-constant
    languages: [go]
    message: Use the constant `names.AttrDuration` for the string literal "duration"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"duration"'
      - pattern-not-regex: '"duration":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrDuration"

  - id: literal-email-string-constant
    languages: [go]
    message: Use the constant `names.AttrEmail` for the string literal "email"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"email"'
      - pattern-not-regex: '"email":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEmail"

  - id: literal-enabled-string-constant
    languages: [go]
    message: Use the constant `names.AttrEnabled` for the string literal "enabled"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"enabled"'
      - pattern-not-regex: '"enabled":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEnabled"

  - id: literal-encrypted-string-constant
    languages: [go]
    message: Use the constant `names.AttrEncrypted` for the string literal "encrypted"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"encrypted"'
      - pattern-not-regex: '"encrypted":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEncrypted"

  - id: literal-encryption_configuration-string-constant
    languages: [go]
    message: Use the constant `names.AttrEncryptionConfiguration` for the string literal "encryption_configuration"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"encryption_configuration"'
      - pattern-not-regex: '"encryption_configuration":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEncryptionConfiguration"

  - id: literal-endpoint-string-constant
    languages: [go]
    message: Use the constant `names.AttrEndpoint` for the string literal "endpoint"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"endpoint"'
      - pattern-not-regex: '"endpoint":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEndpoint"

  - id: literal-endpoint_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrEndpointType` for the string literal "endpoint_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"endpoint_type"'
      - pattern-not-regex: '"endpoint_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEndpointType"

  - id: literal-endpoints-string-constant
    languages: [go]
    message: Use the constant `names.AttrEndpoints` for the string literal "endpoints"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"endpoints"'
      - pattern-not-regex: '"endpoints":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEndpoints"

  - id: literal-engine-string-constant
    languages: [go]
    message: Use the constant `names.AttrEngine` for the string literal "engine"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"engine"'
      - pattern-not-regex: '"engine":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEngine"

  - id: literal-engine_version-string-constant
    languages: [go]
    message: Use the constant `names.AttrEngineVersion` for the string literal "engine_version"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"engine_version"'
      - pattern-not-regex: '"engine_version":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEngineVersion"

  - id: literal-environment-string-constant
    languages: [go]
    message: Use the constant `names.AttrEnvironment` for the string literal "environment"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"environment"'
      - pattern-not-regex: '"environment":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrEnvironment"

  - id: literal-execution_role_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrExecutionRoleARN` for the string literal "execution_role_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"execution_role_arn"'
      - pattern-not-regex: '"execution_role_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrExecutionRoleARN"

  - id: literal-expected_bucket_owner-string-constant
    languages: [go]
    message: Use the constant `names.AttrExpectedBucketOwner` for the string literal "expected_bucket_owner"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"expected_bucket_owner"'
      - pattern-not-regex: '"expected_bucket_owner":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrExpectedBucketOwner"

  - id: literal-expression-string-constant
    languages: [go]
    message: Use the constant `names.AttrExpression` for the string literal "expression"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"expression"'
      - pattern-not-regex: '"expression":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrExpression"

  - id: literal-external_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrExternalID` for the string literal "external_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"external_id"'
      - pattern-not-regex: '"external_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrExternalID"

  - id: literal-family-string-constant
    languages: [go]
    message: Use the constant `names.AttrFamily` for the string literal "family"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"family"'
      - pattern-not-regex: '"family":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrFamily"

  - id: literal-field-string-constant
    languages: [go]
    message: Use the constant `names.AttrField` for the string literal "field"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"field"'
      - pattern-not-regex: '"field":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrField"

  - id: literal-file_system_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrFileSystemID` for the string literal "file_system_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"file_system_id"'
      - pattern-not-regex: '"file_system_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrFileSystemID"

  - id: literal-filter-string-constant
    languages: [go]
    message: Use the constant `names.AttrFilter` for the string literal "filter"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"filter"'
      - pattern-not-regex: '"filter":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrFilter"

  - id: literal-final_snapshot_identifier-string-constant
    languages: [go]
    message: Use the constant `names.AttrFinalSnapshotIdentifier` for the string literal "final_snapshot_identifier"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"final_snapshot_identifier"'
      - pattern-not-regex: '"final_snapshot_identifier":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrFinalSnapshotIdentifier"

  - id: literal-force_delete-string-constant
    languages: [go]
    message: Use the constant `names.AttrForceDelete` for the string literal "force_delete"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"force_delete"'
      - pattern-not-regex: '"force_delete":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrForceDelete"

  - id: literal-force_destroy-string-constant
    languages: [go]
    message: Use the constant `names.AttrForceDestroy` for the string literal "force_destroy"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"force_destroy"'
      - pattern-not-regex: '"force_destroy":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrForceDestroy"

  - id: literal-format-string-constant
    languages: [go]
    message: Use the constant `names.AttrFormat` for the string literal "format"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"format"'
      - pattern-not-regex: '"format":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrFormat"

  - id: literal-function_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrFunctionARN` for the string literal "function_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"function_arn"'
      - pattern-not-regex: '"function_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrFunctionARN"

  - id: literal-group_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrGroupName` for the string literal "group_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"group_name"'
      - pattern-not-regex: '"group_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrGroupName"

  - id: literal-header-string-constant
    languages: [go]
    message: Use the constant `names.AttrHeader` for the string literal "header"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"header"'
      - pattern-not-regex: '"header":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrHeader"

  - id: literal-health_check-string-constant
    languages: [go]
    message: Use the constant `names.AttrHealthCheck` for the string literal "health_check"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"health_check"'
      - pattern-not-regex: '"health_check":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrHealthCheck"

  - id: literal-hosted_zone_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrHostedZoneID` for the string literal "hosted_zone_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"hosted_zone_id"'
      - pattern-not-regex: '"hosted_zone_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrHostedZoneID"

  - id: literal-iam_role_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrIAMRoleARN` for the string literal "iam_role_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"iam_role_arn"'
      - pattern-not-regex: '"iam_role_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIAMRoleARN"

  - id: literal-id-string-constant
    languages: [go]
    message: Use the constant `names.AttrID` for the string literal "id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"id"'
      - pattern-not-regex: '"id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrID"

  - id: literal-ids-string-constant
    languages: [go]
    message: Use the constant `names.AttrIDs` for the string literal "ids"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"ids"'
      - pattern-not-regex: '"ids":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIDs"

  - id: literal-iops-string-constant
    languages: [go]
    message: Use the constant `names.AttrIOPS` for the string literal "iops"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"iops"'
      - pattern-not-regex: '"iops":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIOPS"

  - id: literal-ip_address-string-constant
    languages: [go]
    message: Use the constant `names.AttrIPAddress` for the string literal "ip_address"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"ip_address"'
      - pattern-not-regex: '"ip_address":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIPAddress"

  - id: literal-ip_address_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrIPAddressType` for the string literal "ip_address_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"ip_address_type"'
      - pattern-not-regex: '"ip_address_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIPAddressType"

  - id: literal-ip_addresses-string-constant
    languages: [go]
    message: Use the constant `names.AttrIPAddresses` for the string literal "ip_addresses"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"ip_addresses"'
      - pattern-not-regex: '"ip_addresses":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIPAddresses"

  - id: literal-identifier-string-constant
    languages: [go]
    message: Use the constant `names.AttrIdentifier` for the string literal "identifier"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"identifier"'
      - pattern-not-regex: '"identifier":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIdentifier"

  - id: literal-instance_count-string-constant
    languages: [go]
    message: Use the constant `names.AttrInstanceCount` for the string literal "instance_count"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"instance_count"'
      - pattern-not-regex: '"instance_count":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrInstanceCount"

  - id: literal-instance_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrInstanceID` for the string literal "instance_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"instance_id"'
      - pattern-not-regex: '"instance_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrInstanceID"

  - id: literal-instance_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrInstanceType` for the string literal "instance_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"instance_type"'
      - pattern-not-regex: '"instance_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrInstanceType"

  - id: literal-interval-string-constant
    languages: [go]
    message: Use the constant `names.AttrInterval` for the string literal "interval"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"interval"'
      - pattern-not-regex: '"interval":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrInterval"

  - id: literal-issuer-string-constant
    languages: [go]
    message: Use the constant `names.AttrIssuer` for the string literal "issuer"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"issuer"'
      - pattern-not-regex: '"issuer":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrIssuer"

  - id: literal-json-string-constant
    languages: [go]
    message: Use the constant `names.AttrJSON` for the string literal "json"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"json"'
      - pattern-not-regex: '"json":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrJSON"

  - id: literal-kms_key-string-constant
    languages: [go]
    message: Use the constant `names.AttrKMSKey` for the string literal "kms_key"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"kms_key"'
      - pattern-not-regex: '"kms_key":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrKMSKey"

  - id: literal-kms_key_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrKMSKeyARN` for the string literal "kms_key_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"kms_key_arn"'
      - pattern-not-regex: '"kms_key_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrKMSKeyARN"

  - id: literal-kms_key_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrKMSKeyID` for the string literal "kms_key_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"kms_key_id"'
      - pattern-not-regex: '"kms_key_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrKMSKeyID"

  - id: literal-key-string-constant
    languages: [go]
    message: Use the constant `names.AttrKey` for the string literal "key"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"key"'
      - pattern-not-regex: '"key":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrKey"

  - id: literal-key_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrKeyID` for the string literal "key_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"key_id"'
      - pattern-not-regex: '"key_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrKeyID"

  - id: literal-language_code-string-constant
    languages: [go]
    message: Use the constant `names.AttrLanguageCode` for the string literal "language_code"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"language_code"'
      - pattern-not-regex: '"language_code":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLanguageCode"

  - id: literal-last_updated_date-string-constant
    languages: [go]
    message: Use the constant `names.AttrLastUpdatedDate` for the string literal "last_updated_date"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"last_updated_date"'
      - pattern-not-regex: '"last_updated_date":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLastUpdatedDate"

  - id: literal-last_updated_time-string-constant
    languages: [go]
    message: Use the constant `names.AttrLastUpdatedTime` for the string literal "last_updated_time"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"last_updated_time"'
      - pattern-not-regex: '"last_updated_time":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLastUpdatedTime"

  - id: literal-launch_template-string-constant
    languages: [go]
    message: Use the constant `names.AttrLaunchTemplate` for the string literal "launch_template"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"launch_template"'
      - pattern-not-regex: '"launch_template":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLaunchTemplate"

  - id: literal-location-string-constant
    languages: [go]
    message: Use the constant `names.AttrLocation` for the string literal "location"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"location"'
      - pattern-not-regex: '"location":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLocation"

  - id: literal-log_group_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrLogGroupName` for the string literal "log_group_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"log_group_name"'
      - pattern-not-regex: '"log_group_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLogGroupName"

  - id: literal-logging_configuration-string-constant
    languages: [go]
    message: Use the constant `names.AttrLoggingConfiguration` for the string literal "logging_configuration"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"logging_configuration"'
      - pattern-not-regex: '"logging_configuration":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrLoggingConfiguration"

  - id: literal-max-string-constant
    languages: [go]
    message: Use the constant `names.AttrMax` for the string literal "max"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"max"'
      - pattern-not-regex: '"max":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMax"

  - id: literal-max_capacity-string-constant
    languages: [go]
    message: Use the constant `names.AttrMaxCapacity` for the string literal "max_capacity"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"max_capacity"'
      - pattern-not-regex: '"max_capacity":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMaxCapacity"

  - id: literal-message-string-constant
    languages: [go]
    message: Use the constant `names.AttrMessage` for the string literal "message"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"message"'
      - pattern-not-regex: '"message":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMessage"

  - id: literal-metric_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrMetricName` for the string literal "metric_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"metric_name"'
      - pattern-not-regex: '"metric_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMetricName"

  - id: literal-min-string-constant
    languages: [go]
    message: Use the constant `names.AttrMin` for the string literal "min"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"min"'
      - pattern-not-regex: '"min":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMin"

  - id: literal-mode-string-constant
    languages: [go]
    message: Use the constant `names.AttrMode` for the string literal "mode"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"mode"'
      - pattern-not-regex: '"mode":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMode"

  - id: literal-most_recent-string-constant
    languages: [go]
    message: Use the constant `names.AttrMostRecent` for the string literal "most_recent"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"most_recent"'
      - pattern-not-regex: '"most_recent":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrMostRecent"

  - id: literal-name-string-constant
    languages: [go]
    message: Use the constant `names.AttrName` for the string literal "name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"name"'
      - pattern-not-regex: '"name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrName"

  - id: literal-name_prefix-string-constant
    languages: [go]
    message: Use the constant `names.AttrNamePrefix` for the string literal "name_prefix"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"name_prefix"'
      - pattern-not-regex: '"name_prefix":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrNamePrefix"

  - id: literal-names-string-constant
    languages: [go]
    message: Use the constant `names.AttrNames` for the string literal "names"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"names"'
      - pattern-not-regex: '"names":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrNames"

  - id: literal-namespace-string-constant
    languages: [go]
    message: Use the constant `names.AttrNamespace` for the string literal "namespace"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"namespace"'
      - pattern-not-regex: '"namespace":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrNamespace"

  - id: literal-network_configuration-string-constant
    languages: [go]
    message: Use the constant `names.AttrNetworkConfiguration` for the string literal "network_configuration"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"network_configuration"'
      - pattern-not-regex: '"network_configuration":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrNetworkConfiguration"

  - id: literal-network_interface_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrNetworkInterfaceID` for the string literal "network_interface_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"network_interface_id"'
      - pattern-not-regex: '"network_interface_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrNetworkInterfaceID"

  - id: literal-owner-string-constant
    languages: [go]
    message: Use the constant `names.AttrOwner` for the string literal "owner"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"owner"'
      - pattern-not-regex: '"owner":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrOwner"

  - id: literal-owner_account_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrOwnerAccountID` for the string literal "owner_account_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"owner_account_id"'
      - pattern-not-regex: '"owner_account_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrOwnerAccountID"

  - id: literal-owner_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrOwnerID` for the string literal "owner_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"owner_id"'
      - pattern-not-regex: '"owner_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrOwnerID"

  - id: literal-parameter-string-constant
    languages: [go]
    message: Use the constant `names.AttrParameter` for the string literal "parameter"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"parameter"'
      - pattern-not-regex: '"parameter":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrParameter"

  - id: literal-parameter_group_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrParameterGroupName` for the string literal "parameter_group_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"parameter_group_name"'
      - pattern-not-regex: '"parameter_group_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrParameterGroupName"

  - id: literal-parameters-string-constant
    languages: [go]
    message: Use the constant `names.AttrParameters` for the string literal "parameters"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"parameters"'
      - pattern-not-regex: '"parameters":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrParameters"

  - id: literal-password-string-constant
    languages: [go]
    message: Use the constant `names.AttrPassword` for the string literal "password"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"password"'
      - pattern-not-regex: '"password":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPassword"

  - id: literal-path-string-constant
    languages: [go]
    message: Use the constant `names.AttrPath` for the string literal "path"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"path"'
      - pattern-not-regex: '"path":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPath"

  - id: literal-permissions-string-constant
    languages: [go]
    message: Use the constant `names.AttrPermissions` for the string literal "permissions"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"permissions"'
      - pattern-not-regex: '"permissions":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPermissions"

  - id: literal-policy-string-constant
    languages: [go]
    message: Use the constant `names.AttrPolicy` for the string literal "policy"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"policy"'
      - pattern-not-regex: '"policy":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPolicy"

  - id: literal-port-string-constant
    languages: [go]
    message: Use the constant `names.AttrPort` for the string literal "port"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"port"'
      - pattern-not-regex: '"port":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPort"

  - id: literal-preferred_maintenance_window-string-constant
    languages: [go]
    message: Use the constant `names.AttrPreferredMaintenanceWindow` for the string literal "preferred_maintenance_window"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"preferred_maintenance_window"'
      - pattern-not-regex: '"preferred_maintenance_window":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPreferredMaintenanceWindow"

  - id: literal-prefix-string-constant
    languages: [go]
    message: Use the constant `names.AttrPrefix` for the string literal "prefix"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"prefix"'
      - pattern-not-regex: '"prefix":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPrefix"

  - id: literal-principal-string-constant
    languages: [go]
    message: Use the constant `names.AttrPrincipal` for the string literal "principal"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"principal"'
      - pattern-not-regex: '"principal":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPrincipal"

  - id: literal-priority-string-constant
    languages: [go]
    message: Use the constant `names.AttrPriority` for the string literal "priority"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"priority"'
      - pattern-not-regex: '"priority":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPriority"

  - id: literal-private_key-string-constant
    languages: [go]
    message: Use the constant `names.AttrPrivateKey` for the string literal "private_key"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"private_key"'
      - pattern-not-regex: '"private_key":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPrivateKey"

  - id: literal-profile-string-constant
    languages: [go]
    message: Use the constant `names.AttrProfile` for the string literal "profile"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"profile"'
      - pattern-not-regex: '"profile":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrProfile"

  - id: literal-propagate_tags-string-constant
    languages: [go]
    message: Use the constant `names.AttrPropagateTags` for the string literal "propagate_tags"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"propagate_tags"'
      - pattern-not-regex: '"propagate_tags":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPropagateTags"

  - id: literal-properties-string-constant
    languages: [go]
    message: Use the constant `names.AttrProperties` for the string literal "properties"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"properties"'
      - pattern-not-regex: '"properties":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrProperties"

  - id: literal-protocol-string-constant
    languages: [go]
    message: Use the constant `names.AttrProtocol` for the string literal "protocol"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"protocol"'
      - pattern-not-regex: '"protocol":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrProtocol"

  - id: literal-provider_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrProviderName` for the string literal "provider_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"provider_name"'
      - pattern-not-regex: '"provider_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrProviderName"

  - id: literal-public_key-string-constant
    languages: [go]
    message: Use the constant `names.AttrPublicKey` for the string literal "public_key"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"public_key"'
      - pattern-not-regex: '"public_key":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPublicKey"

  - id: literal-publicly_accessible-string-constant
    languages: [go]
    message: Use the constant `names.AttrPubliclyAccessible` for the string literal "publicly_accessible"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"publicly_accessible"'
      - pattern-not-regex: '"publicly_accessible":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrPubliclyAccessible"

  - id: literal-region-string-constant
    languages: [go]
    message: Use the constant `names.AttrRegion` for the string literal "region"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"region"'
      - pattern-not-regex: '"region":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrRegion"

  - id: literal-repository_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrRepositoryName` for the string literal "repository_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"repository_name"'
      - pattern-not-regex: '"repository_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrRepositoryName"

  - id: literal-resource_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrResourceARN` for the string literal "resource_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"resource_arn"'
      - pattern-not-regex: '"resource_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrResourceARN"

  - id: literal-resource_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrResourceID` for the string literal "resource_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"resource_id"'
      - pattern-not-regex: '"resource_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrResourceID"

  - id: literal-resource_owner-string-constant
    languages: [go]
    message: Use the constant `names.AttrResourceOwner` for the string literal "resource_owner"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"resource_owner"'
      - pattern-not-regex: '"resource_owner":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrResourceOwner"

  - id: literal-resource_tags-string-constant
    languages: [go]
    message: Use the constant `names.AttrResourceTags` for the string literal "resource_tags"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"resource_tags"'
      - pattern-not-regex: '"resource_tags":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrResourceTags"

  - id: literal-resource_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrResourceType` for the string literal "resource_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"resource_type"'
      - pattern-not-regex: '"resource_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrResourceType"

  - id: literal-resources-string-constant
    languages: [go]
    message: Use the constant `names.AttrResources` for the string literal "resources"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"resources"'
      - pattern-not-regex: '"resources":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrResources"

  - id: literal-retention_period-string-constant
    languages: [go]
    message: Use the constant `names.AttrRetentionPeriod` for the string literal "retention_period"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"retention_period"'
      - pattern-not-regex: '"retention_period":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrRetentionPeriod"

  - id: literal-role-string-constant
    languages: [go]
    message: Use the constant `names.AttrRole` for the string literal "role"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"role"'
      - pattern-not-regex: '"role":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrRole"

  - id: literal-role_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrRoleARN` for the string literal "role_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"role_arn"'
      - pattern-not-regex: '"role_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrRoleARN"

  - id: literal-rule-string-constant
    languages: [go]
    message: Use the constant `names.AttrRule` for the string literal "rule"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"rule"'
      - pattern-not-regex: '"rule":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrRule"

  - id: literal-s3_bucket-string-constant
    languages: [go]
    message: Use the constant `names.AttrS3Bucket` for the string literal "s3_bucket"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"s3_bucket"'
      - pattern-not-regex: '"s3_bucket":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrS3Bucket"

  - id: literal-s3_bucket_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrS3BucketName` for the string literal "s3_bucket_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"s3_bucket_name"'
      - pattern-not-regex: '"s3_bucket_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrS3BucketName"

  - id: literal-s3_key_prefix-string-constant
    languages: [go]
    message: Use the constant `names.AttrS3KeyPrefix` for the string literal "s3_key_prefix"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"s3_key_prefix"'
      - pattern-not-regex: '"s3_key_prefix":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrS3KeyPrefix"

  - id: literal-sns_topic_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrSNSTopicARN` for the string literal "sns_topic_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"sns_topic_arn"'
      - pattern-not-regex: '"sns_topic_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSNSTopicARN"

  - id: literal-schedule-string-constant
    languages: [go]
    message: Use the constant `names.AttrSchedule` for the string literal "schedule"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"schedule"'
      - pattern-not-regex: '"schedule":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSchedule"

  - id: literal-schedule_expression-string-constant
    languages: [go]
    message: Use the constant `names.AttrScheduleExpression` for the string literal "schedule_expression"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"schedule_expression"'
      - pattern-not-regex: '"schedule_expression":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrScheduleExpression"

  - id: literal-schema-string-constant
    languages: [go]
    message: Use the constant `names.AttrSchema` for the string literal "schema"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"schema"'
      - pattern-not-regex: '"schema":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSchema"

  - id: literal-scope-string-constant
    languages: [go]
    message: Use the constant `names.AttrScope` for the string literal "scope"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"scope"'
      - pattern-not-regex: '"scope":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrScope"

  - id: literal-secret_key-string-constant
    languages: [go]
    message: Use the constant `names.AttrSecretKey` for the string literal "secret_key"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"secret_key"'
      - pattern-not-regex: '"secret_key":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSecretKey"

  - id: literal-security_group_ids-string-constant
    languages: [go]
    message: Use the constant `names.AttrSecurityGroupIDs` for the string literal "security_group_ids"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"security_group_ids"'
      - pattern-not-regex: '"security_group_ids":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSecurityGroupIDs"

  - id: literal-security_groups-string-constant
    languages: [go]
    message: Use the constant `names.AttrSecurityGroups` for the string literal "security_groups"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"security_groups"'
      - pattern-not-regex: '"security_groups":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSecurityGroups"

  - id: literal-service_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrServiceName` for the string literal "service_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"service_name"'
      - pattern-not-regex: '"service_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrServiceName"

  - id: literal-service_role-string-constant
    languages: [go]
    message: Use the constant `names.AttrServiceRole` for the string literal "service_role"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"service_role"'
      - pattern-not-regex: '"service_role":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrServiceRole"

  - id: literal-service_role_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrServiceRoleARN` for the string literal "service_role_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"service_role_arn"'
      - pattern-not-regex: '"service_role_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrServiceRoleARN"

  - id: literal-session-string-constant
    languages: [go]
    message: Use the constant `names.AttrSession` for the string literal "session"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"session"'
      - pattern-not-regex: '"session":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSession"

  - id: literal-shared_config_files-string-constant
    languages: [go]
    message: Use the constant `names.AttrSharedConfigFiles` for the string literal "shared_config_files"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"shared_config_files"'
      - pattern-not-regex: '"shared_config_files":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSharedConfigFiles"

  - id: literal-size-string-constant
    languages: [go]
    message: Use the constant `names.AttrSize` for the string literal "size"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"size"'
      - pattern-not-regex: '"size":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSize"

  - id: literal-skip_credentials_validation-string-constant
    languages: [go]
    message: Use the constant `names.AttrSkipCredentialsValidation` for the string literal "skip_credentials_validation"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"skip_credentials_validation"'
      - pattern-not-regex: '"skip_credentials_validation":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSkipCredentialsValidation"

  - id: literal-skip_destroy-string-constant
    languages: [go]
    message: Use the constant `names.AttrSkipDestroy` for the string literal "skip_destroy"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"skip_destroy"'
      - pattern-not-regex: '"skip_destroy":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSkipDestroy"

  - id: literal-skip_requesting_account_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrSkipRequestingAccountID` for the string literal "skip_requesting_account_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"skip_requesting_account_id"'
      - pattern-not-regex: '"skip_requesting_account_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSkipRequestingAccountID"

  - id: literal-snapshot_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrSnapshotID` for the string literal "snapshot_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"snapshot_id"'
      - pattern-not-regex: '"snapshot_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSnapshotID"

  - id: literal-source-string-constant
    languages: [go]
    message: Use the constant `names.AttrSource` for the string literal "source"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"source"'
      - pattern-not-regex: '"source":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSource"

  - id: literal-source_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrSourceType` for the string literal "source_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"source_type"'
      - pattern-not-regex: '"source_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSourceType"

  - id: literal-stage-string-constant
    languages: [go]
    message: Use the constant `names.AttrStage` for the string literal "stage"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"stage"'
      - pattern-not-regex: '"stage":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStage"

  - id: literal-start_time-string-constant
    languages: [go]
    message: Use the constant `names.AttrStartTime` for the string literal "start_time"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"start_time"'
      - pattern-not-regex: '"start_time":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStartTime"

  - id: literal-state-string-constant
    languages: [go]
    message: Use the constant `names.AttrState` for the string literal "state"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"state"'
      - pattern-not-regex: '"state":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrState"

  - id: literal-status-string-constant
    languages: [go]
    message: Use the constant `names.AttrStatus` for the string literal "status"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"status"'
      - pattern-not-regex: '"status":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStatus"

  - id: literal-status_code-string-constant
    languages: [go]
    message: Use the constant `names.AttrStatusCode` for the string literal "status_code"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"status_code"'
      - pattern-not-regex: '"status_code":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStatusCode"

  - id: literal-status_message-string-constant
    languages: [go]
    message: Use the constant `names.AttrStatusMessage` for the string literal "status_message"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"status_message"'
      - pattern-not-regex: '"status_message":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStatusMessage"

  - id: literal-status_reason-string-constant
    languages: [go]
    message: Use the constant `names.AttrStatusReason` for the string literal "status_reason"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"status_reason"'
      - pattern-not-regex: '"status_reason":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStatusReason"

  - id: literal-storage_class-string-constant
    languages: [go]
    message: Use the constant `names.AttrStorageClass` for the string literal "storage_class"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"storage_class"'
      - pattern-not-regex: '"storage_class":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStorageClass"

  - id: literal-storage_encrypted-string-constant
    languages: [go]
    message: Use the constant `names.AttrStorageEncrypted` for the string literal "storage_encrypted"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"storage_encrypted"'
      - pattern-not-regex: '"storage_encrypted":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStorageEncrypted"

  - id: literal-storage_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrStorageType` for the string literal "storage_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"storage_type"'
      - pattern-not-regex: '"storage_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStorageType"

  - id: literal-stream_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrStreamARN` for the string literal "stream_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"stream_arn"'
      - pattern-not-regex: '"stream_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrStreamARN"

  - id: literal-subnet_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrSubnetID` for the string literal "subnet_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"subnet_id"'
      - pattern-not-regex: '"subnet_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSubnetID"

  - id: literal-subnet_ids-string-constant
    languages: [go]
    message: Use the constant `names.AttrSubnetIDs` for the string literal "subnet_ids"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"subnet_ids"'
      - pattern-not-regex: '"subnet_ids":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSubnetIDs"

  - id: literal-subnets-string-constant
    languages: [go]
    message: Use the constant `names.AttrSubnets` for the string literal "subnets"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"subnets"'
      - pattern-not-regex: '"subnets":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrSubnets"

  - id: literal-table_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrTableName` for the string literal "table_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"table_name"'
      - pattern-not-regex: '"table_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTableName"

  - id: literal-tags-string-constant
    languages: [go]
    message: Use the constant `names.AttrTags` for the string literal "tags"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"tags"'
      - pattern-not-regex: '"tags":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTags"

  - id: literal-tags_all-string-constant
    languages: [go]
    message: Use the constant `names.AttrTagsAll` for the string literal "tags_all"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"tags_all"'
      - pattern-not-regex: '"tags_all":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTagsAll"

  - id: literal-target-string-constant
    languages: [go]
    message: Use the constant `names.AttrTarget` for the string literal "target"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"target"'
      - pattern-not-regex: '"target":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTarget"

  - id: literal-target_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrTargetARN` for the string literal "target_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"target_arn"'
      - pattern-not-regex: '"target_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTargetARN"

  - id: literal-throughput-string-constant
    languages: [go]
    message: Use the constant `names.AttrThroughput` for the string literal "throughput"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"throughput"'
      - pattern-not-regex: '"throughput":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrThroughput"

  - id: literal-timeout-string-constant
    languages: [go]
    message: Use the constant `names.AttrTimeout` for the string literal "timeout"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"timeout"'
      - pattern-not-regex: '"timeout":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTimeout"

  - id: literal-timeouts-string-constant
    languages: [go]
    message: Use the constant `names.AttrTimeouts` for the string literal "timeouts"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"timeouts"'
      - pattern-not-regex: '"timeouts":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTimeouts"

  - id: literal-topic_arn-string-constant
    languages: [go]
    message: Use the constant `names.AttrTopicARN` for the string literal "topic_arn"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"topic_arn"'
      - pattern-not-regex: '"topic_arn":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTopicARN"

  - id: literal-transit_gateway_attachment_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrTransitGatewayAttachmentID` for the string literal "transit_gateway_attachment_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"transit_gateway_attachment_id"'
      - pattern-not-regex: '"transit_gateway_attachment_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTransitGatewayAttachmentID"

  - id: literal-transit_gateway_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrTransitGatewayID` for the string literal "transit_gateway_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"transit_gateway_id"'
      - pattern-not-regex: '"transit_gateway_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTransitGatewayID"

  - id: literal-triggers-string-constant
    languages: [go]
    message: Use the constant `names.AttrTriggers` for the string literal "triggers"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"triggers"'
      - pattern-not-regex: '"triggers":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrTriggers"

  - id: literal-type-string-constant
    languages: [go]
    message: Use the constant `names.AttrType` for the string literal "type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"type"'
      - pattern-not-regex: '"type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrType"

  - id: literal-uri-string-constant
    languages: [go]
    message: Use the constant `names.AttrURI` for the string literal "uri"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"uri"'
      - pattern-not-regex: '"uri":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrURI"

  - id: literal-url-string-constant
    languages: [go]
    message: Use the constant `names.AttrURL` for the string literal "url"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"url"'
      - pattern-not-regex: '"url":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrURL"

  - id: literal-unit-string-constant
    languages: [go]
    message: Use the constant `names.AttrUnit` for the string literal "unit"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"unit"'
      - pattern-not-regex: '"unit":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrUnit"

  - id: literal-user_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrUserName` for the string literal "user_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"user_name"'
      - pattern-not-regex: '"user_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrUserName"

  - id: literal-user_pool_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrUserPoolID` for the string literal "user_pool_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"user_pool_id"'
      - pattern-not-regex: '"user_pool_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrUserPoolID"

  - id: literal-username-string-constant
    languages: [go]
    message: Use the constant `names.AttrUsername` for the string literal "username"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"username"'
      - pattern-not-regex: '"username":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrUsername"

  - id: literal-vpc_config-string-constant
    languages: [go]
    message: Use the constant `names.AttrVPCConfig` for the string literal "vpc_config"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"vpc_config"'
      - pattern-not-regex: '"vpc_config":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVPCConfig"

  - id: literal-vpc_configuration-string-constant
    languages: [go]
    message: Use the constant `names.AttrVPCConfiguration` for the string literal "vpc_configuration"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"vpc_configuration"'
      - pattern-not-regex: '"vpc_configuration":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVPCConfiguration"

  - id: literal-vpc_endpoint_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrVPCEndpointID` for the string literal "vpc_endpoint_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"vpc_endpoint_id"'
      - pattern-not-regex: '"vpc_endpoint_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVPCEndpointID"

  - id: literal-vpc_id-string-constant
    languages: [go]
    message: Use the constant `names.AttrVPCID` for the string literal "vpc_id"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"vpc_id"'
      - pattern-not-regex: '"vpc_id":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVPCID"

  - id: literal-vpc_security_group_ids-string-constant
    languages: [go]
    message: Use the constant `names.AttrVPCSecurityGroupIDs` for the string literal "vpc_security_group_ids"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"vpc_security_group_ids"'
      - pattern-not-regex: '"vpc_security_group_ids":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVPCSecurityGroupIDs"

  - id: literal-value-string-constant
    languages: [go]
    message: Use the constant `names.AttrValue` for the string literal "value"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"value"'
      - pattern-not-regex: '"value":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrValue"

  - id: literal-values-string-constant
    languages: [go]
    message: Use the constant `names.AttrValues` for the string literal "values"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"values"'
      - pattern-not-regex: '"values":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrValues"

  - id: literal-version-string-constant
    languages: [go]
    message: Use the constant `names.AttrVersion` for the string literal "version"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"version"'
      - pattern-not-regex: '"version":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVersion"

  - id: literal-virtual_name-string-constant
    languages: [go]
    message: Use the constant `names.AttrVirtualName` for the string literal "virtual_name"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"virtual_name"'
      - pattern-not-regex: '"virtual_name":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVirtualName"

  - id: literal-volume_size-string-constant
    languages: [go]
    message: Use the constant `names.AttrVolumeSize` for the string literal "volume_size"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"volume_size"'
      - pattern-not-regex: '"volume_size":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVolumeSize"

  - id: literal-volume_type-string-constant
    languages: [go]
    message: Use the constant `names.AttrVolumeType` for the string literal "volume_type"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"volume_type"'
      - pattern-not-regex: '"volume_type":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrVolumeType"

  - id: literal-weight-string-constant
    languages: [go]
    message: Use the constant `names.AttrWeight` for the string literal "weight"
    paths:
      include:
        - "internal/service/**/*.go"
    patterns:
      - pattern: '"weight"'
      - pattern-not-regex: '"weight":\s+test\w+,'
      - pattern-not-inside: 'config.Variables{ ... }'
      - pattern-not-inside: 'packageName = ...'
      - pattern-not-inside: 'provider.ConflictingEndpointsWarningDiag(...)'
    severity: ERROR
    fix: "names.AttrWeight"
