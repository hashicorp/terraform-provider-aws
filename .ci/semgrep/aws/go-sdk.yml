rules:
  - id: multiple-service-imports
    languages: [go]
    message: Resources should not implement multiple AWS Go SDK service functionality
    paths:
      include:
        - internal/
      exclude:
        - "internal/service/**/*_test.go"
        - "internal/service/**/sweep.go"
        - "internal/acctest/acctest.go"
        - "internal/conns/**/*.go"
    patterns:
      - pattern: |
          import ("$X")
          import ("$Y")
      - metavariable-regex:
          metavariable: "$X"
          regex: '^github.com/aws/aws-sdk-go-v2/service/[^/]+$'
      - metavariable-regex:
          metavariable: "$Y"
          regex: '^github.com/aws/aws-sdk-go-v2/service/[^/]+$'
    severity: WARNING

  - id: prefer-pointer-conversion-assignment
    languages: [go]
    message: Prefer AWS Go SDK pointer conversion functions for dereferencing during assignment, e.g. aws.ToString()
    paths:
      include:
        - internal/service
      exclude:
        - "internal/service/**/*_test.go"
        - "internal/service/*/service_package.go"
        - "internal/service/*/service_package_gen.go"
    patterns:
      - pattern: "$LHS = *$RHS"
      - pattern-not: "*$LHS2 = *$RHS"
    severity: WARNING

  - id: prefer-pointer-conversion-conditional
    languages: [go]
    message: Prefer AWS Go SDK pointer conversion functions for dereferencing during conditionals, e.g. aws.ToString()
    paths:
      include:
        - internal/service
      exclude:
        - "internal/service/**/*_test.go"
    patterns:
      - pattern-either:
          - pattern: "$LHS == *$RHS"
          - pattern: "$LHS != *$RHS"
          - pattern: "$LHS > *$RHS"
          - pattern: "$LHS < *$RHS"
          - pattern: "$LHS >= *$RHS"
          - pattern: "$LHS <= *$RHS"
          - pattern: "*$LHS == $RHS"
          - pattern: "*$LHS != $RHS"
          - pattern: "*$LHS > $RHS"
          - pattern: "*$LHS < $RHS"
          - pattern: "*$LHS >= $RHS"
          - pattern: "*$LHS <= $RHS"
    severity: WARNING

  - id: pointer-conversion-immediate-dereference
    fix: $VALUE
    languages: [go]
    message: Using AWS Go SDK pointer conversion, e.g. aws.String(), with immediate dereferencing is extraneous
    paths:
      include:
        - internal/
    patterns:
      - pattern-either:
          - pattern: "*aws.Bool($VALUE)"
          - pattern: "*aws.Float64($VALUE)"
          - pattern: "*aws.Int64($VALUE)"
          - pattern: "*aws.String($VALUE)"
          - pattern: "*aws.Time($VALUE)"
    severity: WARNING

  - id: pointer-conversion-ResourceData-SetId
    fix: d.SetId(aws.ToString($VALUE))
    languages: [go]
    message: Prefer AWS Go SDK pointer conversion aws.ToString() function for dereferencing during d.SetId()
    paths:
      include:
        - internal/
    pattern: "d.SetId(*$VALUE)"
    severity: WARNING

  - id: helper-schema-ResourceData-Set-extraneous-value-pointer-conversion
    fix: d.Set($ATTRIBUTE, $APIOBJECT)
    languages: [go]
    message: AWS Go SDK pointer conversion function for `d.Set()` value is extraneous
    paths:
      include:
        - internal/
    patterns:
      - pattern-either:
          - pattern: d.Set($ATTRIBUTE, aws.ToBool($APIOBJECT))
          - pattern: d.Set($ATTRIBUTE, aws.ToFloat32($APIOBJECT))
          - pattern: d.Set($ATTRIBUTE, aws.ToFloat64($APIOBJECT))
          - pattern: d.Set($ATTRIBUTE, aws.ToInt($APIOBJECT))
          - pattern: d.Set($ATTRIBUTE, aws.ToInt32($APIOBJECT))
          - pattern: d.Set($ATTRIBUTE, aws.ToInt64($APIOBJECT))
          - pattern: d.Set($ATTRIBUTE, int(aws.ToInt32($APIOBJECT)))
          - pattern: d.Set($ATTRIBUTE, int(aws.ToInt64($APIOBJECT)))
          - pattern: d.Set($ATTRIBUTE, aws.ToString($APIOBJECT))
    severity: WARNING

  - id: prefer-pointer-conversion-int-conversion-int64-pointer
    fix: $VALUE
    languages: [go]
    message: Prefer AWS Go SDK pointer conversion functions for dereferencing when converting int64 to int
    paths:
      include:
        - internal/
    pattern: int(*$VALUE)
    severity: WARNING
