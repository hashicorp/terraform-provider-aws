---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_service_specific_credential"
description: |-
  Provides an IAM Service Specific Credential.
---

# Resource: aws_iam_service_specific_credential

Provides an IAM Service Specific Credential.

## Example Usage

### Basic Usage

```terraform
resource "aws_iam_user" "example" {
  name = "example"
}

resource "aws_iam_service_specific_credential" "example" {
  service_name = "codecommit.amazonaws.com"
  user_name    = aws_iam_user.example.name
}
```

### Bedrock API Key with Expiration

```terraform
resource "aws_iam_user" "example" {
  name = "example"
}

resource "aws_iam_service_specific_credential" "bedrock" {
  service_name        = "bedrock.amazonaws.com"
  user_name           = aws_iam_user.example.name
  credential_age_days = 30 # API key expires after 30 days
}
```

## Argument Reference

This resource supports the following arguments:

- `service_name` - (Required) The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials. Supported services are `codecommit.amazonaws.com`, `bedrock.amazonaws.com`, and `cassandra.amazonaws.com`.
- `user_name` - (Required) The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.
- `status` - (Optional) The status to be assigned to the service-specific credential. Valid values are `Active`, `Inactive`, and `Expired`. Default value is `Active`. Note that `Expired` is only used for read operations and cannot be set manually.
- `credential_age_days` - (Optional, Forces new resource) The number of days until the service specific credential expires. This field is only valid for Bedrock API keys and must be between 1 and 36600 (approximately 100 years). When not specified, the credential will not expire.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

- `id` - The combination of `service_name` and `user_name` as such: `service_name:user_name:service_specific_credential_id`.
- `service_password` - The generated password for the service-specific credential. This value is only available when the credential is created.
- `service_user_name` - The generated user name for the service-specific credential. This value is generated by combining the IAM user's name combined with the ID number of the AWS account, as in `jane-at-123456789012`, for example.
- `service_specific_credential_id` - The unique identifier for the service-specific credential.
- `service_credential_alias` - For Bedrock API keys, this is the public portion of the credential that includes the IAM user name and a suffix containing version and creation information.
- `service_credential_secret` - For Bedrock API keys, this is the secret portion of the credential that should be used to authenticate API calls. This value is only available when the credential is created.
- `create_date` - The date and time, in RFC3339 format, when the service-specific credential was created.
- `expiration_date` - The date and time, in RFC3339 format, when the service specific credential expires. This field is only present for Bedrock API keys that were created with an expiration period.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IAM Service Specific Credentials using the `service_name:user_name:service_specific_credential_id`. For example:

```terraform
import {
  to = aws_iam_service_specific_credential.default
  id = "`codecommit.amazonaws.com:example:some-id`"
}
```

Using `terraform import`, import IAM Service Specific Credentials using the `service_name:user_name:service_specific_credential_id`. For example:

```console
% terraform import aws_iam_service_specific_credential.default `codecommit.amazonaws.com:example:some-id`
```
