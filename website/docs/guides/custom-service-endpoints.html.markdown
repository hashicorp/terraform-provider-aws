---
subcategory: ""
layout: "aws"
page_title: "Terraform AWS Provider Custom Service Endpoint Configuration"
description: |-
  Configuring the Terraform AWS Provider to connect to custom AWS service endpoints and AWS compatible solutions.
---

<!-- Generated by internal/generate/customends/main.go; DO NOT EDIT. -->

# Custom Service Endpoint Configuration

The Terraform AWS Provider configuration can be customized to connect to non-default AWS service endpoints and AWS compatible solutions. This may be useful for environments with specific compliance requirements, such as using [AWS FIPS 140-2 endpoints](https://aws.amazon.com/compliance/fips/), connecting to AWS Snowball, SC2S, or C2S environments, or local testing.

This guide outlines how to get started with customizing endpoints, the available endpoint configurations, and offers example configurations for working with certain local development and testing solutions.

~> **NOTE:** Support for connecting the Terraform AWS Provider with custom endpoints and AWS compatible solutions is offered as best effort. Individual Terraform resources may require compatibility updates to work in certain environments. Integration testing by HashiCorp during provider changes is exclusively done against default AWS endpoints at this time.

<!-- TOC depthFrom:2 -->

- [Getting Started with Custom Endpoints](#getting-started-with-custom-endpoints)
- [Available Endpoint Customizations](#available-endpoint-customizations)
- [Connecting to Local AWS Compatible Solutions](#connecting-to-local-aws-compatible-solutions)
    - [DynamoDB Local](#dynamodb-local)
    - [LocalStack](#localstack)

<!-- /TOC -->

## Getting Started with Custom Endpoints

Custom endpoints can be configured for the Terraform AWS Provider by configuring them directly on the provider, using environment variables, or by using an [AWS shared configuration file](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html).

To configure endpoints on the provider, set the values in the `endpoints` block in the  `provider` declarations, e.g.,

```terraform
provider "aws" {
  # ... potentially other provider configuration ...

  endpoints {
    dynamodb = "http://localhost:4569"
    s3       = "http://localhost:4572"
  }
}
```

Environment variables can be used to set all endpoints to one value, using `AWS_ENDPOINT_URL`.
Individual services can be configured using an environment variable of the form `AWS_ENDPOINT_URL_<SERVICE>`, where `<SERVICE>` is the `serviceID` of the service defined in the AWS SDK for Go v2, with spaces replaced by underscores (`_`) and all uppercase. For example, the environment variable for DynamoDB is `AWS_ENDPOINT_URL_DYNAMODB`.

Shared configuration files can be used to set all endpoints to one value, using the parameter `endpoint_url` in a named profile.
Individual services can be configured using the shared configuration file by creating a [`services` section](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-format-services) and setting the corresponding service identifier.
Service identifiers are the `serviceID` of the service defined in the AWS SDK for Go v2, with spaces replaced by underscores (`_`) and all lowercase. For example, the identifier for DynamoDB is `dynamodb`.

The environment variable `AWS_IGNORE_CONFIGURED_ENDPOINT_URLS` or the shared configuration file parameter `ignore_configure_endpoint_urls` will cause endpoints configured using environment variables or the shared configuration file to be ignored.

Endpoints are evaluated in the following order:

1. Endpoints defined on the provider.
1. Setting the environment variable `AWS_IGNORE_CONFIGURED_ENDPOINT_URLS` or the shared configuration file parameter `ignore_configure_endpoint_urls` ignores custom endpoints.
1. Service-specific endpoints defined using environment variables of the form `AWS_ENDPOINT_URL_<SERVICE>`.
1. Base endpoint defined using the environment variable `AWS_ENDPOINT_URL`.
1. Service-specific endpoints defined in the shared configuration file.
1. Base endpoint defined in the shared configuration file.
1. Default service endpoint.

If multiple, different Terraform AWS Provider configurations are required, see the [Terraform documentation on multiple provider instances](https://www.terraform.io/docs/configuration/providers.html#alias-multiple-provider-instances) for additional information about the `alias` provider configuration and its usage.

## Available Endpoint Customizations

The Terraform AWS Provider allows the following endpoints to be customized.

**Note:** The Provider allows some service endpoints to be customized despite not supporting those services.

**Note:** For backward compatibility, some endpoints can be assigned using multiple service "keys" (_e.g._, `dms`, `databasemigration`, or `databasemigrationservice`). If you use more than one equivalent service key in your configuration, the provider will use the _first_ endpoint value set. For example, in the configuration below we have set the DMS service endpoints using both `dms` and `databasemigration`. The provider will set the endpoint to whichever appears first. Subsequent values are ignored.

```terraform
provider "aws" {
  endpoints {
    dms               = "http://this.value.will.be.used.com"
    databasemigration = "http://this.value.will.be.ignored.com"
  }
}
```

|Service|Provider Parameter|[Environment Variable][envvars]|[Shared Configugration File][config]|
|-------|------------------|-------------------------------|------------------------------------|
|IAM Access Analyzer|`accessanalyzer`|`AWS_ENDPOINT_URL_ACCESSANALYZER`|`accessanalyzer`|
|Account Management|`account`|`AWS_ENDPOINT_URL_ACCOUNT`|`account`|
|ACM (Certificate Manager)|`acm`|`AWS_ENDPOINT_URL_ACM`|`acm`|
|ACM PCA (Certificate Manager Private Certificate Authority)|`acmpca`|`AWS_ENDPOINT_URL_ACM_PCA`|`acm_pca`|
|AMP (Managed Prometheus)|`amp`(or `prometheus` or `prometheusservice`)|`AWS_ENDPOINT_URL_AMP`|`amp`|
|Amplify|`amplify`|`AWS_ENDPOINT_URL_AMPLIFY`|`amplify`|
|API Gateway|`apigateway`|`AWS_ENDPOINT_URL_API_GATEWAY`|`api_gateway`|
|API Gateway V2|`apigatewayv2`|`AWS_ENDPOINT_URL_APIGATEWAYV2`|`apigatewayv2`|
|Application Auto Scaling|`appautoscaling`(or `applicationautoscaling`)|`AWS_ENDPOINT_URL_APPLICATION_AUTO_SCALING`|`application_auto_scaling`|
|AppConfig|`appconfig`|`AWS_ENDPOINT_URL_APPCONFIG`|`appconfig`|
|AppFabric|`appfabric`|`AWS_ENDPOINT_URL_APPFABRIC`|`appfabric`|
|AppFlow|`appflow`|`AWS_ENDPOINT_URL_APPFLOW`|`appflow`|
|AppIntegrations|`appintegrations`(or `appintegrationsservice`)|`AWS_ENDPOINT_URL_APPINTEGRATIONS`|`appintegrations`|
|CloudWatch Application Insights|`applicationinsights`|`AWS_ENDPOINT_URL_APPLICATION_INSIGHTS`|`application_insights`|
|Application Signals|`applicationsignals`|`AWS_ENDPOINT_URL_APPLICATION_SIGNALS`|`application_signals`|
|App Mesh|`appmesh`|`AWS_ENDPOINT_URL_APP_MESH`|`app_mesh`|
|App Runner|`apprunner`|`AWS_ENDPOINT_URL_APPRUNNER`|`apprunner`|
|AppStream 2.0|`appstream`|`AWS_ENDPOINT_URL_APPSTREAM`|`appstream`|
|AppSync|`appsync`|`AWS_ENDPOINT_URL_APPSYNC`|`appsync`|
|Athena|`athena`|`AWS_ENDPOINT_URL_ATHENA`|`athena`|
|Audit Manager|`auditmanager`|`AWS_ENDPOINT_URL_AUDITMANAGER`|`auditmanager`|
|Auto Scaling|`autoscaling`|`AWS_ENDPOINT_URL_AUTO_SCALING`|`auto_scaling`|
|Auto Scaling Plans|`autoscalingplans`|`AWS_ENDPOINT_URL_AUTO_SCALING_PLANS`|`auto_scaling_plans`|
|Backup|`backup`|`AWS_ENDPOINT_URL_BACKUP`|`backup`|
|Batch|`batch`|`AWS_ENDPOINT_URL_BATCH`|`batch`|
|BCM Data Exports|`bcmdataexports`|`AWS_ENDPOINT_URL_BCM_DATA_EXPORTS`|`bcm_data_exports`|
|Bedrock|`bedrock`|`AWS_ENDPOINT_URL_BEDROCK`|`bedrock`|
|Bedrock Agents|`bedrockagent`|`AWS_ENDPOINT_URL_BEDROCK_AGENT`|`bedrock_agent`|
|Billing|`billing`|`AWS_ENDPOINT_URL_BILLING`|`billing`|
|Web Services Budgets|`budgets`|`AWS_ENDPOINT_URL_BUDGETS`|`budgets`|
|CE (Cost Explorer)|`ce`(or `costexplorer`)|`AWS_ENDPOINT_URL_COST_EXPLORER`|`cost_explorer`|
|Chatbot|`chatbot`|`AWS_ENDPOINT_URL_CHATBOT`|`chatbot`|
|Chime|`chime`|`AWS_ENDPOINT_URL_CHIME`|`chime`|
|Chime SDK Media Pipelines|`chimesdkmediapipelines`|`AWS_ENDPOINT_URL_CHIME_SDK_MEDIA_PIPELINES`|`chime_sdk_media_pipelines`|
|Chime SDK Voice|`chimesdkvoice`|`AWS_ENDPOINT_URL_CHIME_SDK_VOICE`|`chime_sdk_voice`|
|Clean Rooms|`cleanrooms`|`AWS_ENDPOINT_URL_CLEANROOMS`|`cleanrooms`|
|Cloud9|`cloud9`|`AWS_ENDPOINT_URL_CLOUD9`|`cloud9`|
|Cloud Control API|`cloudcontrol`(or `cloudcontrolapi`)|`AWS_ENDPOINT_URL_CLOUDCONTROL`|`cloudcontrol`|
|CloudFormation|`cloudformation`|`AWS_ENDPOINT_URL_CLOUDFORMATION`|`cloudformation`|
|CloudFront|`cloudfront`|`AWS_ENDPOINT_URL_CLOUDFRONT`|`cloudfront`|
|CloudFront KeyValueStore|`cloudfrontkeyvaluestore`|`AWS_ENDPOINT_URL_CLOUDFRONT_KEYVALUESTORE`|`cloudfront_keyvaluestore`|
|CloudHSM|`cloudhsmv2`(or `cloudhsm`)|`AWS_ENDPOINT_URL_CLOUDHSM_V2`|`cloudhsm_v2`|
|CloudSearch|`cloudsearch`|`AWS_ENDPOINT_URL_CLOUDSEARCH`|`cloudsearch`|
|CloudTrail|`cloudtrail`|`AWS_ENDPOINT_URL_CLOUDTRAIL`|`cloudtrail`|
|CloudWatch|`cloudwatch`|`AWS_ENDPOINT_URL_CLOUDWATCH`|`cloudwatch`|
|CodeArtifact|`codeartifact`|`AWS_ENDPOINT_URL_CODEARTIFACT`|`codeartifact`|
|CodeBuild|`codebuild`|`AWS_ENDPOINT_URL_CODEBUILD`|`codebuild`|
|CodeCatalyst|`codecatalyst`|`AWS_ENDPOINT_URL_CODECATALYST`|`codecatalyst`|
|CodeCommit|`codecommit`|`AWS_ENDPOINT_URL_CODECOMMIT`|`codecommit`|
|CodeConnections|`codeconnections`|`AWS_ENDPOINT_URL_CODECONNECTIONS`|`codeconnections`|
|CodeGuru Profiler|`codeguruprofiler`|`AWS_ENDPOINT_URL_CODEGURUPROFILER`|`codeguruprofiler`|
|CodeGuru Reviewer|`codegurureviewer`|`AWS_ENDPOINT_URL_CODEGURU_REVIEWER`|`codeguru_reviewer`|
|CodePipeline|`codepipeline`|`AWS_ENDPOINT_URL_CODEPIPELINE`|`codepipeline`|
|CodeStar Connections|`codestarconnections`|`AWS_ENDPOINT_URL_CODESTAR_CONNECTIONS`|`codestar_connections`|
|CodeStar Notifications|`codestarnotifications`|`AWS_ENDPOINT_URL_CODESTAR_NOTIFICATIONS`|`codestar_notifications`|
|Cognito Identity|`cognitoidentity`|`AWS_ENDPOINT_URL_COGNITO_IDENTITY`|`cognito_identity`|
|Cognito IDP (Identity Provider)|`cognitoidp`(or `cognitoidentityprovider`)|`AWS_ENDPOINT_URL_COGNITO_IDENTITY_PROVIDER`|`cognito_identity_provider`|
|Comprehend|`comprehend`|`AWS_ENDPOINT_URL_COMPREHEND`|`comprehend`|
|Compute Optimizer|`computeoptimizer`|`AWS_ENDPOINT_URL_COMPUTE_OPTIMIZER`|`compute_optimizer`|
|Config|`configservice`(or `config`)|`AWS_ENDPOINT_URL_CONFIG_SERVICE`|`config_service`|
|Connect|`connect`|`AWS_ENDPOINT_URL_CONNECT`|`connect`|
|Connect Cases|`connectcases`|`AWS_ENDPOINT_URL_CONNECTCASES`|`connectcases`|
|Control Tower|`controltower`|`AWS_ENDPOINT_URL_CONTROLTOWER`|`controltower`|
|Cost Optimization Hub|`costoptimizationhub`|`AWS_ENDPOINT_URL_COST_OPTIMIZATION_HUB`|`cost_optimization_hub`|
|Cost and Usage Report|`cur`(or `costandusagereportservice`)|`AWS_ENDPOINT_URL_COST_AND_USAGE_REPORT_SERVICE`|`cost_and_usage_report_service`|
|Connect Customer Profiles|`customerprofiles`|`AWS_ENDPOINT_URL_CUSTOMER_PROFILES`|`customer_profiles`|
|Glue DataBrew|`databrew`(or `gluedatabrew`)|`AWS_ENDPOINT_URL_DATABREW`|`databrew`|
|Data Exchange|`dataexchange`|`AWS_ENDPOINT_URL_DATAEXCHANGE`|`dataexchange`|
|Data Pipeline|`datapipeline`|`AWS_ENDPOINT_URL_DATA_PIPELINE`|`data_pipeline`|
|DataSync|`datasync`|`AWS_ENDPOINT_URL_DATASYNC`|`datasync`|
|DataZone|`datazone`|`AWS_ENDPOINT_URL_DATAZONE`|`datazone`|
|DynamoDB Accelerator (DAX)|`dax`|`AWS_ENDPOINT_URL_DAX`|`dax`|
|CodeDeploy|`deploy`(or `codedeploy`)|`AWS_ENDPOINT_URL_CODEDEPLOY`|`codedeploy`|
|Detective|`detective`|`AWS_ENDPOINT_URL_DETECTIVE`|`detective`|
|Device Farm|`devicefarm`|`AWS_ENDPOINT_URL_DEVICE_FARM`|`device_farm`|
|DevOps Guru|`devopsguru`|`AWS_ENDPOINT_URL_DEVOPS_GURU`|`devops_guru`|
|Direct Connect|`directconnect`|`AWS_ENDPOINT_URL_DIRECT_CONNECT`|`direct_connect`|
|DLM (Data Lifecycle Manager)|`dlm`|`AWS_ENDPOINT_URL_DLM`|`dlm`|
|DMS (Database Migration)|`dms`(or `databasemigration` or `databasemigrationservice`)|`AWS_ENDPOINT_URL_DATABASE_MIGRATION_SERVICE`|`database_migration_service`|
|DocumentDB|`docdb`|`AWS_ENDPOINT_URL_DOCDB`|`docdb`|
|DocumentDB Elastic|`docdbelastic`|`AWS_ENDPOINT_URL_DOCDB_ELASTIC`|`docdb_elastic`|
|DRS (Elastic Disaster Recovery)|`drs`|`AWS_ENDPOINT_URL_DRS`|`drs`|
|Directory Service|`ds`(or `directoryservice`)|`AWS_ENDPOINT_URL_DIRECTORY_SERVICE`|`directory_service`|
|DynamoDB|`dynamodb`|`AWS_ENDPOINT_URL_DYNAMODB`|`dynamodb`|
|EC2 (Elastic Compute Cloud)|`ec2`|`AWS_ENDPOINT_URL_EC2`|`ec2`|
|ECR (Elastic Container Registry)|`ecr`|`AWS_ENDPOINT_URL_ECR`|`ecr`|
|ECR Public|`ecrpublic`|`AWS_ENDPOINT_URL_ECR_PUBLIC`|`ecr_public`|
|ECS (Elastic Container)|`ecs`|`AWS_ENDPOINT_URL_ECS`|`ecs`|
|EFS (Elastic File System)|`efs`|`AWS_ENDPOINT_URL_EFS`|`efs`|
|EKS (Elastic Kubernetes)|`eks`|`AWS_ENDPOINT_URL_EKS`|`eks`|
|ElastiCache|`elasticache`|`AWS_ENDPOINT_URL_ELASTICACHE`|`elasticache`|
|Elastic Beanstalk|`elasticbeanstalk`(or `beanstalk`)|`AWS_ENDPOINT_URL_ELASTIC_BEANSTALK`|`elastic_beanstalk`|
|Elasticsearch|`elasticsearch`(or `es` or `elasticsearchservice`)|`AWS_ENDPOINT_URL_ELASTICSEARCH_SERVICE`|`elasticsearch_service`|
|Elastic Transcoder|`elastictranscoder`|`AWS_ENDPOINT_URL_ELASTIC_TRANSCODER`|`elastic_transcoder`|
|ELB Classic|`elb`(or `elasticloadbalancing`)|`AWS_ENDPOINT_URL_ELASTIC_LOAD_BALANCING`|`elastic_load_balancing`|
|ELB (Elastic Load Balancing)|`elbv2`(or `elasticloadbalancingv2`)|`AWS_ENDPOINT_URL_ELASTIC_LOAD_BALANCING_V2`|`elastic_load_balancing_v2`|
|EMR|`emr`|`AWS_ENDPOINT_URL_EMR`|`emr`|
|EMR Containers|`emrcontainers`|`AWS_ENDPOINT_URL_EMR_CONTAINERS`|`emr_containers`|
|EMR Serverless|`emrserverless`|`AWS_ENDPOINT_URL_EMR_SERVERLESS`|`emr_serverless`|
|EventBridge|`events`(or `eventbridge` or `cloudwatchevents`)|`AWS_ENDPOINT_URL_EVENTBRIDGE`|`eventbridge`|
|CloudWatch Evidently|`evidently`(or `cloudwatchevidently`)|`AWS_ENDPOINT_URL_EVIDENTLY`|`evidently`|
|FinSpace|`finspace`|`AWS_ENDPOINT_URL_FINSPACE`|`finspace`|
|Kinesis Firehose|`firehose`|`AWS_ENDPOINT_URL_FIREHOSE`|`firehose`|
|FIS (Fault Injection Simulator)|`fis`|`AWS_ENDPOINT_URL_FIS`|`fis`|
|FMS (Firewall Manager)|`fms`|`AWS_ENDPOINT_URL_FMS`|`fms`|
|FSx|`fsx`|`AWS_ENDPOINT_URL_FSX`|`fsx`|
|GameLift|`gamelift`|`AWS_ENDPOINT_URL_GAMELIFT`|`gamelift`|
|S3 Glacier|`glacier`|`AWS_ENDPOINT_URL_GLACIER`|`glacier`|
|Global Accelerator|`globalaccelerator`|`AWS_ENDPOINT_URL_GLOBAL_ACCELERATOR`|`global_accelerator`|
|Glue|`glue`|`AWS_ENDPOINT_URL_GLUE`|`glue`|
|Managed Grafana|`grafana`(or `managedgrafana` or `amg`)|`AWS_ENDPOINT_URL_GRAFANA`|`grafana`|
|IoT Greengrass|`greengrass`|`AWS_ENDPOINT_URL_GREENGRASS`|`greengrass`|
|Ground Station|`groundstation`|`AWS_ENDPOINT_URL_GROUNDSTATION`|`groundstation`|
|GuardDuty|`guardduty`|`AWS_ENDPOINT_URL_GUARDDUTY`|`guardduty`|
|HealthLake|`healthlake`|`AWS_ENDPOINT_URL_HEALTHLAKE`|`healthlake`|
|IAM (Identity & Access Management)|`iam`|`AWS_ENDPOINT_URL_IAM`|`iam`|
|SSO Identity Store|`identitystore`|`AWS_ENDPOINT_URL_IDENTITYSTORE`|`identitystore`|
|EC2 Image Builder|`imagebuilder`|`AWS_ENDPOINT_URL_IMAGEBUILDER`|`imagebuilder`|
|Inspector Classic|`inspector`|`AWS_ENDPOINT_URL_INSPECTOR`|`inspector`|
|Inspector|`inspector2`(or `inspectorv2`)|`AWS_ENDPOINT_URL_INSPECTOR2`|`inspector2`|
|CloudWatch Internet Monitor|`internetmonitor`|`AWS_ENDPOINT_URL_INTERNETMONITOR`|`internetmonitor`|
|Invoicing|`invoicing`|`AWS_ENDPOINT_URL_INVOICING`|`invoicing`|
|IoT Core|`iot`|`AWS_ENDPOINT_URL_IOT`|`iot`|
|IoT Analytics|`iotanalytics`|`AWS_ENDPOINT_URL_IOTANALYTICS`|`iotanalytics`|
|IoT Events|`iotevents`|`AWS_ENDPOINT_URL_IOT_EVENTS`|`iot_events`|
|IVS (Interactive Video)|`ivs`|`AWS_ENDPOINT_URL_IVS`|`ivs`|
|IVS (Interactive Video) Chat|`ivschat`|`AWS_ENDPOINT_URL_IVSCHAT`|`ivschat`|
|Managed Streaming for Kafka|`kafka`(or `msk`)|`AWS_ENDPOINT_URL_KAFKA`|`kafka`|
|Managed Streaming for Kafka Connect|`kafkaconnect`|`AWS_ENDPOINT_URL_KAFKACONNECT`|`kafkaconnect`|
|Kendra|`kendra`|`AWS_ENDPOINT_URL_KENDRA`|`kendra`|
|Keyspaces (for Apache Cassandra)|`keyspaces`|`AWS_ENDPOINT_URL_KEYSPACES`|`keyspaces`|
|Kinesis|`kinesis`|`AWS_ENDPOINT_URL_KINESIS`|`kinesis`|
|Kinesis Analytics|`kinesisanalytics`|`AWS_ENDPOINT_URL_KINESIS_ANALYTICS`|`kinesis_analytics`|
|Kinesis Analytics V2|`kinesisanalyticsv2`|`AWS_ENDPOINT_URL_KINESIS_ANALYTICS_V2`|`kinesis_analytics_v2`|
|Kinesis Video|`kinesisvideo`|`AWS_ENDPOINT_URL_KINESIS_VIDEO`|`kinesis_video`|
|KMS (Key Management)|`kms`|`AWS_ENDPOINT_URL_KMS`|`kms`|
|Lake Formation|`lakeformation`|`AWS_ENDPOINT_URL_LAKEFORMATION`|`lakeformation`|
|Lambda|`lambda`|`AWS_ENDPOINT_URL_LAMBDA`|`lambda`|
|Launch Wizard|`launchwizard`|`AWS_ENDPOINT_URL_LAUNCH_WIZARD`|`launch_wizard`|
|Lex Model Building|`lexmodels`(or `lexmodelbuilding` or `lexmodelbuildingservice` or `lex`)|`AWS_ENDPOINT_URL_LEX_MODEL_BUILDING_SERVICE`|`lex_model_building_service`|
|Lex V2 Models|`lexv2models`(or `lexmodelsv2`)|`AWS_ENDPOINT_URL_LEX_MODELS_V2`|`lex_models_v2`|
|License Manager|`licensemanager`|`AWS_ENDPOINT_URL_LICENSE_MANAGER`|`license_manager`|
|Lightsail|`lightsail`|`AWS_ENDPOINT_URL_LIGHTSAIL`|`lightsail`|
|Location|`location`(or `locationservice`)|`AWS_ENDPOINT_URL_LOCATION`|`location`|
|CloudWatch Logs|`logs`(or `cloudwatchlog` or `cloudwatchlogs`)|`AWS_ENDPOINT_URL_CLOUDWATCH_LOGS`|`cloudwatch_logs`|
|Lookout for Metrics|`lookoutmetrics`|`AWS_ENDPOINT_URL_LOOKOUTMETRICS`|`lookoutmetrics`|
|Mainframe Modernization|`m2`|`AWS_ENDPOINT_URL_M2`|`m2`|
|Macie|`macie2`|`AWS_ENDPOINT_URL_MACIE2`|`macie2`|
|Elemental MediaConnect|`mediaconnect`|`AWS_ENDPOINT_URL_MEDIACONNECT`|`mediaconnect`|
|Elemental MediaConvert|`mediaconvert`|`AWS_ENDPOINT_URL_MEDIACONVERT`|`mediaconvert`|
|Elemental MediaLive|`medialive`|`AWS_ENDPOINT_URL_MEDIALIVE`|`medialive`|
|Elemental MediaPackage|`mediapackage`|`AWS_ENDPOINT_URL_MEDIAPACKAGE`|`mediapackage`|
|Elemental MediaPackage Version 2|`mediapackagev2`|`AWS_ENDPOINT_URL_MEDIAPACKAGEV2`|`mediapackagev2`|
|Elemental MediaStore|`mediastore`|`AWS_ENDPOINT_URL_MEDIASTORE`|`mediastore`|
|MemoryDB|`memorydb`|`AWS_ENDPOINT_URL_MEMORYDB`|`memorydb`|
|Application Migration (Mgn)|`mgn`|`AWS_ENDPOINT_URL_MGN`|`mgn`|
|MQ|`mq`|`AWS_ENDPOINT_URL_MQ`|`mq`|
|MWAA (Managed Workflows for Apache Airflow)|`mwaa`|`AWS_ENDPOINT_URL_MWAA`|`mwaa`|
|Neptune|`neptune`|`AWS_ENDPOINT_URL_NEPTUNE`|`neptune`|
|Neptune Analytics|`neptunegraph`|`AWS_ENDPOINT_URL_NEPTUNE_GRAPH`|`neptune_graph`|
|Network Firewall|`networkfirewall`|`AWS_ENDPOINT_URL_NETWORK_FIREWALL`|`network_firewall`|
|Network Manager|`networkmanager`|`AWS_ENDPOINT_URL_NETWORKMANAGER`|`networkmanager`|
|CloudWatch Network Monitor|`networkmonitor`|`AWS_ENDPOINT_URL_NETWORKMONITOR`|`networkmonitor`|
|CloudWatch Observability Access Manager|`oam`(or `cloudwatchobservabilityaccessmanager`)|`AWS_ENDPOINT_URL_OAM`|`oam`|
|OpenSearch|`opensearch`(or `opensearchservice`)|`AWS_ENDPOINT_URL_OPENSEARCH`|`opensearch`|
|OpenSearch Serverless|`opensearchserverless`|`AWS_ENDPOINT_URL_OPENSEARCHSERVERLESS`|`opensearchserverless`|
|OpsWorks|`opsworks`|`AWS_ENDPOINT_URL_OPSWORKS`|`opsworks`|
|Organizations|`organizations`|`AWS_ENDPOINT_URL_ORGANIZATIONS`|`organizations`|
|OpenSearch Ingestion|`osis`(or `opensearchingestion`)|`AWS_ENDPOINT_URL_OSIS`|`osis`|
|Outposts|`outposts`|`AWS_ENDPOINT_URL_OUTPOSTS`|`outposts`|
|Payment Cryptography Control Plane|`paymentcryptography`|`AWS_ENDPOINT_URL_PAYMENTCRYPTOGRAPHY`|`paymentcryptography`|
|Private CA Connector for Active Directory|`pcaconnectorad`|`AWS_ENDPOINT_URL_PCA_CONNECTOR_AD`|`pca_connector_ad`|
|Parallel Computing Service|`pcs`|`AWS_ENDPOINT_URL_PCS`|`pcs`|
|Pinpoint|`pinpoint`|`AWS_ENDPOINT_URL_PINPOINT`|`pinpoint`|
|End User Messaging SMS|`pinpointsmsvoicev2`|`AWS_ENDPOINT_URL_PINPOINT_SMS_VOICE_V2`|`pinpoint_sms_voice_v2`|
|EventBridge Pipes|`pipes`|`AWS_ENDPOINT_URL_PIPES`|`pipes`|
|Polly|`polly`|`AWS_ENDPOINT_URL_POLLY`|`polly`|
|Pricing Calculator|`pricing`|`AWS_ENDPOINT_URL_PRICING`|`pricing`|
|Amazon Q Business|`qbusiness`|`AWS_ENDPOINT_URL_QBUSINESS`|`qbusiness`|
|QLDB (Quantum Ledger Database)|`qldb`|`AWS_ENDPOINT_URL_QLDB`|`qldb`|
|QuickSight|`quicksight`|`AWS_ENDPOINT_URL_QUICKSIGHT`|`quicksight`|
|RAM (Resource Access Manager)|`ram`|`AWS_ENDPOINT_URL_RAM`|`ram`|
|Recycle Bin (RBin)|`rbin`(or `recyclebin`)|`AWS_ENDPOINT_URL_RBIN`|`rbin`|
|RDS (Relational Database)|`rds`|`AWS_ENDPOINT_URL_RDS`|`rds`|
|Redshift|`redshift`|`AWS_ENDPOINT_URL_REDSHIFT`|`redshift`|
|Redshift Data|`redshiftdata`(or `redshiftdataapiservice`)|`AWS_ENDPOINT_URL_REDSHIFT_DATA`|`redshift_data`|
|Redshift Serverless|`redshiftserverless`|`AWS_ENDPOINT_URL_REDSHIFT_SERVERLESS`|`redshift_serverless`|
|Rekognition|`rekognition`|`AWS_ENDPOINT_URL_REKOGNITION`|`rekognition`|
|Resilience Hub|`resiliencehub`|`AWS_ENDPOINT_URL_RESILIENCEHUB`|`resiliencehub`|
|Resource Explorer|`resourceexplorer2`|`AWS_ENDPOINT_URL_RESOURCE_EXPLORER_2`|`resource_explorer_2`|
|Resource Groups|`resourcegroups`|`AWS_ENDPOINT_URL_RESOURCE_GROUPS`|`resource_groups`|
|Resource Groups Tagging|`resourcegroupstaggingapi`(or `resourcegroupstagging`)|`AWS_ENDPOINT_URL_RESOURCE_GROUPS_TAGGING_API`|`resource_groups_tagging_api`|
|Roles Anywhere|`rolesanywhere`|`AWS_ENDPOINT_URL_ROLESANYWHERE`|`rolesanywhere`|
|Route 53|`route53`|`AWS_ENDPOINT_URL_ROUTE_53`|`route_53`|
|Route 53 Domains|`route53domains`|`AWS_ENDPOINT_URL_ROUTE_53_DOMAINS`|`route_53_domains`|
|Route 53 Profiles|`route53profiles`|`AWS_ENDPOINT_URL_ROUTE_53_PROFILES`|`route_53_profiles`|
|Route 53 Recovery Control Config|`route53recoverycontrolconfig`|`AWS_ENDPOINT_URL_ROUTE53_RECOVERY_CONTROL_CONFIG`|`route53_recovery_control_config`|
|Route 53 Recovery Readiness|`route53recoveryreadiness`|`AWS_ENDPOINT_URL_ROUTE53_RECOVERY_READINESS`|`route53_recovery_readiness`|
|Route 53 Resolver|`route53resolver`|`AWS_ENDPOINT_URL_ROUTE53RESOLVER`|`route53resolver`|
|CloudWatch RUM|`rum`(or `cloudwatchrum`)|`AWS_ENDPOINT_URL_RUM`|`rum`|
|S3 (Simple Storage)|`s3`(or `s3api`)|`AWS_ENDPOINT_URL_S3`|`s3`|
|S3 Control|`s3control`|`AWS_ENDPOINT_URL_S3_CONTROL`|`s3_control`|
|S3 on Outposts|`s3outposts`|`AWS_ENDPOINT_URL_S3OUTPOSTS`|`s3outposts`|
|S3 Tables|`s3tables`|`AWS_ENDPOINT_URL_S3TABLES`|`s3tables`|
|SageMaker|`sagemaker`|`AWS_ENDPOINT_URL_SAGEMAKER`|`sagemaker`|
|EventBridge Scheduler|`scheduler`|`AWS_ENDPOINT_URL_SCHEDULER`|`scheduler`|
|EventBridge Schemas|`schemas`|`AWS_ENDPOINT_URL_SCHEMAS`|`schemas`|
|Secrets Manager|`secretsmanager`|`AWS_ENDPOINT_URL_SECRETS_MANAGER`|`secrets_manager`|
|Security Hub|`securityhub`|`AWS_ENDPOINT_URL_SECURITYHUB`|`securityhub`|
|Security Lake|`securitylake`|`AWS_ENDPOINT_URL_SECURITYLAKE`|`securitylake`|
|Serverless Application Repository|`serverlessrepo`(or `serverlessapprepo` or `serverlessapplicationrepository`)|`AWS_ENDPOINT_URL_SERVERLESSAPPLICATIONREPOSITORY`|`serverlessapplicationrepository`|
|Service Catalog|`servicecatalog`|`AWS_ENDPOINT_URL_SERVICE_CATALOG`|`service_catalog`|
|Service Catalog AppRegistry|`servicecatalogappregistry`(or `appregistry`)|`AWS_ENDPOINT_URL_SERVICE_CATALOG_APPREGISTRY`|`service_catalog_appregistry`|
|Cloud Map|`servicediscovery`|`AWS_ENDPOINT_URL_SERVICEDISCOVERY`|`servicediscovery`|
|Service Quotas|`servicequotas`|`AWS_ENDPOINT_URL_SERVICE_QUOTAS`|`service_quotas`|
|SES (Simple Email)|`ses`|`AWS_ENDPOINT_URL_SES`|`ses`|
|SESv2 (Simple Email V2)|`sesv2`|`AWS_ENDPOINT_URL_SESV2`|`sesv2`|
|SFN (Step Functions)|`sfn`(or `stepfunctions`)|`AWS_ENDPOINT_URL_SFN`|`sfn`|
|Shield|`shield`|`AWS_ENDPOINT_URL_SHIELD`|`shield`|
|Signer|`signer`|`AWS_ENDPOINT_URL_SIGNER`|`signer`|
|SDB (SimpleDB)|`simpledb`(or `sdb`)|`AWS_ENDPOINT_URL_SIMPLEDB`|`simpledb`|
|SNS (Simple Notification)|`sns`|`AWS_ENDPOINT_URL_SNS`|`sns`|
|SQS (Simple Queue)|`sqs`|`AWS_ENDPOINT_URL_SQS`|`sqs`|
|SSM (Systems Manager)|`ssm`|`AWS_ENDPOINT_URL_SSM`|`ssm`|
|SSM Contacts|`ssmcontacts`|`AWS_ENDPOINT_URL_SSM_CONTACTS`|`ssm_contacts`|
|SSM Incident Manager Incidents|`ssmincidents`|`AWS_ENDPOINT_URL_SSM_INCIDENTS`|`ssm_incidents`|
|SSM Quick Setup|`ssmquicksetup`|`AWS_ENDPOINT_URL_SSM_QUICKSETUP`|`ssm_quicksetup`|
|Systems Manager for SAP|`ssmsap`|`AWS_ENDPOINT_URL_SSM_SAP`|`ssm_sap`|
|SSO (Single Sign-On)|`sso`|`AWS_ENDPOINT_URL_SSO`|`sso`|
|SSO Admin|`ssoadmin`|`AWS_ENDPOINT_URL_SSO_ADMIN`|`sso_admin`|
|Storage Gateway|`storagegateway`|`AWS_ENDPOINT_URL_STORAGE_GATEWAY`|`storage_gateway`|
|STS (Security Token)|`sts`|`AWS_ENDPOINT_URL_STS`|`sts`|
|SWF (Simple Workflow)|`swf`|`AWS_ENDPOINT_URL_SWF`|`swf`|
|CloudWatch Synthetics|`synthetics`|`AWS_ENDPOINT_URL_SYNTHETICS`|`synthetics`|
|Tax Settings|`taxsettings`|`AWS_ENDPOINT_URL_TAXSETTINGS`|`taxsettings`|
|Timestream for InfluxDB|`timestreaminfluxdb`|`AWS_ENDPOINT_URL_TIMESTREAM_INFLUXDB`|`timestream_influxdb`|
|Timestream Query|`timestreamquery`|`AWS_ENDPOINT_URL_TIMESTREAM_QUERY`|`timestream_query`|
|Timestream Write|`timestreamwrite`|`AWS_ENDPOINT_URL_TIMESTREAM_WRITE`|`timestream_write`|
|Transcribe|`transcribe`(or `transcribeservice`)|`AWS_ENDPOINT_URL_TRANSCRIBE`|`transcribe`|
|Transfer Family|`transfer`|`AWS_ENDPOINT_URL_TRANSFER`|`transfer`|
|Verified Permissions|`verifiedpermissions`|`AWS_ENDPOINT_URL_VERIFIEDPERMISSIONS`|`verifiedpermissions`|
|VPC Lattice|`vpclattice`|`AWS_ENDPOINT_URL_VPC_LATTICE`|`vpc_lattice`|
|WAF Classic|`waf`|`AWS_ENDPOINT_URL_WAF`|`waf`|
|WAF Classic Regional|`wafregional`|`AWS_ENDPOINT_URL_WAF_REGIONAL`|`waf_regional`|
|WAF|`wafv2`|`AWS_ENDPOINT_URL_WAFV2`|`wafv2`|
|Well-Architected Tool|`wellarchitected`|`AWS_ENDPOINT_URL_WELLARCHITECTED`|`wellarchitected`|
|WorkLink|`worklink`|`AWS_ENDPOINT_URL_WORKLINK`|`worklink`|
|WorkSpaces|`workspaces`|`AWS_ENDPOINT_URL_WORKSPACES`|`workspaces`|
|WorkSpaces Web|`workspacesweb`|`AWS_ENDPOINT_URL_WORKSPACES_WEB`|`workspaces_web`|
|X-Ray|`xray`|`AWS_ENDPOINT_URL_XRAY`|`xray`|

[envvars]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
[config]: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html#cli-configure-files-settings

As a convenience, for compatibility with the [Terraform S3 Backend](https://www.terraform.io/language/settings/backends/s3),
the following service endpoints can also be configured using the **deprecated** environment variables:

* DynamoDB: `TF_AWS_DYNAMODB_ENDPOINT` or `AWS_DYNAMODB_ENDPOINT`
* IAM (Identity & Access Management): `TF_AWS_IAM_ENDPOINT` or `AWS_IAM_ENDPOINT`
* S3 (Simple Storage): `TF_AWS_S3_ENDPOINT` or `AWS_S3_ENDPOINT`
* STS (Security Token): `TF_AWS_STS_ENDPOINT` or `AWS_STS_ENDPOINT`

## Connecting to Local AWS Compatible Solutions

~> **NOTE:** This information is not intended to be exhaustive for all local AWS compatible solutions or necessarily authoritative configurations for those documented. Check the documentation for each of these solutions for the most up to date information.

### DynamoDB Local

The Amazon DynamoDB service offers a downloadable version for writing and testing applications without accessing the DynamoDB web service. For more information about this solution, see the [DynamoDB Local documentation in the Amazon DynamoDB Developer Guide](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html).

An example provider configuration:

```terraform
provider "aws" {
  access_key                  = "mock_access_key"
  region                      = "us-east-1"
  secret_key                  = "mock_secret_key"
  skip_credentials_validation = true
  skip_metadata_api_check     = true
  skip_requesting_account_id  = true

  endpoints {
    dynamodb = "http://localhost:8000"
  }
}
```

### LocalStack

[LocalStack](https://localstack.cloud/) provides an easy-to-use test/mocking framework for developing Cloud applications.

An example provider configuration:

```terraform
provider "aws" {
  access_key                  = "mock_access_key"
  region                      = "us-east-1"
  s3_use_path_style           = true
  secret_key                  = "mock_secret_key"
  skip_credentials_validation = true
  skip_metadata_api_check     = true
  skip_requesting_account_id  = true

  endpoints {
    apigateway     = "http://localhost:4566"
    cloudformation = "http://localhost:4566"
    cloudwatch     = "http://localhost:4566"
    dynamodb       = "http://localhost:4566"
    es             = "http://localhost:4566"
    firehose       = "http://localhost:4566"
    iam            = "http://localhost:4566"
    kinesis        = "http://localhost:4566"
    lambda         = "http://localhost:4566"
    route53        = "http://localhost:4566"
    redshift       = "http://localhost:4566"
    s3             = "http://localhost:4566"
    secretsmanager = "http://localhost:4566"
    ses            = "http://localhost:4566"
    sns            = "http://localhost:4566"
    sqs            = "http://localhost:4566"
    ssm            = "http://localhost:4566"
    stepfunctions  = "http://localhost:4566"
    sts            = "http://localhost:4566"
  }
}
```
