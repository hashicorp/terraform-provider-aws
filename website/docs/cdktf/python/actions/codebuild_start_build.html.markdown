---
subcategory: "CodeBuild"
layout: "aws"
page_title: "AWS: aws_codebuild_start_build"
description: |-
  Starts a CodeBuild project build.
---


<!-- Please do not edit this file, it is generated. -->
# Action: aws_codebuild_start_build

~> **Note:** `aws_codebuild_start_build` is in beta. Its interface and behavior may change as the feature evolves, and breaking changes are possible. It is offered as a technical preview without compatibility guarantees until Terraform 1.14 is generally available.

Starts a CodeBuild project build. This action will initiate a build and wait for it to complete, providing progress updates during execution.

For information about AWS CodeBuild, see the [AWS CodeBuild User Guide](https://docs.aws.amazon.com/codebuild/latest/userguide/). For specific information about starting builds, see the [StartBuild](https://docs.aws.amazon.com/codebuild/latest/APIReference/API_StartBuild.html) page in the AWS CodeBuild API Reference.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from cdktf import TerraformResourceLifecycle
from constructs import Construct
from cdktf import Token, DataResource, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codebuild_project import CodebuildProject
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodebuildProject(self, "example",
            artifacts=CodebuildProjectArtifacts(
                type="NO_ARTIFACTS"
            ),
            environment=CodebuildProjectEnvironment(
                compute_type="BUILD_GENERAL1_SMALL",
                image="aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                type="LINUX_CONTAINER"
            ),
            name="example-project",
            service_role=Token.as_string(aws_iam_role_example.arn),
            source=CodebuildProjectSource(
                buildspec="version: 0.2\nphases:\n  build:\n    commands:\n      - echo 'Hello World'\n",
                type="NO_SOURCE"
            )
        )
        DataResource(self, "build_trigger",
            input="trigger-build",
            lifecycle=TerraformResourceLifecycle(
                action_trigger=[{
                    "actions": [aws_codebuild_start_build.example],
                    "events": [after_create]
                }
                ]
            )
        )
```

### Build with Environment Variables

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
```

## Argument Reference

The following arguments are required:

* `project_name` - (Required) Name of the CodeBuild project to build.

The following arguments are optional:

* `source_version` - (Optional) Version of the build input to be built. For GitHub, this can be a commit SHA, branch name, or tag name.
* `timeout` - (Optional) Timeout in seconds for the build operation. Defaults to 1800 seconds (30 minutes).
* `environment_variables_override` - (Optional) Environment variables to override for this build. See [Environment Variables Override](#environment-variables-override) below.

### Environment Variables Override

* `name` - (Required) Environment variable name.
* `value` - (Required) Environment variable value.
* `type` - (Optional) Environment variable type. Valid values are `PLAINTEXT`, `PARAMETER_STORE`, or `SECRETS_MANAGER`. Defaults to `PLAINTEXT`.

<!-- cache-key: cdktf-0.20.8 input-2e2b95c74f53bc3ba04dd81a3e762f7d1a0e989b36d5054777ae50d5aec3b8b9 -->