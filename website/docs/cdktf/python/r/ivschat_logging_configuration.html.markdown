---
subcategory: "IVS (Interactive Video) Chat"
layout: "aws"
page_title: "AWS: aws_ivschat_logging_configuration"
description: |-
  Terraform resource for managing an AWS IVS (Interactive Video) Chat Logging Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ivschat_logging_configuration

Terraform resource for managing an AWS IVS (Interactive Video) Chat Logging Configuration.

## Example Usage

### Basic Usage - Logging to CloudWatch

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_group import CloudwatchLogGroup
from imports.aws.ivschat_logging_configuration import IvschatLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CloudwatchLogGroup(self, "example")
        aws_ivschat_logging_configuration_example =
        IvschatLoggingConfiguration(self, "example_1",
            destination_configuration=IvschatLoggingConfigurationDestinationConfiguration(
                cloudwatch_logs=IvschatLoggingConfigurationDestinationConfigurationCloudwatchLogs(
                    log_group_name=example.name
                )
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ivschat_logging_configuration_example.override_logical_id("example")
```

### Basic Usage - Logging to Kinesis Firehose with Extended S3

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.iam_role import IamRole
from imports.aws.ivschat_logging_configuration import IvschatLoggingConfiguration
from imports.aws.kinesis_firehose_delivery_stream import KinesisFirehoseDeliveryStream
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_bucket_acl import S3BucketAcl
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket_prefix="tf-ivschat-logging-bucket"
        )
        aws_s3_bucket_acl_example = S3BucketAcl(self, "example_1",
            acl="private",
            bucket=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_s3_bucket_acl_example.override_logical_id("example")
        assume_role = DataAwsIamPolicyDocument(self, "assume_role",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["firehose.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        aws_iam_role_example = IamRole(self, "example_3",
            assume_role_policy=Token.as_string(assume_role.json),
            name="firehose_example_role"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_example.override_logical_id("example")
        aws_kinesis_firehose_delivery_stream_example =
        KinesisFirehoseDeliveryStream(self, "example_4",
            destination="extended_s3",
            extended_s3_configuration=KinesisFirehoseDeliveryStreamExtendedS3Configuration(
                bucket_arn=example.arn,
                role_arn=Token.as_string(aws_iam_role_example.arn)
            ),
            name="terraform-kinesis-firehose-extended-s3-example-stream",
            tags={
                "LogDeliveryEnabled": "true"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_kinesis_firehose_delivery_stream_example.override_logical_id("example")
        aws_ivschat_logging_configuration_example =
        IvschatLoggingConfiguration(self, "example_5",
            destination_configuration=IvschatLoggingConfigurationDestinationConfiguration(
                firehose=IvschatLoggingConfigurationDestinationConfigurationFirehose(
                    delivery_stream_name=Token.as_string(aws_kinesis_firehose_delivery_stream_example.name)
                )
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ivschat_logging_configuration_example.override_logical_id("example")
```

### Basic Usage - Logging to S3

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ivschat_logging_configuration import IvschatLoggingConfiguration
from imports.aws.s3_bucket import S3Bucket
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket_name="tf-ivschat-logging",
            force_destroy=True
        )
        aws_ivschat_logging_configuration_example =
        IvschatLoggingConfiguration(self, "example_1",
            destination_configuration=IvschatLoggingConfigurationDestinationConfiguration(
                s3=IvschatLoggingConfigurationDestinationConfigurationS3(
                    bucket_name=example.id
                )
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ivschat_logging_configuration_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `destination_configuration` - (Required) Object containing destination configuration for where chat activity will be logged. This object must contain exactly one of the following children arguments:
    * `cloudwatch_logs` - An Amazon CloudWatch Logs destination configuration where chat activity will be logged.
        * `log_group_name` - Name of the Amazon Cloudwatch Logs destination where chat activity will be logged.
    * `firehose` - An Amazon Kinesis Data Firehose destination configuration where chat activity will be logged.
        * `delivery_stream_name` - Name of the Amazon Kinesis Firehose delivery stream where chat activity will be logged.
    * `s3` - An Amazon S3 destination configuration where chat activity will be logged.
        * `bucket_name` - Name of the Amazon S3 bucket where chat activity will be logged.

The following arguments are optional:

* `name` - (Optional) Logging Configuration name.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Logging Configuration.
* `id` - ID of the Logging Configuration.
* `state` - State of the Logging Configuration.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IVS (Interactive Video) Chat Logging Configuration using the ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ivschat_logging_configuration import IvschatLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IvschatLoggingConfiguration.generate_config_for_import(self, "example", "arn:aws:ivschat:us-west-2:326937407773:logging-configuration/MMUQc8wcqZmC")
```

Using `terraform import`, import IVS (Interactive Video) Chat Logging Configuration using the ARN. For example:

```console
% terraform import aws_ivschat_logging_configuration.example arn:aws:ivschat:us-west-2:326937407773:logging-configuration/MMUQc8wcqZmC
```

<!-- cache-key: cdktf-0.20.8 input-bba8a6a4c3ad40b83127a5d0756507ed6f522126fec6a06bdf49e17484976b8d -->