---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_protection_group"
description: |-
  Creates a grouping of protected resources so they can be handled as a collective.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_protection_group

Creates a grouping of protected resources so they can be handled as a collective.
This resource grouping improves the accuracy of detection and reduces false positives. For more information see
[Managing AWS Shield Advanced protection groups](https://docs.aws.amazon.com/waf/latest/developerguide/manage-protection-group.html)

## Example Usage

### Create protection group for all resources

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.shield_protection_group import ShieldProtectionGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ShieldProtectionGroup(self, "example",
            aggregation="MAX",
            pattern="ALL",
            protection_group_id="example"
        )
```

### Create protection group for arbitrary number of resources

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.eip import Eip
from imports.aws.shield_protection import ShieldProtection
from imports.aws.shield_protection_group import ShieldProtectionGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Eip(self, "example",
            domain="vpc"
        )
        current = DataAwsCallerIdentity(self, "current")
        data_aws_region_current = DataAwsRegion(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        aws_shield_protection_example = ShieldProtection(self, "example_3",
            name="example",
            resource_arn="arn:aws:ec2:${" + data_aws_region_current.name + "}:${" + current.account_id + "}:eip-allocation/${" + example.id + "}"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_shield_protection_example.override_logical_id("example")
        aws_shield_protection_group_example = ShieldProtectionGroup(self, "example_4",
            aggregation="MEAN",
            depends_on=[aws_shield_protection_example],
            members=["arn:aws:ec2:${" + data_aws_region_current.name + "}:${" + current.account_id + "}:eip-allocation/${" + example.id + "}"
            ],
            pattern="ARBITRARY",
            protection_group_id="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_shield_protection_group_example.override_logical_id("example")
```

### Create protection group for a type of resource

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.shield_protection_group import ShieldProtectionGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ShieldProtectionGroup(self, "example",
            aggregation="SUM",
            pattern="BY_RESOURCE_TYPE",
            protection_group_id="example",
            resource_type="ELASTIC_IP_ALLOCATION"
        )
```

## Argument Reference

This resource supports the following arguments:

* `aggregation` - (Required) Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
* `members` - (Optional) The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
* `pattern` - (Required) The criteria to use to choose the protected resources for inclusion in the group.
* `protection_group_id` - (Required) The name of the protection group.
* `resource_type` - (Optional) The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `protection_group_arn` - The ARN (Amazon Resource Name) of the protection group.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield protection group resources using their protection group id. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.shield_protection_group import ShieldProtectionGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ShieldProtectionGroup.generate_config_for_import(self, "example", "example")
```

Using `terraform import`, import Shield protection group resources using their protection group id. For example:

```console
% terraform import aws_shield_protection_group.example example
```

<!-- cache-key: cdktf-0.20.8 input-9103f77296ecb9a47e4f678129df33c848d457b7cd5625270622bbbb051fbbf4 -->