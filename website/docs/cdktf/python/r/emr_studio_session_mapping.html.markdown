---
subcategory: "EMR"
layout: "aws"
page_title: "AWS: aws_emr_studio_session_mapping"
description: |-
  Provides an Elastic MapReduce Studio
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_emr_studio_session_mapping

Provides an Elastic MapReduce Studio Session Mapping.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.emr_studio_session_mapping import EmrStudioSessionMapping
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EmrStudioSessionMapping(self, "example",
            identity_id="example",
            identity_type="USER",
            session_policy_arn=Token.as_string(aws_iam_policy_example.arn),
            studio_id=Token.as_string(aws_emr_studio_example.id)
        )
```

## Argument Reference

The following arguments are required:

* `identity_id`- (Optional) The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
* `identity_name` - (Optional) The name of the user or group from the Amazon Web Services SSO Identity Store.
* `identity_type` - (Required) Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
* `session_policy_arn` - (Required) The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
* `studio_id` - (Required) The ID of the Amazon EMR Studio to which the user or group will be mapped.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id`- The id of the Elastic MapReduce Studio Session Mapping.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EMR studio session mappings using `studio-id:identity-type:identity-id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.emr_studio_session_mapping import EmrStudioSessionMapping
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EmrStudioSessionMapping.generate_config_for_import(self, "example", "es-xxxxx:USER:xxxxx-xxx-xxx")
```

Using `terraform import`, import EMR studio session mappings using `studio-id:identity-type:identity-id`. For example:

```console
% terraform import aws_emr_studio_session_mapping.example es-xxxxx:USER:xxxxx-xxx-xxx
```

<!-- cache-key: cdktf-0.20.8 input-6be21ee08f5326f461796bd38e16a942ea254529c5e303950bf2b3a3f049afa4 -->