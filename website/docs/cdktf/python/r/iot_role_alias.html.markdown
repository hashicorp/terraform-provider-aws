---
subcategory: "IoT Core"
layout: "aws"
page_title: "AWS: aws_iot_role_alias"
description: |-
  Provides an IoT role alias.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iot_role_alias

Provides an IoT role alias.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.iam_role import IamRole
from imports.aws.iot_role_alias import IotRoleAlias
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        assume_role = DataAwsIamPolicyDocument(self, "assume_role",
            actions=["sts:AssumeRole"],
            effect="Allow",
            principals=[{
                "identifiers": ["credentials.iot.amazonaws.com"],
                "type": "Service"
            }
            ]
        )
        role = IamRole(self, "role",
            assume_role_policy=Token.as_string(assume_role.json),
            name="dynamodb-access-role"
        )
        IotRoleAlias(self, "alias",
            alias="Thermostat-dynamodb-access-role-alias",
            role_arn=role.arn
        )
```

## Argument Reference

This resource supports the following arguments:

* `alias` - (Required) The name of the role alias.
* `role_arn` - (Required) The identity of the role to which the alias refers.
* `credential_duration` - (Optional) The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 43200 seconds (12 hours).
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN assigned by AWS to this role alias.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IOT Role Alias using the alias. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iot_role_alias import IotRoleAlias
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IotRoleAlias.generate_config_for_import(self, "example", "myalias")
```

Using `terraform import`, import IOT Role Alias using the alias. For example:

```console
% terraform import aws_iot_role_alias.example myalias
```

<!-- cache-key: cdktf-0.20.1 input-79b16d71cecab088857010b51ec1786635bbbcb20eff1c7a4d6e9c32e1b3bec5 -->