---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_ip_access_settings"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web IP Access Settings.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_ip_access_settings

Terraform resource for managing an AWS WorkSpaces Web IP Access Settings resource. Once associated with a web portal, IP access settings control which IP addresses users can connect from.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import WorkspaceswebIpAccessSettings
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        WorkspaceswebIpAccessSettings(self, "example",
            display_name="example",
            ip_rule=[{
                "ip_range": "10.0.0.0/16"
            }
            ]
        )
```

### With Multiple IP Rules

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import WorkspaceswebIpAccessSettings
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        WorkspaceswebIpAccessSettings(self, "example",
            description="Example IP access settings",
            display_name="example",
            ip_rule=[{
                "description": "Main office",
                "ip_range": "10.0.0.0/16"
            }, {
                "description": "Branch office",
                "ip_range": "192.168.0.0/24"
            }
            ]
        )
```

### With All Arguments

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import WorkspaceswebIpAccessSettings
from imports.aws.kms_key import KmsKey
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = KmsKey(self, "example",
            deletion_window_in_days=7,
            description="KMS key for WorkSpaces Web IP Access Settings"
        )
        aws_workspacesweb_ip_access_settings_example =
        WorkspaceswebIpAccessSettings(self, "example_1",
            additional_encryption_context=[{
                "Environment": "Production"
            }
            ],
            customer_managed_key=example.arn,
            description="Example IP access settings",
            display_name="example",
            ip_rule=[{
                "description": "Main office",
                "ip_range": "10.0.0.0/16"
            }, {
                "description": "Branch office",
                "ip_range": "192.168.0.0/24"
            }
            ],
            tags={
                "Name": "example-ip-access-settings"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_workspacesweb_ip_access_settings_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `display_name` - (Required) The display name of the IP access settings.
* `ip_rule` - (Required) The IP rules of the IP access settings. See [IP Rule](#ip-rules) below.

The following arguments are optional:

* `additional_encryption_context` - (Optional) Additional encryption context for the IP access settings.
* `customer_managed_key` - (Optional) ARN of the customer managed KMS key.
* `description` - (Optional) The description of the IP access settings.
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### IP Rules

* `ip_range` - (Required) The IP range of the IP rule.
* `description` - (Optional) The description of the IP rule.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `associated_portal_arns` - List of web portal ARNs that this IP access settings resource is associated with.
* `ip_access_settings_arn` - ARN of the IP access settings resource.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web IP Access Settings using the `ip_access_settings_arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import WorkspaceswebIpAccessSettings
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        WorkspaceswebIpAccessSettings.generate_config_for_import(self, "example", "arn:aws:workspaces-web:us-west-2:123456789012:ipAccessSettings/abcdef12345")
```

Using `terraform import`, import WorkSpaces Web IP Access Settings using the `ip_access_settings_arn`. For example:

```console
% terraform import aws_workspacesweb_ip_access_settings.example arn:aws:workspaces-web:us-west-2:123456789012:ipAccessSettings/abcdef12345
```

<!-- cache-key: cdktf-0.20.8 input-51553fe5d0b9d8d25ef351d6c960e268533154c7bbacc3dbea48f5a163341dfe -->