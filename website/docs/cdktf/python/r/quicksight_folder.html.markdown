---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_folder"
description: |-
  Manages a QuickSight Folder.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_folder

Resource for managing a QuickSight Folder.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.quicksight_folder import QuicksightFolder
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        QuicksightFolder(self, "example",
            folder_id="example-id",
            name="example-name"
        )
```

### With Permissions

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.quicksight_folder import QuicksightFolder
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        QuicksightFolder(self, "example",
            folder_id="example-id",
            name="example-name",
            permissions=[QuicksightFolderPermissions(
                actions=["quicksight:CreateFolder", "quicksight:DescribeFolder", "quicksight:UpdateFolder", "quicksight:DeleteFolder", "quicksight:CreateFolderMembership", "quicksight:DeleteFolderMembership", "quicksight:DescribeFolderPermissions", "quicksight:UpdateFolderPermissions"
                ],
                principal=Token.as_string(aws_quicksight_user_example.arn)
            )
            ]
        )
```

### With Parent Folder

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.quicksight_folder import QuicksightFolder
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        parent = QuicksightFolder(self, "parent",
            folder_id="parent-id",
            name="parent-name"
        )
        QuicksightFolder(self, "example",
            folder_id="example-id",
            name="example-name",
            parent_folder_arn=parent.arn
        )
```

## Argument Reference

The following arguments are required:

* `folder_id` - (Required, Forces new resource) Identifier for the folder.
* `name` - (Required) Display name for the folder.

The following arguments are optional:

* `aws_account_id` - (Optional, Forces new resource) AWS account ID.
* `folder_type` - (Optional) The type of folder. By default, it is `SHARED`. Valid values are: `SHARED`.
* `parent_folder_arn` - (Optional) The Amazon Resource Name (ARN) for the parent folder. If not set, creates a root-level folder.
* `permissions` - (Optional) A set of resource permissions on the folder. Maximum of 64 items. See [permissions](#permissions).
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### permissions

* `actions` - (Required) List of IAM actions to grant or revoke permissions on.
* `principal` - (Required) ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the folder.
* `created_time` - The time that the folder was created.
* `folder_path` - An array of ancestor ARN strings for the folder. Empty for root-level folders.
* `id` - A comma-delimited string joining AWS account ID and folder ID.
* `last_updated_time` - The time that the folder was last updated.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `read`   - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a QuickSight folder using the AWS account ID and folder ID name separated by a comma (`,`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.quicksight_folder import QuicksightFolder
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        QuicksightFolder.generate_config_for_import(self, "example", "123456789012,example-id")
```

Using `terraform import`, import a QuickSight folder using the AWS account ID and folder ID name separated by a comma (`,`). For example:

```console
% terraform import aws_quicksight_folder.example 123456789012,example-id
```

<!-- cache-key: cdktf-0.20.8 input-bfe67ec1b66703fe4dec29123039432b9ff61c08d31438163738103ae03db233 -->