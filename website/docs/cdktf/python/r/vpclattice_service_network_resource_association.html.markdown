---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_service_network_resource_association"
description: |-
  Terraform resource for managing an AWS VPC Lattice Service Network Resource Association.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_service_network_resource_association

Terraform resource for managing an AWS VPC Lattice Service Network Resource Association.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import VpclatticeServiceNetworkResourceAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpclatticeServiceNetworkResourceAssociation(self, "example",
            resource_configuration_identifier=aws_vpclattice_resource_configuration_example.id,
            service_network_identifier=aws_vpclattice_service_network_example.id,
            tags={
                "Name": "Example"
            }
        )
```

## Argument Reference

The following arguments are required:

* `resource_configuration_identifier` - (Required) Identifier of Resource Configuration to associate to the Service Network.
* `service_network_identifier` - (Required) Identifier of the Service Network to associate the Resource to.

The following arguments are optional:

* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Service Network Resource Association.
* `id` - ID of the association.
* `dns_entry` DNS entry of the association in the service network.
    * `domain_name` The domain name of the association in the service network.
    * `hosted_zone_id` The ID of the hosted zone containing the domain name.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)
* `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Service Network Resource Association using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import VpclatticeServiceNetworkResourceAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpclatticeServiceNetworkResourceAssociation.generate_config_for_import(self, "example", "snra-1234567890abcef12")
```

Using `terraform import`, import VPC Lattice Service Network Resource Association using the `id`. For example:

```console
% terraform import aws_vpclattice_service_network_resource_association.example snra-1234567890abcef12
```

<!-- cache-key: cdktf-0.20.8 input-4a47f9895a7e3f4fbdf1c643a090ee722730b36064b7bd896e320b78dae04866 -->