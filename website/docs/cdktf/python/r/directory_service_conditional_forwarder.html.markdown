---
subcategory: "Directory Service"
layout: "aws"
page_title: "AWS: aws_directory_service_conditional_forwarder"
description: |-
  Provides a conditional forwarder for managed Microsoft AD in AWS Directory Service.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_directory_service_conditional_forwarder

Provides a conditional forwarder for managed Microsoft AD in AWS Directory Service.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_conditional_forwarder import DirectoryServiceConditionalForwarder
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DirectoryServiceConditionalForwarder(self, "example",
            directory_id=ad.id,
            dns_ips=["8.8.8.8", "8.8.4.4"],
            remote_domain_name="example.com"
        )
```

## Argument Reference

This resource supports the following arguments:

* `directory_id` - (Required) ID of directory.
* `dns_ips` - (Required) A list of forwarder IP addresses.
* `remote_domain_name` - (Required) The fully qualified domain name of the remote domain for which forwarders will be used.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import conditional forwarders using the directory id and remote_domain_name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_conditional_forwarder import DirectoryServiceConditionalForwarder
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DirectoryServiceConditionalForwarder.generate_config_for_import(self, "example", "d-1234567890:example.com")
```

Using `terraform import`, import conditional forwarders using the directory id and remote_domain_name. For example:

```console
% terraform import aws_directory_service_conditional_forwarder.example d-1234567890:example.com
```

<!-- cache-key: cdktf-0.20.8 input-6c5202e2bda00c02157b7a412c0e460a4f86c81c2eec1650454ecd36ded52d0d -->