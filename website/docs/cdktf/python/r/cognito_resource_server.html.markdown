---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_resource_server"
side_bar_current: "docs-aws-resource-cognito-resource-server"
description: |-
  Provides a Cognito Resource Server.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_resource_server

Provides a Cognito Resource Server.

## Example Usage

### Create a basic resource server

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_resource_server import CognitoResourceServer
from imports.aws.cognito_user_pool import CognitoUserPool
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        pool = CognitoUserPool(self, "pool",
            name="pool"
        )
        CognitoResourceServer(self, "resource",
            identifier="https://example.com",
            name="example",
            user_pool_id=pool.id
        )
```

### Create a resource server with sample-scope

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_resource_server import CognitoResourceServer
from imports.aws.cognito_user_pool import CognitoUserPool
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        pool = CognitoUserPool(self, "pool",
            name="pool"
        )
        CognitoResourceServer(self, "resource",
            identifier="https://example.com",
            name="example",
            scope=[CognitoResourceServerScope(
                scope_description="a Sample Scope Description",
                scope_name="sample-scope"
            )
            ],
            user_pool_id=pool.id
        )
```

## Argument Reference

This resource supports the following arguments:

* `identifier` - (Required) An identifier for the resource server.
* `name` - (Required) A name for the resource server.
* `user_pool_id` - (Required) User pool the client belongs to.
* `scope` - (Optional) A list of [Authorization Scope](#authorization-scope).

### Authorization Scope

* `scope_name` - (Required) The scope name.
* `scope_description` - (Required) The scope description.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `scope_identifiers` - A list of all scopes configured for this resource server in the format identifier/scope_name.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_cognito_resource_server` using their User Pool ID and Identifier. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_resource_server import CognitoResourceServer
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoResourceServer.generate_config_for_import(self, "example", "us-west-2_abc123|https://example.com")
```

Using `terraform import`, import `aws_cognito_resource_server` using their User Pool ID and Identifier. For example:

```console
% terraform import aws_cognito_resource_server.example "us-west-2_abc123|https://example.com"
```

<!-- cache-key: cdktf-0.20.8 input-856d9cab649aaa6104183bfcc330f7d63dfc6e10b98ba89d9fd544f7fa7fecb6 -->