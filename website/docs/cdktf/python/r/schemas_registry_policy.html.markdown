---
subcategory: "EventBridge Schemas"
layout: "aws"
page_title: "AWS: aws_schemas_registry_policy"
description: |-
  Terraform resource for managing an AWS EventBridge Schemas Registry Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_schemas_registry_policy

Terraform resource for managing an AWS EventBridge Schemas Registry Policy.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.schemas_registry_policy import SchemasRegistryPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsIamPolicyDocument(self, "example",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["schemas:*"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["109876543210"],
                    type="AWS"
                )
                ],
                resources=["arn:aws:schemas:us-east-1:123456789012:registry/example", "arn:aws:schemas:us-east-1:123456789012:schema/example*"
                ],
                sid="example"
            )
            ]
        )
        aws_schemas_registry_policy_example = SchemasRegistryPolicy(self, "example_1",
            policy=Token.as_string(example.json),
            registry_name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_schemas_registry_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `registry_name` - (Required) Name of EventBridge Schema Registry
* `policy` - (Required) Resource Policy for EventBridge Schema Registry

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EventBridge Schema Registry Policy using the `registry_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.schemas_registry_policy import SchemasRegistryPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SchemasRegistryPolicy.generate_config_for_import(self, "example", "example")
```

Using `terraform import`, import EventBridge Schema Registry Policy using the `registry_name`. For example:

```console
% terraform import aws_schemas_registry_policy.example example
```

<!-- cache-key: cdktf-0.20.8 input-62f22e7b540422b32e9ccd82d0528f6eb0fb7caef34af87d1e13ddbc71adefb5 -->