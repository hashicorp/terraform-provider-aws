---
subcategory: "SSM Quick Setup"
layout: "aws"
page_title: "AWS: aws_ssmquicksetup_configuration_manager"
description: |-
  Terraform resource for managing an AWS SSM Quick Setup Configuration Manager.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssmquicksetup_configuration_manager

Terraform resource for managing an AWS SSM Quick Setup Configuration Manager.

## Example Usage

### Patch Policy Configuration Type

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_partition import DataAwsPartition
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.data_aws_ssm_patch_baselines import DataAwsSsmPatchBaselines
from imports.aws.ssmquicksetup_configuration_manager import SsmquicksetupConfigurationManager
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        current = DataAwsCallerIdentity(self, "current")
        data_aws_partition_current = DataAwsPartition(self, "current_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_partition_current.override_logical_id("current")
        data_aws_region_current = DataAwsRegion(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        example = DataAwsSsmPatchBaselines(self, "example",
            default_baselines=True
        )
        selected_patch_baselines = Fn.jsonencode("${{ for baseline in ${" + example.baseline_identities + "} : baseline.operating_system => {\n      \"value\" : baseline.baseline_id\n      \"label\" : baseline.baseline_name\n      \"description\" : baseline.baseline_description\n      \"disabled\" : !baseline.default_baseline\n    }}}")
        aws_ssmquicksetup_configuration_manager_example =
        SsmquicksetupConfigurationManager(self, "example_4",
            configuration_definition=[SsmquicksetupConfigurationManagerConfigurationDefinition(
                local_deployment_administration_role_arn="arn:${" + data_aws_partition_current.partition + "}:iam::${" + current.account_id + "}:role/AWS-QuickSetup-PatchPolicy-LocalAdministrationRole",
                local_deployment_execution_role_name="AWS-QuickSetup-PatchPolicy-LocalExecutionRole",
                parameters={
                    "ConfigurationOptionsPatchOperation": "Scan",
                    "ConfigurationOptionsScanNextInterval": "false",
                    "ConfigurationOptionsScanValue": "cron(0 1 * * ? *)",
                    "IsPolicyAttachAllowed": "false",
                    "OutputLogEnableS3": "false",
                    "PatchBaselineRegion": Token.as_string(data_aws_region_current.name),
                    "PatchBaselineUseDefault": "default",
                    "PatchPolicyName": "example",
                    "RateControlConcurrency": "10%",
                    "RateControlErrorThreshold": "2%",
                    "SelectedPatchBaselines": selected_patch_baselines,
                    "TargetAccounts": Token.as_string(current.account_id),
                    "TargetRegions": Token.as_string(data_aws_region_current.name),
                    "TargetType": "*"
                },
                type="AWSQuickSetupType-PatchPolicy"
            )
            ],
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ssmquicksetup_configuration_manager_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `configuration_definition` - (Required) Definition of the Quick Setup configuration that the configuration manager deploys. See [`configuration_definition`](#configuration_definition-argument-reference) below.
* `name` - (Required) Configuration manager name.

The following arguments are optional:

* `description` - (Optional) Description of the configuration manager.
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `configuration_definition` Argument Reference

* `local_deployment_administrator_role_arn` - (Optional) ARN of the IAM role used to administrate local configuration deployments.
* `local_deployment_execution_role_name` - (Optional) Name of the IAM role used to deploy local configurations.
* `parameters` - (Required) Parameters for the configuration definition type. Parameters for configuration definitions vary based the configuration type. See the [AWS API documentation](https://docs.aws.amazon.com/quick-setup/latest/APIReference/API_ConfigurationDefinitionInput.html) for a complete list of parameters for each configuration type.
* `type` - (Required) Type of the Quick Setup configuration.
* `type_version` - (Optional) Version of the Quick Setup type to use.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `manager_arn` - ARN of the Configuration Manager.
* `status_summaries` - A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See [`status_summaries`](#status_summaries-attribute-reference) below.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

### `status_summaries` Attribute Reference

* `status` - Current status.
* `status_message` - When applicable, returns an informational message relevant to the current status and status type of the status summary object.
* `status_type` - Type of a status summary.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `20m`)
* `update` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSM Quick Setup Configuration Manager using the `manager_arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssmquicksetup_configuration_manager import SsmquicksetupConfigurationManager
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsmquicksetupConfigurationManager.generate_config_for_import(self, "example", "arn:aws:ssm-quicksetup:us-east-1:012345678901:configuration-manager/abcd-1234")
```

Using `terraform import`, import SSM Quick Setup Configuration Manager using the `manager_arn`. For example:

```console
% terraform import aws_ssmquicksetup_configuration_manager.example arn:aws:ssm-quicksetup:us-east-1:012345678901:configuration-manager/abcd-1234
```

<!-- cache-key: cdktf-0.20.8 input-406027c15e99aa70cd4454256b4b0d1488e2194f4e1184b4d5d4888b6946622b -->