---
subcategory: "CodeCommit"
layout: "aws"
page_title: "AWS: aws_codecommit_repository"
description: |-
  Provides a CodeCommit Repository Resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codecommit_repository

Provides a CodeCommit Repository Resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codecommit_repository import CodecommitRepository
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodecommitRepository(self, "test",
            description="This is the Sample App Repository",
            repository_name="MyTestRepository"
        )
```

### AWS KMS Customer Managed Keys (CMK)

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codecommit_repository import CodecommitRepository
from imports.aws.kms_key import KmsKey
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = KmsKey(self, "test",
            deletion_window_in_days=7,
            description="test"
        )
        aws_codecommit_repository_test = CodecommitRepository(self, "test_1",
            description="This is the Sample App Repository",
            kms_key_id=test.arn,
            repository_name="MyTestRepository"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_codecommit_repository_test.override_logical_id("test")
```

## Argument Reference

This resource supports the following arguments:

* `repository_name` - (Required) The name for the repository. This needs to be less than 100 characters.
* `description` - (Optional) The description of the repository. This needs to be less than 1000 characters
* `default_branch` - (Optional) The default branch of the repository. The branch specified here needs to exist.
* `kms_key_id` - (Optional) The ARN of the encryption key. If no key is specified, the default `aws/codecommit` Amazon Web Services managed key is used.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `repository_id` - The ID of the repository
* `arn` - The ARN of the repository
* `clone_url_http` - The URL to use for cloning the repository over HTTPS.
* `clone_url_ssh` - The URL to use for cloning the repository over SSH.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeCommit repository using repository name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codecommit_repository import CodecommitRepository
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodecommitRepository.generate_config_for_import(self, "imported", "ExistingRepo")
```

Using `terraform import`, import CodeCommit repository using repository name. For example:

```console
% terraform import aws_codecommit_repository.imported ExistingRepo
```

<!-- cache-key: cdktf-0.20.1 input-217390eb5f7a27d321e450c06bfbdb2e96d532106ed9c9f29d34b7603dfc713b -->