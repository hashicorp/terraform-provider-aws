---
subcategory: "IVS (Interactive Video) Chat"
layout: "aws"
page_title: "AWS: aws_ivschat_room"
description: |-
  Terraform resource for managing an AWS IVS (Interactive Video) Chat Room.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ivschat_room

Terraform resource for managing an AWS IVS (Interactive Video) Chat Room.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ivschat_room import IvschatRoom
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IvschatRoom(self, "example",
            name="tf-room"
        )
```

## Usage with Logging Configuration to S3 Bucket

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from cdktf import TerraformResourceLifecycle
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ivschat_logging_configuration import IvschatLoggingConfiguration
from imports.aws.ivschat_room import IvschatRoom
from imports.aws.s3_bucket import S3Bucket
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket_prefix="tf-ivschat-logging-bucket-",
            force_destroy=True
        )
        aws_ivschat_logging_configuration_example =
        IvschatLoggingConfiguration(self, "example_1",
            destination_configuration=IvschatLoggingConfigurationDestinationConfiguration(
                s3=IvschatLoggingConfigurationDestinationConfigurationS3(
                    bucket_name=example.id
                )
            ),
            lifecycle=TerraformResourceLifecycle(
                create_before_destroy=True
            ),
            name="tf-ivschat-loggingconfiguration"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ivschat_logging_configuration_example.override_logical_id("example")
        aws_ivschat_room_example = IvschatRoom(self, "example_2",
            logging_configuration_identifiers=[
                Token.as_string(aws_ivschat_logging_configuration_example.arn)
            ],
            name="tf-ivschat-room"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ivschat_room_example.override_logical_id("example")
```

## Argument Reference

The following arguments are optional:

* `logging_configuration_identifiers` - (Optional) List of Logging Configuration
  ARNs to attach to the room.
* `maximum_message_length` - (Optional) Maximum number of characters in a single
  message. Messages are expected to be UTF-8 encoded and this limit applies
  specifically to rune/code-point count, not number of bytes.
* `maximum_message_rate_per_second` - (Optional) Maximum number of messages per
  second that can be sent to the room (by all clients).
* `message_review_handler` - (Optional) Configuration information for optional
  review of messages.
    * `fallback_result` - (Optional) The fallback behavior (whether the message
    is allowed or denied) if the handler does not return a valid response,
    encounters an error, or times out. Valid values: `ALLOW`, `DENY`.
    * `uri` - (Optional) ARN of the lambda message review handler function.
* `name` - (Optional) Room name.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Room.
* `id` - Room ID
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IVS (Interactive Video) Chat Room using the ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ivschat_room import IvschatRoom
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IvschatRoom.generate_config_for_import(self, "example", "arn:aws:ivschat:us-west-2:326937407773:room/GoXEXyB4VwHb")
```

Using `terraform import`, import IVS (Interactive Video) Chat Room using the ARN. For example:

```console
% terraform import aws_ivschat_room.example arn:aws:ivschat:us-west-2:326937407773:room/GoXEXyB4VwHb
```

<!-- cache-key: cdktf-0.20.8 input-3fca5b37b7d82ff4310bf108852e9d4ce3f8757446324b2c39d6248a58f1f8e6 -->