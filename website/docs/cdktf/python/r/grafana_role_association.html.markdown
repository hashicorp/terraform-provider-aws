---
subcategory: "Managed Grafana"
layout: "aws"
page_title: "AWS: aws_grafana_role_association"
description: |-
  Provides an Amazon Managed Grafana workspace role association resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_grafana_role_association

Provides an Amazon Managed Grafana workspace role association resource.

## Example Usage

### Basic configuration

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.grafana_role_association import GrafanaRoleAssociation
from imports.aws.grafana_workspace import GrafanaWorkspace
from imports.aws.iam_role import IamRole
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        assume = IamRole(self, "assume",
            assume_role_policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "grafana.amazonaws.com"
                        },
                        "Sid": ""
                    }
                    ],
                    "Version": "2012-10-17"
                })),
            name="grafana-assume"
        )
        example = GrafanaWorkspace(self, "example",
            account_access_type="CURRENT_ACCOUNT",
            authentication_providers=["SAML"],
            permission_type="SERVICE_MANAGED",
            role_arn=assume.arn
        )
        aws_grafana_role_association_example = GrafanaRoleAssociation(self, "example_2",
            role="ADMIN",
            user_ids=["USER_ID_1", "USER_ID_2"],
            workspace_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_grafana_role_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `role` - (Required) The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
* `workspace_id` - (Required) The workspace id.

The following arguments are optional:

* `group_ids` - (Optional) The AWS SSO group ids to be assigned the role given in `role`.
* `user_ids` - (Optional) The AWS SSO user ids to be assigned the role given in `role`.

## Attribute Reference

This resource exports no additional attributes.

<!-- cache-key: cdktf-0.20.8 input-4d21bedd686a943999565d73b09e0fb7f400801629b70dba191f5a85e621bf6f -->