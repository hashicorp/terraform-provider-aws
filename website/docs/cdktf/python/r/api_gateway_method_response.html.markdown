---
subcategory: "API Gateway"
layout: "aws"
page_title: "AWS: aws_api_gateway_method_response"
description: |-
  Provides an HTTP Method Response for an API Gateway Resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_api_gateway_method_response

Provides an HTTP Method Response for an API Gateway Resource. More information about API Gateway method responses can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-response.html).

## Example Usage

### Basic Response

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_integration import ApiGatewayIntegration
from imports.aws.api_gateway_method import ApiGatewayMethod
from imports.aws.api_gateway_method_response import ApiGatewayMethodResponse
from imports.aws.api_gateway_resource import ApiGatewayResource
from imports.aws.api_gateway_rest_api import ApiGatewayRestApi
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        my_demo_api = ApiGatewayRestApi(self, "MyDemoAPI",
            description="This is my API for demonstration purposes",
            name="MyDemoAPI"
        )
        my_demo_resource = ApiGatewayResource(self, "MyDemoResource",
            parent_id=my_demo_api.root_resource_id,
            path_part="mydemoresource",
            rest_api_id=my_demo_api.id
        )
        my_demo_method = ApiGatewayMethod(self, "MyDemoMethod",
            authorization="NONE",
            http_method="GET",
            resource_id=my_demo_resource.id,
            rest_api_id=my_demo_api.id
        )
        ApiGatewayMethodResponse(self, "response_200",
            http_method=my_demo_method.http_method,
            resource_id=my_demo_resource.id,
            rest_api_id=my_demo_api.id,
            status_code="200"
        )
        ApiGatewayIntegration(self, "MyDemoIntegration",
            http_method=my_demo_method.http_method,
            resource_id=my_demo_resource.id,
            rest_api_id=my_demo_api.id,
            type="MOCK"
        )
```

### Response with Custom Header and Model

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_integration import ApiGatewayIntegration
from imports.aws.api_gateway_method import ApiGatewayMethod
from imports.aws.api_gateway_method_response import ApiGatewayMethodResponse
from imports.aws.api_gateway_model import ApiGatewayModel
from imports.aws.api_gateway_resource import ApiGatewayResource
from imports.aws.api_gateway_rest_api import ApiGatewayRestApi
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        my_demo_api = ApiGatewayRestApi(self, "MyDemoAPI",
            description="This is my API for demonstration purposes",
            name="MyDemoAPI"
        )
        ApiGatewayModel(self, "MyDemoResponseModel",
            content_type="application/json",
            description="API response for MyDemoMethod",
            name="MyDemoResponseModel",
            rest_api_id=my_demo_api.id,
            schema=Token.as_string(
                Fn.jsonencode({
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "properties": {
                        "Message": {
                            "type": "string"
                        }
                    },
                    "title": "MyDemoResponse",
                    "type": "object"
                }))
        )
        my_demo_resource = ApiGatewayResource(self, "MyDemoResource",
            parent_id=my_demo_api.root_resource_id,
            path_part="mydemoresource",
            rest_api_id=my_demo_api.id
        )
        my_demo_method = ApiGatewayMethod(self, "MyDemoMethod",
            authorization="NONE",
            http_method="GET",
            resource_id=my_demo_resource.id,
            rest_api_id=my_demo_api.id
        )
        ApiGatewayMethodResponse(self, "response_200",
            http_method=my_demo_method.http_method,
            resource_id=my_demo_resource.id,
            response_models={
                "application/json": "MyDemoResponseModel"
            },
            response_parameters={
                "method-response-header.X-My-Demo-Header": False,
                "method.response.header.Content-Type": False
            },
            rest_api_id=my_demo_api.id,
            status_code="200"
        )
        ApiGatewayIntegration(self, "MyDemoIntegration",
            http_method=my_demo_method.http_method,
            resource_id=my_demo_resource.id,
            rest_api_id=my_demo_api.id,
            type="MOCK"
        )
```

## Argument Reference

This resource supports the following arguments:

* `rest_api_id` - (Required) The string identifier of the associated REST API.
* `resource_id` - (Required) The Resource identifier for the method resource.
* `http_method` - (Required) The HTTP verb of the method resource (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
* `status_code` - (Required) The method response's status code.
* `response_models` - (Optional) A map specifying the model resources used for the response's content type. Response models are represented as a key/value map, with a content type as the key and a Model name as the value.
* `response_parameters` - (Optional) A map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header name and the associated value is a boolean flag indicating whether the method response parameter is required. The method response header names must match the pattern of `method.response.header.{name}`, where `name` is a valid and unique header name.

  The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in `integration.response.header.{name}`, a static value enclosed within a pair of single quotes (e.g., '`application/json'`), or a JSON expression from the back-end response payload in the form of `integration.response.body.{JSON-expression}`, where `JSON-expression` is a valid JSON expression without the `$` prefix.)

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_method_response` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD/STATUS-CODE`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_method_response import ApiGatewayMethodResponse
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ApiGatewayMethodResponse.generate_config_for_import(self, "example", "12345abcde/67890fghij/GET/200")
```

Using `terraform import`, import `aws_api_gateway_method_response` using `REST-API-ID/RESOURCE-ID/HTTP-METHOD/STATUS-CODE`. For example:

```console
% terraform import aws_api_gateway_method_response.example 12345abcde/67890fghij/GET/200
```

<!-- cache-key: cdktf-0.20.1 input-149830828fe1f7738d24a10f77bd5873f7f2e0bf0e281fcd48746feef6702d97 -->