---
subcategory: "CloudFront"
layout: "aws"
page_title: "AWS: aws_cloudfront_continuous_deployment_policy"
description: |-
  Terraform resource for managing an AWS CloudFront Continuous Deployment Policy.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudfront_continuous_deployment_policy

Terraform resource for managing an AWS CloudFront Continuous Deployment Policy.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudfront_continuous_deployment_policy import CloudfrontContinuousDeploymentPolicy
from imports.aws.cloudfront_distribution import CloudfrontDistribution
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name, *, defaultCacheBehavior, origin, restrictions, viewerCertificate, defaultCacheBehavior1, origin1, restrictions1, viewerCertificate1):
        super().__init__(scope, name)
        staging = CloudfrontDistribution(self, "staging",
            enabled=True,
            staging=True,
            default_cache_behavior=default_cache_behavior,
            origin=origin,
            restrictions=restrictions,
            viewer_certificate=viewer_certificate
        )
        example = CloudfrontContinuousDeploymentPolicy(self, "example",
            enabled=True,
            staging_distribution_dns_names=[CloudfrontContinuousDeploymentPolicyStagingDistributionDnsNames(
                items=[staging.domain_name],
                quantity=1
            )
            ],
            traffic_config=[CloudfrontContinuousDeploymentPolicyTrafficConfig(
                single_weight_config=[CloudfrontContinuousDeploymentPolicyTrafficConfigSingleWeightConfig(
                    weight=Token.as_number("0.01")
                )
                ],
                type="SingleWeight"
            )
            ]
        )
        CloudfrontDistribution(self, "production",
            continuous_deployment_policy_id=example.id,
            enabled=True,
            default_cache_behavior=default_cache_behavior1,
            origin=origin1,
            restrictions=restrictions1,
            viewer_certificate=viewer_certificate1
        )
```

### Single Weight Config with Session Stickiness

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudfront_continuous_deployment_policy import CloudfrontContinuousDeploymentPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudfrontContinuousDeploymentPolicy(self, "example",
            enabled=True,
            staging_distribution_dns_names=[CloudfrontContinuousDeploymentPolicyStagingDistributionDnsNames(
                items=[staging.domain_name],
                quantity=1
            )
            ],
            traffic_config=[CloudfrontContinuousDeploymentPolicyTrafficConfig(
                single_weight_config=[CloudfrontContinuousDeploymentPolicyTrafficConfigSingleWeightConfig(
                    session_stickiness_config=[CloudfrontContinuousDeploymentPolicyTrafficConfigSingleWeightConfigSessionStickinessConfig(
                        idle_ttl=300,
                        maximum_ttl=600
                    )
                    ],
                    weight=Token.as_number("0.01")
                )
                ],
                type="SingleWeight"
            )
            ]
        )
```

### Single Header Config

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudfront_continuous_deployment_policy import CloudfrontContinuousDeploymentPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudfrontContinuousDeploymentPolicy(self, "example",
            enabled=True,
            staging_distribution_dns_names=[CloudfrontContinuousDeploymentPolicyStagingDistributionDnsNames(
                items=[staging.domain_name],
                quantity=1
            )
            ],
            traffic_config=[CloudfrontContinuousDeploymentPolicyTrafficConfig(
                single_header_config=[CloudfrontContinuousDeploymentPolicyTrafficConfigSingleHeaderConfig(
                    header="aws-cf-cd-example",
                    value="example"
                )
                ],
                type="SingleHeader"
            )
            ]
        )
```

## Argument Reference

The following arguments are required:

* `enabled` - (Required) Whether this continuous deployment policy is enabled.
* `staging_distribution_dns_names` - (Required) CloudFront domain name of the staging distribution. See [`staging_distribution_dns_names`](#staging_distribution_dns_names).
* `traffic_config` - (Required) Parameters for routing production traffic from primary to staging distributions. See [`traffic_config`](#traffic_config).

### `staging_distribution_dns_names`

* `items` - (Required) A list of CloudFront domain names for the staging distribution.
* `quantity` - (Required) Number of CloudFront domain names in the staging distribution.

### `traffic_config`

* `type` - (Required) Type of traffic configuration. Valid values are `SingleWeight` and `SingleHeader`.
* `single_header_config` - (Optional) Determines which HTTP requests are sent to the staging distribution. See [`single_header_config`](#single_header_config).
* `single_weight_config` - (Optional) Contains the percentage of traffic to send to the staging distribution. See [`single_weight_config`](#single_weight_config).

### `single_header_config`

* `header` - (Required) Request header name to send to the staging distribution. The header must contain the prefix `aws-cf-cd-`.
* `value` - (Required) Request header value.

### `single_weight_config`

* `weight` - (Required) The percentage of traffic to send to a staging distribution, expressed as a decimal number between `0` and `.15`.
* `session_stickiness_config` - (Optional) Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to the staging distribution, while others are sent to the primary distribution. Define the session duration using TTL values. See [`session_stickiness_config`](#session_stickiness_config).

### `session_stickiness_config`

* `idle_ttl` - (Required) The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximum_ttl`.
* `maximum_ttl` - (Required) The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idle_ttl`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `etag` - Current version of the continuous distribution policy.
* `id` - Identifier of the continuous deployment policy.
* `last_modified_time` - Date and time the continuous deployment policy was last modified.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudFront Continuous Deployment Policy using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudfront_continuous_deployment_policy import CloudfrontContinuousDeploymentPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudfrontContinuousDeploymentPolicy.generate_config_for_import(self, "example", "abcd-1234")
```

Using `terraform import`, import CloudFront Continuous Deployment Policy using the `id`. For example:

```console
% terraform import aws_cloudfront_continuous_deployment_policy.example abcd-1234 
```

<!-- cache-key: cdktf-0.20.8 input-10ca91c1c5f42a4e7c34b2e87eb874a6c1a113aec1a477105e5b977db0a0d32d -->