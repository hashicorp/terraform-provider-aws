---
subcategory: "GuardDuty"
layout: aws
page_title: 'AWS: aws_guardduty_ipset'
description: Provides a resource to manage a GuardDuty IPSet
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_guardduty_ipset

Provides a resource to manage a GuardDuty IPSet.

~> **Note:** Currently in GuardDuty, users from member accounts cannot upload and further manage IPSets. IPSets that are uploaded by the primary account are imposed on GuardDuty functionality in its member accounts. See the [GuardDuty API Documentation](https://docs.aws.amazon.com/guardduty/latest/ug/create-ip-set.html)

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.guardduty_detector import GuarddutyDetector
from imports.aws.guardduty_ipset import GuarddutyIpset
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_bucket_acl import S3BucketAcl
from imports.aws.s3_object import S3Object
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        primary = GuarddutyDetector(self, "primary",
            enable=True
        )
        bucket = S3Bucket(self, "bucket")
        S3BucketAcl(self, "bucket_acl",
            acl="private",
            bucket=bucket.id
        )
        my_ip_set = S3Object(self, "MyIPSet",
            bucket=bucket.id,
            content="10.0.0.0/8\n\n",
            key="MyIPSet"
        )
        GuarddutyIpset(self, "example",
            activate=True,
            detector_id=primary.id,
            format="TXT",
            location="https://s3.amazonaws.com/${" + my_ip_set.bucket + "}/${" + my_ip_set.key + "}",
            name="MyIPSet"
        )
```

## Argument Reference

This resource supports the following arguments:

* `activate` - (Required) Specifies whether GuardDuty is to start using the uploaded IPSet.
* `detector_id` - (Required) The detector ID of the GuardDuty.
* `format` - (Required) The format of the file that contains the IPSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`
* `location` - (Required) The URI of the file that contains the IPSet.
* `name` - (Required) The friendly name to identify the IPSet.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the GuardDuty IPSet.
* `id` - The ID of the GuardDuty IPSet.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GuardDuty IPSet using the primary GuardDuty detector ID and IPSet ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.guardduty_ipset import GuarddutyIpset
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GuarddutyIpset.generate_config_for_import(self, "myIpSet", "00b00fd5aecc0ab60a708659477e9617:123456789012")
```

Using `terraform import`, import GuardDuty IPSet using the primary GuardDuty detector ID and IPSet ID. For example:

```console
% terraform import aws_guardduty_ipset.MyIPSet 00b00fd5aecc0ab60a708659477e9617:123456789012
```

<!-- cache-key: cdktf-0.20.8 input-5a9aeb8596a1584664d2e630a427541e8d151a5e9c5c5912959a88b2da9c2384 -->