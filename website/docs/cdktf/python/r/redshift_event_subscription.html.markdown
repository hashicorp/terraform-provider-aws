---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_event_subscription"
description: |-
  Provides a Redshift event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_event_subscription

Provides a Redshift event subscription resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_cluster import RedshiftCluster
from imports.aws.redshift_event_subscription import RedshiftEventSubscription
from imports.aws.sns_topic import SnsTopic
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name, *, nodeType):
        super().__init__(scope, name)
        default_var = RedshiftCluster(self, "default",
            cluster_identifier="default",
            database_name="default",
            node_type=node_type
        )
        aws_sns_topic_default = SnsTopic(self, "default_1",
            name="redshift-events"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sns_topic_default.override_logical_id("default")
        aws_redshift_event_subscription_default = RedshiftEventSubscription(self, "default_2",
            event_categories=["configuration", "management", "monitoring", "security"
            ],
            name="redshift-event-sub",
            severity="INFO",
            sns_topic_arn=Token.as_string(aws_sns_topic_default.arn),
            source_ids=[default_var.id],
            source_type="cluster",
            tags={
                "Name": "default"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshift_event_subscription_default.override_logical_id("default")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the Redshift event subscription.
* `sns_topic_arn` - (Required) The ARN of the SNS topic to send events to.
* `source_ids` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `source_type` must also be specified.
* `source_type` - (Optional) The type of source that will be generating the events. Valid options are `cluster`, `cluster-parameter-group`, `cluster-security-group`, `cluster-snapshot`, or `scheduled-action`. If not set, all sources will be subscribed to.
* `severity` - (Optional) The event severity to be published by the notification subscription. Valid options are `INFO` or `ERROR`. Default value of `INFO`.
* `event_categories` - (Optional) A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html or run `aws redshift describe-event-categories`.
* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to `true`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the Redshift event notification subscription
* `id` - The name of the Redshift event notification subscription
* `customer_aws_id` - The AWS customer account associated with the Redshift event notification subscription
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Event Subscriptions using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_event_subscription import RedshiftEventSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftEventSubscription.generate_config_for_import(self, "default", "redshift-event-sub")
```

Using `terraform import`, import Redshift Event Subscriptions using the `name`. For example:

```console
% terraform import aws_redshift_event_subscription.default redshift-event-sub
```

<!-- cache-key: cdktf-0.20.8 input-15f307fc07a5350a90201b05a1ab1284198872ef394e5f0b141e17d35b730070 -->