---
subcategory: "API Gateway"
layout: "aws"
page_title: "AWS: aws_api_gateway_rest_api_put"
description: |-
  Terraform resource for updating an AWS API Gateway REST API.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_api_gateway_rest_api_put

Terraform resource for updating an AWS API Gateway REST API with a new API description.

~> **NOTE:** When importing an OpenAPI specification using the `body` argument, the `info.title` field updates the `name` of the [`aws_api_gateway_rest_api`](/docs/providers/aws/r/api_gateway_rest_api.html). If the imported `title` differs from the configured `name`, Terraform will report the difference.

## Example Usage

### Basic Usage

```terraform
resource "aws_api_gateway_rest_api_put" "example" {
  body = jsonencode({
    swagger = "2.0"
    info = {
      title   = "Example API"
      version = "v1"
    }
    schemes = ["https"]
    paths = {
      "/example" = {
        get = {
          responses = {
            "200" = {
              description = "OK"
            }
          }
          x-amazon-apigateway-integration = {
            httpMethod = "GET"
            type       = "HTTP"
            responses = {
              default = {
                statusCode = 200
              }
            }
            uri = "https://api.example.com/"
          }
        }
      }
    }
  })

  fail_on_warnings = true
  rest_api_id      = aws_api_gateway_rest_api.example.id
}
```

### Multi-stage

This example demonstrates how to use `aws_api_gateway_rest_api_put` to manage blue-green deployments and multi-stage APIs in Amazon API Gateway with Swagger/OpenAPI. The new resource provides native support for a simple and reliable process.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from cdktf import TerraformResourceLifecycle, TerraformResourceLifecycle, TerraformResourceLifecycle, TerraformResourceLifecycle
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_deployment import ApiGatewayDeployment
from imports.aws.api_gateway_rest_api import ApiGatewayRestApi
from imports.aws.api_gateway_rest_api_put import ApiGatewayRestApiPut
from imports.aws.api_gateway_stage import ApiGatewayStage
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = ApiGatewayRestApi(self, "example",
            name="Example API"
        )
        examplev1 = ApiGatewayRestApiPut(self, "examplev1",
            body=Token.as_string(Fn.file("v1.yaml")),
            fail_on_warnings=True,
            lifecycle=TerraformResourceLifecycle(
                create_before_destroy=True
            ),
            rest_api_id=example.id,
            triggers={
                "redeployment": Token.as_string(
                    Fn.sha1(Token.as_string(Fn.file("v1.yaml"))))
            }
        )
        aws_api_gateway_deployment_examplev1 = ApiGatewayDeployment(self, "examplev1_2",
            lifecycle=TerraformResourceLifecycle(
                create_before_destroy=True
            ),
            rest_api_id=example.id,
            triggers={
                "redeployment": Token.as_string(
                    Fn.lookup_nested(examplev1, ["triggers", "redeployment"]))
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_deployment_examplev1.override_logical_id("examplev1")
        aws_api_gateway_stage_examplev1 = ApiGatewayStage(self, "examplev1_3",
            deployment_id=Token.as_string(aws_api_gateway_deployment_examplev1.id),
            rest_api_id=example.id,
            stage_name="v1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_stage_examplev1.override_logical_id("examplev1")
        examplev2 = ApiGatewayRestApiPut(self, "examplev2",
            body=Token.as_string(Fn.file("v2.yaml")),
            depends_on=[aws_api_gateway_stage_examplev1],
            fail_on_warnings=True,
            lifecycle=TerraformResourceLifecycle(
                create_before_destroy=True
            ),
            rest_api_id=example.id,
            triggers={
                "redeployment": Token.as_string(
                    Fn.sha1(Token.as_string(Fn.file("v2.yaml"))))
            }
        )
        aws_api_gateway_deployment_examplev2 = ApiGatewayDeployment(self, "examplev2_5",
            lifecycle=TerraformResourceLifecycle(
                create_before_destroy=True
            ),
            rest_api_id=example.id,
            triggers={
                "redeployment": Token.as_string(
                    Fn.lookup_nested(examplev2, ["triggers", "redeployment"]))
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_deployment_examplev2.override_logical_id("examplev2")
        aws_api_gateway_stage_examplev2 = ApiGatewayStage(self, "examplev2_6",
            deployment_id=Token.as_string(aws_api_gateway_deployment_examplev2.id),
            rest_api_id=example.id,
            stage_name="v2"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_stage_examplev2.override_logical_id("examplev2")
```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `body` - (Required) PUT request body containing external API definitions. Currently, only OpenAPI definition JSON/YAML files are supported. The maximum size of the API definition file is 6MB.
* `rest_api_id` - (Required) Identifier of the associated REST API.

The following arguments are optional:

* `region` â€“ (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `fail_on_warnings` - (Optional) Whether to rollback the API update when a warning is encountered. The default value is `false`.
* `parameters` - (Optional) Map of customizations for importing the specification in the `body` argument. For example, to exclude DocumentationParts from an imported API, use `ignore = "documentation"`. Additional documentation, including other parameters such as `basepath`, can be found in the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html).
* `triggers` - (Optional) Map of arbitrary keys and values that, when changed, will trigger a redeployment. To force a redeployment without changing these keys/values, use the [`-replace` option](https://developer.hashicorp.com/terraform/cli/commands/plan#replace-address) with `terraform plan` or `terraform apply`.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import API Gateway REST API Put using the `rest_api_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_rest_api_put import ApiGatewayRestApiPut
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ApiGatewayRestApiPut.generate_config_for_import(self, "example", "import-id-12345678")
```

Using `terraform import`, import API Gateway REST API Put using the `rest_api_id`. For example:

```console
% terraform import aws_api_gateway_rest_api_put.example import-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-cd97553ae2589033d667dbf038c2ba2f18db0f7b95b0dabe5b891d3421b89b7e -->