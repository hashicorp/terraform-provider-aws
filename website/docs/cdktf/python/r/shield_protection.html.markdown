---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_protection"
description: |-
  Enables AWS Shield Advanced for a specific AWS resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_protection

Enables AWS Shield Advanced for a specific AWS resource.
The resource can be an Amazon CloudFront distribution, Elastic Load Balancing load balancer, AWS Global Accelerator accelerator, Elastic IP Address, or an Amazon Route 53 hosted zone.

## Example Usage

### Create protection

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_availability_zones import DataAwsAvailabilityZones
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.eip import Eip
from imports.aws.shield_protection import ShieldProtection
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Eip(self, "example",
            domain="vpc"
        )
        DataAwsAvailabilityZones(self, "available")
        current = DataAwsCallerIdentity(self, "current")
        data_aws_region_current = DataAwsRegion(self, "current_3")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        aws_shield_protection_example = ShieldProtection(self, "example_4",
            name="example",
            resource_arn="arn:aws:ec2:${" + data_aws_region_current.name + "}:${" + current.account_id + "}:eip-allocation/${" + example.id + "}",
            tags={
                "Environment": "Dev"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_shield_protection_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) A friendly name for the Protection you are creating.
* `resource_arn` - (Required) The ARN (Amazon Resource Name) of the resource to be protected.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The unique identifier (ID) for the Protection object that is created.
* `arn` - The ARN of the Protection.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield protection resources using specifying their ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.shield_protection import ShieldProtection
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ShieldProtection.generate_config_for_import(self, "example", "ff9592dc-22f3-4e88-afa1-7b29fde9669a")
```

Using `terraform import`, import Shield protection resources using specifying their ID. For example:

```console
% terraform import aws_shield_protection.example ff9592dc-22f3-4e88-afa1-7b29fde9669a
```

<!-- cache-key: cdktf-0.20.8 input-35847768aaaa80ceec4dd0e0320b0024c8b87792dc136354d8b49f64094399b6 -->