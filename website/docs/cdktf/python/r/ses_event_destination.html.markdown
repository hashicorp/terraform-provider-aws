---
subcategory: "SES (Simple Email)"
layout: "aws"
page_title: "AWS: aws_ses_event_destination"
description: |-
  Provides an SES event destination
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ses_event_destination

Provides an SES event destination

## Example Usage

### CloudWatch Destination

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ses_event_destination import SesEventDestination
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SesEventDestination(self, "cloudwatch",
            cloudwatch_destination=[SesEventDestinationCloudwatchDestination(
                default_value="default",
                dimension_name="dimension",
                value_source="emailHeader"
            )
            ],
            configuration_set_name=example.name,
            enabled=True,
            matching_types=["bounce", "send"],
            name="event-destination-cloudwatch"
        )
```

### Kinesis Destination

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ses_event_destination import SesEventDestination
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SesEventDestination(self, "kinesis",
            configuration_set_name=example.name,
            enabled=True,
            kinesis_destination=SesEventDestinationKinesisDestination(
                role_arn=Token.as_string(aws_iam_role_example.arn),
                stream_arn=Token.as_string(aws_kinesis_firehose_delivery_stream_example.arn)
            ),
            matching_types=["bounce", "send"],
            name="event-destination-kinesis"
        )
```

### SNS Destination

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ses_event_destination import SesEventDestination
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SesEventDestination(self, "sns",
            configuration_set_name=example.name,
            enabled=True,
            matching_types=["bounce", "send"],
            name="event-destination-sns",
            sns_destination=SesEventDestinationSnsDestination(
                topic_arn=Token.as_string(aws_sns_topic_example.arn)
            )
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the event destination
* `configuration_set_name` - (Required) The name of the configuration set
* `enabled` - (Optional) If true, the event destination will be enabled
* `matching_types` - (Required) A list of matching types. May be any of `"send"`, `"reject"`, `"bounce"`, `"complaint"`, `"delivery"`, `"open"`, `"click"`, or `"renderingFailure"`.
* `cloudwatch_destination` - (Optional) CloudWatch destination for the events
* `kinesis_destination` - (Optional) Send the events to a kinesis firehose destination
* `sns_destination` - (Optional) Send the events to an SNS Topic destination

~> **NOTE:** You can specify `"cloudwatch_destination"` or `"kinesis_destination"` but not both

### cloudwatch_destination Argument Reference

* `default_value` - (Required) The default value for the event
* `dimension_name` - (Required) The name for the dimension
* `value_source` - (Required) The source for the value. May be any of `"messageTag"`, `"emailHeader"` or `"linkTag"`.

### kinesis_destination Argument Reference

* `stream_arn` - (Required) The ARN of the Kinesis Stream
* `role_arn` - (Required) The ARN of the role that has permissions to access the Kinesis Stream

### sns_destination Argument Reference

* `topic_arn` - (Required) The ARN of the SNS topic

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The SES event destination name.
* `arn` - The SES event destination ARN.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SES event destinations using `configuration_set_name` together with the event destination's `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ses_event_destination import SesEventDestination
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SesEventDestination.generate_config_for_import(self, "sns", "some-configuration-set-test/event-destination-sns")
```

Using `terraform import`, import SES event destinations using `configuration_set_name` together with the event destination's `name`. For example:

```console
% terraform import aws_ses_event_destination.sns some-configuration-set-test/event-destination-sns
```

<!-- cache-key: cdktf-0.20.8 input-03d0657b4ec477015386f442c464924c2a2cf73364ec9a281d1dab9658fde299 -->