---
subcategory: "Clean Rooms"
layout: "aws"
page_title: "AWS: aws_cleanrooms_membership"
description: |-
  Provides a Clean Rooms Membership.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cleanrooms_membership

Provides a AWS Clean Rooms membership. Memberships are used to join a Clean Rooms collaboration by the invited member.

## Example Usage

### Membership with tags

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import CleanroomsMembership
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CleanroomsMembership(self, "test_membership",
            collaboration_id="1234abcd-12ab-34cd-56ef-1234567890ab",
            default_result_configuration=[{
                "output_configuration": [{
                    "s3": [{
                        "bucket": "test-bucket",
                        "key_prefix": "test-prefix",
                        "result_format": "PARQUET"
                    }
                    ]
                }
                ],
                "role_arn": "arn:aws:iam::123456789012:role/role-name"
            }
            ],
            query_log_status="DISABLED",
            tags={
                "Project": "Terraform"
            }
        )
```

## Argument Reference

This resource supports the following arguments:

* `collaboration_id` - (Required - Forces new resource) - The ID of the collaboration to which the member was invited.
* `query_log_status` - (Required) - An indicator as to whether query logging has been enabled or disabled for the membership.
* `default_result_configuration` - (Optional) - The default configuration for a query result.
    - `role_arn` - (Optional) - The ARN of the IAM role which will be used to create the membership.
    - `output_configuration.s3.bucket` - (Required) - The name of the S3 bucket where the query results will be stored.
    - `output_configuration.s3.result_format` - (Required) - The format of the query results. Valid values are `PARQUET` and `CSV`.
    - `output_configuration.s3.key_prefix` - (Optional) - The prefix used for the query results.
* `tags` - (Optional) - Key value pairs which tag the membership.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the membership.
* `collaboration_arn` - The ARN of the joined collaboration.
* `collaboration_creator_account_id` - The account ID of the collaboration's creator.
* `collaboration_creator_display_name` - The display name of the collaboration's creator.
* `collaboration_id` - The ID of the joined collaboration.
* `collaboration_name` - The name of the joined collaboration.
* `create_time` - The date and time the membership was created.
* `id` - The ID of the membership.
* `member_abilities` - The list of abilities for the invited member.
* `payment_configuration.query_compute.is_responsible` - Indicates whether the collaboration member has accepted to pay for query compute costs.
* `status` - The status of the membership.
* `update_time` - The date and time the membership was last updated.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_cleanrooms_membership` using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import CleanroomsMembership
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CleanroomsMembership.generate_config_for_import(self, "membership", "1234abcd-12ab-34cd-56ef-1234567890ab")
```

Using `terraform import`, import `aws_cleanrooms_membership` using the `id`. For example:

```console
% terraform import aws_cleanrooms_membership.membership 1234abcd-12ab-34cd-56ef-1234567890ab
```

<!-- cache-key: cdktf-0.20.8 input-b4a2562424f6a2206618f8794cecefbac33cae9fe28adc0f54921765fdcb956a -->