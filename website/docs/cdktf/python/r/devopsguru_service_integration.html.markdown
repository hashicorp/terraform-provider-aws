---
subcategory: "DevOps Guru"
layout: "aws"
page_title: "AWS: aws_devopsguru_service_integration"
description: |-
  Terraform resource for managing an AWS DevOps Guru Service Integration.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_devopsguru_service_integration

Terraform resource for managing an AWS DevOps Guru Service Integration.

~> To prevent unintentional deletion of account wide settings, destruction of this resource will only remove it from the Terraform state. To disable any configured settings, explicitly set the opt-in value to `DISABLED` and apply again before destroying.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.devopsguru_service_integration import DevopsguruServiceIntegration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DevopsguruServiceIntegration(self, "example",
            kms_server_side_encryption=[DevopsguruServiceIntegrationKmsServerSideEncryption(
                opt_in_status="ENABLED",
                type="AWS_OWNED_KMS_KEY"
            )
            ],
            logs_anomaly_detection=[DevopsguruServiceIntegrationLogsAnomalyDetection(
                opt_in_status="ENABLED"
            )
            ],
            ops_center=[DevopsguruServiceIntegrationOpsCenter(
                opt_in_status="ENABLED"
            )
            ]
        )
```

### Customer Managed KMS Key

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.devopsguru_service_integration import DevopsguruServiceIntegration
from imports.aws.kms_key import KmsKey
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DevopsguruServiceIntegration(self, "example",
            kms_server_side_encryption=[DevopsguruServiceIntegrationKmsServerSideEncryption(
                kms_key_id=test.arn,
                opt_in_status="ENABLED",
                type="CUSTOMER_MANAGED_KEY"
            )
            ],
            logs_anomaly_detection=[DevopsguruServiceIntegrationLogsAnomalyDetection(
                opt_in_status="DISABLED"
            )
            ],
            ops_center=[DevopsguruServiceIntegrationOpsCenter(
                opt_in_status="DISABLED"
            )
            ]
        )
        aws_kms_key_example = KmsKey(self, "example_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_kms_key_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `kms_server_side_encryption` - (Required) Information about whether DevOps Guru is configured to encrypt server-side data using KMS. See [`kms_server_side_encryption`](#kms_server_side_encryption-argument-reference) below.
* `logs_anomaly_detection` - (Required) Information about whether DevOps Guru is configured to perform log anomaly detection on Amazon CloudWatch log groups. See [`logs_anomaly_detection`](#logs_anomaly_detection-argument-reference) below.
* `ops_center` - (Required) Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight. See [`ops_center`](#ops_center-argument-reference) below.

### `kms_server_side_encryption` Argument Reference

* `kms_key_id` - (Optional) KMS key ID. This value can be a key ID, key ARN, alias name, or alias ARN.
* `opt_in_status` - (Optional) Specifies whether KMS integration is enabled. Valid values are `DISABLED` and `ENABLED`.
* `type` - (Optional) Type of KMS key used. Valid values are `CUSTOMER_MANAGED_KEY` and `AWS_OWNED_KMS_KEY`.

### `logs_anomaly_detection` Argument Reference

* `opt_in_status` - (Optional) Specifies if DevOps Guru is configured to perform log anomaly detection on CloudWatch log groups. Valid values are `DISABLED` and `ENABLED`.

### `ops_center` Argument Reference

* `opt_in_status` - (Optional) Specifies if DevOps Guru is enabled to create an AWS Systems Manager OpsItem for each created insight. Valid values are `DISABLED` and `ENABLED`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - AWS region.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DevOps Guru Service Integration using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.devopsguru_service_integration import DevopsguruServiceIntegration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DevopsguruServiceIntegration.generate_config_for_import(self, "example", "us-east-1")
```

Using `terraform import`, import DevOps Guru Service Integration using the `id`. For example:

```console
% terraform import aws_devopsguru_service_integration.example us-east-1
```

<!-- cache-key: cdktf-0.20.1 input-0c0aa0911c91dae00d26a1e9478709973585d673da1c08a6bc93c3f155e5f8dc -->