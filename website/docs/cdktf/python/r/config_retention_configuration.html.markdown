---
subcategory: "Config"
layout: "aws"
page_title: "AWS: aws_config_retention_configuration"
description: |-
  Provides a resource to manage the AWS Config retention configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_config_retention_configuration

Provides a resource to manage the AWS Config retention configuration.
The retention configuration defines the number of days that AWS Config stores historical information.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.config_retention_configuration import ConfigRetentionConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConfigRetentionConfiguration(self, "example",
            retention_period_in_days=90
        )
```

## Argument Reference

This resource supports the following arguments:

* `retention_period_in_days` - (Required) The number of days AWS Config stores historical information.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `name` - The name of the retention configuration object. The object is always named **default**.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the AWS Config retention configuration using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.config_retention_configuration import ConfigRetentionConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConfigRetentionConfiguration.generate_config_for_import(self, "example", "default")
```

Using `terraform import`, import the AWS Config retention configuration using the `name`. For example:

```console
% terraform import aws_config_retention_configuration.example default
```

<!-- cache-key: cdktf-0.20.1 input-88006c84e252788c1b1b45524f16429e26ae45e417e3388435149648cc3849f4 -->