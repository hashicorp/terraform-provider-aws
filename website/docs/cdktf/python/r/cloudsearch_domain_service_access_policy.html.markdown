---
subcategory: "CloudSearch"
layout: "aws"
page_title: "AWS: aws_cloudsearch_domain_service_access_policy"
description: |-
  Provides an CloudSearch domain service access policy resource. 
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudsearch_domain_service_access_policy

Provides an CloudSearch domain service access policy resource.

Terraform waits for the domain service access policy to become `Active` when applying a configuration.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudsearch_domain import CloudsearchDomain
from imports.aws.cloudsearch_domain_service_access_policy import CloudsearchDomainServiceAccessPolicy
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CloudsearchDomain(self, "example",
            name="example-domain"
        )
        data_aws_iam_policy_document_example = DataAwsIamPolicyDocument(self, "example_1",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["cloudsearch:search", "cloudsearch:document"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="IpAddress",
                    values=["192.0.2.0/32"],
                    variable="aws:SourceIp"
                )
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="*"
                )
                ],
                sid="search_only"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
        aws_cloudsearch_domain_service_access_policy_example =
        CloudsearchDomainServiceAccessPolicy(self, "example_2",
            access_policy=Token.as_string(data_aws_iam_policy_document_example.json),
            domain_name=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudsearch_domain_service_access_policy_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `access_policy` - (Required) The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
* `domain_name` - (Required) The CloudSearch domain name the policy applies to.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `update` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudSearch domain service access policies using the domain name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudsearch_domain_service_access_policy import CloudsearchDomainServiceAccessPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudsearchDomainServiceAccessPolicy.generate_config_for_import(self, "example", "example-domain")
```

Using `terraform import`, import CloudSearch domain service access policies using the domain name. For example:

```console
% terraform import aws_cloudsearch_domain_service_access_policy.example example-domain
```

<!-- cache-key: cdktf-0.20.8 input-c2ebea6afae4e24a2fd5837f7a4fbdb9c6667ec6f7293e498314a0c3b1c43e87 -->