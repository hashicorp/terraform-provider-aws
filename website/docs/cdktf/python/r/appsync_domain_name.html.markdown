---
subcategory: "AppSync"
layout: "aws"
page_title: "AWS: aws_appsync_domain_name"
description: |-
  Provides an AppSync Domain Name.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appsync_domain_name

Provides an AppSync Domain Name.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appsync_domain_name import AppsyncDomainName
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AppsyncDomainName(self, "example",
            certificate_arn=Token.as_string(aws_acm_certificate_example.arn),
            domain_name="api.example.com"
        )
```

## Argument Reference

This resource supports the following arguments:

* `certificate_arn` - (Required) ARN of the certificate. This can be an Certificate Manager (ACM) certificate or an Identity and Access Management (IAM) server certificate. The certifiacte must reside in us-east-1.
* `description` - (Optional)  A description of the Domain Name.
* `domain_name` - (Required) Domain name.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Appsync Domain Name.
* `appsync_domain_name` - Domain name that AppSync provides.
* `hosted_zone_id` - ID of your Amazon Route 53 hosted zone.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_appsync_domain_name` using the AppSync domain name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appsync_domain_name import AppsyncDomainName
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AppsyncDomainName.generate_config_for_import(self, "example", "example.com")
```

Using `terraform import`, import `aws_appsync_domain_name` using the AppSync domain name. For example:

```console
% terraform import aws_appsync_domain_name.example example.com
```

<!-- cache-key: cdktf-0.20.8 input-c850eb2b8026013d6a49e351a9f3cc357c29b074be725be34e7d5f3683fad68c -->