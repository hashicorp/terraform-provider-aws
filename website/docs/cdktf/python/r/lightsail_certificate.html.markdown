---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_certificate"
description: |-
  Manages a Lightsail SSL/TLS certificate for custom domains.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_certificate

Manages a Lightsail certificate. Use this resource to create and manage SSL/TLS certificates for securing custom domains with your Lightsail resources.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_certificate import LightsailCertificate
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailCertificate(self, "example",
            domain_name="example.com",
            name="example-certificate",
            subject_alternative_names=["www.example.com"]
        )
```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the certificate.

The following arguments are optional:

* `domain_name` - (Optional) Domain name for which the certificate should be issued.
* `subject_alternative_names` - (Optional) Set of domains that should be SANs in the issued certificate. `domain_name` attribute is automatically added as a Subject Alternative Name.
* `tags` - (Optional) Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the certificate.
* `created_at` - Date and time when the certificate was created.
* `domain_validation_options` - Set of domain validation objects which can be used to complete certificate validation. Can have more than one element, e.g., if SANs are defined. Each element contains the following attributes:
    * `domain_name` - Domain name for which the certificate should be issued.
    * `resource_record_name` - Name of the DNS record to create to validate the certificate.
    * `resource_record_type` - Type of DNS record to create to validate the certificate.
    * `resource_record_value` - Value of the DNS record to create to validate the certificate.
* `id` - Name of the certificate (matches `name`).
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_certificate` using the certificate name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_certificate import LightsailCertificate
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailCertificate.generate_config_for_import(self, "example", "example-certificate")
```

Using `terraform import`, import `aws_lightsail_certificate` using the certificate name. For example:

```console
% terraform import aws_lightsail_certificate.example example-certificate
```

<!-- cache-key: cdktf-0.20.8 input-2f9ebe13f2be647da3eddd223b9be7740eddda2d64c7849444589023c5f3e4bf -->