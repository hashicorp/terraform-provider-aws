---
subcategory: "ACM PCA (Certificate Manager Private Certificate Authority)"
layout: "aws"
page_title: "AWS: aws_acmpca_policy"
description: |-
  Attaches a resource based policy to an AWS Certificate Manager Private Certificate Authority (ACM PCA)
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_acmpca_policy

Attaches a resource based policy to a private CA.

## Example Usage

### Basic

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.acmpca_policy import AcmpcaPolicy
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsIamPolicyDocument(self, "example",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["acm-pca:DescribeCertificateAuthority", "acm-pca:GetCertificate", "acm-pca:GetCertificateAuthorityCertificate", "acm-pca:ListPermissions", "acm-pca:ListTags"
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=[Token.as_string(current.account_id)],
                    type="AWS"
                )
                ],
                resources=[Token.as_string(aws_acmpca_certificate_authority_example.arn)],
                sid="1"
            ), DataAwsIamPolicyDocumentStatement(
                actions=["acm-pca:IssueCertificate"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="StringEquals",
                    values=["arn:aws:acm-pca:::template/EndEntityCertificate/V1"],
                    variable="acm-pca:TemplateArn"
                )
                ],
                effect=allow,
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=[Token.as_string(current.account_id)],
                    type="AWS"
                )
                ],
                resources=[Token.as_string(aws_acmpca_certificate_authority_example.arn)],
                sid="2"
            )
            ]
        )
        aws_acmpca_policy_example = AcmpcaPolicy(self, "example_1",
            policy=Token.as_string(example.json),
            resource_arn=Token.as_string(aws_acmpca_certificate_authority_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_acmpca_policy_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `resource_arn` - (Required) ARN of the private CA to associate with the policy.
* `policy` - (Required) JSON-formatted IAM policy to attach to the specified private CA resource.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_acmpca_policy` using the `resource_arn` value. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.acmpca_policy import AcmpcaPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AcmpcaPolicy.generate_config_for_import(self, "example", "arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012")
```

Using `terraform import`, import `aws_acmpca_policy` using the `resource_arn` value. For example:

```console
% terraform import aws_acmpca_policy.example arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012
```

<!-- cache-key: cdktf-0.20.8 input-3897a945f24b08cf8623246e958727ed8480522a140850c9c8a5a835f4ee024d -->