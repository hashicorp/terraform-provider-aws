---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_vpc_attachment"
description: |-
  Terraform resource for managing an AWS Network Manager VPC Attachment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_vpc_attachment

Terraform resource for managing an AWS Network Manager VPC Attachment.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmanager_vpc_attachment import NetworkmanagerVpcAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NetworkmanagerVpcAttachment(self, "example",
            core_network_id=Token.as_string(awscc_networkmanager_core_network_example.id),
            subnet_arns=[Token.as_string(aws_subnet_example.arn)],
            vpc_arn=Token.as_string(aws_vpc_example.arn)
        )
```

## Argument Reference

The following arguments are required:

* `core_network_id` - (Required) The ID of a core network for the VPC attachment.
* `subnet_arns` - (Required) The subnet ARN of the VPC attachment.
* `vpc_arn` - (Required) The ARN of the VPC.

The following arguments are optional:

* `options` - (Optional) Options for the VPC attachment.
* `tags` - (Optional) Key-value tags for the attachment. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### options

* `appliance_mode_support` - (Optional) Indicates whether appliance mode is supported.
  If enabled, traffic flow between a source and destination use the same Availability Zone for the VPC attachment for the lifetime of that flow.
  If the VPC attachment is pending acceptance, changing this value will recreate the resource.
* `ipv6_support` - (Optional) Indicates whether IPv6 is supported.
  If the VPC attachment is pending acceptance, changing this value will recreate the resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the attachment.
* `attachment_policy_rule_number` - The policy rule number associated with the attachment.
* `attachment_type` - The type of attachment.
* `core_network_arn` - The ARN of a core network.
* `edge_location` - The Region where the edge is located.
* `id` - The ID of the attachment.
* `owner_account_id` - The ID of the attachment account owner.
* `resource_arn` - The attachment resource ARN.
* `segment_name` - The name of the segment attachment.
* `state` - The state of the attachment.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_vpc_attachment` using the attachment ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmanager_vpc_attachment import NetworkmanagerVpcAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NetworkmanagerVpcAttachment.generate_config_for_import(self, "example", "attachment-0f8fa60d2238d1bd8")
```

Using `terraform import`, import `aws_networkmanager_vpc_attachment` using the attachment ID. For example:

```console
% terraform import aws_networkmanager_vpc_attachment.example attachment-0f8fa60d2238d1bd8
```

<!-- cache-key: cdktf-0.20.8 input-cc1d154d9a55335caf00aadaab7fbce5215f86bb670f30c6fb7dce2d8c50b3ac -->