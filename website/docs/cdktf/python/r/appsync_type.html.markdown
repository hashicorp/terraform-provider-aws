---
subcategory: "AppSync"
layout: "aws"
page_title: "AWS: aws_appsync_type"
description: |-
  Provides an AppSync Type.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appsync_type

Provides an AppSync Type.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appsync_graphql_api import AppsyncGraphqlApi
from imports.aws.appsync_type import AppsyncType
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = AppsyncGraphqlApi(self, "example",
            authentication_type="API_KEY",
            name="example"
        )
        aws_appsync_type_example = AppsyncType(self, "example_1",
            api_id=example.id,
            definition="type Mutation\n\n{\nputPost(id: ID!,title: String! ): Post\n\n}\n\n",
            format="SDL"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appsync_type_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `api_id` - (Required) GraphQL API ID.
* `format` - (Required) The type format: `SDL` or `JSON`.
* `definition` - (Required) The type definition.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the type.
* `description` - The type description.
* `id` - The ID is constructed from `api-id:format:name`.
* `name` - The type name.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Appsync Types using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appsync_type import AppsyncType
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AppsyncType.generate_config_for_import(self, "example", "api-id:format:name")
```

Using `terraform import`, import Appsync Types using the `id`. For example:

```console
% terraform import aws_appsync_type.example api-id:format:name
```

<!-- cache-key: cdktf-0.20.8 input-583d1e739ac827e753ccd0e8ee386fa69ac34d8c7a9c5385c707c9de6772d943 -->