---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_db_event_subscription"
description: |-
  Provides a DB event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_db_event_subscription

Provides a DB event subscription resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.db_event_subscription import DbEventSubscription
from imports.aws.db_instance import DbInstance
from imports.aws.sns_topic import SnsTopic
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        default_var = DbInstance(self, "default",
            allocated_storage=10,
            db_name="mydb",
            db_subnet_group_name="my_database_subnet_group",
            engine="mysql",
            engine_version="5.6.17",
            instance_class="db.t2.micro",
            parameter_group_name="default.mysql5.6",
            password="bar",
            username="foo"
        )
        aws_sns_topic_default = SnsTopic(self, "default_1",
            name="rds-events"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sns_topic_default.override_logical_id("default")
        aws_db_event_subscription_default = DbEventSubscription(self, "default_2",
            event_categories=["availability", "deletion", "failover", "failure", "low storage", "maintenance", "notification", "read replica", "recovery", "restoration"
            ],
            name="rds-event-sub",
            sns_topic=Token.as_string(aws_sns_topic_default.arn),
            source_ids=[default_var.identifier],
            source_type="db-instance"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_db_event_subscription_default.override_logical_id("default")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional) The name of the DB event subscription. By default generated by Terraform.
* `name_prefix` - (Optional) The name of the DB event subscription. Conflicts with `name`.
* `sns_topic` - (Required) The SNS topic to send events to.
* `source_ids` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
* `source_type` - (Optional) The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster`, `db-cluster-snapshot`, or `db-proxy`. If not set, all sources will be subscribed to.
* `event_categories` - (Optional) A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run `aws rds describe-event-categories`.
* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to true.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the RDS event notification subscription
* `arn` - The Amazon Resource Name of the RDS event notification subscription
* `customer_aws_id` - The AWS customer account associated with the RDS event notification subscription
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `40m`)
- `delete` - (Default `40m`)
- `update` - (Default `40m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DB Event Subscriptions using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.db_event_subscription import DbEventSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DbEventSubscription.generate_config_for_import(self, "default", "rds-event-sub")
```

Using `terraform import`, import DB Event Subscriptions using the `name`. For example:

```console
% terraform import aws_db_event_subscription.default rds-event-sub
```

<!-- cache-key: cdktf-0.20.8 input-cb5fc34abd6de28afa1d0edc0e2b55d536c749f2cbd0845b420b9fb388541aff -->