---
subcategory: "AppSync"
layout: "aws"
page_title: "AWS: aws_appsync_api_cache"
description: |-
  Provides an AppSync API Cache.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appsync_api_cache

Provides an AppSync API Cache.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appsync_api_cache import AppsyncApiCache
from imports.aws.appsync_graphql_api import AppsyncGraphqlApi
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = AppsyncGraphqlApi(self, "example",
            authentication_type="API_KEY",
            name="example"
        )
        aws_appsync_api_cache_example = AppsyncApiCache(self, "example_1",
            api_caching_behavior="FULL_REQUEST_CACHING",
            api_id=example.id,
            ttl=900,
            type="LARGE"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appsync_api_cache_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `api_id` - (Required) GraphQL API ID.
* `api_caching_behavior` - (Required) Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.
* `type` - (Required) Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.
* `ttl` - (Required) TTL in seconds for cache entries.
* `at_rest_encryption_enabled` - (Optional) At-rest encryption flag for cache. You cannot update this setting after creation.
* `transit_encryption_enabled` - (Optional) Transit encryption flag when connecting to cache. You cannot update this setting after creation.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - AppSync API ID.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_appsync_api_cache` using the AppSync API ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appsync_api_cache import AppsyncApiCache
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AppsyncApiCache.generate_config_for_import(self, "example", "xxxxx")
```

Using `terraform import`, import `aws_appsync_api_cache` using the AppSync API ID. For example:

```console
% terraform import aws_appsync_api_cache.example xxxxx
```

<!-- cache-key: cdktf-0.20.8 input-7b300ac441f82586ce425ea9b3f1fabbacd0aa2e6e9a8cba068619ac2633970e -->