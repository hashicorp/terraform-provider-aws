---
subcategory: "EMR Containers"
layout: "aws"
page_title: "AWS: aws_emrcontainers_virtual_cluster"
description: |-
  Manages an EMR Containers (EMR on EKS) Virtual Cluster
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_emrcontainers_virtual_cluster

Manages an EMR Containers (EMR on EKS) Virtual Cluster.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.emrcontainers_virtual_cluster import EmrcontainersVirtualCluster
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EmrcontainersVirtualCluster(self, "example",
            container_provider=EmrcontainersVirtualClusterContainerProvider(
                id=Token.as_string(aws_eks_cluster_example.name),
                info=EmrcontainersVirtualClusterContainerProviderInfo(
                    eks_info=EmrcontainersVirtualClusterContainerProviderInfoEksInfo(
                        namespace="default"
                    )
                ),
                type="EKS"
            ),
            name="example"
        )
```

## Argument Reference

The following arguments are required:

* `container_provider` - (Required) Configuration block for the container provider associated with your cluster.
* `name` â€“ (Required) Name of the virtual cluster.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### container_provider Arguments

* `id` - The name of the container provider that is running your EMR Containers cluster
* `info` - Nested list containing information about the configuration of the container provider
    * `eks_info` - Nested list containing EKS-specific information about the cluster where the EMR Containers cluster is running
        * `namespace` - The namespace where the EMR Containers cluster is running
* `type` - The type of the container provider

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the cluster.
* `id` - The ID of the cluster.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EKS Clusters using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.emrcontainers_virtual_cluster import EmrcontainersVirtualCluster
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EmrcontainersVirtualCluster.generate_config_for_import(self, "example", "a1b2c3d4e5f6g7h8i9j10k11l")
```

Using `terraform import`, import EKS Clusters using the `id`. For example:

```console
% terraform import aws_emrcontainers_virtual_cluster.example a1b2c3d4e5f6g7h8i9j10k11l
```

<!-- cache-key: cdktf-0.20.8 input-221e0f1e69a0b4a1b86a8c23d4aa75c1195f9ddf4419494ec9832c76d6a2f913 -->