---
subcategory: "S3 Tables"
layout: "aws"
page_title: "AWS: aws_s3tables_table_bucket_policy"
description: |-
  Terraform resource for managing an Amazon S3 Tables Table Bucket Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3tables_table_bucket_policy

Terraform resource for managing an Amazon S3 Tables Table Bucket Policy.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.s3_tables_table_bucket import S3TablesTableBucket
from imports.aws.s3_tables_table_bucket_policy import S3TablesTableBucketPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        S3TablesTableBucket(self, "test",
            name="example-bucket"
        )
        example = DataAwsIamPolicyDocument(self, "example",
            statement=[DataAwsIamPolicyDocumentStatement()]
        )
        aws_s3_tables_table_bucket_policy_example = S3TablesTableBucketPolicy(self, "example_2",
            resource_policy=Token.as_string(example.json),
            table_bucket_arn=Token.as_string(aws_s3_tables_table_bucket_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_s3_tables_table_bucket_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `resource_policy` - (Required) Amazon Web Services resource-based policy document in JSON format.
* `table_bucket_arn` - (Required, Forces new resource) ARN referencing the Table Bucket that owns this policy.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 Tables Table Bucket Policy using the `table_bucket_arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.s3_tables_table_bucket_policy import S3TablesTableBucketPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        S3TablesTableBucketPolicy.generate_config_for_import(self, "example", "arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace")
```

Using `terraform import`, import S3 Tables Table Bucket Policy using the `table_bucket_arn`. For example:

```console
% terraform import aws_s3tables_table_bucket_policy.example 'arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace'
```

<!-- cache-key: cdktf-0.20.8 input-e90d8cbe85a8e206adc9416680fdce9dd039618ff3857976bd8adc2d7e5d54c8 -->