---
subcategory: "Athena"
layout: "aws"
page_title: "AWS: aws_athena_named_query"
description: |-
  Provides an Athena Named Query resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_athena_named_query

Provides an Athena Named Query resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.athena_database import AthenaDatabase
from imports.aws.athena_named_query import AthenaNamedQuery
from imports.aws.athena_workgroup import AthenaWorkgroup
from imports.aws.kms_key import KmsKey
from imports.aws.s3_bucket import S3Bucket
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = KmsKey(self, "test",
            deletion_window_in_days=7,
            description="Athena KMS Key"
        )
        hoge = S3Bucket(self, "hoge",
            bucket="tf-test"
        )
        aws_athena_database_hoge = AthenaDatabase(self, "hoge_2",
            bucket=hoge.id,
            name="users"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_athena_database_hoge.override_logical_id("hoge")
        aws_athena_workgroup_test = AthenaWorkgroup(self, "test_3",
            configuration=AthenaWorkgroupConfiguration(
                result_configuration=AthenaWorkgroupConfigurationResultConfiguration(
                    encryption_configuration=AthenaWorkgroupConfigurationResultConfigurationEncryptionConfiguration(
                        encryption_option="SSE_KMS",
                        kms_key_arn=test.arn
                    )
                )
            ),
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_athena_workgroup_test.override_logical_id("test")
        AthenaNamedQuery(self, "foo",
            database=Token.as_string(aws_athena_database_hoge.name),
            name="bar",
            query="SELECT * FROM ${" + aws_athena_database_hoge.name + "} limit 10;",
            workgroup=Token.as_string(aws_athena_workgroup_test.id)
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Plain language name for the query. Maximum length of 128.
* `workgroup` - (Optional) Workgroup to which the query belongs. Defaults to `primary`
* `database` - (Required) Database to which the query belongs.
* `query` - (Required) Text of the query itself. In other words, all query statements. Maximum length of 262144.
* `description` - (Optional) Brief explanation of the query. Maximum length of 1024.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique ID of the query.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Athena Named Query using the query ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.athena_named_query import AthenaNamedQuery
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AthenaNamedQuery.generate_config_for_import(self, "example", "0123456789")
```

Using `terraform import`, import Athena Named Query using the query ID. For example:

```console
% terraform import aws_athena_named_query.example 0123456789
```

<!-- cache-key: cdktf-0.20.8 input-47b0d06df589479137354b1a06a5e12352b544e95a27f4e5bc2dec9fa0224790 -->