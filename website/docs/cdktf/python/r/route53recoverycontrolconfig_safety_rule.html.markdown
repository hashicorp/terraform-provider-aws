---
subcategory: "Route 53 Recovery Control Config"
layout: "aws"
page_title: "AWS: aws_route53recoverycontrolconfig_safety_rule"
description: |-
  Provides an AWS Route 53 Recovery Control Config Safety Rule
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53recoverycontrolconfig_safety_rule

Provides an AWS Route 53 Recovery Control Config Safety Rule

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_recoverycontrolconfig_safety_rule import Route53RecoverycontrolconfigSafetyRule
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53RecoverycontrolconfigSafetyRule(self, "example",
            asserted_controls=[
                Token.as_string(aws_route53_recoverycontrolconfig_routing_control_example.arn)
            ],
            control_panel_arn="arn:aws:route53-recovery-control::313517334327:controlpanel/abd5fbfc052d4844a082dbf400f61da8",
            name="daisyguttridge",
            rule_config={
                "inverted": False,
                "threshold": 1,
                "type": "ATLEAST"
            },
            wait_period_ms=5000
        )
```

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_recoverycontrolconfig_safety_rule import Route53RecoverycontrolconfigSafetyRule
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53RecoverycontrolconfigSafetyRule(self, "example",
            control_panel_arn="arn:aws:route53-recovery-control::313517334327:controlpanel/abd5fbfc052d4844a082dbf400f61da8",
            gating_controls=[
                Token.as_string(aws_route53_recoverycontrolconfig_routing_control_example.arn)
            ],
            name="i_o",
            rule_config={
                "inverted": False,
                "threshold": 1,
                "type": "ATLEAST"
            },
            target_controls=[
                Token.as_string(aws_route53_recoverycontrolconfig_routing_control_example.arn)
            ],
            wait_period_ms=5000
        )
```

## Argument Reference

This resource supports the following arguments:

* `control_panel_arn` - (Required) ARN of the control panel in which this safety rule will reside.
* `name` - (Required) Name describing the safety rule.
* `rule_config` - (Required) Configuration block for safety rule criteria. See below.
* `wait_period_ms` - (Required) Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail.

The following arguments are optional:

* `asserted_controls` - (Optional) Routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed.
* `gating_controls` - (Optional) Gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
* `target_controls` - (Optional) Routing controls that can only be set or unset if the specified `rule_config` evaluates to true for the specified `gating_controls`.

### rule_config

* `inverted` - (Required) Logical negation of the rule.
* `threshold` - (Required) Number of controls that must be set when you specify an `ATLEAST` type rule.
* `type` - (Required) Rule type. Valid values are `ATLEAST`, `AND`, and `OR`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the safety rule.
* `status` - Status of the safety rule. `PENDING` when it is being created/updated, `PENDING_DELETION` when it is being deleted, and `DEPLOYED` otherwise.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Route53 Recovery Control Config Safety Rule using the safety rule ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_recoverycontrolconfig_safety_rule import Route53RecoverycontrolconfigSafetyRule
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53RecoverycontrolconfigSafetyRule.generate_config_for_import(self, "myrule", "arn:aws:route53-recovery-control::313517334327:controlpanel/1bfba17df8684f5dab0467b71424f7e8/safetyrule/3bacc77003364c0f")
```

Using `terraform import`, import Route53 Recovery Control Config Safety Rule using the safety rule ARN. For example:

```console
% terraform import aws_route53recoverycontrolconfig_safety_rule.myrule arn:aws:route53-recovery-control::313517334327:controlpanel/1bfba17df8684f5dab0467b71424f7e8/safetyrule/3bacc77003364c0f
```

<!-- cache-key: cdktf-0.20.8 input-7fff1efee90763bc95e5e1aa7048eaa46466d5f09d9ca28fd68052bc48898c54 -->