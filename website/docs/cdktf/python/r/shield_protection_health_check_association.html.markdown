---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_protection_health_check_association"
description: |-
  Creates an association between a Route53 Health Check and a Shield Advanced protected resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_protection_health_check_association

Creates an association between a Route53 Health Check and a Shield Advanced protected resource.
This association uses the health of your applications to improve responsiveness and accuracy in attack detection and mitigation.

Blog post: [AWS Shield Advanced now supports Health Based Detection](https://aws.amazon.com/about-aws/whats-new/2020/02/aws-shield-advanced-now-supports-health-based-detection/)

## Example Usage

### Create an association between a protected EIP and a Route53 Health Check

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_partition import DataAwsPartition
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.eip import Eip
from imports.aws.route53_health_check import Route53HealthCheck
from imports.aws.shield_protection import ShieldProtection
from imports.aws.shield_protection_health_check_association import ShieldProtectionHealthCheckAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Eip(self, "example",
            domain="vpc",
            tags={
                "Name": "example"
            }
        )
        aws_route53_health_check_example = Route53HealthCheck(self, "example_1",
            failure_threshold=Token.as_number("3"),
            ip_address=example.public_ip,
            port=80,
            request_interval=Token.as_number("30"),
            resource_path="/ready",
            tags={
                "Name": "tf-example-health-check"
            },
            type="HTTP"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_health_check_example.override_logical_id("example")
        current = DataAwsCallerIdentity(self, "current")
        data_aws_partition_current = DataAwsPartition(self, "current_3")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_partition_current.override_logical_id("current")
        data_aws_region_current = DataAwsRegion(self, "current_4")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_region_current.override_logical_id("current")
        aws_shield_protection_example = ShieldProtection(self, "example_5",
            name="example-protection",
            resource_arn="arn:${" + data_aws_partition_current.partition + "}:ec2:${" + data_aws_region_current.name + "}:${" + current.account_id + "}:eip-allocation/${" + example.id + "}"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_shield_protection_example.override_logical_id("example")
        aws_shield_protection_health_check_association_example =
        ShieldProtectionHealthCheckAssociation(self, "example_6",
            health_check_arn=Token.as_string(aws_route53_health_check_example.arn),
            shield_protection_id=Token.as_string(aws_shield_protection_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_shield_protection_health_check_association_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `health_check_arn` - (Required) The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
* `shield_protection_id` - (Required) The ID of the protected resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The unique identifier (ID) for the Protection object that is created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield protection health check association resources using the `shield_protection_id` and `health_check_arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.shield_protection_health_check_association import ShieldProtectionHealthCheckAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ShieldProtectionHealthCheckAssociation.generate_config_for_import(self, "example", "ff9592dc-22f3-4e88-afa1-7b29fde9669a+arn:aws:route53:::healthcheck/3742b175-edb9-46bc-9359-f53e3b794b1b")
```

Using `terraform import`, import Shield protection health check association resources using the `shield_protection_id` and `health_check_arn`. For example:

```console
% terraform import aws_shield_protection_health_check_association.example ff9592dc-22f3-4e88-afa1-7b29fde9669a+arn:aws:route53:::healthcheck/3742b175-edb9-46bc-9359-f53e3b794b1b
```

<!-- cache-key: cdktf-0.20.8 input-478a1032d8fe5c2226eef877393c56223519392521f48d921b8d7bf25f16a9aa -->