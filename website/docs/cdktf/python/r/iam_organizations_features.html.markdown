---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_organizations_features"
description: |-
  Manages centralized root access features.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iam_organizations_features

Manages centralized root access features across AWS member accounts managed using AWS Organizations. More information about managing root access in IAM can be found in the [Centralize root access for member accounts](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-enable-root-access.html).

~> **NOTE:** The AWS account utilizing this resource must be an Organizations management account. Also, you must enable trusted access for AWS Identity and Access Management in AWS Organizations.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iam_organizations_features import IamOrganizationsFeatures
from imports.aws.organizations_organization import OrganizationsOrganization
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IamOrganizationsFeatures(self, "example",
            enabled_features=["RootCredentialsManagement", "RootSessions"]
        )
        aws_organizations_organization_example = OrganizationsOrganization(self, "example_1",
            aws_service_access_principals=["iam.amazonaws.com"],
            feature_set="ALL"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_organizations_organization_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `enabled_features` - (Required) List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - AWS Organization identifier.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import root access features using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iam_organizations_features import IamOrganizationsFeatures
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IamOrganizationsFeatures.generate_config_for_import(self, "example", "o-1234567")
```

Using `terraform import`, import root access features using the `id`. For example:

```console
% terraform import aws_iam_organizations_features.example o-1234567
```

<!-- cache-key: cdktf-0.20.8 input-6331f681ad6009b1037f0e6c5614fa7640b495f2cc6486aeeba0ccb27d8f618d -->