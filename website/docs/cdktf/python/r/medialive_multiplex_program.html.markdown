---
subcategory: "Elemental MediaLive"
layout: "aws"
page_title: "AWS: aws_medialive_multiplex_program"
description: |-
  Terraform resource for managing an AWS MediaLive MultiplexProgram.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_medialive_multiplex_program

Terraform resource for managing an AWS MediaLive MultiplexProgram.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_availability_zones import DataAwsAvailabilityZones
from imports.aws.medialive_multiplex import MedialiveMultiplex
from imports.aws.medialive_multiplex_program import MedialiveMultiplexProgram
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        available = DataAwsAvailabilityZones(self, "available",
            state="available"
        )
        example = MedialiveMultiplex(self, "example",
            availability_zones=[
                Token.as_string(Fn.lookup_nested(available.names, ["0"])),
                Token.as_string(Fn.lookup_nested(available.names, ["1"]))
            ],
            multiplex_settings=MedialiveMultiplexMultiplexSettings(
                maximum_video_buffer_delay_milliseconds=1000,
                transport_stream_bitrate=1000000,
                transport_stream_id=1,
                transport_stream_reserved_bitrate=1
            ),
            name="example-multiplex-changed",
            start_multiplex=True,
            tags={
                "tag1": "value1"
            }
        )
        aws_medialive_multiplex_program_example = MedialiveMultiplexProgram(self, "example_2",
            multiplex_id=example.id,
            multiplex_program_settings=[MedialiveMultiplexProgramMultiplexProgramSettings(
                preferred_channel_pipeline="CURRENTLY_ACTIVE",
                program_number=1,
                video_settings=[MedialiveMultiplexProgramMultiplexProgramSettingsVideoSettings(
                    constant_bitrate=100000
                )
                ]
            )
            ],
            program_name="example_program"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_medialive_multiplex_program_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `multiplex_id` - (Required) Multiplex ID.
* `program_name` - (Required) Unique program name.
* `multiplex_program_settings` - (Required) MultiplexProgram settings. See [Multiplex Program Settings](#multiple-program-settings) for more details.

The following arguments are optional:

### Multiple Program Settings

* `program_number` - (Required) Unique program number.
* `preferred_channel_pipeline` - (Required) Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.
* `service_descriptor` - (Optional) Service Descriptor. See [Service Descriptor](#service-descriptor) for more details.
* `video_settings` - (Optional) Video settings. See [Video Settings](#video-settings) for more details.

### Service Descriptor

* `provider_name` - (Required) Unique provider name.
* `service_name` - (Required) Unique service name.

### Video Settings

* `constant_bitrate` - (Optional) Constant bitrate value.
* `statmux_settings` - (Optional) Statmux settings. See [Statmux Settings](#statmux-settings) for more details.

### Statmux Settings

* `minimum_bitrate` - (Optional) Minimum bitrate.
* `maximum_bitrate` - (Optional) Maximum bitrate.
* `priority` - (Optional) Priority value.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the MultiplexProgram.
* `example_attribute` - Concise description.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MediaLive MultiplexProgram using the `id`, or a combination of "`program_name`/`multiplex_id`". For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.medialive_multiplex_program import MedialiveMultiplexProgram
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        MedialiveMultiplexProgram.generate_config_for_import(self, "example", "example_program/1234567")
```

Using `terraform import`, import MediaLive MultiplexProgram using the `id`, or a combination of "`program_name`/`multiplex_id`". For example:

```console
% terraform import aws_medialive_multiplex_program.example example_program/1234567
```

<!-- cache-key: cdktf-0.20.8 input-d0f4d6ecf5fbb8e34c4bfcc4ff4baddff29c0893a211fa29af99ff4cfade72b1 -->