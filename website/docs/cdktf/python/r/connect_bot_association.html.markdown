---
subcategory: "Connect"
layout: "aws"
page_title: "AWS: aws_connect_bot_association"
description: |-
  Associates an Amazon Connect instance to an Amazon Lex (V1) bot
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_connect_bot_association

Allows the specified Amazon Connect instance to access the specified Amazon Lex (V1) bot. For more information see
[Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html) and [Add an Amazon Lex bot](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-lex.html).

~> **NOTE:** This resource only currently supports Amazon Lex (V1) Associations.

## Example Usage

### Basic

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.connect_bot_association import ConnectBotAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConnectBotAssociation(self, "example",
            instance_id=Token.as_string(aws_connect_instance_example.id),
            lex_bot=ConnectBotAssociationLexBot(
                lex_region="us-west-2",
                name="Test"
            )
        )
```

### Including a sample Lex bot

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.connect_bot_association import ConnectBotAssociation
from imports.aws.data_aws_region import DataAwsRegion
from imports.aws.lex_bot import LexBot
from imports.aws.lex_intent import LexIntent
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = LexIntent(self, "example",
            create_version=True,
            fulfillment_activity=LexIntentFulfillmentActivity(
                type="ReturnIntent"
            ),
            name="connect_lex_intent",
            sample_utterances=["I would like to pick up flowers."]
        )
        current = DataAwsRegion(self, "current")
        aws_lex_bot_example = LexBot(self, "example_2",
            abort_statement=LexBotAbortStatement(
                message=[LexBotAbortStatementMessage(
                    content="Sorry, I am not able to assist at this time.",
                    content_type="PlainText"
                )
                ]
            ),
            child_directed=False,
            clarification_prompt=LexBotClarificationPrompt(
                max_attempts=2,
                message=[LexBotClarificationPromptMessage(
                    content="I didn't understand you, what would you like to do?",
                    content_type="PlainText"
                )
                ]
            ),
            intent=[LexBotIntent(
                intent_name=example.name,
                intent_version="1"
            )
            ],
            name="connect_lex_bot",
            process_behavior="BUILD"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lex_bot_example.override_logical_id("example")
        aws_connect_bot_association_example = ConnectBotAssociation(self, "example_3",
            instance_id=Token.as_string(aws_connect_instance_example.id),
            lex_bot=ConnectBotAssociationLexBot(
                lex_region=Token.as_string(current.name),
                name=Token.as_string(aws_lex_bot_example.name)
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_connect_bot_association_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `instance_id` - (Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
* `lex_bot` - (Required) Configuration information of an Amazon Lex (V1) bot. Detailed below.

### lex_bot

The `lex_bot` configuration block supports the following:

* `name` - (Required) The name of the Amazon Lex (V1) bot.
* `lex_region` - (Optional) The Region that the Amazon Lex (V1) bot was created in. Defaults to current region.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Connect instance ID, Lex (V1) bot name, and Lex (V1) bot region separated by colons (`:`).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_connect_bot_association` using the Amazon Connect instance ID, Lex (V1) bot name, and Lex (V1) bot region separated by colons (`:`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.connect_bot_association import ConnectBotAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConnectBotAssociation.generate_config_for_import(self, "example", "aaaaaaaa-bbbb-cccc-dddd-111111111111:Example:us-west-2")
```

Using `terraform import`, import `aws_connect_bot_association` using the Amazon Connect instance ID, Lex (V1) bot name, and Lex (V1) bot region separated by colons (`:`). For example:

```console
% terraform import aws_connect_bot_association.example aaaaaaaa-bbbb-cccc-dddd-111111111111:Example:us-west-2
```

<!-- cache-key: cdktf-0.20.8 input-a2f9c06dc453656a33c733da12968f311c1fb8ca4fa4a21171e1bb6249dad8c8 -->