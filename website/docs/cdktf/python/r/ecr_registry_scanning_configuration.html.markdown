---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_registry_scanning_configuration"
description: |-
  Provides an Elastic Container Registry Scanning Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ecr_registry_scanning_configuration

Provides an Elastic Container Registry Scanning Configuration. Can't be completely deleted, instead reverts to the default `BASIC` scanning configuration without rules.

## Example Usage

### Basic example

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ecr_registry_scanning_configuration import EcrRegistryScanningConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EcrRegistryScanningConfiguration(self, "configuration",
            rule=[EcrRegistryScanningConfigurationRule(
                repository_filter=[EcrRegistryScanningConfigurationRuleRepositoryFilter(
                    filter="example",
                    filter_type="WILDCARD"
                )
                ],
                scan_frequency="CONTINUOUS_SCAN"
            )
            ],
            scan_type="ENHANCED"
        )
```

### Multiple rules

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ecr_registry_scanning_configuration import EcrRegistryScanningConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EcrRegistryScanningConfiguration(self, "test",
            rule=[EcrRegistryScanningConfigurationRule(
                repository_filter=[EcrRegistryScanningConfigurationRuleRepositoryFilter(
                    filter="*",
                    filter_type="WILDCARD"
                )
                ],
                scan_frequency="SCAN_ON_PUSH"
            ), EcrRegistryScanningConfigurationRule(
                repository_filter=[EcrRegistryScanningConfigurationRuleRepositoryFilter(
                    filter="example",
                    filter_type="WILDCARD"
                )
                ],
                scan_frequency="CONTINUOUS_SCAN"
            )
            ],
            scan_type="ENHANCED"
        )
```

## Argument Reference

This resource supports the following arguments:

- `scan_type` - (Required) the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`.
- `rule` - (Optional) One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See [below for schema](#rule).

### rule

- `repository_filter` - (Required) One or more repository filter blocks, containing a `filter` (required string filtering repositories, see pattern regex [here](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ScanningRepositoryFilter.html)) and a `filter_type` (required string, currently only `WILDCARD` is supported).
- `scan_frequency` - (Required) The frequency that scans are performed at for a private registry. Can be `SCAN_ON_PUSH`, `CONTINUOUS_SCAN`, or `MANUAL`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `registry_id` - The registry ID the scanning configuration applies to.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECR Scanning Configurations using the `registry_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ecr_registry_scanning_configuration import EcrRegistryScanningConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EcrRegistryScanningConfiguration.generate_config_for_import(self, "example", "123456789012")
```

Using `terraform import`, import ECR Scanning Configurations using the `registry_id`. For example:

```console
% terraform import aws_ecr_registry_scanning_configuration.example 123456789012
```

<!-- cache-key: cdktf-0.20.8 input-77b7a95ee014db4c3fbe941bd65f117c9c9aa71a97a27537a92562158d4361cb -->