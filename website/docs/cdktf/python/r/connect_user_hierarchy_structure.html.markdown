---
subcategory: "Connect"
layout: "aws"
page_title: "AWS: aws_connect_user_hierarchy_structure"
description: |-
  Provides details about a specific Amazon Connect User Hierarchy Structure
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_connect_user_hierarchy_structure

Provides an Amazon Connect User Hierarchy Structure resource. For more information see
[Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)

## Example Usage

### Basic

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.connect_user_hierarchy_structure import ConnectUserHierarchyStructure
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConnectUserHierarchyStructure(self, "example",
            hierarchy_structure=ConnectUserHierarchyStructureHierarchyStructure(
                level_one=ConnectUserHierarchyStructureHierarchyStructureLevelOne(
                    name="levelone"
                )
            ),
            instance_id="aaaaaaaa-bbbb-cccc-dddd-111111111111"
        )
```

### With Five Levels

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.connect_user_hierarchy_structure import ConnectUserHierarchyStructure
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConnectUserHierarchyStructure(self, "example",
            hierarchy_structure=ConnectUserHierarchyStructureHierarchyStructure(
                level_five=ConnectUserHierarchyStructureHierarchyStructureLevelFive(
                    name="levelfive"
                ),
                level_four=ConnectUserHierarchyStructureHierarchyStructureLevelFour(
                    name="levelfour"
                ),
                level_one=ConnectUserHierarchyStructureHierarchyStructureLevelOne(
                    name="levelone"
                ),
                level_three=ConnectUserHierarchyStructureHierarchyStructureLevelThree(
                    name="levelthree"
                ),
                level_two=ConnectUserHierarchyStructureHierarchyStructureLevelTwo(
                    name="leveltwo"
                )
            ),
            instance_id="aaaaaaaa-bbbb-cccc-dddd-111111111111"
        )
```

## Argument Reference

This resource supports the following arguments:

* `hierarchy_structure` - (Required) A block that defines the hierarchy structure's levels. The `hierarchy_structure` block is documented below.
* `instance_id` - (Required) Specifies the identifier of the hosting Amazon Connect Instance.

A `hierarchy_structure` block supports the following arguments:

* `level_one` - (Optional) A block that defines the details of level one. The level block is documented below.
* `level_two` - (Optional) A block that defines the details of level two. The level block is documented below.
* `level_three` - (Optional) A block that defines the details of level three. The level block is documented below.
* `level_four` - (Optional) A block that defines the details of level four. The level block is documented below.
* `level_five` - (Optional) A block that defines the details of level five. The level block is documented below.

Each level block supports the following arguments:

* `name` - (Required) The name of the user hierarchy level. Must not be more than 50 characters.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `hierarchy_structure` - In addition to the arguments defined initially, there are attributes added to the levels created. These additional attributes are documented below.
* `id` - The identifier of the hosting Amazon Connect Instance.

A level block supports the following additional attributes:

* `arn` -  The Amazon Resource Name (ARN) of the hierarchy level.
* `id` -  The identifier of the hierarchy level.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amazon Connect User Hierarchy Structures using the `instance_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.connect_user_hierarchy_structure import ConnectUserHierarchyStructure
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConnectUserHierarchyStructure.generate_config_for_import(self, "example", "f1288a1f-6193-445a-b47e-af739b2")
```

Using `terraform import`, import Amazon Connect User Hierarchy Structures using the `instance_id`. For example:

```console
% terraform import aws_connect_user_hierarchy_structure.example f1288a1f-6193-445a-b47e-af739b2
```

<!-- cache-key: cdktf-0.20.8 input-d4221332a1de6be2872d8c5ee9a0bd06fd2ef712cb35778939fcdd12ecf0c17c -->