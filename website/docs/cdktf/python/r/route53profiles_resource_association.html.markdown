---
subcategory: "Route 53 Profiles"
layout: "aws"
page_title: "AWS: aws_route53profiles_resource_association"
description: |-
  Terraform resource for managing an AWS Route 53 Profiles Resource Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53profiles_resource_association

Terraform resource for managing an AWS Route 53 Profiles Resource Association.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_profiles_profile import Route53ProfilesProfile
from imports.aws.route53_profiles_resource_association import Route53ProfilesResourceAssociation
from imports.aws.route53_zone import Route53Zone
from imports.aws.vpc import Vpc
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Route53ProfilesProfile(self, "example",
            name="example"
        )
        aws_vpc_example = Vpc(self, "example_1",
            cidr="10.0.0.0/16"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpc_example.override_logical_id("example")
        aws_route53_zone_example = Route53Zone(self, "example_2",
            name="example.com",
            vpc=[Route53ZoneVpc(
                vpc_id=Token.as_string(aws_vpc_example.id)
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_zone_example.override_logical_id("example")
        aws_route53_profiles_resource_association_example =
        Route53ProfilesResourceAssociation(self, "example_3",
            name="example",
            profile_id=example.id,
            resource_arn=Token.as_string(aws_route53_zone_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_profiles_resource_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the Profile Resource Association.
* `profile_id` - (Required) ID of the profile associated with the VPC.
* `resource_arn` - (Required) Resource ID of the resource to be associated with the profile.
* `resource_properties` - (Optional) Resource properties for the resource to be associated with the profile.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the Profile Resource Association.
* `name` - Name of the Profile Resource Association.
* `resource_type` - Type of resource associated with the profile.
* `status` - Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
* `status_message` - Status message of the Profile Resource Association.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Route 53 Profiles Resource Association using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_profiles_resource_association import Route53ProfilesResourceAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53ProfilesResourceAssociation.generate_config_for_import(self, "example", "rpa-id-12345678")
```

Using `terraform import`, import Route 53 Profiles Resource Association using the `example_id_arg`. For example:

```console
% terraform import aws_route53profiles_resource_association.example rpa-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-e19b5cf3e7989f3d050a32e6b470779a272fce0b5118d964b3eb31a970c708e6 -->