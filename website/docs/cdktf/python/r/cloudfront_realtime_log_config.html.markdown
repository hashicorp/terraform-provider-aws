---
subcategory: "CloudFront"
layout: "aws"
page_title: "AWS: aws_cloudfront_realtime_log_config"
description: |-
  Provides a CloudFront real-time log configuration resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudfront_realtime_log_config

Provides a CloudFront real-time log configuration resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudfront_realtime_log_config import CloudfrontRealtimeLogConfig
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.iam_role import IamRole
from imports.aws.iam_role_policy import IamRolePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        assume_role = DataAwsIamPolicyDocument(self, "assume_role",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["cloudfront.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        example = DataAwsIamPolicyDocument(self, "example",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["kinesis:DescribeStreamSummary", "kinesis:DescribeStream", "kinesis:PutRecord", "kinesis:PutRecords"
                ],
                effect="Allow",
                resources=[Token.as_string(aws_kinesis_stream_example.arn)]
            )
            ]
        )
        aws_iam_role_example = IamRole(self, "example_2",
            assume_role_policy=Token.as_string(assume_role.json),
            name="cloudfront-realtime-log-config-example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_example.override_logical_id("example")
        aws_iam_role_policy_example = IamRolePolicy(self, "example_3",
            name="cloudfront-realtime-log-config-example",
            policy=Token.as_string(example.json),
            role=Token.as_string(aws_iam_role_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_role_policy_example.override_logical_id("example")
        aws_cloudfront_realtime_log_config_example =
        CloudfrontRealtimeLogConfig(self, "example_4",
            depends_on=[aws_iam_role_policy_example],
            endpoint=CloudfrontRealtimeLogConfigEndpoint(
                kinesis_stream_config=CloudfrontRealtimeLogConfigEndpointKinesisStreamConfig(
                    role_arn=Token.as_string(aws_iam_role_example.arn),
                    stream_arn=Token.as_string(aws_kinesis_stream_example.arn)
                ),
                stream_type="Kinesis"
            ),
            fields=["timestamp", "c-ip"],
            name="example",
            sampling_rate=75
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudfront_realtime_log_config_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `endpoint` - (Required) The Amazon Kinesis data streams where real-time log data is sent.
* `fields` - (Required) The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.
* `name` - (Required) The unique name to identify this real-time log configuration.
* `sampling_rate` - (Required) The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.

The `endpoint` object supports the following:

* `kinesis_stream_config` - (Required) The Amazon Kinesis data stream configuration.
* `stream_type` - (Required) The type of data stream where real-time log data is sent. The only valid value is `Kinesis`.

The `kinesis_stream_config` object supports the following:

* `role_arn` - (Required) The ARN of an [IAM role](iam_role.html) that CloudFront can use to send real-time log data to the Kinesis data stream.
See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) for more information.
* `stream_arn` - (Required) The ARN of the [Kinesis data stream](kinesis_stream.html).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the CloudFront real-time log configuration.
* `arn` - The ARN (Amazon Resource Name) of the CloudFront real-time log configuration.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudFront real-time log configurations using the ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudfront_realtime_log_config import CloudfrontRealtimeLogConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudfrontRealtimeLogConfig.generate_config_for_import(self, "example", "arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig")
```

Using `terraform import`, import CloudFront real-time log configurations using the ARN. For example:

```console
% terraform import aws_cloudfront_realtime_log_config.example arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig
```

<!-- cache-key: cdktf-0.20.8 input-be02677fb3ad25ac1055ce131b85e8c78a124b0a2ec359c977c007200fc38e11 -->