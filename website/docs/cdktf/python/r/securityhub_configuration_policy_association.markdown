---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_configuration_policy_association"
description: |-
  Provides a resource to associate Security Hub configuration policy to a target.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_securityhub_configuration_policy_association

Manages Security Hub configuration policy associations.

~> **NOTE:** This resource requires [`aws_securityhub_organization_configuration`](/docs/providers/aws/r/securityhub_organization_admin_account.html) to be configured with type `CENTRAL`. More information about Security Hub central configuration and configuration policies can be found in the [How Security Hub configuration policies work](https://docs.aws.amazon.com/securityhub/latest/userguide/configuration-policies-overview.html) documentation.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.securityhub_configuration_policy import SecurityhubConfigurationPolicy
from imports.aws.securityhub_configuration_policy_association import SecurityhubConfigurationPolicyAssociation
from imports.aws.securityhub_finding_aggregator import SecurityhubFindingAggregator
from imports.aws.securityhub_organization_configuration import SecurityhubOrganizationConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = SecurityhubFindingAggregator(self, "example",
            linking_mode="ALL_REGIONS"
        )
        aws_securityhub_organization_configuration_example =
        SecurityhubOrganizationConfiguration(self, "example_1",
            auto_enable=False,
            auto_enable_standards="NONE",
            depends_on=[example],
            organization_configuration=SecurityhubOrganizationConfigurationOrganizationConfiguration(
                configuration_type="CENTRAL"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_securityhub_organization_configuration_example.override_logical_id("example")
        aws_securityhub_configuration_policy_example =
        SecurityhubConfigurationPolicy(self, "example_2",
            configuration_policy=SecurityhubConfigurationPolicyConfigurationPolicy(
                enabled_standard_arns=["arn:aws:securityhub:us-east-1::standards/aws-foundational-security-best-practices/v/1.0.0", "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0"
                ],
                security_controls_configuration=SecurityhubConfigurationPolicyConfigurationPolicySecurityControlsConfiguration(
                    disabled_control_identifiers=[]
                ),
                service_enabled=True
            ),
            depends_on=[aws_securityhub_organization_configuration_example],
            description="This is an example configuration policy",
            name="Example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_securityhub_configuration_policy_example.override_logical_id("example")
        SecurityhubConfigurationPolicyAssociation(self, "account_example",
            policy_id=Token.as_string(aws_securityhub_configuration_policy_example.id),
            target_id="123456789012"
        )
        SecurityhubConfigurationPolicyAssociation(self, "ou_example",
            policy_id=Token.as_string(aws_securityhub_configuration_policy_example.id),
            target_id="ou-abcd-12345678"
        )
        SecurityhubConfigurationPolicyAssociation(self, "root_example",
            policy_id=Token.as_string(aws_securityhub_configuration_policy_example.id),
            target_id="r-abcd"
        )
```

## Argument Reference

This resource supports the following arguments:

* `policy_id` - (Required) The universally unique identifier (UUID) of the configuration policy.
* `target_id` - (Required, Forces new resource) The identifier of the target account, organizational unit, or the root to associate with the specified configuration.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The identifier of the target account, organizational unit, or the root that is associated with the configuration.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `90s`)
* `update` - (Default `90s`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import an existing Security Hub configuration policy association using the target id. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.securityhub_configuration_policy_association import SecurityhubConfigurationPolicyAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SecurityhubConfigurationPolicyAssociation.generate_config_for_import(self, "exampleAccountAssociation", "123456789012")
```

Using `terraform import`, import an existing Security Hub enabled account using the target id. For example:

```console
% terraform import aws_securityhub_configuration_policy_association.example_account_association 123456789012
```

<!-- cache-key: cdktf-0.20.1 input-25377a44fda98bfdaaa528cbf1b8ef2a5407dd6d84d29b7ed90eaf7f13214fbe -->