---
subcategory: "Chime SDK Media Pipelines"
layout: "aws"
page_title: "AWS: aws_chimesdkmediapipelines_media_insights_pipeline_configuration"
description: |-
  Terraform resource for managing an AWS Chime SDK Media Pipelines Media Insights Pipeline Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_chimesdkmediapipelines_media_insights_pipeline_configuration

Terraform resource for managing an AWS Chime SDK Media Pipelines Media Insights Pipeline Configuration.
Consult the [Call analytics developer guide](https://docs.aws.amazon.com/chime-sdk/latest/dg/call-analytics.html) for more detailed information about usage.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.iam_role import IamRole
from imports.aws.kinesis_stream import KinesisStream
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = KinesisStream(self, "example",
            name="example",
            shard_count=2
        )
        media_pipelines_assume_role = DataAwsIamPolicyDocument(self, "media_pipelines_assume_role",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["mediapipelines.chime.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        call_analytics_role = IamRole(self, "call_analytics_role",
            assume_role_policy=Token.as_string(media_pipelines_assume_role.json),
            name="CallAnalyticsRole"
        )
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(self, "my_configuration",
            elements=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                amazon_transcribe_call_analytics_processor_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsAmazonTranscribeCallAnalyticsProcessorConfiguration(
                    language_code="en-US"
                ),
                type="AmazonTranscribeCallAnalyticsProcessor"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                kinesis_data_stream_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsKinesisDataStreamSinkConfiguration(
                    insights_target=example.arn
                ),
                type="KinesisDataStreamSink"
            )
            ],
            name="MyBasicConfiguration",
            resource_access_role_arn=call_analytics_role.arn,
            tags={
                "Key1": "Value1",
                "Key2": "Value2"
            }
        )
```

- The required policies on `call_analytics_role` will vary based on the selected processors. See [Call analytics resource access role](https://docs.aws.amazon.com/chime-sdk/latest/dg/ca-resource-access-role.html) for directions on choosing appropriate policies.

### Transcribe Call Analytics processor usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.iam_role import IamRole
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        transcribe_assume_role = DataAwsIamPolicyDocument(self, "transcribe_assume_role",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sts:AssumeRole"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["transcribe.amazonaws.com"],
                    type="Service"
                )
                ]
            )
            ]
        )
        post_call_role = IamRole(self, "post_call_role",
            assume_role_policy=Token.as_string(transcribe_assume_role.json),
            name="PostCallAccessRole"
        )
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(self, "my_configuration",
            elements=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                amazon_transcribe_call_analytics_processor_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsAmazonTranscribeCallAnalyticsProcessorConfiguration(
                    call_analytics_stream_categories=["category_1", "category_2"],
                    content_redaction_type="PII",
                    enable_partial_results_stabilization=True,
                    filter_partial_results=True,
                    language_code="en-US",
                    language_model_name="MyLanguageModel",
                    partial_results_stability="high",
                    pii_entity_types="ADDRESS,BANK_ACCOUNT_NUMBER",
                    post_call_analytics_settings=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsAmazonTranscribeCallAnalyticsProcessorConfigurationPostCallAnalyticsSettings(
                        content_redaction_output="redacted",
                        data_access_role_arn=post_call_role.arn,
                        output_encryption_kms_key_id="MyKmsKeyId",
                        output_location="s3://MyBucket"
                    ),
                    vocabulary_filter_method="mask",
                    vocabulary_filter_name="MyVocabularyFilter",
                    vocabulary_name="MyVocabulary"
                ),
                type="AmazonTranscribeCallAnalyticsProcessor"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                kinesis_data_stream_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsKinesisDataStreamSinkConfiguration(
                    insights_target=example.arn
                ),
                type="KinesisDataStreamSink"
            )
            ],
            name="MyCallAnalyticsConfiguration",
            resource_access_role_arn=Token.as_string(aws_iam_role_example.arn)
        )
```

### Real time alerts usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(self, "my_configuration",
            elements=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                amazon_transcribe_call_analytics_processor_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsAmazonTranscribeCallAnalyticsProcessorConfiguration(
                    language_code="en-US"
                ),
                type="AmazonTranscribeCallAnalyticsProcessor"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                kinesis_data_stream_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsKinesisDataStreamSinkConfiguration(
                    insights_target=example.arn
                ),
                type="KinesisDataStreamSink"
            )
            ],
            name="MyRealTimeAlertConfiguration",
            real_time_alert_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfiguration(
                disabled=False,
                rules=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfigurationRules(
                    issue_detection_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfigurationRulesIssueDetectionConfiguration(
                        rule_name="MyIssueDetectionRule"
                    ),
                    type="IssueDetection"
                ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfigurationRules(
                    keyword_match_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfigurationRulesKeywordMatchConfiguration(
                        keywords=["keyword1", "keyword2"],
                        negate=False,
                        rule_name="MyKeywordMatchRule"
                    ),
                    type="KeywordMatch"
                ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfigurationRules(
                    sentiment_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationRealTimeAlertConfigurationRulesSentimentConfiguration(
                        rule_name="MySentimentRule",
                        sentiment_type="NEGATIVE",
                        time_period=60
                    ),
                    type="Sentiment"
                )
                ]
            ),
            resource_access_role_arn=call_analytics_role.arn
        )
```

### Transcribe processor usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(self, "my_configuration",
            elements=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                amazon_transcribe_processor_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsAmazonTranscribeProcessorConfiguration(
                    content_identification_type="PII",
                    enable_partial_results_stabilization=True,
                    filter_partial_results=True,
                    language_code="en-US",
                    language_model_name="MyLanguageModel",
                    partial_results_stability="high",
                    pii_entity_types="ADDRESS,BANK_ACCOUNT_NUMBER",
                    show_speaker_label=True,
                    vocabulary_filter_method="mask",
                    vocabulary_filter_name="MyVocabularyFilter",
                    vocabulary_name="MyVocabulary"
                ),
                type="AmazonTranscribeProcessor"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                kinesis_data_stream_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsKinesisDataStreamSinkConfiguration(
                    insights_target=example.arn
                ),
                type="KinesisDataStreamSink"
            )
            ],
            name="MyTranscribeConfiguration",
            resource_access_role_arn=Token.as_string(aws_iam_role_example.arn)
        )
```

### Voice analytics processor usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(self, "my_configuration",
            elements=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                type="VoiceAnalyticsProcessor",
                voice_analytics_processor_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsVoiceAnalyticsProcessorConfiguration(
                    speaker_search_status="Enabled",
                    voice_tone_analysis_status="Enabled"
                )
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                lambda_function_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsLambdaFunctionSinkConfiguration(
                    insights_target="arn:aws:lambda:us-west-2:1111111111:function:MyFunction"
                ),
                type="LambdaFunctionSink"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                sns_topic_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsSnsTopicSinkConfiguration(
                    insights_target="arn:aws:sns:us-west-2:1111111111:topic/MyTopic"
                ),
                type="SnsTopicSink"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                sqs_queue_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsSqsQueueSinkConfiguration(
                    insights_target="arn:aws:sqs:us-west-2:1111111111:queue/MyQueue"
                ),
                type="SqsQueueSink"
            ), ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                kinesis_data_stream_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsKinesisDataStreamSinkConfiguration(
                    insights_target=test.arn
                ),
                type="KinesisDataStreamSink"
            )
            ],
            name="MyVoiceAnalyticsConfiguration",
            resource_access_role_arn=example.arn
        )
```

### S3 Recording sink usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(self, "my_configuration",
            elements=[ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElements(
                s3_recording_sink_configuration=ChimesdkmediapipelinesMediaInsightsPipelineConfigurationElementsS3RecordingSinkConfiguration(
                    destination="arn:aws:s3:::MyBucket"
                ),
                type="S3RecordingSink"
            )
            ],
            name="MyS3RecordingConfiguration",
            resource_access_role_arn=example.arn
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Configuration name.
* `resource_access_role_arn` - (Required) ARN of IAM Role used by service to invoke processors and sinks specified by configuration elements.
* `elements` - (Required) Collection of processors and sinks to transform media and deliver data.
* `real_time_alert_configuration` - (Optional) Configuration for real-time alert rules to send EventBridge notifications when certain conditions are met.
* `tags` - (Optional) Key-value map of tags for the resource.

### Elements

* `type` - (Required) Element type.
* `amazon_transcribe_call_analytics_processor_configuration` - (Optional) Configuration for Amazon Transcribe Call Analytics processor.
    * `call_analytics_stream_categories` - (Optional) Filter for category events to be delivered to insights target.
    * `content_identification_type` - (Optional) Labels all personally identifiable information (PII) identified in Utterance events.
    * `content_redaction_type` - (Optional) Redacts all personally identifiable information (PII) identified in Utterance events.
    * `enable_partial_results_stabilization` - (Optional) Enables partial result stabilization in Utterance events.
    * `filter_partial_results` - (Optional) Filters partial Utterance events from delivery to the insights target.
    * `language_code` - (Required) Language code for the transcription model.
    * `language_model_name` - (Optional) Name of custom language model for transcription.
    * `partial_results_stability` - (Optional) Level of stability to use when partial results stabilization is enabled.
    * `pii_entity_types` - (Optional) Types of personally identifiable information (PII) to redact from an Utterance event.
    * `post_call_analytics_settings` - (Optional) Settings for post call analytics.
        * `content_redaction_output` - (Optional) Should output be redacted.
        * `data_access_role_arn` - (Required) ARN of the role used by AWS Transcribe to upload your post call analysis.
        * `output_encryption_kms_key_id` - (Optional) ID of the KMS key used to encrypt the output.
        * `output_location` - (Required) The Amazon S3 location where you want your Call Analytics post-call transcription output stored.
    * `vocabulary_filter_method` - (Optional) Method for applying a vocabulary filter to Utterance events.
    * `vocabulary_filter_name` - (Optional) Name of the custom vocabulary filter to use when processing Utterance events.
    * `vocabulary_name` - (Optional) Name of the custom vocabulary to use when processing Utterance events.
* `amazon_transcribe_processor_configuration` - (Optional) Configuration for Amazon Transcribe processor.
    * `content_identification_type` - (Optional) Labels all personally identifiable information (PII) identified in Transcript events.
    * `content_redaction_type` - (Optional) Redacts all personally identifiable information (PII) identified in Transcript events.
    * `enable_partial_results_stabilization` - (Optional) Enables partial result stabilization in Transcript events.
    * `filter_partial_results` - (Optional) Filters partial Utterance events from delivery to the insights target.
    * `language_code` - (Required) Language code for the transcription model.
    * `language_model_name` - (Optional) Name of custom language model for transcription.
    * `partial_results_stability` - (Optional) Level of stability to use when partial results stabilization is enabled.
    * `pii_entity_types` - (Optional) Types of personally identifiable information (PII) to redact from a Transcript event.
    * `show_speaker_label` - (Optional) Enables speaker partitioning (diarization) in your Transcript events.
    * `vocabulary_filter_method` - (Optional) Method for applying a vocabulary filter to Transcript events.
    * `vocabulary_filter_name` - (Optional) Name of the custom vocabulary filter to use when processing Transcript events.
    * `vocabulary_name` - (Optional) Name of the custom vocabulary to use when processing Transcript events.
* `kinesis_data_stream_sink_configuration` - (Optional) Configuration for Kinesis Data Stream sink.
    * `insights_target` - (Required) Kinesis Data Stream to deliver results.
* `lambda_function_sink_configuration` - (Optional) Configuration for Lambda Function sink.
    * `insights_target` - (Required) Lambda Function to deliver results.
* `sns_topic_sink_configuration` - (Optional) Configuration for SNS Topic sink.
    * `insights_target` - (Required) SNS topic to deliver results.
* `sqs_queue_sink_configuration` - (Optional) Configuration for SQS Queue sink.
    * `insights_target` - (Required) SQS queue to deliver results.
* `s3_recording_sink_configuration` - (Optional) Configuration for S3 recording sink.
    * `destination` - (Required) S3 URI to deliver recordings.
* `voice_analytics_processor_configuration` - (Optional) Configuration for Voice analytics processor.
    * `speaker_search_status` - (Required) Enable speaker search.
    * `voice_tone_analysis_status` - (Required) Enable voice tone analysis.

### Real time alert configuration

* `rules` - (Required) Collection of real time alert rules
    * `type` - (Required) Rule type.
    * `issue_detection_configuration` - (Optional) Configuration for an issue detection rule.
        * `rule_name` - (Required) Rule name.
    * `keyword_match_configuration` - (Optional) Configuration for a keyword match rule.
        * `rule_name` - (Required) Rule name.
        * `keywords` - (Required) Collection of keywords to match.
        * `negate` - (Optional) Negate the rule.
    * `sentiment_configuration` - (Optional) Configuration for a sentiment rule.
        * `rule_name` - (Required) Rule name.
        * `sentiment_type` - (Required) Sentiment type to match.
        * `time_period` - (Optional) Analysis interval.
* `disabled` - (Optional) Disables real time alert rules.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Media Insights Pipeline Configuration.
* `id` - Unique ID of the Media Insights Pipeline Configuration.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `3m`)
* `update` - (Default `3m`)
* `delete` - (Default `30s`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Chime SDK Media Pipelines Media Insights Pipeline Configuration using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.chimesdkmediapipelines_media_insights_pipeline_configuration import ChimesdkmediapipelinesMediaInsightsPipelineConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ChimesdkmediapipelinesMediaInsightsPipelineConfiguration.generate_config_for_import(self, "example", "abcdef123456")
```

Using `terraform import`, import Chime SDK Media Pipelines Media Insights Pipeline Configuration using the `id`. For example:

```console
% terraform import aws_chimesdkmediapipelines_media_insights_pipeline_configuration.example abcdef123456
```

<!-- cache-key: cdktf-0.20.8 input-e27c8cae132bb59224264ffd318670201dbde0c3fb71b0400db863d44cf5ecde -->