---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_destination_policy"
description: |-
  Provides a CloudWatch Logs destination policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_destination_policy

Provides a CloudWatch Logs destination policy resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_destination import CloudwatchLogDestination
from imports.aws.cloudwatch_log_destination_policy import CloudwatchLogDestinationPolicy
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test_destination = CloudwatchLogDestination(self, "test_destination",
            name="test_destination",
            role_arn=iam_for_cloudwatch.arn,
            target_arn=kinesis_for_cloudwatch.arn
        )
        test_destination_policy = DataAwsIamPolicyDocument(self, "test_destination_policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["logs:PutSubscriptionFilter"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["123456789012"],
                    type="AWS"
                )
                ],
                resources=[test_destination.arn]
            )
            ]
        )
        aws_cloudwatch_log_destination_policy_test_destination_policy =
        CloudwatchLogDestinationPolicy(self, "test_destination_policy_2",
            access_policy=Token.as_string(test_destination_policy.json),
            destination_name=test_destination.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudwatch_log_destination_policy_test_destination_policy.override_logical_id("test_destination_policy")
```

## Argument Reference

This resource supports the following arguments:

* `destination_name` - (Required) A name for the subscription filter
* `access_policy` - (Required) The policy document. This is a JSON formatted string.
* `force_update` - (Optional) Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch Logs destination policies using the `destination_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_destination_policy import CloudwatchLogDestinationPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudwatchLogDestinationPolicy.generate_config_for_import(self, "testDestinationPolicy", "test_destination")
```

Using `terraform import`, import CloudWatch Logs destination policies using the `destination_name`. For example:

```console
% terraform import aws_cloudwatch_log_destination_policy.test_destination_policy test_destination
```

<!-- cache-key: cdktf-0.20.8 input-e9a8dea320a37c932bb21790e7e8761e42c974c856dc567a8154f492a8252914 -->