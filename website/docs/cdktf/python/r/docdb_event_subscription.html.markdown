---
subcategory: "DocumentDB"
layout: "aws"
page_title: "AWS: aws_docdb_event_subscription"
description: |-
  Provides a DocumentDB event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_docdb_event_subscription

Provides a DocumentDB event subscription resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.docdb_cluster import DocdbCluster
from imports.aws.docdb_event_subscription import DocdbEventSubscription
from imports.aws.sns_topic import SnsTopic
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DocdbCluster(self, "example",
            availability_zones=[
                Token.as_string(Fn.lookup_nested(available.names, ["0"])),
                Token.as_string(Fn.lookup_nested(available.names, ["1"])),
                Token.as_string(Fn.lookup_nested(available.names, ["2"]))
            ],
            cluster_identifier="example",
            master_password="mustbeeightcharaters",
            master_username="foo",
            skip_final_snapshot=True
        )
        aws_sns_topic_example = SnsTopic(self, "example_1",
            name="example-events"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sns_topic_example.override_logical_id("example")
        aws_docdb_event_subscription_example = DocdbEventSubscription(self, "example_2",
            enabled=True,
            event_categories=["creation", "failure"],
            name="example",
            sns_topic_arn=Token.as_string(aws_sns_topic_example.arn),
            source_ids=[example.id],
            source_type="db-cluster"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_docdb_event_subscription_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional) The name of the DocumentDB event subscription. By default generated by Terraform.
* `name_prefix` - (Optional) The name of the DocumentDB event subscription. Conflicts with `name`.
* `sns_topic` - (Required) The SNS topic to send events to.
* `source_ids` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
* `source_type` - (Optional) The type of source that will be generating the events. Valid options are `db-instance`, `db-cluster`, `db-parameter-group`, `db-security-group`,` db-cluster-snapshot`. If not set, all sources will be subscribed to.
* `event_categories` - (Optional) A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/documentdb/latest/developerguide/API_Event.html or run `aws docdb describe-event-categories`.
* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to true.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the DocumentDB event notification subscription
* `arn` - The Amazon Resource Name of the DocumentDB event notification subscription
* `customer_aws_id` - The AWS customer account associated with the DocumentDB event notification subscription
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `40m`)
- `delete` - (Default `40m`)
- `update` - (Default `40m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DocumentDB Event Subscriptions using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.docdb_event_subscription import DocdbEventSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DocdbEventSubscription.generate_config_for_import(self, "example", "event-sub")
```

Using `terraform import`, import DocumentDB Event Subscriptions using the `name`. For example:

```console
% terraform import aws_docdb_event_subscription.example event-sub
```

<!-- cache-key: cdktf-0.20.8 input-01289746062c0ecfee11e0fdbb6b08b84b9bb7709018031af990b6ef46d1dc7b -->