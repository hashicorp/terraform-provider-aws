---
subcategory: "WAF"
layout: "aws"
page_title: "AWS: aws_wafv2_web_acl_association"
description: |-
  Creates a WAFv2 Web ACL Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_wafv2_web_acl_association

Creates a WAFv2 Web ACL Association.

~> **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource][1] notes that you should use the [`web_acl_id`][2] property on the [`cloudfront_distribution`][2] instead.

[1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
[2]: /docs/providers/aws/r/cloudfront_distribution.html#web_acl_id

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from cdktf import TerraformResourceLifecycle
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_deployment import ApiGatewayDeployment
from imports.aws.api_gateway_rest_api import ApiGatewayRestApi
from imports.aws.api_gateway_stage import ApiGatewayStage
from imports.aws.wafv2_web_acl import Wafv2WebAcl
from imports.aws.wafv2_web_acl_association import Wafv2WebAclAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = ApiGatewayRestApi(self, "example",
            body=Token.as_string(
                Fn.jsonencode({
                    "info": {
                        "title": "example",
                        "version": "1.0"
                    },
                    "openapi": "3.0.1",
                    "paths": {
                        "/path1": {
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "http_method": "GET",
                                    "payload_format_version": "1.0",
                                    "type": "HTTP_PROXY",
                                    "uri": "https://ip-ranges.amazonaws.com/ip-ranges.json"
                                }
                            }
                        }
                    }
                })),
            name="example"
        )
        aws_wafv2_web_acl_example = Wafv2WebAcl(self, "example_1",
            default_action=Wafv2WebAclDefaultAction(
                allow=Wafv2WebAclDefaultActionAllow()
            ),
            name="web-acl-association-example",
            scope="REGIONAL",
            visibility_config=Wafv2WebAclVisibilityConfig(
                cloudwatch_metrics_enabled=False,
                metric_name="friendly-metric-name",
                sampled_requests_enabled=False
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_wafv2_web_acl_example.override_logical_id("example")
        aws_api_gateway_deployment_example = ApiGatewayDeployment(self, "example_2",
            lifecycle=TerraformResourceLifecycle(
                create_before_destroy=True
            ),
            rest_api_id=example.id,
            triggers={
                "redeployment": Token.as_string(
                    Fn.sha1(Token.as_string(Fn.jsonencode(example.body))))
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_deployment_example.override_logical_id("example")
        aws_api_gateway_stage_example = ApiGatewayStage(self, "example_3",
            deployment_id=Token.as_string(aws_api_gateway_deployment_example.id),
            rest_api_id=example.id,
            stage_name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_stage_example.override_logical_id("example")
        aws_wafv2_web_acl_association_example = Wafv2WebAclAssociation(self, "example_4",
            resource_arn=Token.as_string(aws_api_gateway_stage_example.arn),
            web_acl_arn=Token.as_string(aws_wafv2_web_acl_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_wafv2_web_acl_association_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `resource_arn` - (Required) The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage (REST only, HTTP is unsupported), an Amazon Cognito User Pool, an Amazon AppSync GraphQL API, an Amazon App Runner service, or an Amazon Verified Access instance.
* `web_acl_arn` - (Required) The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WAFv2 Web ACL Association using `WEB_ACL_ARN,RESOURCE_ARN`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.wafv2_web_acl_association import Wafv2WebAclAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Wafv2WebAclAssociation.generate_config_for_import(self, "example", "arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name")
```

Using `terraform import`, import WAFv2 Web ACL Association using `WEB_ACL_ARN,RESOURCE_ARN`. For example:

```console
% terraform import aws_wafv2_web_acl_association.example arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name
```

<!-- cache-key: cdktf-0.20.1 input-a27998dfc5e188299395b679b4a1dc7cb0d0a3339e79b0e25fae805f43a48faa -->