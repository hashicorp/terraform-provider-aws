---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_snapshot_schedule_association"
description: |-
  Provides an Association Redshift Cluster and Snapshot Schedule resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_snapshot_schedule_association

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_cluster import RedshiftCluster
from imports.aws.redshift_snapshot_schedule import RedshiftSnapshotSchedule
from imports.aws.redshift_snapshot_schedule_association import RedshiftSnapshotScheduleAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        default_var = RedshiftCluster(self, "default",
            cluster_identifier="tf-redshift-cluster",
            cluster_type="single-node",
            database_name="mydb",
            master_password="Mustbe8characters",
            master_username="foo",
            node_type="dc1.large"
        )
        aws_redshift_snapshot_schedule_default = RedshiftSnapshotSchedule(self, "default_1",
            definitions=["rate(12 hours)"],
            identifier="tf-redshift-snapshot-schedule"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshift_snapshot_schedule_default.override_logical_id("default")
        aws_redshift_snapshot_schedule_association_default =
        RedshiftSnapshotScheduleAssociation(self, "default_2",
            cluster_identifier=default_var.id,
            schedule_identifier=Token.as_string(aws_redshift_snapshot_schedule_default.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshift_snapshot_schedule_association_default.override_logical_id("default")
```

## Argument Reference

This resource supports the following arguments:

* `cluster_identifier` - (Required, Forces new resource) The cluster identifier.
* `schedule_identifier` - (Required, Forces new resource) The snapshot schedule identifier.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Snapshot Schedule Association using the `<cluster-identifier>/<schedule-identifier>`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_snapshot_schedule_association import RedshiftSnapshotScheduleAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftSnapshotScheduleAssociation.generate_config_for_import(self, "default", "tf-redshift-cluster/tf-redshift-snapshot-schedule")
```

Using `terraform import`, import Redshift Snapshot Schedule Association using the `<cluster-identifier>/<schedule-identifier>`. For example:

```console
% terraform import aws_redshift_snapshot_schedule_association.default tf-redshift-cluster/tf-redshift-snapshot-schedule
```

<!-- cache-key: cdktf-0.20.8 input-cfbb9314d7e41451bce6ec8e24e4375625bd63ba89df980d70fe96df9cca5e41 -->