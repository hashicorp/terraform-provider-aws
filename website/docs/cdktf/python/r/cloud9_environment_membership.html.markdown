---
subcategory: "Cloud9"
layout: "aws"
page_title: "AWS: aws_cloud9_environment_membership"
description: |-
  Provides an environment member to an AWS Cloud9 development environment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloud9_environment_membership

Provides an environment member to an AWS Cloud9 development environment.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloud9_environment_ec2 import Cloud9EnvironmentEc2
from imports.aws.cloud9_environment_membership import Cloud9EnvironmentMembership
from imports.aws.iam_user import IamUser
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name, *, imageId):
        super().__init__(scope, name)
        test = Cloud9EnvironmentEc2(self, "test",
            instance_type="t2.micro",
            name="some-env",
            image_id=image_id
        )
        aws_iam_user_test = IamUser(self, "test_1",
            name="some-user"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_user_test.override_logical_id("test")
        aws_cloud9_environment_membership_test = Cloud9EnvironmentMembership(self, "test_2",
            environment_id=test.id,
            permissions="read-only",
            user_arn=Token.as_string(aws_iam_user_test.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloud9_environment_membership_test.override_logical_id("test")
```

## Argument Reference

This resource supports the following arguments:

* `environment_id` - (Required) The ID of the environment that contains the environment member you want to add.
* `permissions` - (Required) The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .
* `user_arn` - (Required) The Amazon Resource Name (ARN) of the environment member you want to add.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the environment membership.
* `user_id` - The user ID in AWS Identity and Access Management (AWS IAM) of the environment member.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cloud9 environment membership using the `environment-id#user-arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloud9_environment_membership import Cloud9EnvironmentMembership
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Cloud9EnvironmentMembership.generate_config_for_import(self, "test", "environment-id#user-arn")
```

Using `terraform import`, import Cloud9 environment membership using the `environment-id#user-arn`. For example:

```console
% terraform import aws_cloud9_environment_membership.test environment-id#user-arn
```

<!-- cache-key: cdktf-0.20.1 input-f6c7f63736e4a4ab1919a0e37f40bbf3bc5529ed6b2575d33fc736d43e14e65f -->