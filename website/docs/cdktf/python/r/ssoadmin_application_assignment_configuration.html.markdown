---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_application_assignment_configuration"
description: |-
  Terraform resource for managing an AWS SSO Admin Application Assignment Configuration.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_application_assignment_configuration

Terraform resource for managing an AWS SSO Admin Application Assignment Configuration.

By default, applications will require users to have an explicit assignment in order to access an application.
This resource can be used to adjust this default behavior if necessary.

~> Deleting this resource will return the assignment configuration for the application to the default AWS behavior (ie. `assignment_required = true`).

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_application_assignment_configuration import SsoadminApplicationAssignmentConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminApplicationAssignmentConfiguration(self, "example",
            application_arn=Token.as_string(aws_ssoadmin_application_example.application_arn),
            assignment_required=True
        )
```

## Argument Reference

The following arguments are required:

* `application_arn` - (Required) ARN of the application.
* `assignment_required` - (Required) Indicates whether users must have an explicit assignment to access the application. If `false`, all users have access to the application.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ARN of the application.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Admin Application Assignment Configuration using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_application_assignment_configuration import SsoadminApplicationAssignmentConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminApplicationAssignmentConfiguration.generate_config_for_import(self, "example", "arn:aws:sso::123456789012:application/id-12345678")
```

Using `terraform import`, import SSO Admin Application Assignment Configuration using the `id`. For example:

```console
% terraform import aws_ssoadmin_application_assignment_configuration.example arn:aws:sso::123456789012:application/id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-6c63af6f678dc94b4869dd1205895273a2172d51e8255ff4e188bc28bd67da7f -->