---
subcategory: "FinSpace"
layout: "aws"
page_title: "AWS: aws_finspace_kx_volume"
description: |-
  Terraform resource for managing an AWS FinSpace Kx Volume.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_finspace_kx_volume

Terraform resource for managing an AWS FinSpace Kx Volume.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.finspace_kx_volume import FinspaceKxVolume
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        FinspaceKxVolume(self, "example",
            availability_zones=Token.as_list("use1-az2"),
            az_mode="SINGLE",
            environment_id=Token.as_string(aws_finspace_kx_environment_example.id),
            name="my-tf-kx-volume",
            nas1_configuration=[FinspaceKxVolumeNas1Configuration(
                size=1200,
                type="SSD_250"
            )
            ],
            type="NAS_1"
        )
```

## Argument Reference

The following arguments are required:

* `az_mode` - (Required) The number of availability zones you want to assign per volume. Currently, Finspace only support SINGLE for volumes.
    * `SINGLE` - Assigns one availability zone per volume.
* `environment_id` - (Required) A unique identifier for the kdb environment, whose clusters can attach to the volume.
* `name` - (Required) Unique name for the volumr that you want to create.
* `type` - (Required) The type of file system volume. Currently, FinSpace only supports the `NAS_1` volume type. When you select the `NAS_1` volume type, you must also provide `nas1_configuration`.
* `availability_zones` - (Required) The identifier of the AWS Availability Zone IDs.

The following arguments are optional:

* `nas1_configuration` - (Optional) Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See [`nas1_configuration` Argument Reference](#nas1_configuration-argument-reference) below.
* `description` - (Optional) Description of the volume.
* `tags` - (Optional) A list of key-value pairs to label the volume. You can add up to 50 tags to a volume

### `nas1_configuration` Argument Reference

The `nas1_configuration` block supports the following arguments:

* `size` - (Required) The size of the network attached storage.
* `type` - (Required) The type of the network attached storage.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) identifier of the KX volume.
* `created_timestamp` - The timestamp at which the volume was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.
* `status` - The status of volume creation.
    * `CREATING` – The volume creation is in progress.
    * `CREATE_FAILED` – The volume creation has failed.
    * `ACTIVE` – The volume is active.
    * `UPDATING` – The volume is in the process of being updated.
    * `UPDATE_FAILED` – The update action failed.
    * `UPDATED` – The volume is successfully updated.
    * `DELETING` – The volume is in the process of being deleted.
    * `DELETE_FAILED` – The system failed to delete the volume.
    * `DELETED` – The volume is successfully deleted.
* `status_reason` - The error message when a failed state occurs.
* `last_modified_timestamp` - Last timestamp at which the volume was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `45m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import an AWS FinSpace Kx Volume using the `id` (environment ID and volume name, comma-delimited). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.finspace_kx_volume import FinspaceKxVolume
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        FinspaceKxVolume.generate_config_for_import(self, "example", "n3ceo7wqxoxcti5tujqwzs,my-tf-kx-volume")
```

Using `terraform import`, import an AWS FinSpace Kx Volume using the `id` (environment ID and volume name, comma-delimited). For example:

```console
% terraform import aws_finspace_kx_volume.example n3ceo7wqxoxcti5tujqwzs,my-tf-kx-volume
```

<!-- cache-key: cdktf-0.20.8 input-636eade803991dcf3e75b89fb561a207ff33ee38a93e6482363e8aafe174b7ed -->