---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_resource_policy"
description: |-
  Provides a resource to manage a CloudWatch log resource policy
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_resource_policy

Provides a resource to manage a CloudWatch log resource policy.

## Example Usage

### Elasticsearch Log Publishing

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_resource_policy import CloudwatchLogResourcePolicy
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        elasticsearch_log_publishing_policy = DataAwsIamPolicyDocument(self, "elasticsearch-log-publishing-policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["logs:CreateLogStream", "logs:PutLogEvents", "logs:PutLogEventsBatch"
                ],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["es.amazonaws.com"],
                    type="Service"
                )
                ],
                resources=["arn:aws:logs:*"]
            )
            ]
        )
        aws_cloudwatch_log_resource_policy_elasticsearch_log_publishing_policy =
        CloudwatchLogResourcePolicy(self, "elasticsearch-log-publishing-policy_1",
            policy_document=Token.as_string(elasticsearch_log_publishing_policy.json),
            policy_name="elasticsearch-log-publishing-policy"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudwatch_log_resource_policy_elasticsearch_log_publishing_policy.override_logical_id("elasticsearch-log-publishing-policy")
```

### Route53 Query Logging

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_resource_policy import CloudwatchLogResourcePolicy
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        route53_query_logging_policy = DataAwsIamPolicyDocument(self, "route53-query-logging-policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["logs:CreateLogStream", "logs:PutLogEvents"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["route53.amazonaws.com"],
                    type="Service"
                )
                ],
                resources=["arn:aws:logs:*:*:log-group:/aws/route53/*"]
            )
            ]
        )
        aws_cloudwatch_log_resource_policy_route53_query_logging_policy =
        CloudwatchLogResourcePolicy(self, "route53-query-logging-policy_1",
            policy_document=Token.as_string(route53_query_logging_policy.json),
            policy_name="route53-query-logging-policy"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudwatch_log_resource_policy_route53_query_logging_policy.override_logical_id("route53-query-logging-policy")
```

## Argument Reference

This resource supports the following arguments:

* `policy_document` - (Required) Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
* `policy_name` - (Required) Name of the resource policy.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the CloudWatch log resource policy

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch log resource policies using the policy name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_resource_policy import CloudwatchLogResourcePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudwatchLogResourcePolicy.generate_config_for_import(self, "myPolicy", "MyPolicy")
```

Using `terraform import`, import CloudWatch log resource policies using the policy name. For example:

```console
% terraform import aws_cloudwatch_log_resource_policy.MyPolicy MyPolicy
```

<!-- cache-key: cdktf-0.20.8 input-e10ada71512fa142d53597fd2949e853332001f8f918abaf19a3f490a6fae621 -->