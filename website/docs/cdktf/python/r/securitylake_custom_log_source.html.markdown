---
subcategory: "Security Lake"
layout: "aws"
page_title: "AWS: aws_securitylake_custom_log_source"
description: |-
  Terraform resource for managing an AWS Security Lake Custom Log Source.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_securitylake_custom_log_source

Terraform resource for managing an AWS Security Lake Custom Log Source.

~> **NOTE:** The underlying `aws_securitylake_data_lake` must be configured before creating the `aws_securitylake_custom_log_source`. Use a `depends_on` statement.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.securitylake_custom_log_source import SecuritylakeCustomLogSource
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SecuritylakeCustomLogSource(self, "example",
            configuration=[SecuritylakeCustomLogSourceConfiguration(
                crawler_configuration=[SecuritylakeCustomLogSourceConfigurationCrawlerConfiguration(
                    role_arn=custom_log.arn
                )
                ],
                provider_identity=[SecuritylakeCustomLogSourceConfigurationProviderIdentity(
                    external_id="example-id",
                    principal="123456789012"
                )
                ]
            )
            ],
            depends_on=[aws_securitylake_data_lake_example],
            event_classes=["FILE_ACTIVITY"],
            source_name="example-name",
            source_version="1.0"
        )
```

## Argument Reference

This resource supports the following arguments:

* `configuration` - (Required) The configuration for the third-party custom source.
    * `crawler_configuration` - (Required) The configuration for the Glue Crawler for the third-party custom source.
        * `role_arn` - (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
    * `provider_identity` - (Required) The identity of the log provider for the third-party custom source.
        * `external_id` - (Required) The external ID used to estalish trust relationship with the AWS identity.
        * `principal` - (Required) The AWS identity principal.
* `event_classes` - (Optional) The Open Cybersecurity Schema Framework (OCSF) event classes which describes the type of data that the custom source will send to Security Lake.
* `source_name` - (Required) Specify the name for a third-party custom source.
  This must be a Regionally unique value.
  Has a maximum length of 20.
* `source_version` - (Optional) Specify the source version for the third-party custom source, to limit log collection to a specific version of custom data source.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `attributes` - The attributes of a third-party custom source.
    * `crawler_arn` - The ARN of the AWS Glue crawler.
    * `database_arn` - The ARN of the AWS Glue database where results are written.
    * `table_arn` - The ARN of the AWS Glue table.
* `provider_details` - The details of the log provider for a third-party custom source.
    * `location` - The location of the partition in the Amazon S3 bucket for Security Lake.
    * `role_arn` - The ARN of the IAM role to be used by the entity putting logs into your custom source partition.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS log sources using the source name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.securitylake_custom_log_source import SecuritylakeCustomLogSource
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SecuritylakeCustomLogSource.generate_config_for_import(self, "example", "example-name")
```

Using `terraform import`, import Custom log sources using the source name. For example:

```console
% terraform import aws_securitylake_custom_log_source.example example-name
```

<!-- cache-key: cdktf-0.20.1 input-fe7ea5dfcf4721825eec4e59e42112d25a58abf1f74522209383f9ff03f0244a -->