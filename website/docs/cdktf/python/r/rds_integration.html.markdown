---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_rds_integration"
description: |-
  Terraform resource for managing an AWS RDS (Relational Database) Integration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_rds_integration

Terraform resource for managing an AWS RDS (Relational Database) zero-ETL integration. You can refer to the [User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/zero-etl.setting-up.html).

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import RdsIntegration
from imports.aws.redshiftserverless_namespace import RedshiftserverlessNamespace
from imports.aws.redshiftserverless_workgroup import RedshiftserverlessWorkgroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = RedshiftserverlessNamespace(self, "example",
            namespace_name="redshift-example"
        )
        aws_redshiftserverless_workgroup_example =
        RedshiftserverlessWorkgroup(self, "example_1",
            base_capacity=8,
            config_parameter=[RedshiftserverlessWorkgroupConfigParameter(
                parameter_key="enable_case_sensitive_identifier",
                parameter_value="true"
            )
            ],
            namespace_name=example.namespace_name,
            publicly_accessible=False,
            subnet_ids=[example1.id, example2.id, example3.id],
            workgroup_name="example-workspace"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshiftserverless_workgroup_example.override_logical_id("example")
        aws_rds_integration_example = RdsIntegration(self, "example_2",
            integration_name="example",
            lifecycle={
                "ignore_changes": [kms_key_id]
            },
            source_arn=aws_rds_cluster_example.arn,
            target_arn=example.arn
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_rds_integration_example.override_logical_id("example")
```

### Use own KMS key

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import RdsIntegration
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.kms_key import KmsKey
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        current = DataAwsCallerIdentity(self, "current")
        key_policy = DataAwsIamPolicyDocument(self, "key_policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["kms:*"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["arn:aws:iam::${" + current.account_id + "}:root"],
                    type="AWS"
                )
                ],
                resources=["*"]
            ), DataAwsIamPolicyDocumentStatement(
                actions=["kms:CreateGrant"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["redshift.amazonaws.com"],
                    type="Service"
                )
                ],
                resources=["*"]
            )
            ]
        )
        example = KmsKey(self, "example",
            deletion_window_in_days=10,
            policy=Token.as_string(key_policy.json)
        )
        aws_rds_integration_example = RdsIntegration(self, "example_3",
            additional_encryption_context=[{
                "example": "test"
            }
            ],
            integration_name="example",
            kms_key_id=example.arn,
            source_arn=aws_rds_cluster_example.arn,
            target_arn=aws_redshiftserverless_namespace_example.arn
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_rds_integration_example.override_logical_id("example")
```

## Argument Reference

For more detailed documentation about each argument, refer to the [AWS official documentation](https://docs.aws.amazon.com/cli/latest/reference/rds/create-integration.html).

The following arguments are required:

* `integration_name` - (Required, Forces new resources) Name of the integration.

* `source_arn` - (Required, Forces new resources) ARN of the database to use as the source for replication.

* `target_arn` - (Required, Forces new resources) ARN of the Redshift data warehouse to use as the target for replication.

The following arguments are optional:

* `kms_key_id` - (Optional, Forces new resources) KMS key identifier for the key to use to encrypt the integration. If you don't specify an encryption key, RDS uses a default AWS owned key. If you use the default AWS owned key, you should ignore `kms_key_id` parameter by using [`lifecycle` parameter](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes) to avoid unintended change after the first creation.

* `additional_encryption_context` - (Optional, Forces new resources) Set of non-secret keyâ€“value pairs that contains additional contextual information about the data. For more information, see the [User Guide](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context). You can only include this parameter if you specify the `kms_key_id` parameter.

* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Integration.
* `id` - ID of the Integration.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `10m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RDS (Relational Database) Integration using the `arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import RdsIntegration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RdsIntegration.generate_config_for_import(self, "example", "arn:aws:rds:us-west-2:123456789012:integration:abcdefgh-0000-1111-2222-123456789012")
```

Using `terraform import`, import RDS (Relational Database) Integration using the `arn`. For example:

```console
% terraform import aws_rds_integration.example arn:aws:rds:us-west-2:123456789012:integration:abcdefgh-0000-1111-2222-123456789012
```

<!-- cache-key: cdktf-0.20.1 input-6d881641e36f968c4be6df36fe5b0eed1da39b2dd6f94f45a69756d625982f58 -->