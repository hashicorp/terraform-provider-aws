---
subcategory: "VPN (Client)"
layout: "aws"
page_title: "AWS: aws_ec2_client_vpn_route"
description: |-
  Provides additional routes for AWS Client VPN endpoints.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_client_vpn_route

Provides additional routes for AWS Client VPN endpoints. For more information on usage, please see the
[AWS Client VPN Administrator's Guide](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/what-is.html).

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ec2_client_vpn_endpoint import Ec2ClientVpnEndpoint
from imports.aws.ec2_client_vpn_network_association import Ec2ClientVpnNetworkAssociation
from imports.aws.ec2_client_vpn_route import Ec2ClientVpnRoute
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Ec2ClientVpnEndpoint(self, "example",
            authentication_options=[Ec2ClientVpnEndpointAuthenticationOptions(
                root_certificate_chain_arn=Token.as_string(aws_acm_certificate_example.arn),
                type="certificate-authentication"
            )
            ],
            client_cidr_block="10.0.0.0/16",
            connection_log_options=Ec2ClientVpnEndpointConnectionLogOptions(
                enabled=False
            ),
            description="Example Client VPN endpoint",
            server_certificate_arn=Token.as_string(aws_acm_certificate_example.arn)
        )
        aws_ec2_client_vpn_network_association_example =
        Ec2ClientVpnNetworkAssociation(self, "example_1",
            client_vpn_endpoint_id=example.id,
            subnet_id=Token.as_string(aws_subnet_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ec2_client_vpn_network_association_example.override_logical_id("example")
        aws_ec2_client_vpn_route_example = Ec2ClientVpnRoute(self, "example_2",
            client_vpn_endpoint_id=example.id,
            destination_cidr_block="0.0.0.0/0",
            target_vpc_subnet_id=Token.as_string(aws_ec2_client_vpn_network_association_example.subnet_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ec2_client_vpn_route_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `client_vpn_endpoint_id` - (Required) The ID of the Client VPN endpoint.
* `destination_cidr_block` - (Required) The IPv4 address range, in CIDR notation, of the route destination.
* `description` - (Optional) A brief description of the route.
* `target_vpc_subnet_id` - (Required) The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the Client VPN endpoint.
* `origin` - Indicates how the Client VPN route was added. Will be `add-route` for routes created by this resource.
* `type` - The type of the route.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `4m`)
- `delete` - (Default `4m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS Client VPN routes using the endpoint ID, target subnet ID, and destination CIDR block. All values are separated by a `,`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ec2_client_vpn_route import Ec2ClientVpnRoute
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Ec2ClientVpnRoute.generate_config_for_import(self, "example", "cvpn-endpoint-1234567890abcdef,subnet-9876543210fedcba,10.1.0.0/24")
```

Using `terraform import`, import AWS Client VPN routes using the endpoint ID, target subnet ID, and destination CIDR block. All values are separated by a `,`. For example:

```console
% terraform import aws_ec2_client_vpn_route.example cvpn-endpoint-1234567890abcdef,subnet-9876543210fedcba,10.1.0.0/24
```

<!-- cache-key: cdktf-0.20.8 input-144efd2b6259f86199d398e7181456f408b908b3630ac4f3343668fe63a992b9 -->