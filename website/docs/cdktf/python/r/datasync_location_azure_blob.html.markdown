---
subcategory: "DataSync"
layout: "aws"
page_title: "AWS: aws_datasync_location_azure_blob"
description: |-
  Manages an AWS DataSync Microsoft Azure Blob Storage Location
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_datasync_location_azure_blob

Manages a Microsoft Azure Blob Storage Location within AWS DataSync.

~> **NOTE:** The DataSync Agents must be available before creating this resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.datasync_location_azure_blob import DatasyncLocationAzureBlob
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DatasyncLocationAzureBlob(self, "example",
            agent_arns=[Token.as_string(aws_datasync_agent_example.arn)],
            authentication_type="SAS",
            container_url="https://myaccount.blob.core.windows.net/mycontainer",
            sas_configuration=DatasyncLocationAzureBlobSasConfiguration(
                token="sp=r&st=2023-12-20T14:54:52Z&se=2023-12-20T22:54:52Z&spr=https&sv=2021-06-08&sr=c&sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D"
            )
        )
```

## Argument Reference

This resource supports the following arguments:

* `access_tier` - (Optional) The access tier that you want your objects or files transferred into. Valid values: `HOT`, `COOL` and `ARCHIVE`. Default: `HOT`.
* `agent_arns` - (Required) A list of DataSync Agent ARNs with which this location will be associated.
* `authentication_type` - (Required) The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.
* `blob_type` - (Optional) The type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Valid values: `BLOB`. Default: `BLOB`.
* `container_url` - (Required) The URL of the Azure Blob Storage container involved in your transfer.
* `sas_configuration` - (Optional) The SAS configuration that allows DataSync to access your Azure Blob Storage. See configuration below.
* `subdirectory` - (Optional) Path segments if you want to limit your transfer to a virtual directory in the container.
* `tags` - (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### sas_configuration Argument Reference

* `token` - (Required) A SAS token that provides permissions to access your Azure Blob Storage.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the DataSync Location.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_datasync_location_azure_blob` using the Amazon Resource Name (ARN). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.datasync_location_azure_blob import DatasyncLocationAzureBlob
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DatasyncLocationAzureBlob.generate_config_for_import(self, "example", "arn:aws:datasync:us-east-1:123456789012:location/loc-12345678901234567")
```

Using `terraform import`, import `aws_datasync_location_azure_blob` using the Amazon Resource Name (ARN). For example:

```console
% terraform import aws_datasync_location_azure_blob.example arn:aws:datasync:us-east-1:123456789012:location/loc-12345678901234567
```

<!-- cache-key: cdktf-0.20.1 input-0637d96370b64fc2d6d591d7b71f5801506815f36db9cd6ddafc9ca36bcc9181 -->