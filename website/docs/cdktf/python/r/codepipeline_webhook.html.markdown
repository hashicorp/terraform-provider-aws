---
subcategory: "CodePipeline"
layout: "aws"
page_title: "AWS: aws_codepipeline_webhook"
description: |-
  Provides a CodePipeline Webhook
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codepipeline_webhook

Provides a CodePipeline Webhook.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codepipeline import Codepipeline
from imports.aws.codepipeline_webhook import CodepipelineWebhook
from imports.github.repository_webhook import RepositoryWebhook
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # The following providers are missing schema information and might need manual adjustments to synthesize correctly: github.
        #     For a more precise conversion please use the --provider flag in convert.
        webhook_secret = "super-secret"
        bar = Codepipeline(self, "bar",
            artifact_store=[CodepipelineArtifactStore(
                encryption_key=CodepipelineArtifactStoreEncryptionKey(
                    id=Token.as_string(s3_kmskey.arn),
                    type="KMS"
                ),
                location=Token.as_string(aws_s3_bucket_bar.bucket),
                type="S3"
            )
            ],
            name="tf-test-pipeline",
            role_arn=Token.as_string(aws_iam_role_bar.arn),
            stage=[CodepipelineStage(
                action=[CodepipelineStageAction(
                    category="Source",
                    configuration={
                        "Branch": "master",
                        "Owner": "my-organization",
                        "Repo": "test"
                    },
                    name="Source",
                    output_artifacts=["test"],
                    owner="ThirdParty",
                    provider="GitHub",
                    version="1"
                )
                ],
                name="Source"
            ), CodepipelineStage(
                action=[CodepipelineStageAction(
                    category="Build",
                    configuration={
                        "ProjectName": "test"
                    },
                    input_artifacts=["test"],
                    name="Build",
                    owner="AWS",
                    provider="CodeBuild",
                    version="1"
                )
                ],
                name="Build"
            )
            ]
        )
        aws_codepipeline_webhook_bar = CodepipelineWebhook(self, "bar_1",
            authentication="GITHUB_HMAC",
            authentication_configuration=CodepipelineWebhookAuthenticationConfiguration(
                secret_token=webhook_secret
            ),
            filter=[CodepipelineWebhookFilter(
                json_path="$.ref",
                match_equals="refs/heads/{Branch}"
            )
            ],
            name="test-webhook-github-bar",
            target_action="Source",
            target_pipeline=bar.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_codepipeline_webhook_bar.override_logical_id("bar")
        github_repository_webhook_bar = RepositoryWebhook(self, "bar_2",
            configuration=[{
                "content_type": "json",
                "insecure_ssl": True,
                "secret": webhook_secret,
                "url": aws_codepipeline_webhook_bar.url
            }
            ],
            events=["push"],
            name="web",
            repository=repo.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        github_repository_webhook_bar.override_logical_id("bar")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the webhook.
* `authentication` - (Required) The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
* `authentication_configuration` - (Optional) An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
* `filter` (Required) One or more `filter` blocks. Filter blocks are documented below.
* `target_action` - (Required) The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
* `target_pipeline` - (Required) The name of the pipeline.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

An `authentication_configuration` block supports the following arguments:

* `secret_token` - (Optional) The shared secret for the GitHub repository webhook. Set this as `secret` in your `github_repository_webhook`'s `configuration` block. Required for `GITHUB_HMAC`.
* `allowed_ip_range` - (Optional) A valid CIDR block for `IP` filtering. Required for `IP`.

A `filter` block supports the following arguments:

* `json_path` - (Required) The [JSON path](https://github.com/json-path/JsonPath) to filter on.
* `match_equals` - (Required) The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The CodePipeline webhook's ARN.
* `id` - The CodePipeline webhook's ARN.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `url` - The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodePipeline Webhooks using their ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codepipeline_webhook import CodepipelineWebhook
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodepipelineWebhook.generate_config_for_import(self, "example", "arn:aws:codepipeline:us-west-2:123456789012:webhook:example")
```

Using `terraform import`, import CodePipeline Webhooks using their ARN. For example:

```console
% terraform import aws_codepipeline_webhook.example arn:aws:codepipeline:us-west-2:123456789012:webhook:example
```

<!-- cache-key: cdktf-0.20.8 input-12eddb2b0e3d8862aa33cfaab94c4516ce51690b35cba10b34567326ccde28ed -->