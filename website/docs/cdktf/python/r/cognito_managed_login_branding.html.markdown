---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_managed_login_branding"
description: |-
  Manages branding settings for a user pool style and associates it with an app client.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_managed_login_branding

Manages branding settings for a user pool style and associates it with an app client.

## Example Usage

### Default Branding Style

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_managed_login_branding import CognitoManagedLoginBranding
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoManagedLoginBranding(self, "client",
            client_id=example.id,
            use_cognito_provided_values=True,
            user_pool_id=Token.as_string(aws_cognito_user_pool_example.id)
        )
```

### Custom Branding Style

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_managed_login_branding import CognitoManagedLoginBranding
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoManagedLoginBranding(self, "client",
            asset=[CognitoManagedLoginBrandingAsset(
                bytes=Token.as_string(Fn.filebase64("login_branding_asset.svg")),
                category="PAGE_HEADER_BACKGROUND",
                color_mode="DARK",
                extension="SVG"
            )
            ],
            client_id=example.id,
            settings=Token.as_string(Fn.jsonencode({})),
            user_pool_id=Token.as_string(aws_cognito_user_pool_example.id)
        )
```

## Argument Reference

The following arguments are required:

* `client_id` - (Required) App client that the branding style is for.
* `user_pool_id` - (Required) User pool the client belongs to.

The following arguments are optional:

* `asset` - (Optional) Image files to apply to roles like backgrounds, logos, and icons. See [details below](#asset).
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `settings` - (Optional) JSON document with the the settings to apply to the style.
* `use_cognito_provided_values` - (Optional) When `true`, applies the default branding style options.

### asset

* `bytes` - (Optional) Image file, in Base64-encoded binary.
* `category` - (Required) Category that the image corresponds to. See [AWS documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AssetType.html#CognitoUserPools-Type-AssetType-Category) for valid values.
* `color_mode` - (Required) Display-mode target of the asset. Valid values: `LIGHT`, `DARK`, `DYNAMIC`.
* `extensions` - (Required) File type of the image file. See [AWS documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AssetType.html#CognitoUserPools-Type-AssetType-Extension) for valid values.
* `resource_id` - (Optional) Asset ID.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `managed_login_branding_id` - ID of the managed login branding style.
* `settings_all` - Settings including Amazon Cognito defaults.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cognito branding settings using `user_pool_id` and `managed_login_branding_id` separated by `,`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_managed_login_branding import CognitoManagedLoginBranding
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoManagedLoginBranding.generate_config_for_import(self, "example", "us-west-2_rSss9Zltr,06c6ae7b-1e66-46d2-87a9-1203ea3307bd")
```

Using `terraform import`, import Cognito branding settings using `user_pool_id` and `managed_login_branding_id` separated by `,`. For example:

```console
% terraform import aws_cognito_managed_login_branding.example us-west-2_rSss9Zltr,06c6ae7b-1e66-46d2-87a9-1203ea3307bd
```

<!-- cache-key: cdktf-0.20.8 input-68659c052741a76c0ca52b4f4507b7509bcc0a1dd58bc97d0095275b64426931 -->