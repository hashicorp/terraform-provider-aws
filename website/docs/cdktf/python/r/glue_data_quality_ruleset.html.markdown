---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_data_quality_ruleset"
description: |-
  Provides a Glue Data Quality Ruleset.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glue_data_quality_ruleset

Provides a Glue Data Quality Ruleset Resource. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/glue-data-quality.html) for a full explanation of the Glue Data Quality Ruleset functionality

## Example Usage

### Basic

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_data_quality_ruleset import GlueDataQualityRuleset
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueDataQualityRuleset(self, "example",
            name="example",
            ruleset="Rules = [Completeness \\\"colA\\\" between 0.4 and 0.8]"
        )
```

### With description

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_data_quality_ruleset import GlueDataQualityRuleset
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueDataQualityRuleset(self, "example",
            description="example",
            name="example",
            ruleset="Rules = [Completeness \\\"colA\\\" between 0.4 and 0.8]"
        )
```

### With tags

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_data_quality_ruleset import GlueDataQualityRuleset
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueDataQualityRuleset(self, "example",
            name="example",
            ruleset="Rules = [Completeness \\\"colA\\\" between 0.4 and 0.8]",
            tags={
                "hello": "world"
            }
        )
```

### With target_table

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_data_quality_ruleset import GlueDataQualityRuleset
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueDataQualityRuleset(self, "example",
            name="example",
            ruleset="Rules = [Completeness \\\"colA\\\" between 0.4 and 0.8]",
            target_table=GlueDataQualityRulesetTargetTable(
                database_name=Token.as_string(aws_glue_catalog_database_example.name),
                table_name=Token.as_string(aws_glue_catalog_table_example.name)
            )
        )
```

## Argument Reference

This resource supports the following arguments:

* `description` - (Optional) Description of the data quality ruleset.
* `name` - (Required, Forces new resource) Name of the data quality ruleset.
* `ruleset` - (Optional) A Data Quality Definition Language (DQDL) ruleset. For more information, see the AWS Glue developer guide.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `target_table` - (Optional, Forces new resource) A Configuration block specifying a target table associated with the data quality ruleset. See [`target_table`](#target_table) below.

### target_table

* `catalog_id` - (Optional, Forces new resource) The catalog id where the AWS Glue table exists.
* `database_name` - (Required, Forces new resource) Name of the database where the AWS Glue table exists.
* `table_name` - (Required, Forces new resource) Name of the AWS Glue table.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Glue Data Quality Ruleset.
* `created_on` - The time and date that this data quality ruleset was created.
* `last_modified_on` - The time and date that this data quality ruleset was created.
* `recommendation_run_id` - When a ruleset was created from a recommendation run, this run ID is generated to link the two together.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue Data Quality Ruleset using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_data_quality_ruleset import GlueDataQualityRuleset
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueDataQualityRuleset.generate_config_for_import(self, "example", "exampleName")
```

Using `terraform import`, import Glue Data Quality Ruleset using the `name`. For example:

```console
% terraform import aws_glue_data_quality_ruleset.example exampleName
```

<!-- cache-key: cdktf-0.20.8 input-1c73af64f9d424d885b65e53dcc6d2467ecb21df266c61f99fe72cab1b72c68d -->