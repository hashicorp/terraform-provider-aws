---
subcategory: "License Manager"
layout: "aws"
page_title: "AWS: aws_licensemanager_association"
description: |-
  Provides a License Manager association resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_licensemanager_association

Provides a License Manager association.

~> **Note:** License configurations can also be associated with launch templates by specifying the `license_specifications` block for an `aws_launch_template`.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_ami import DataAwsAmi
from imports.aws.instance import Instance
from imports.aws.licensemanager_association import LicensemanagerAssociation
from imports.aws.licensemanager_license_configuration import LicensemanagerLicenseConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = LicensemanagerLicenseConfiguration(self, "example",
            license_counting_type="Instance",
            name="Example"
        )
        data_aws_ami_example = DataAwsAmi(self, "example_1",
            filter=[DataAwsAmiFilter(
                name="name",
                values=["amzn-ami-vpc-nat*"]
            )
            ],
            most_recent=True,
            owners=["amazon"]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_ami_example.override_logical_id("example")
        aws_instance_example = Instance(self, "example_2",
            ami=Token.as_string(data_aws_ami_example.id),
            instance_type="t2.micro"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_instance_example.override_logical_id("example")
        aws_licensemanager_association_example = LicensemanagerAssociation(self, "example_3",
            license_configuration_arn=example.arn,
            resource_arn=Token.as_string(aws_instance_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_licensemanager_association_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `license_configuration_arn` - (Required) ARN of the license configuration.
* `resource_arn` - (Required) ARN of the resource associated with the license configuration.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The license configuration ARN.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import license configurations using `resource_arn,license_configuration_arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.licensemanager_association import LicensemanagerAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LicensemanagerAssociation.generate_config_for_import(self, "example", "arn:aws:ec2:eu-west-1:123456789012:image/ami-123456789abcdef01,arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef")
```

Using `terraform import`, import license configurations using `resource_arn,license_configuration_arn`. For example:

```console
% terraform import aws_licensemanager_association.example arn:aws:ec2:eu-west-1:123456789012:image/ami-123456789abcdef01,arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef
```

<!-- cache-key: cdktf-0.20.8 input-8b8e9ddcd676f43167920f5782ed96b9679e5a610aa31170c5d53aa2d9e1453d -->