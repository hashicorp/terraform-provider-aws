---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_connect_attachment"
description: |-
  Manages an AWS Network Manager Connect Attachment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_connect_attachment

Manages an AWS Network Manager Connect Attachment.

Use this resource to create a Connect attachment in AWS Network Manager. Connect attachments enable you to connect your on-premises networks to your core network through a VPC or Transit Gateway attachment.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmanager_connect_attachment import NetworkmanagerConnectAttachment
from imports.aws.networkmanager_vpc_attachment import NetworkmanagerVpcAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = NetworkmanagerVpcAttachment(self, "example",
            core_network_id=Token.as_string(awscc_networkmanager_core_network_example.id),
            subnet_arns=Token.as_list(Fn.lookup_nested(aws_subnet_example, ["*", "arn"])),
            vpc_arn=Token.as_string(aws_vpc_example.arn)
        )
        aws_networkmanager_connect_attachment_example =
        NetworkmanagerConnectAttachment(self, "example_1",
            core_network_id=Token.as_string(awscc_networkmanager_core_network_example.id),
            edge_location=example.edge_location,
            options=NetworkmanagerConnectAttachmentOptions(
                protocol="GRE"
            ),
            transport_attachment_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_connect_attachment_example.override_logical_id("example")
```

### Usage with attachment accepter

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmanager_attachment_accepter import NetworkmanagerAttachmentAccepter
from imports.aws.networkmanager_connect_attachment import NetworkmanagerConnectAttachment
from imports.aws.networkmanager_vpc_attachment import NetworkmanagerVpcAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = NetworkmanagerVpcAttachment(self, "example",
            core_network_id=Token.as_string(awscc_networkmanager_core_network_example.id),
            subnet_arns=Token.as_list(Fn.lookup_nested(aws_subnet_example, ["*", "arn"])),
            vpc_arn=Token.as_string(aws_vpc_example.arn)
        )
        aws_networkmanager_attachment_accepter_example =
        NetworkmanagerAttachmentAccepter(self, "example_1",
            attachment_id=example.id,
            attachment_type=example.attachment_type
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_attachment_accepter_example.override_logical_id("example")
        aws_networkmanager_connect_attachment_example =
        NetworkmanagerConnectAttachment(self, "example_2",
            core_network_id=Token.as_string(awscc_networkmanager_core_network_example.id),
            depends_on=[aws_networkmanager_attachment_accepter_example],
            edge_location=example.edge_location,
            options=NetworkmanagerConnectAttachmentOptions(
                protocol="GRE"
            ),
            transport_attachment_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_connect_attachment_example.override_logical_id("example")
        NetworkmanagerAttachmentAccepter(self, "example2",
            attachment_id=Token.as_string(aws_networkmanager_connect_attachment_example.id),
            attachment_type=Token.as_string(aws_networkmanager_connect_attachment_example.attachment_type)
        )
```

## Argument Reference

The following arguments are required:

* `core_network_id` - (Required) ID of a core network where you want to create the attachment.
* `edge_location` - (Required) Region where the edge is located.
* `options` - (Required) Options block. See [options](#options) for more information.
* `transport_attachment_id` - (Required) ID of the attachment between the two connections.

The following arguments are optional:

* `tags` - (Optional) Key-value tags for the attachment. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### options

* `protocol` - (Optional) Protocol used for the attachment connection. Valid values: `GRE`, `NO_ENCAP`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the attachment.
* `attachment_id` - ID of the attachment.
* `attachment_policy_rule_number` - Policy rule number associated with the attachment.
* `attachment_type` - Type of attachment.
* `core_network_arn` - ARN of a core network.
* `owner_account_id` - ID of the attachment account owner.
* `resource_arn` - Attachment resource ARN.
* `segment_name` - Name of the segment attachment.
* `state` - State of the attachment.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)
* `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_connect_attachment` using the attachment ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmanager_connect_attachment import NetworkmanagerConnectAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NetworkmanagerConnectAttachment.generate_config_for_import(self, "example", "attachment-0f8fa60d2238d1bd8")
```

Using `terraform import`, import `aws_networkmanager_connect_attachment` using the attachment ID. For example:

```console
% terraform import aws_networkmanager_connect_attachment.example attachment-0f8fa60d2238d1bd8
```

<!-- cache-key: cdktf-0.20.8 input-4e8b4db8920cc93039fa6fbc1ee06c3e44a6ec3dd5a6578232f6f3f99c820a21 -->