---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_lb_attachment"
description: |-
  Attaches a Lightsail Instance to a Lightsail Load Balancer
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_lb_attachment

Attaches a Lightsail Instance to a Lightsail Load Balancer.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_availability_zones import DataAwsAvailabilityZones
from imports.aws.lightsail_instance import LightsailInstance
from imports.aws.lightsail_lb import LightsailLb
from imports.aws.lightsail_lb_attachment import LightsailLbAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = LightsailLb(self, "test",
            health_check_path="/",
            instance_port=Token.as_number("80"),
            name="test-load-balancer",
            tags={
                "foo": "bar"
            }
        )
        available = DataAwsAvailabilityZones(self, "available",
            filter=[DataAwsAvailabilityZonesFilter(
                name="opt-in-status",
                values=["opt-in-not-required"]
            )
            ],
            state="available"
        )
        aws_lightsail_instance_test = LightsailInstance(self, "test_2",
            availability_zone=Token.as_string(Fn.lookup_nested(available.names, ["0"])),
            blueprint_id="amazon_linux_2",
            bundle_id="nano_3_0",
            name="test-instance"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lightsail_instance_test.override_logical_id("test")
        aws_lightsail_lb_attachment_test = LightsailLbAttachment(self, "test_3",
            instance_name=Token.as_string(aws_lightsail_instance_test.name),
            lb_name=test.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lightsail_lb_attachment_test.override_logical_id("test")
```

## Argument Reference

This resource supports the following arguments:

* `lb_name` - (Required) The name of the Lightsail load balancer.
* `instance_name` - (Required) The name of the instance to attach to the load balancer.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - A combination of attributes to create a unique id: `lb_name`,`instance_name`

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_lb_attachment` using the name attribute. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_lb_attachment import LightsailLbAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailLbAttachment.generate_config_for_import(self, "test", "example-load-balancer,example-instance")
```

Using `terraform import`, import `aws_lightsail_lb_attachment` using the name attribute. For example:

```console
% terraform import aws_lightsail_lb_attachment.test example-load-balancer,example-instance
```

<!-- cache-key: cdktf-0.20.1 input-d7f55c172f805ac505cedcf63850df8db630bc587a21a031b9908cb01167fd47 -->