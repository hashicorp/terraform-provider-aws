---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_function_recursion_config"
description: |-
  Manages an AWS Lambda Function Recursion Config.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lambda_function_recursion_config

Manages an AWS Lambda Function Recursion Config. Use this resource to control how Lambda handles recursive function invocations to prevent infinite loops.

~> **Note:** Destruction of this resource will return the `recursive_loop` configuration back to the default value of `Terminate`.

## Example Usage

### Allow Recursive Invocations

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_function import LambdaFunction
from imports.aws.lambda_function_recursion_config import LambdaFunctionRecursionConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = LambdaFunction(self, "example",
            filename="function.zip",
            function_name="recursive_processor",
            handler="index.handler",
            role=lambda_role.arn,
            runtime="python3.12"
        )
        aws_lambda_function_recursion_config_example =
        LambdaFunctionRecursionConfig(self, "example_1",
            function_name=example.function_name,
            recursive_loop="Allow"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lambda_function_recursion_config_example.override_logical_id("example")
```

### Production Safety Configuration

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_function import LambdaFunction
from imports.aws.lambda_function_recursion_config import LambdaFunctionRecursionConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        production_processor = LambdaFunction(self, "production_processor",
            filename="processor.zip",
            function_name="production-data-processor",
            handler="app.handler",
            role=lambda_role.arn,
            runtime="nodejs20.x",
            tags={
                "Environment": "production",
                "Purpose": "data-processing"
            }
        )
        LambdaFunctionRecursionConfig(self, "example",
            function_name=production_processor.function_name,
            recursive_loop="Terminate"
        )
```

## Argument Reference

The following arguments are required:

* `function_name` - (Required) Name of the Lambda function.
* `recursive_loop` - (Required) Lambda function recursion configuration. Valid values are `Allow` or `Terminate`.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lambda Function Recursion Config using the `function_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_function_recursion_config import LambdaFunctionRecursionConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaFunctionRecursionConfig.generate_config_for_import(self, "example", "recursive_processor")
```

For backwards compatibility, the following legacy `terraform import` command is also supported:

```console
% terraform import aws_lambda_function_recursion_config.example recursive_processor
```

<!-- cache-key: cdktf-0.20.8 input-c055a547372b89f7e6feee755b0c6b76e092246a022ff8ad4772c73c86040cf3 -->