---
subcategory: "SageMaker"
layout: "aws"
page_title: "AWS: aws_sagemaker_device"
description: |-
  Provides a SageMaker Device resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_device

Provides a SageMaker Device resource.

## Example Usage

### Basic usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sagemaker_device import SagemakerDevice
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SagemakerDevice(self, "example",
            device=SagemakerDeviceDevice(
                device_name="example"
            ),
            device_fleet_name=Token.as_string(aws_sagemaker_device_fleet_example.device_fleet_name)
        )
```

## Argument Reference

This resource supports the following arguments:

* `device_fleet_name` - (Required) The name of the Device Fleet.
* `device` - (Required) The device to register with SageMaker Edge Manager. See [Device](#device) details below.

### Device

* `description` - (Required) A description for the device.
* `device_name` - (Optional) The name of the device.
* `iot_thing_name` - (Optional) Amazon Web Services Internet of Things (IoT) object name.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The id is constructed from `device-fleet-name/device-name`.
* `arn` - The Amazon Resource Name (ARN) assigned by AWS to this Device.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker Devices using the `device-fleet-name/device-name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sagemaker_device import SagemakerDevice
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SagemakerDevice.generate_config_for_import(self, "example", "my-fleet/my-device")
```

Using `terraform import`, import SageMaker Devices using the `device-fleet-name/device-name`. For example:

```console
% terraform import aws_sagemaker_device.example my-fleet/my-device
```

<!-- cache-key: cdktf-0.20.8 input-baa6c522eea0c7f933208c4fefa045d0c6a31387586c39061b3b1a1c768ab3ca -->