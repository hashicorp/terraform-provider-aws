---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_code_signing_config"
description: |-
  Manages an AWS Lambda Code Signing Config.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lambda_code_signing_config

Manages an AWS Lambda Code Signing Config. Use this resource to define allowed signing profiles and code-signing validation policies for Lambda functions to ensure code integrity and authenticity.

For information about Lambda code signing configurations and how to use them, see [configuring code signing for Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html).

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_code_signing_config import LambdaCodeSigningConfig
from imports.aws.signer_signing_profile import SignerSigningProfile
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        dev = SignerSigningProfile(self, "dev",
            name_prefix="dev_lambda_",
            platform_id="AWSLambda-SHA384-ECDSA",
            tags={
                "Environment": "development"
            }
        )
        prod = SignerSigningProfile(self, "prod",
            name_prefix="prod_lambda_",
            platform_id="AWSLambda-SHA384-ECDSA",
            tags={
                "Environment": "production"
            }
        )
        LambdaCodeSigningConfig(self, "example",
            allowed_publishers=LambdaCodeSigningConfigAllowedPublishers(
                signing_profile_version_arns=[prod.version_arn, dev.version_arn]
            ),
            description="Code signing configuration for Lambda functions",
            policies=LambdaCodeSigningConfigPolicies(
                untrusted_artifact_on_deployment="Enforce"
            ),
            tags={
                "Environment": "production",
                "Purpose": "code-signing"
            }
        )
```

### Warning Only Configuration

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_code_signing_config import LambdaCodeSigningConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaCodeSigningConfig(self, "example",
            allowed_publishers=LambdaCodeSigningConfigAllowedPublishers(
                signing_profile_version_arns=[dev.version_arn]
            ),
            description="Development code signing configuration",
            policies=LambdaCodeSigningConfigPolicies(
                untrusted_artifact_on_deployment="Warn"
            ),
            tags={
                "Environment": "development",
                "Purpose": "code-signing"
            }
        )
```

### Multiple Environment Configuration

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_code_signing_config import LambdaCodeSigningConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaCodeSigningConfig(self, "dev",
            allowed_publishers=LambdaCodeSigningConfigAllowedPublishers(
                signing_profile_version_arns=[
                    Token.as_string(aws_signer_signing_profile_dev.version_arn), test.version_arn
                ]
            ),
            description="Development code signing configuration with warnings",
            policies=LambdaCodeSigningConfigPolicies(
                untrusted_artifact_on_deployment="Warn"
            ),
            tags={
                "Environment": "development",
                "Security": "flexible"
            }
        )
        LambdaCodeSigningConfig(self, "prod",
            allowed_publishers=LambdaCodeSigningConfigAllowedPublishers(
                signing_profile_version_arns=[
                    Token.as_string(aws_signer_signing_profile_prod.version_arn)
                ]
            ),
            description="Production code signing configuration with strict enforcement",
            policies=LambdaCodeSigningConfigPolicies(
                untrusted_artifact_on_deployment="Enforce"
            ),
            tags={
                "Environment": "production",
                "Security": "strict"
            }
        )
```

## Argument Reference

The following arguments are required:

* `allowed_publishers` - (Required) Configuration block of allowed publishers as signing profiles for this code signing configuration. [See below](#allowed_publishers-configuration-block).

The following arguments are optional:

* `description` - (Optional) Descriptive name for this code signing configuration.
* `policies` - (Optional) Configuration block of code signing policies that define the actions to take if the validation checks fail. [See below](#policies-configuration-block).
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `tags` - (Optional) Map of tags to assign to the object. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### allowed_publishers Configuration Block

* `signing_profile_version_arns` - (Required) Set of ARNs for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. Maximum of 20 signing profiles.

### policies Configuration Block

* `untrusted_artifact_on_deployment` - (Required) Code signing configuration policy for deployment validation failure. If you set the policy to `Enforce`, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to `Warn`, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the code signing configuration.
* `config_id` - Unique identifier for the code signing configuration.
* `last_modified` - Date and time that the code signing configuration was last modified.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Code Signing Configs using their ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_code_signing_config import LambdaCodeSigningConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaCodeSigningConfig.generate_config_for_import(self, "example", "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-0f6c334abcdea4d8b")
```

For backwards compatibility, the following legacy `terraform import` command is also supported:

```console
% terraform import aws_lambda_code_signing_config.example arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-0f6c334abcdea4d8b
```

<!-- cache-key: cdktf-0.20.8 input-8e03a20225f2e822be30f35f7a1ec8e927795cedc33c156fb1702e29012b25ec -->