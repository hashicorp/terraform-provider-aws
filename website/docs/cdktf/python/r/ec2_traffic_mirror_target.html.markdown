---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_traffic_mirror_target"
description: |-
  Provides a Traffic mirror target
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_traffic_mirror_target

Provides a Traffic mirror target.  
Read [limits and considerations](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-considerations.html) for traffic mirroring

## Example Usage

To create a basic traffic mirror session

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ec2_traffic_mirror_target import Ec2TrafficMirrorTarget
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Ec2TrafficMirrorTarget(self, "eni",
            description="ENI target",
            network_interface_id=test.primary_network_interface_id
        )
        Ec2TrafficMirrorTarget(self, "gwlb",
            description="GWLB target",
            gateway_load_balancer_endpoint_id=example.id
        )
        Ec2TrafficMirrorTarget(self, "nlb",
            description="NLB target",
            network_load_balancer_arn=lb.arn
        )
```

## Argument Reference

This resource supports the following arguments:

* `description` - (Optional, Forces new) A description of the traffic mirror session.
* `network_interface_id` - (Optional, Forces new) The network interface ID that is associated with the target.
* `network_load_balancer_arn` - (Optional, Forces new) The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
* `gateway_load_balancer_endpoint_id` - (Optional, Forces new) The VPC Endpoint Id of the Gateway Load Balancer that is associated with the target.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

**NOTE:** Either `network_interface_id` or `network_load_balancer_arn` should be specified and both should not be specified together

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the Traffic Mirror target.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `arn` - The ARN of the traffic mirror target.
* `owner_id` - The ID of the AWS account that owns the traffic mirror target.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import traffic mirror targets using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ec2_traffic_mirror_target import Ec2TrafficMirrorTarget
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Ec2TrafficMirrorTarget.generate_config_for_import(self, "target", "tmt-0c13a005422b86606")
```

Using `terraform import`, import traffic mirror targets using the `id`. For example:

```console
% terraform import aws_ec2_traffic_mirror_target.target tmt-0c13a005422b86606
```

<!-- cache-key: cdktf-0.20.8 input-0dcea120206f78ae4bab492b768957fc04e77c30670fd1496757b5d3a63f1ae0 -->