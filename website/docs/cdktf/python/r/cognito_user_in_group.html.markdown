---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_user_in_group"
description: |-
  Adds the specified user to the specified group.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_user_in_group

Adds the specified user to the specified group.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_user import CognitoUser
from imports.aws.cognito_user_group import CognitoUserGroup
from imports.aws.cognito_user_in_group import CognitoUserInGroup
from imports.aws.cognito_user_pool import CognitoUserPool
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CognitoUserPool(self, "example",
            name="example",
            password_policy=CognitoUserPoolPasswordPolicy(
                minimum_length=6,
                require_numbers=False,
                require_symbols=False,
                require_uppercase=False,
                temporary_password_validity_days=7
            )
        )
        aws_cognito_user_example = CognitoUser(self, "example_1",
            user_pool_id=example.id,
            username="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_example.override_logical_id("example")
        aws_cognito_user_group_example = CognitoUserGroup(self, "example_2",
            name="example",
            user_pool_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_group_example.override_logical_id("example")
        aws_cognito_user_in_group_example = CognitoUserInGroup(self, "example_3",
            group_name=Token.as_string(aws_cognito_user_group_example.name),
            user_pool_id=example.id,
            username=Token.as_string(aws_cognito_user_example.username)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_in_group_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `user_pool_id` - (Required) The user pool ID of the user and group.
* `group_name` - (Required) The name of the group to which the user is to be added.
* `username` - (Required) The username of the user to be added to the group.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a Cognito Group User using a comma-delimited string concatenating the `user_pool_id`, `group_name`, and `username` arguments. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_user_in_group import CognitoUserInGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoUserInGroup.generate_config_for_import(self, "example", "us-east-1_vG78M4goG,example-group,example-user")
```

Using `terraform import`, import a Cognito Group User using a comma-delimited string concatenating the `user_pool_id`, `group_name`, and `username` arguments. For example:

```console
% terraform import aws_cognito_user_in_group.example us-east-1_vG78M4goG,example-group,example-user
```

<!-- cache-key: cdktf-0.20.8 input-b7e3f70583b28077c2063b06d4027c864d144f7f4f0d376c8deb035db90c3852 -->