---
subcategory: "Application Auto Scaling"
layout: "aws"
page_title: "AWS: aws_appautoscaling_scheduled_action"
description: |-
  Provides an Application AutoScaling ScheduledAction resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appautoscaling_scheduled_action

Provides an Application AutoScaling ScheduledAction resource.

## Example Usage

### DynamoDB Table Autoscaling

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appautoscaling_scheduled_action import AppautoscalingScheduledAction
from imports.aws.appautoscaling_target import AppautoscalingTarget
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        dynamodb = AppautoscalingTarget(self, "dynamodb",
            max_capacity=100,
            min_capacity=5,
            resource_id="table/tableName",
            scalable_dimension="dynamodb:table:ReadCapacityUnits",
            service_namespace="dynamodb"
        )
        aws_appautoscaling_scheduled_action_dynamodb =
        AppautoscalingScheduledAction(self, "dynamodb_1",
            name="dynamodb",
            resource_id=dynamodb.resource_id,
            scalable_dimension=dynamodb.scalable_dimension,
            scalable_target_action=AppautoscalingScheduledActionScalableTargetAction(
                max_capacity=Token.as_string(200),
                min_capacity=Token.as_string(1)
            ),
            schedule="at(2006-01-02T15:04:05)",
            service_namespace=dynamodb.service_namespace
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appautoscaling_scheduled_action_dynamodb.override_logical_id("dynamodb")
```

### ECS Service Autoscaling

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appautoscaling_scheduled_action import AppautoscalingScheduledAction
from imports.aws.appautoscaling_target import AppautoscalingTarget
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ecs = AppautoscalingTarget(self, "ecs",
            max_capacity=4,
            min_capacity=1,
            resource_id="service/clusterName/serviceName",
            scalable_dimension="ecs:service:DesiredCount",
            service_namespace="ecs"
        )
        aws_appautoscaling_scheduled_action_ecs =
        AppautoscalingScheduledAction(self, "ecs_1",
            name="ecs",
            resource_id=ecs.resource_id,
            scalable_dimension=ecs.scalable_dimension,
            scalable_target_action=AppautoscalingScheduledActionScalableTargetAction(
                max_capacity=Token.as_string(10),
                min_capacity=Token.as_string(1)
            ),
            schedule="at(2006-01-02T15:04:05)",
            service_namespace=ecs.service_namespace
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appautoscaling_scheduled_action_ecs.override_logical_id("ecs")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name of the scheduled action.
* `service_namespace` - (Required) Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
* `resource_id` - (Required) Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
* `scalable_dimension` - (Required) Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
* `scalable_target_action` - (Required) New minimum and maximum capacity. You can set both values or just one. See [below](#scalable-target-action-arguments)
* `schedule` - (Required) Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
* `start_time` - (Optional) Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
* `end_time` - (Optional) Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
* `timezone` - (Optional) Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `start_time` and `end_time`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.

### Scalable Target Action Arguments

* `max_capacity` - (Optional) Maximum capacity. At least one of `max_capacity` or `min_capacity` must be set.
* `min_capacity` - (Optional) Minimum capacity. At least one of `min_capacity` or `max_capacity` must be set.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the scheduled action.

<!-- cache-key: cdktf-0.20.8 input-2340bae330ec995b135b58fdb2388300b4f924ab8525d2c122eed0efb9dccbdd -->