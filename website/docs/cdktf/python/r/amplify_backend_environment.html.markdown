---
subcategory: "Amplify"
layout: "aws"
page_title: "AWS: aws_amplify_backend_environment"
description: |-
  Provides an Amplify Backend Environment resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_amplify_backend_environment

Provides an Amplify Backend Environment resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.amplify_app import AmplifyApp
from imports.aws.amplify_backend_environment import AmplifyBackendEnvironment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = AmplifyApp(self, "example",
            name="example"
        )
        aws_amplify_backend_environment_example = AmplifyBackendEnvironment(self, "example_1",
            app_id=example.id,
            deployment_artifacts="app-example-deployment",
            environment_name="example",
            stack_name="amplify-app-example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_amplify_backend_environment_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `app_id` - (Required) Unique ID for an Amplify app.
* `environment_name` - (Required) Name for the backend environment.
* `deployment_artifacts` - (Optional) Name of deployment artifacts.
* `stack_name` - (Optional) AWS CloudFormation stack name of a backend environment.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN for a backend environment that is part of an Amplify app.
* `id` - Unique ID of the Amplify backend environment.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify backend environment using `app_id` and `environment_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.amplify_backend_environment import AmplifyBackendEnvironment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AmplifyBackendEnvironment.generate_config_for_import(self, "example", "d2ypk4k47z8u6/example")
```

Using `terraform import`, import Amplify backend environment using `app_id` and `environment_name`. For example:

```console
% terraform import aws_amplify_backend_environment.example d2ypk4k47z8u6/example
```

<!-- cache-key: cdktf-0.20.8 input-c0149c5f68fd1dca66f72427d6f00bb2e21d8385c7bdf9671e71789ce006dd4d -->