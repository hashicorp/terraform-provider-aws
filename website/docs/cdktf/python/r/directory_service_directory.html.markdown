---
subcategory: "Directory Service"
layout: "aws"
page_title: "AWS: aws_directory_service_directory"
description: |-
  Provides a directory in AWS Directory Service.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_directory_service_directory

Provides a Simple or Managed Microsoft directory in AWS Directory Service.

~> **Note:** All arguments including the password and customer username will be stored in the raw state as plain-text.
[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

## Example Usage

### SimpleAD

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_directory import DirectoryServiceDirectory
from imports.aws.subnet import Subnet
from imports.aws.vpc import Vpc
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        main = Vpc(self, "main",
            cidr_block="10.0.0.0/16"
        )
        bar = Subnet(self, "bar",
            availability_zone="us-west-2b",
            cidr_block="10.0.2.0/24",
            vpc_id=main.id
        )
        foo = Subnet(self, "foo",
            availability_zone="us-west-2a",
            cidr_block="10.0.1.0/24",
            vpc_id=main.id
        )
        aws_directory_service_directory_bar = DirectoryServiceDirectory(self, "bar_3",
            name="corp.notexample.com",
            password="SuperSecretPassw0rd",
            size="Small",
            tags={
                "Project": "foo"
            },
            vpc_settings=DirectoryServiceDirectoryVpcSettings(
                subnet_ids=[foo.id, bar.id],
                vpc_id=main.id
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_directory_service_directory_bar.override_logical_id("bar")
```

### Microsoft Active Directory (MicrosoftAD)

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_directory import DirectoryServiceDirectory
from imports.aws.subnet import Subnet
from imports.aws.vpc import Vpc
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        main = Vpc(self, "main",
            cidr_block="10.0.0.0/16"
        )
        bar = Subnet(self, "bar",
            availability_zone="us-west-2b",
            cidr_block="10.0.2.0/24",
            vpc_id=main.id
        )
        foo = Subnet(self, "foo",
            availability_zone="us-west-2a",
            cidr_block="10.0.1.0/24",
            vpc_id=main.id
        )
        aws_directory_service_directory_bar = DirectoryServiceDirectory(self, "bar_3",
            edition="Standard",
            name="corp.notexample.com",
            password="SuperSecretPassw0rd",
            tags={
                "Project": "foo"
            },
            type="MicrosoftAD",
            vpc_settings=DirectoryServiceDirectoryVpcSettings(
                subnet_ids=[foo.id, bar.id],
                vpc_id=main.id
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_directory_service_directory_bar.override_logical_id("bar")
```

### Microsoft Active Directory Connector (ADConnector)

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_directory import DirectoryServiceDirectory
from imports.aws.subnet import Subnet
from imports.aws.vpc import Vpc
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        main = Vpc(self, "main",
            cidr_block="10.0.0.0/16"
        )
        bar = Subnet(self, "bar",
            availability_zone="us-west-2b",
            cidr_block="10.0.2.0/24",
            vpc_id=main.id
        )
        foo = Subnet(self, "foo",
            availability_zone="us-west-2a",
            cidr_block="10.0.1.0/24",
            vpc_id=main.id
        )
        DirectoryServiceDirectory(self, "connector",
            connect_settings=DirectoryServiceDirectoryConnectSettings(
                customer_dns_ips=["A.B.C.D"],
                customer_username="Admin",
                subnet_ids=[foo.id, bar.id],
                vpc_id=main.id
            ),
            name="corp.notexample.com",
            password="SuperSecretPassw0rd",
            size="Small",
            type="ADConnector"
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The fully qualified name for the directory, such as `corp.example.com`
* `password` - (Required) The password for the directory administrator or connector user.
* `size` - (Optional) (For `SimpleAD` and `ADConnector` types) The size of the directory (`Small` or `Large` are accepted values). `Large` by default.
* `vpc_settings` - (Required for `SimpleAD` and `MicrosoftAD`) VPC related information about the directory. Fields documented below.
* `connect_settings` - (Required for `ADConnector`) Connector related information about the directory. Fields documented below.
* `alias` - (Optional) The alias for the directory (must be unique amongst all aliases in AWS). Required for `enable_sso`.
* `description` - (Optional) A textual description for the directory.
* `desired_number_of_domain_controllers` - (Optional) The number of domain controllers desired in the directory. Minimum value of `2`. Scaling of domain controllers is only supported for `MicrosoftAD` directories.
* `short_name` - (Optional) The short name of the directory, such as `CORP`.
* `enable_sso` - (Optional) Whether to enable single-sign on for the directory. Requires `alias`. Defaults to `false`.
* `type` (Optional) - The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD` are accepted values). Defaults to `SimpleAD`.
* `edition` - (Optional, for type `MicrosoftAD` only) The MicrosoftAD edition (`Standard` or `Enterprise`). Defaults to `Enterprise`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

**vpc_settings** supports the following:

* `subnet_ids` - (Required) The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
* `vpc_id` - (Required) The identifier of the VPC that the directory is in.

**connect_settings** supports the following:

* `customer_username` - (Required) The username corresponding to the password provided.
* `customer_dns_ips` - (Required) The DNS IP addresses of the domain to connect to.
* `subnet_ids` - (Required) The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
* `vpc_id` - (Required) The identifier of the VPC that the directory is in.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The directory identifier.
* `access_url` - The access URL for the directory, such as `http://alias.awsapps.com`.
* `dns_ip_addresses` - A list of IP addresses of the DNS servers for the directory or connector.
* `security_group_id` - The ID of the security group created by the directory.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

`connect_settings` (for `ADConnector`) is also exported with the following attributes:

* `connect_ips` - The IP addresses of the AD Connector servers.

## Timeouts

`aws_directory_service_directory` provides the following [Timeouts](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts) configuration options:

- `create` - (Default `60 minutes`) Used for directory creation
- `update` - (Default `60 minutes`) Used for directory update
- `delete` - (Default `60 minutes`) Used for directory deletion

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DirectoryService directories using the directory `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_directory import DirectoryServiceDirectory
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DirectoryServiceDirectory.generate_config_for_import(self, "sample", "d-926724cf57")
```

Using `terraform import`, import DirectoryService directories using the directory `id`. For example:

```console
% terraform import aws_directory_service_directory.sample d-926724cf57
```

<!-- cache-key: cdktf-0.20.8 input-49c24dcd4cf67951f7f5fa46955d3c67849291a777e1963a25110967098be86d -->