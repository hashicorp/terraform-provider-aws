---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_endpoint_authorization"
description: |-
  Provides a Redshift Endpoint Authorization resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_endpoint_authorization

Creates a new Amazon Redshift endpoint authorization.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_endpoint_authorization import RedshiftEndpointAuthorization
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftEndpointAuthorization(self, "example",
            account="01234567910",
            cluster_identifier=Token.as_string(aws_redshift_cluster_example.cluster_identifier)
        )
```

## Argument Reference

This resource supports the following arguments:

* `account` - (Required) The Amazon Web Services account ID to grant access to.
* `cluster_identifier` - (Required) The cluster identifier of the cluster to grant access to.
* `force_delete` - (Optional) Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted. Default value is `false`.
* `vpc_ids` - (Optional) The virtual private cloud (VPC) identifiers to grant access to. If none are specified all VPCs in shared account are allowed.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `allowed_all_vpcs` - Indicates whether all VPCs in the grantee account are allowed access to the cluster.
* `id` - The identifier of the Redshift Endpoint Authorization, `account`, and `cluster_identifier` separated by a colon (`:`).
* `endpoint_count` - The number of Redshift-managed VPC endpoints created for the authorization.
* `grantee` - The Amazon Web Services account ID of the grantee of the cluster.
* `grantor` - The Amazon Web Services account ID of the cluster owner.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift endpoint authorization using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_endpoint_authorization import RedshiftEndpointAuthorization
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftEndpointAuthorization.generate_config_for_import(self, "example", "01234567910:cluster-example-id")
```

Using `terraform import`, import Redshift endpoint authorization using the `id`. For example:

```console
% terraform import aws_redshift_endpoint_authorization.example 01234567910:cluster-example-id
```

<!-- cache-key: cdktf-0.20.8 input-b9e5ce4e1f7abe40dbf21f61540bacd5f31c67c081dc3bdd6f2ce8318ce44e5e -->