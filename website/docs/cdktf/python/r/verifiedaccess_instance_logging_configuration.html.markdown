---
subcategory: "Verified Access"
layout: "aws"
page_title: "AWS: aws_verifiedaccess_instance_logging_configuration"
description: |-
  Terraform resource for managing a Verified Access Instance Logging Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_verifiedaccess_instance_logging_configuration

Terraform resource for managing a Verified Access Logging Configuration.

## Example Usage

### With CloudWatch Logging

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration(self, "example",
            access_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogs(
                cloudwatch_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogsCloudwatchLogs(
                    enabled=True,
                    log_group=Token.as_string(aws_cloudwatch_log_group_example.id)
                )
            ),
            verifiedaccess_instance_id=Token.as_string(aws_verifiedaccess_instance_example.id)
        )
```

### With Kinesis Data Firehose Logging

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration(self, "example",
            access_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogs(
                kinesis_data_firehose=VerifiedaccessInstanceLoggingConfigurationAccessLogsKinesisDataFirehose(
                    delivery_stream=Token.as_string(aws_kinesis_firehose_delivery_stream_example.name),
                    enabled=True
                )
            ),
            verifiedaccess_instance_id=Token.as_string(aws_verifiedaccess_instance_example.id)
        )
```

### With S3 logging

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration(self, "example",
            access_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogs(
                s3=VerifiedaccessInstanceLoggingConfigurationAccessLogsS3(
                    bucket_name=Token.as_string(aws_s3_bucket_example.id),
                    enabled=True,
                    prefix="example"
                )
            ),
            verifiedaccess_instance_id=Token.as_string(aws_verifiedaccess_instance_example.id)
        )
```

### With all three logging options

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration(self, "example",
            access_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogs(
                cloudwatch_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogsCloudwatchLogs(
                    enabled=True,
                    log_group=Token.as_string(aws_cloudwatch_log_group_example.id)
                ),
                kinesis_data_firehose=VerifiedaccessInstanceLoggingConfigurationAccessLogsKinesisDataFirehose(
                    delivery_stream=Token.as_string(aws_kinesis_firehose_delivery_stream_example.name),
                    enabled=True
                ),
                s3=VerifiedaccessInstanceLoggingConfigurationAccessLogsS3(
                    bucket_name=Token.as_string(aws_s3_bucket_example.id),
                    enabled=True
                )
            ),
            verifiedaccess_instance_id=Token.as_string(aws_verifiedaccess_instance_example.id)
        )
```

### With `include_trust_context`

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration(self, "example",
            access_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogs(
                include_trust_context=True
            ),
            verifiedaccess_instance_id=Token.as_string(aws_verifiedaccess_instance_example.id)
        )
```

### With `log_version`

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration(self, "example",
            access_logs=VerifiedaccessInstanceLoggingConfigurationAccessLogs(
                log_version="ocsf-1.0.0-rc.2"
            ),
            verifiedaccess_instance_id=Token.as_string(aws_verifiedaccess_instance_example.id)
        )
```

## Argument Reference

This resource supports the following arguments:

* `access_logs` - (Required) A block that specifies the configuration options for Verified Access instances. [Detailed below](#access_logs).
* `verifiedaccess_instance_id` - (Required - Forces New resource) The ID of the Verified Access instance.

### access_logs

A `access_logs` block supports the following arguments:

* `cloudwatch_logs` - (Optional) A block that specifies configures sending Verified Access logs to CloudWatch Logs. [Detailed below](#cloudwatch_logs).
* `include_trust_context` - (Optional) Include trust data sent by trust providers into the logs.
* `kinesis_data_firehose` - (Optional) A block that specifies configures sending Verified Access logs to Kinesis. [Detailed below](#kinesis_data_firehose).
* `log_version` - (Optional) The logging version to use. Refer to [VerifiedAccessLogOptions](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VerifiedAccessLogOptions.html) for the allowed values.
* `s3` - (Optional) A block that specifies configures sending Verified Access logs to S3. [Detailed below](#s3).

#### cloudwatch_logs

A `cloudwatch_logs` block supports the following arguments:

* `enabled` - (Required) Indicates whether logging is enabled.
* `log_group` - (Optional) The name of the CloudWatch Logs Log Group.

#### kinesis_data_firehose

A `kinesis_data_firehose` block supports the following arguments:

* `delivery_stream` - (Optional) The name of the delivery stream.
* `enabled` - (Required) Indicates whether logging is enabled.

#### s3

A `s3` block supports the following arguments:

* `bucket_name` - (Optional) The name of S3 bucket.
* `bucket_owner` - (Optional) The ID of the AWS account that owns the Amazon S3 bucket.
* `enabled` - (Required) Indicates whether logging is enabled.
* `prefix` - (Optional) The bucket prefix.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Verified Access Logging Configuration using the Verified Access Instance `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.verifiedaccess_instance_logging_configuration import VerifiedaccessInstanceLoggingConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VerifiedaccessInstanceLoggingConfiguration.generate_config_for_import(self, "example", "vai-1234567890abcdef0")
```

Using `terraform import`, import Verified Access Logging Configuration using the Verified Access Instance `id`. For example:

```console
% terraform import aws_verifiedaccess_instance_logging_configuration.example vai-1234567890abcdef0
```

<!-- cache-key: cdktf-0.20.8 input-79065eedd6b6f9585bd07a6cdc493096940c3c74f302f0f330a123cc337d069b -->