---
subcategory: "DynamoDB"
layout: "aws"
page_title: "AWS: aws_dynamodb_kinesis_streaming_destination"
description: |-
  Enables a Kinesis streaming destination for a DynamoDB table
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dynamodb_kinesis_streaming_destination

Enables a [Kinesis streaming destination](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/kds.html) for data replication of a DynamoDB table.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dynamodb_kinesis_streaming_destination import DynamodbKinesisStreamingDestination
from imports.aws.dynamodb_table import DynamodbTable
from imports.aws.kinesis_stream import KinesisStream
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DynamodbTable(self, "example",
            attribute=[DynamodbTableAttribute(
                name="id",
                type="S"
            )
            ],
            hash_key="id",
            name="orders"
        )
        aws_kinesis_stream_example = KinesisStream(self, "example_1",
            name="order_item_changes",
            shard_count=1
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_kinesis_stream_example.override_logical_id("example")
        aws_dynamodb_kinesis_streaming_destination_example =
        DynamodbKinesisStreamingDestination(self, "example_2",
            approximate_creation_date_time_precision="MICROSECOND",
            stream_arn=Token.as_string(aws_kinesis_stream_example.arn),
            table_name=example.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_dynamodb_kinesis_streaming_destination_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `approximate_creation_date_time_precision` - (Optional) Toggle for the precision of Kinesis data stream timestamp. Valid values: `MILLISECOND` and `MICROSECOND`.
* `stream_arn` - (Required) The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.
* `table_name` - (Required) The name of the DynamoDB table. There can only be one Kinesis streaming destination for a given DynamoDB table.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The `table_name` and `stream_arn` separated by a comma (`,`).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DynamoDB Kinesis Streaming Destinations using the `table_name` and `stream_arn` separated by `,`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dynamodb_kinesis_streaming_destination import DynamodbKinesisStreamingDestination
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DynamodbKinesisStreamingDestination.generate_config_for_import(self, "example", "example,arn:aws:kinesis:us-east-1:111122223333:exampleStreamName")
```

Using `terraform import`, import DynamoDB Kinesis Streaming Destinations using the `table_name` and `stream_arn` separated by `,`. For example:

```console
% terraform import aws_dynamodb_kinesis_streaming_destination.example example,arn:aws:kinesis:us-east-1:111122223333:exampleStreamName
```

<!-- cache-key: cdktf-0.20.8 input-dfcdaf8a26f41639b2d6496dbd87dce4d57f2befd2f5495b6cf4b9962a3c461f -->