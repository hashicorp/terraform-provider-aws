---
subcategory: "CodeBuild"
layout: "aws"
page_title: "AWS: aws_codebuild_source_credential"
description: |-
  Provides a CodeBuild Source Credential resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codebuild_source_credential

Provides a CodeBuild Source Credentials Resource.

~> **NOTE:** [Codebuild only allows a single credential per given server type in a given region](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_codebuild.GitHubSourceCredentials.html). Therefore, when you define `aws_codebuild_source_credential`, [`aws_codebuild_project` resource](/docs/providers/aws/r/codebuild_project.html) defined in the same module will use it.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codebuild_source_credential import CodebuildSourceCredential
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodebuildSourceCredential(self, "example",
            auth_type="PERSONAL_ACCESS_TOKEN",
            server_type="GITHUB",
            token="example"
        )
```

### Bitbucket Server Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codebuild_source_credential import CodebuildSourceCredential
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodebuildSourceCredential(self, "example",
            auth_type="BASIC_AUTH",
            server_type="BITBUCKET",
            token="example",
            user_name="test-user"
        )
```

## Argument Reference

This resource supports the following arguments:

* `auth_type` - (Required) The type of authentication used to connect to a GitHub, GitHub Enterprise, or Bitbucket repository. An OAUTH connection is not supported by the API.
* `server_type` - (Required) The source provider used for this project.
* `token` - (Required) For `GitHub` or `GitHub Enterprise`, this is the personal access token. For `Bitbucket`, this is the app password.
* `user_name` - (Optional) The Bitbucket username when the authType is `BASIC_AUTH`. This parameter is not valid for other types of source providers or connections.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ARN of Source Credential.
* `arn` - The ARN of Source Credential.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeBuild Source Credential using the CodeBuild Source Credential arn. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codebuild_source_credential import CodebuildSourceCredential
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodebuildSourceCredential.generate_config_for_import(self, "example", "arn:aws:codebuild:us-west-2:123456789:token:github")
```

Using `terraform import`, import CodeBuild Source Credential using the CodeBuild Source Credential arn. For example:

```console
% terraform import aws_codebuild_source_credential.example arn:aws:codebuild:us-west-2:123456789:token:github
```

<!-- cache-key: cdktf-0.20.1 input-b603a4805a973804a9dd8cabdb5d135ca29e91d96e47df880b31a356734f9145 -->