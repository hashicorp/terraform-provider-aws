---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_instance"
description: |-
  Provides an Lightsail Instance
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_instance

Provides a Lightsail Instance. Amazon Lightsail is a service to provide easy virtual private servers
with custom software already setup. See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail)
for more information.

~> **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_instance import LightsailInstance
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailInstance(self, "gitlab_test",
            availability_zone="us-east-1b",
            blueprint_id="amazon_linux_2",
            bundle_id="nano_3_0",
            key_pair_name="some_key_name",
            name="custom_gitlab",
            tags={
                "foo": "bar"
            }
        )
```

### Example With User Data

Lightsail user data is handled differently than ec2 user data. Lightsail user data only accepts a single lined string. The below example shows installing apache and creating the index page.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_instance import LightsailInstance
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailInstance(self, "custom",
            availability_zone="us-east-1b",
            blueprint_id="amazon_linux_2",
            bundle_id="nano_3_0",
            name="custom",
            user_data="sudo yum install -y httpd && sudo systemctl start httpd && sudo systemctl enable httpd && echo '<h1>Deployed via Terraform</h1>' | sudo tee /var/www/html/index.html"
        )
```

### Enable Auto Snapshots

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_instance import LightsailInstance
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailInstance(self, "test",
            add_on=LightsailInstanceAddOn(
                snapshot_time="06:00",
                status="Enabled",
                type="AutoSnapshot"
            ),
            availability_zone="us-east-1b",
            blueprint_id="amazon_linux_2",
            bundle_id="nano_3_0",
            name="custom_instance",
            tags={
                "foo": "bar"
            }
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the Lightsail Instance. Names must be unique within each AWS Region in your Lightsail account.
* `availability_zone` - (Required) The Availability Zone in which to create your instance. A
  list of available zones can be obtained using the AWS CLI command:
  [`aws lightsail get-regions --include-availability-zones`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-regions.html).
* `blueprint_id` - (Required) The ID for a virtual private server image. A list of available
  blueprint IDs can be obtained using the AWS CLI command:
  [`aws lightsail get-blueprints`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-blueprints.html).
* `bundle_id` - (Required) The bundle of specification information. A list of available
  bundle IDs can be obtained using the AWS CLI command:
  [`aws lightsail get-bundles`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-bundles.html).
* `key_pair_name` - (Optional) The name of your key pair. Created in the
Lightsail console (cannot use `aws_key_pair` at this time)
* `user_data` - (Optional) Single lined launch script as a string to configure server with additional user data
* `ip_address_type` - (Optional) The IP address type of the Lightsail Instance. Valid Values: `dualstack` | `ipv4`.
* `add_on` - (Optional) The add on configuration for the instance. [Detailed below](#add_on).
* `tags` - (Optional) A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `add_on`

Defines the add on configuration for the instance. The `add_on` configuration block supports the following arguments:

* `type` - (Required) The add-on type. There is currently only one valid type `AutoSnapshot`.
* `snapshot_time` - (Required) The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
* `status` - (Required) The status of the add on. Valid Values: `Enabled`, `Disabled`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ARN of the Lightsail instance (matches `arn`).
* `arn` - The ARN of the Lightsail instance (matches `id`).
* `created_at` - The timestamp when the instance was created.
* `cpu_count` - The number of vCPUs the instance has.
* `ram_size` - The amount of RAM in GB on the instance (e.g., 1.0).
* `ipv6_addresses` - List of IPv6 addresses for the Lightsail instance.
* `private_ip_address` - The private IP address of the instance.
* `public_ip_address` - The public IP address of the instance.
* `is_static_ip` - A Boolean value indicating whether this instance has a static IP assigned to it.
* `username` - The user name for connecting to the instance (e.g., ec2-user).
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lightsail Instances using their name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lightsail_instance import LightsailInstance
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LightsailInstance.generate_config_for_import(self, "gitlabTest", "custom_gitlab")
```

Using `terraform import`, import Lightsail Instances using their name. For example:

```console
% terraform import aws_lightsail_instance.gitlab_test 'custom_gitlab'
```

<!-- cache-key: cdktf-0.20.1 input-ef6246029fb47439878b12b68e78f6d0a13e30690e470c6653c3c4d65c83bfd2 -->