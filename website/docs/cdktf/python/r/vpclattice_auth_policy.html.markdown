---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_auth_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Auth Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_auth_policy

Terraform resource for managing an AWS VPC Lattice Auth Policy.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpclattice_auth_policy import VpclatticeAuthPolicy
from imports.aws.vpclattice_service import VpclatticeService
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = VpclatticeService(self, "example",
            auth_type="AWS_IAM",
            custom_domain_name="example.com",
            name="example-vpclattice-service"
        )
        aws_vpclattice_auth_policy_example = VpclatticeAuthPolicy(self, "example_1",
            policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": "*",
                        "Condition": {
                            "StringNotEqualsIgnoreCase": {
                                "aws:_principal_type": "anonymous"
                            }
                        },
                        "Effect": "Allow",
                        "Principal": "*",
                        "Resource": "*"
                    }
                    ],
                    "Version": "2012-10-17"
                })),
            resource_identifier=example.arn
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpclattice_auth_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `resource_identifier` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) The auth policy. The policy string in JSON must not contain newlines or blank lines.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - The auth policy. The policy string in JSON must not contain newlines or blank lines.
* `state` - The state of the auth policy. The auth policy is only active when the auth type is set to `AWS_IAM`. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is `NONE`, then, any auth policy you provide will remain inactive.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Auth Policy using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpclattice_auth_policy import VpclatticeAuthPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpclatticeAuthPolicy.generate_config_for_import(self, "example", "abcd-12345678")
```

Using `terraform import`, import VPC Lattice Auth Policy using the `id`. For example:

```console
% terraform import aws_vpclattice_auth_policy.example abcd-12345678
```

<!-- cache-key: cdktf-0.20.8 input-bfefd578bb50996b82ce55ca4ba5163180bcda5a652c6847303282acbdb1d91d -->