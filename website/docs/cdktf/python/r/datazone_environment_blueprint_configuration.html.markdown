---
subcategory: "DataZone"
layout: "aws"
page_title: "AWS: aws_datazone_environment_blueprint_configuration"
description: |-
  Terraform resource for managing an AWS DataZone Environment Blueprint Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_datazone_environment_blueprint_configuration

Terraform resource for managing an AWS DataZone Environment Blueprint Configuration.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import DatazoneDomain, DataAwsDatazoneEnvironmentBlueprint, DatazoneEnvironmentBlueprintConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DatazoneDomain(self, "example",
            domain_execution_role=domain_execution_role.arn,
            name="example_domain"
        )
        default_data_lake = DataAwsDatazoneEnvironmentBlueprint(self, "default_data_lake",
            domain_id=example.id,
            managed=True,
            name="DefaultDataLake"
        )
        aws_datazone_environment_blueprint_configuration_example =
        DatazoneEnvironmentBlueprintConfiguration(self, "example_2",
            domain_id=example.id,
            enabled_regions=["us-east-1"],
            environment_blueprint_id=default_data_lake.id,
            regional_parameters=[{
                "us-east-1": [{
                    "S3Location": "s3://my-amazon-datazone-bucket"
                }
                ]
            }
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_datazone_environment_blueprint_configuration_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `domain_id` - (Required) ID of the Domain.
* `environment_blueprint_id` - (Required) ID of the Environment Blueprint
* `enabled_regions` (Required) - Regions in which the blueprint is enabled

The following arguments are optional:

* `manage_access_role_arn` - (Optional) ARN of the manage access role with which this blueprint is created.
* `provisioning_role_arn` - (Optional) ARN of the provisioning role with which this blueprint is created.
* `regional_parameters` - (Optional) Parameters for each region in which the blueprint is enabled

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DataZone Environment Blueprint Configuration using the `domain_id` and `environment_blueprint_id`, separated by a `/`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import DatazoneEnvironmentBlueprintConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DatazoneEnvironmentBlueprintConfiguration.generate_config_for_import(self, "example", "domain-id-12345/environment-blueprint-id-54321")
```

Using `terraform import`, import DataZone Environment Blueprint Configuration using the `domain_id` and `environment_blueprint_id`, separated by a `/`. For example:

```console
% terraform import aws_datazone_environment_blueprint_configuration.example domain-id-12345/environment-blueprint-id-54321
```

<!-- cache-key: cdktf-0.20.1 input-3e0ffe371fc360928d17178e6bc3d0d45c08acb1be8281d759dccf490fe1fd2f -->