---
subcategory: "Elastic Beanstalk"
layout: "aws"
page_title: "AWS: aws_elastic_beanstalk_configuration_template"
description: |-
  Provides an Elastic Beanstalk Configuration Template
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_elastic_beanstalk_configuration_template

Provides an Elastic Beanstalk Configuration Template, which are associated with
a specific application and are used to deploy different versions of the
application with the same configuration settings.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.elastic_beanstalk_application import ElasticBeanstalkApplication
from imports.aws.elastic_beanstalk_configuration_template import ElasticBeanstalkConfigurationTemplate
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        tftest = ElasticBeanstalkApplication(self, "tftest",
            description="tf-test-desc",
            name="tf-test-name"
        )
        ElasticBeanstalkConfigurationTemplate(self, "tf_template",
            application=tftest.name,
            name="tf-test-template-config",
            solution_stack_name="64bit Amazon Linux 2015.09 v2.0.8 running Go 1.4"
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) A unique name for this Template.
* `application` – (Required) name of the application to associate with this configuration template
* `description` - (Optional) Short description of the Template
* `environment_id` – (Optional) The ID of the environment used with this configuration template
* `setting` – (Optional) Option settings to configure the new Environment. These
  override specific values that are set as defaults. The format is detailed
  below in [Option Settings](#option-settings)
* `solution_stack_name` – (Optional) A solution stack to base your Template
off of. Example stacks can be found in the [Amazon API documentation][1]

## Option Settings

The `setting` field supports the following format:

* `namespace` - unique namespace identifying the option's associated AWS resource
* `name` - name of the configuration option
* `value` - value for the configuration option
* `resource` - (Optional) resource name for [scheduled action](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-autoscalingscheduledaction)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `name`
* `application`
* `description`
* `environment_id`
* `option_settings`
* `solution_stack_name`

[1]: https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html

<!-- cache-key: cdktf-0.20.8 input-abd91b17373f96fef9bb9422def3ab0d77d4ca67c22d5b83904d54987db262f7 -->