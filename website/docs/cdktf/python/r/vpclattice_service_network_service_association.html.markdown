---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_service_network_service_association"
description: |-
  Terraform resource for managing an AWS VPC Lattice Service Network Service Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_service_network_service_association

Terraform resource for managing an AWS VPC Lattice Service Network Service Association.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpclattice_service_network_service_association import VpclatticeServiceNetworkServiceAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpclatticeServiceNetworkServiceAssociation(self, "example",
            service_identifier=Token.as_string(aws_vpclattice_service_example.id),
            service_network_identifier=Token.as_string(aws_vpclattice_service_network_example.id)
        )
```

## Argument Reference

The following arguments are required:

* `service_identifier` - (Required) The ID or Amazon Resource Identifier (ARN) of the service.
* `service_network_identifier` - (Required) The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
The following arguments are optional:

* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the Association.
* `created_by` - The account that created the association.
* `custom_domain_name` - The custom domain name of the service.
* `dns_entry` - The DNS name of the service.
    * `domain_name` - The domain name of the service.
    * `hosted_zone_id` - The ID of the hosted zone.
* `id` - The ID of the association.
* `status` - The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Service Network Service Association using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpclattice_service_network_service_association import VpclatticeServiceNetworkServiceAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpclatticeServiceNetworkServiceAssociation.generate_config_for_import(self, "example", "snsa-05e2474658a88f6ba")
```

Using `terraform import`, import VPC Lattice Service Network Service Association using the `id`. For example:

```console
% terraform import aws_vpclattice_service_network_service_association.example snsa-05e2474658a88f6ba
```

<!-- cache-key: cdktf-0.20.8 input-ed0fbd858c03d6277e22292ff2f9c7e7102bc8ebdee62a4f130453206c0b83a7 -->