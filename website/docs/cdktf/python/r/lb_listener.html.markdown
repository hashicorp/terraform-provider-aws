---
subcategory: "ELB (Elastic Load Balancing)"
layout: "aws"
page_title: "AWS: aws_lb_listener"
description: |-
  Provides a Load Balancer Listener resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lb_listener

Provides a Load Balancer Listener resource.

~> **Note:** `aws_alb_listener` is known as `aws_lb_listener`. The functionality is identical.

## Example Usage

### Forward Action

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
from imports.aws.lb_target_group import LbTargetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        front_end = Lb(self, "front_end")
        aws_lb_target_group_front_end = LbTargetGroup(self, "front_end_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_target_group_front_end.override_logical_id("front_end")
        aws_lb_listener_front_end = LbListener(self, "front_end_2",
            certificate_arn="arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
            default_action=[LbListenerDefaultAction(
                target_group_arn=Token.as_string(aws_lb_target_group_front_end.arn),
                type="forward"
            )
            ],
            load_balancer_arn=front_end.arn,
            port=Token.as_number("443"),
            protocol="HTTPS",
            ssl_policy="ELBSecurityPolicy-2016-08"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_front_end.override_logical_id("front_end")
```

To a NLB:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb_listener import LbListener
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LbListener(self, "front_end",
            alpn_policy="HTTP2Preferred",
            certificate_arn="arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4",
            default_action=[LbListenerDefaultAction(
                target_group_arn=Token.as_string(aws_lb_target_group_front_end.arn),
                type="forward"
            )
            ],
            load_balancer_arn=Token.as_string(aws_lb_front_end.arn),
            port=Token.as_number("443"),
            protocol="TLS"
        )
```

### Redirect Action

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        front_end = Lb(self, "front_end")
        aws_lb_listener_front_end = LbListener(self, "front_end_1",
            default_action=[LbListenerDefaultAction(
                redirect=LbListenerDefaultActionRedirect(
                    port="443",
                    protocol="HTTPS",
                    status_code="HTTP_301"
                ),
                type="redirect"
            )
            ],
            load_balancer_arn=front_end.arn,
            port=Token.as_number("80"),
            protocol="HTTP"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_front_end.override_logical_id("front_end")
```

### Fixed-response Action

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        front_end = Lb(self, "front_end")
        aws_lb_listener_front_end = LbListener(self, "front_end_1",
            default_action=[LbListenerDefaultAction(
                fixed_response=LbListenerDefaultActionFixedResponse(
                    content_type="text/plain",
                    message_body="Fixed response content",
                    status_code="200"
                ),
                type="fixed-response"
            )
            ],
            load_balancer_arn=front_end.arn,
            port=Token.as_number("80"),
            protocol="HTTP"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_front_end.override_logical_id("front_end")
```

### Authenticate-cognito Action

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_user_pool import CognitoUserPool
from imports.aws.cognito_user_pool_client import CognitoUserPoolClient
from imports.aws.cognito_user_pool_domain import CognitoUserPoolDomain
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
from imports.aws.lb_target_group import LbTargetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name, *, name, name1, userPoolId, domain, userPoolId1):
        super().__init__(scope, name)
        pool = CognitoUserPool(self, "pool",
            name=name
        )
        client = CognitoUserPoolClient(self, "client",
            name=name1,
            user_pool_id=user_pool_id
        )
        domain = CognitoUserPoolDomain(self, "domain",
            domain=domain,
            user_pool_id=user_pool_id1
        )
        front_end = Lb(self, "front_end")
        aws_lb_target_group_front_end = LbTargetGroup(self, "front_end_4")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_target_group_front_end.override_logical_id("front_end")
        aws_lb_listener_front_end = LbListener(self, "front_end_5",
            default_action=[LbListenerDefaultAction(
                authenticate_cognito=LbListenerDefaultActionAuthenticateCognito(
                    user_pool_arn=pool.arn,
                    user_pool_client_id=client.id,
                    user_pool_domain=domain.domain
                ),
                type="authenticate-cognito"
            ), LbListenerDefaultAction(
                target_group_arn=Token.as_string(aws_lb_target_group_front_end.arn),
                type="forward"
            )
            ],
            load_balancer_arn=front_end.arn,
            port=Token.as_number("80"),
            protocol="HTTP"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_front_end.override_logical_id("front_end")
```

### Authenticate-OIDC Action

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
from imports.aws.lb_target_group import LbTargetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        front_end = Lb(self, "front_end")
        aws_lb_target_group_front_end = LbTargetGroup(self, "front_end_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_target_group_front_end.override_logical_id("front_end")
        aws_lb_listener_front_end = LbListener(self, "front_end_2",
            default_action=[LbListenerDefaultAction(
                authenticate_oidc=LbListenerDefaultActionAuthenticateOidc(
                    authorization_endpoint="https://example.com/authorization_endpoint",
                    client_id="client_id",
                    client_secret="client_secret",
                    issuer="https://example.com",
                    token_endpoint="https://example.com/token_endpoint",
                    user_info_endpoint="https://example.com/user_info_endpoint"
                ),
                type="authenticate-oidc"
            ), LbListenerDefaultAction(
                target_group_arn=Token.as_string(aws_lb_target_group_front_end.arn),
                type="forward"
            )
            ],
            load_balancer_arn=front_end.arn,
            port=Token.as_number("80"),
            protocol="HTTP"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_front_end.override_logical_id("front_end")
```

### Gateway Load Balancer Listener

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
from imports.aws.lb_target_group import LbTargetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Lb(self, "example",
            load_balancer_type="gateway",
            name="example",
            subnet_mapping=[LbSubnetMapping(
                subnet_id=Token.as_string(aws_subnet_example.id)
            )
            ]
        )
        aws_lb_target_group_example = LbTargetGroup(self, "example_1",
            health_check=LbTargetGroupHealthCheck(
                port=Token.as_string(80),
                protocol="HTTP"
            ),
            name="example",
            port=6081,
            protocol="GENEVE",
            vpc_id=Token.as_string(aws_vpc_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_target_group_example.override_logical_id("example")
        aws_lb_listener_example = LbListener(self, "example_2",
            default_action=[LbListenerDefaultAction(
                target_group_arn=Token.as_string(aws_lb_target_group_example.id),
                type="forward"
            )
            ],
            load_balancer_arn=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_example.override_logical_id("example")
```

### Mutual TLS Authentication

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb import Lb
from imports.aws.lb_listener import LbListener
from imports.aws.lb_target_group import LbTargetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = Lb(self, "example",
            load_balancer_type="application"
        )
        aws_lb_target_group_example = LbTargetGroup(self, "example_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_target_group_example.override_logical_id("example")
        aws_lb_listener_example = LbListener(self, "example_2",
            default_action=[LbListenerDefaultAction(
                target_group_arn=Token.as_string(aws_lb_target_group_example.id),
                type="forward"
            )
            ],
            load_balancer_arn=example.id,
            mutual_authentication=LbListenerMutualAuthentication(
                mode="verify",
                trust_store_arn="..."
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lb_listener_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `default_action` - (Required) Configuration block for default actions. Detailed below.
* `load_balancer_arn` - (Required, Forces New Resource) ARN of the load balancer.

The following arguments are optional:

* `alpn_policy` - (Optional)  Name of the Application-Layer Protocol Negotiation (ALPN) policy. Can be set if `protocol` is `TLS`. Valid values are `HTTP1Only`, `HTTP2Only`, `HTTP2Optional`, `HTTP2Preferred`, and `None`.
* `certificate_arn` - (Optional) ARN of the default SSL server certificate. Exactly one certificate is required if the protocol is HTTPS. For adding additional SSL certificates, see the [`aws_lb_listener_certificate` resource](/docs/providers/aws/r/lb_listener_certificate.html).
* `mutual_authentication` - (Optional) The mutual authentication configuration information. Detailed below.
* `port` - (Optional) Port on which the load balancer is listening. Not valid for Gateway Load Balancers.
* `protocol` - (Optional) Protocol for connections from clients to the load balancer. For Application Load Balancers, valid values are `HTTP` and `HTTPS`, with a default of `HTTP`. For Network Load Balancers, valid values are `TCP`, `TLS`, `UDP`, and `TCP_UDP`. Not valid to use `UDP` or `TCP_UDP` if dual-stack mode is enabled. Not valid for Gateway Load Balancers.
* `ssl_policy` - (Optional) Name of the SSL Policy for the listener. Required if `protocol` is `HTTPS` or `TLS`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

~> **NOTE::** Please note that listeners that are attached to Application Load Balancers must use either `HTTP` or `HTTPS` protocols while listeners that are attached to Network Load Balancers must use the `TCP` protocol.

### default_action

The following arguments are required:

* `type` - (Required) Type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.

The following arguments are optional:

* `authenticate_cognito` - (Optional) Configuration block for using Amazon Cognito to authenticate users. Specify only when `type` is `authenticate-cognito`. Detailed below.
* `authenticate_oidc` - (Optional) Configuration block for an identity provider that is compliant with OpenID Connect (OIDC). Specify only when `type` is `authenticate-oidc`. Detailed below.
* `fixed_response` - (Optional) Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
* `forward` - (Optional) Configuration block for creating an action that distributes requests among one or more target groups.
  Specify only if `type` is `forward`.
  Cannot be specified with `target_group_arn`.
  Detailed below.
* `order` - (Optional) Order for the action.
  The action with the lowest value for order is performed first.
  Valid values are between `1` and `50000`.
  Defaults to the position in the list of actions.
* `redirect` - (Optional) Configuration block for creating a redirect action. Required if `type` is `redirect`. Detailed below.
* `target_group_arn` - (Optional) ARN of the Target Group to which to route traffic.
  Specify only if `type` is `forward` and you want to route to a single target group.
  To route to one or more target groups, use a `forward` block instead.
  Cannot be specified with `forward`.

#### authenticate_cognito

The following arguments are required:

* `user_pool_arn` - (Required) ARN of the Cognito user pool.
* `user_pool_client_id` - (Required) ID of the Cognito user pool client.
* `user_pool_domain` - (Required) Domain prefix or fully-qualified domain name of the Cognito user pool.

The following arguments are optional:

* `authentication_request_extra_params` - (Optional) Query parameters to include in the redirect request to the authorization endpoint. Max: 10. Detailed below.
* `on_unauthenticated_request` - (Optional) Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
* `scope` - (Optional) Set of user claims to be requested from the IdP.
* `session_cookie_name` - (Optional) Name of the cookie used to maintain session information.
* `session_timeout` - (Optional) Maximum duration of the authentication session, in seconds.

##### authentication_request_extra_params

* `key` - (Required) Key of query parameter.
* `value` - (Required) Value of query parameter.

#### authenticate_oidc

The following arguments are required:

* `authorization_endpoint` - (Required) Authorization endpoint of the IdP.
* `client_id` - (Required) OAuth 2.0 client identifier.
* `client_secret` - (Required) OAuth 2.0 client secret.
* `issuer` - (Required) OIDC issuer identifier of the IdP.
* `token_endpoint` - (Required) Token endpoint of the IdP.
* `user_info_endpoint` - (Required) User info endpoint of the IdP.

The following arguments are optional:

* `authentication_request_extra_params` - (Optional) Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
* `on_unauthenticated_request` - (Optional) Behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
* `scope` - (Optional) Set of user claims to be requested from the IdP.
* `session_cookie_name` - (Optional) Name of the cookie used to maintain session information.
* `session_timeout` - (Optional) Maximum duration of the authentication session, in seconds.

#### fixed_response

The following arguments are required:

* `content_type` - (Required) Content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.

The following arguments are optional:

* `message_body` - (Optional) Message body.
* `status_code` - (Optional) HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.

#### forward

The following arguments are required:

* `target_group` - (Required) Set of 1-5 target group blocks. Detailed below.

The following arguments are optional:

* `stickiness` - (Optional) Configuration block for target group stickiness for the rule. Detailed below.

##### target_group

The following arguments are required:

* `arn` - (Required) ARN of the target group.

The following arguments are optional:

* `weight` - (Optional) Weight. The range is 0 to 999.

##### stickiness

The following arguments are required:

* `duration` - (Required) Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).

The following arguments are optional:

* `enabled` - (Optional) Whether target group stickiness is enabled. Default is `false`.

#### redirect

~> **NOTE::** You can reuse URI components using the following reserved keywords: `#{protocol}`, `#{host}`, `#{port}`, `#{path}` (the leading "/" is removed) and `#{query}`.

The following arguments are required:

* `status_code` - (Required) HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).

The following arguments are optional:

* `host` - (Optional) Hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
* `path` - (Optional) Absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
* `port` - (Optional) Port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
* `protocol` - (Optional) Protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
* `query` - (Optional) Query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.

### mutual_authentication

* `mode` - (Required) Valid values are `off`, `verify` and `passthrough`.
* `trust_store_arn` - (Required) ARN of the elbv2 Trust Store.
* `ignore_client_certificate_expiry` - (Optional) Whether client certificate expiry is ignored. Default is `false`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the listener (matches `id`).
* `id` - ARN of the listener (matches `arn`).
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import listeners using their ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lb_listener import LbListener
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LbListener.generate_config_for_import(self, "frontEnd", "arn:aws:elasticloadbalancing:us-west-2:187416307283:listener/app/front-end-alb/8e4497da625e2d8a/9ab28ade35828f96")
```

Using `terraform import`, import listeners using their ARN. For example:

```console
% terraform import aws_lb_listener.front_end arn:aws:elasticloadbalancing:us-west-2:187416307283:listener/app/front-end-alb/8e4497da625e2d8a/9ab28ade35828f96
```

<!-- cache-key: cdktf-0.20.1 input-dc6a2aaf3a51501b5a9341ecb9a5e9a679bdc65887c8ebbf02c7cec341de12d0 -->