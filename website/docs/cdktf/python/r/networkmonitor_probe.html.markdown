---
subcategory: "CloudWatch Network Monitor"
layout: "aws"
page_title: "AWS: aws_networkmonitor_probe"
description: |-
  Terraform resource for managing an Amazon Network Monitor Probe.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmonitor_probe

Terraform resource for managing an AWS Network Monitor Probe.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmonitor_monitor import NetworkmonitorMonitor
from imports.aws.networkmonitor_probe import NetworkmonitorProbe
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = NetworkmonitorMonitor(self, "example",
            aggregation_period=30,
            monitor_name="example"
        )
        aws_networkmonitor_probe_example = NetworkmonitorProbe(self, "example_1",
            destination="127.0.0.1",
            destination_port=80,
            monitor_name=example.monitor_name,
            packet_size=200,
            protocol="TCP",
            source_arn=Token.as_string(aws_subnet_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmonitor_probe_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

- `destination` - (Required) The destination IP address. This must be either IPV4 or IPV6.
- `destination_port` - (Optional) The port associated with the destination. This is required only if the protocol is TCP and must be a number between 1 and 65536.
- `monitor_name` - (Required) The name of the monitor.
- `protocol` - (Required) The protocol used for the network traffic between the source and destination. This must be either TCP or ICMP.
- `source_arn` - (Required) The ARN of the subnet.
- `packet_size` - (Optional) The size of the packets sent between the source and destination. This must be a number between 56 and 8500.

The following arguments are optional:

- `tags` - (Optional) Key-value tags for the monitor. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

- `arn` - The ARN of the attachment.
- `source_arn` - The ARN of the subnet.
- `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmonitor_probe` using the monitor name and probe id. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmonitor_probe import NetworkmonitorProbe
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NetworkmonitorProbe.generate_config_for_import(self, "example", "monitor-7786087912324693644,probe-3qm8p693i4fi1h8lqylzkbp42e")
```

Using `terraform import`, import `aws_networkmonitor_probe` using the monitor name and probe id. For example:

```console
% terraform import aws_networkmonitor_probe.example monitor-7786087912324693644,probe-3qm8p693i4fi1h8lqylzkbp42e
```

<!-- cache-key: cdktf-0.20.1 input-f1987f8bcc0a9f89d283ec20e4f26b9478e6776ec3b4d64018f27777a5ef1ac8 -->