---
subcategory: "Route 53 Domains"
layout: "aws"
page_title: "AWS: aws_route53domains_delegation_signer_record"
description: |-
  Provides a resource to manage a delegation signer record in the parent DNS zone for domains registered with Route53.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53domains_delegation_signer_record

Provides a resource to manage a [delegation signer record](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-configuring-dnssec-enable-signing.html#dns-configuring-dnssec-enable-signing-step-1) in the parent DNS zone for domains registered with Route53.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.kms_key import KmsKey
from imports.aws.provider import AwsProvider
from imports.aws.route53_domains_delegation_signer_record import Route53DomainsDelegationSignerRecord
from imports.aws.route53_hosted_zone_dnssec import Route53HostedZoneDnssec
from imports.aws.route53_key_signing_key import Route53KeySigningKey
from imports.aws.route53_zone import Route53Zone
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AwsProvider(self, "aws",
            region="us-east-1"
        )
        example = Route53KeySigningKey(self, "example",
            hosted_zone_id=test.id,
            key_management_service_arn=Token.as_string(aws_kms_key_test.arn),
            name="example"
        )
        aws_route53_zone_example = Route53Zone(self, "example_2",
            name="example.com"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_zone_example.override_logical_id("example")
        aws_route53_domains_delegation_signer_record_example =
        Route53DomainsDelegationSignerRecord(self, "example_3",
            domain_name="example.com",
            signing_attributes=[{
                "algorithm": example.signing_algorithm_type,
                "flags": example.flag,
                "public_key": example.public_key
            }
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_domains_delegation_signer_record_example.override_logical_id("example")
        current = DataAwsCallerIdentity(self, "current")
        aws_kms_key_example = KmsKey(self, "example_5",
            customer_master_key_spec="ECC_NIST_P256",
            deletion_window_in_days=7,
            key_usage="SIGN_VERIFY",
            policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": ["kms:DescribeKey", "kms:GetPublicKey", "kms:Sign"],
                        "Condition": {
                            "ArnLike": {
                                "aws:_source_arn": "arn:aws:route53:::hostedzone/*"
                            },
                            "StringEquals": {
                                "aws:_source_account": current.account_id
                            }
                        },
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "dnssec-route53.amazonaws.com"
                        },
                        "Resource": "*",
                        "Sid": "Allow Route 53 DNSSEC Service"
                    }, {
                        "Action": "kms:CreateGrant",
                        "Condition": {
                            "Bool": {
                                "kms:_grant_is_for_aWSResource": "true"
                            }
                        },
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "dnssec-route53.amazonaws.com"
                        },
                        "Resource": "*",
                        "Sid": "Allow Route 53 DNSSEC Service to CreateGrant"
                    }, {
                        "Action": "kms:*",
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": "arn:aws:iam::${" + current.account_id + "}:root"
                        },
                        "Resource": "*",
                        "Sid": "Enable IAM User Permissions"
                    }
                    ],
                    "Version": "2012-10-17"
                }))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_kms_key_example.override_logical_id("example")
        aws_route53_hosted_zone_dnssec_example = Route53HostedZoneDnssec(self, "example_6",
            depends_on=[example],
            hosted_zone_id=example.hosted_zone_id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_route53_hosted_zone_dnssec_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `domain_name` - (Required) The name of the domain that will have its parent DNS zone updated with the Delegation Signer record.
* `signing_attributes` - (Required) The information about a key, including the algorithm, public key-value, and flags.
    * `algorithm` - (Required) Algorithm which was used to generate the digest from the public key.
    * `flags` - (Required) Defines the type of key. It can be either a KSK (key-signing-key, value `257`) or ZSK (zone-signing-key, value `256`).
    * `public_key` - (Required) The base64-encoded public key part of the key pair that is passed to the registry.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `dnssec_key_id` - An ID assigned to the created DS record.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import delegation signer records using the domain name and DNSSEC key ID, separated by a comma (`,`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_domains_delegation_signer_record import Route53DomainsDelegationSignerRecord
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53DomainsDelegationSignerRecord.generate_config_for_import(self, "example", "example.com,40DE3534F5324DBDAC598ACEDB5B1E26A5368732D9C791D1347E4FBDDF6FC343")
```

Using `terraform import`, import delegation signer records using the domain name and DNSSEC key ID, separated by a comma (`,`). For example:

```console
% terraform import aws_route53domains_delegation_signer_record.example example.com,40DE3534F5324DBDAC598ACEDB5B1E26A5368732D9C791D1347E4FBDDF6FC343
```

<!-- cache-key: cdktf-0.20.1 input-18adaa1f2f39deab53694174e88364e593a87bd3a2e99e0fee8e10a7150a478e -->