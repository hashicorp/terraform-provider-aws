---
subcategory: "SSO Identity Store"
layout: "aws"
page_title: "AWS: aws_identitystore_group_membership"
description: |-
  Terraform resource for managing an AWS IdentityStore Group Membership.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_identitystore_group_membership

Terraform resource for managing an AWS IdentityStore Group Membership.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_ssoadmin_instances import DataAwsSsoadminInstances
from imports.aws.identitystore_group import IdentitystoreGroup
from imports.aws.identitystore_group_membership import IdentitystoreGroupMembership
from imports.aws.identitystore_user import IdentitystoreUser
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsSsoadminInstances(self, "example")
        aws_identitystore_group_example = IdentitystoreGroup(self, "example_1",
            description="Some group name",
            display_name="MyGroup",
            identity_store_id=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.identity_store_ids), ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_group_example.override_logical_id("example")
        aws_identitystore_user_example = IdentitystoreUser(self, "example_2",
            display_name="John Doe",
            identity_store_id=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.identity_store_ids), ["0"])),
            name=IdentitystoreUserName(
                family_name="Doe",
                given_name="John"
            ),
            user_name="john.doe@example.com"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_user_example.override_logical_id("example")
        aws_identitystore_group_membership_example =
        IdentitystoreGroupMembership(self, "example_3",
            group_id=Token.as_string(aws_identitystore_group_example.group_id),
            identity_store_id=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.identity_store_ids), ["0"])),
            member_id=Token.as_string(aws_identitystore_user_example.user_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_group_membership_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `member_id` - (Required) The identifier for a user in the Identity Store.
* `group_id` - (Required)  The identifier for a group in the Identity Store.
* `identity_store_id` - (Required) Identity Store ID associated with the Single Sign-On Instance.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `membership_id` - The identifier of the newly created group membership in the Identity Store.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_identitystore_group_membership` using the `identity_store_id/membership_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.identitystore_group_membership import IdentitystoreGroupMembership
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IdentitystoreGroupMembership.generate_config_for_import(self, "example", "d-0000000000/00000000-0000-0000-0000-000000000000")
```

Using `terraform import`, import `aws_identitystore_group_membership` using the `identity_store_id/membership_id`. For example:

```console
% terraform import aws_identitystore_group_membership.example d-0000000000/00000000-0000-0000-0000-000000000000
```

<!-- cache-key: cdktf-0.20.8 input-745ddbb430f05a4e5f0ba00082fd2e6025b969aa5422c002d78fa6aa6109ffff -->