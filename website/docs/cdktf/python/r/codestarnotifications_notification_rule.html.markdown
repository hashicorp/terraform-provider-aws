---
subcategory: "CodeStar Notifications"
layout: "aws"
page_title: "AWS: aws_codestarnotifications_notification_rule"
description: |-
  Provides a CodeStar Notifications Rule
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codestarnotifications_notification_rule

Provides a CodeStar Notifications Rule.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codecommit_repository import CodecommitRepository
from imports.aws.codestarnotifications_notification_rule import CodestarnotificationsNotificationRule
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.sns_topic import SnsTopic
from imports.aws.sns_topic_policy import SnsTopicPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        code = CodecommitRepository(self, "code",
            repository_name="example-code-repo"
        )
        notif = SnsTopic(self, "notif",
            name="notification"
        )
        notif_access = DataAwsIamPolicyDocument(self, "notif_access",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sns:Publish"],
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["codestar-notifications.amazonaws.com"],
                    type="Service"
                )
                ],
                resources=[notif.arn]
            )
            ]
        )
        CodestarnotificationsNotificationRule(self, "commits",
            detail_type="BASIC",
            event_type_ids=["codecommit-repository-comments-on-commits"],
            name="example-code-repo-commits",
            resource=code.arn,
            target=[CodestarnotificationsNotificationRuleTarget(
                address=notif.arn
            )
            ]
        )
        SnsTopicPolicy(self, "default",
            arn=notif.arn,
            policy=Token.as_string(notif_access.json)
        )
```

## Argument Reference

This resource supports the following arguments:

* `detail_type` - (Required) The level of detail to include in the notifications for this resource. Possible values are `BASIC` and `FULL`.
* `event_type_ids` - (Required) A list of event types associated with this notification rule.
  For list of allowed events see [here](https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api).
* `name` - (Required) The name of notification rule.
* `resource` - (Required) The ARN of the resource to associate with the notification rule.
* `status` - (Optional) The status of the notification rule. Possible values are `ENABLED` and `DISABLED`, default is `ENABLED`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `target` - (Optional) Configuration blocks containing notification target information. Can be specified multiple times. At least one target must be specified on creation.

An `target` block supports the following arguments:

* `address` - (Required) The ARN of notification rule target. For example, a SNS Topic ARN.
* `type` - (Optional) The type of the notification target. Default value is `SNS`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The codestar notification rule ARN.
* `arn` - The codestar notification rule ARN.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeStar notification rule using the ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codestarnotifications_notification_rule import CodestarnotificationsNotificationRule
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CodestarnotificationsNotificationRule.generate_config_for_import(self, "foo", "arn:aws:codestar-notifications:us-west-1:0123456789:notificationrule/2cdc68a3-8f7c-4893-b6a5-45b362bd4f2b")
```

Using `terraform import`, import CodeStar notification rule using the ARN. For example:

```console
% terraform import aws_codestarnotifications_notification_rule.foo arn:aws:codestar-notifications:us-west-1:0123456789:notificationrule/2cdc68a3-8f7c-4893-b6a5-45b362bd4f2b
```

<!-- cache-key: cdktf-0.20.8 input-4e53883c7fac8ce18f0f284d8670fbec11d282232b37f3e8c5d77110845632ed -->