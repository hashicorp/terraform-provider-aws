---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_user_defined_function"
description: |-
  Provides a Glue User Defined Function.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glue_user_defined_function

Provides a Glue User Defined Function Resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_catalog_database import GlueCatalogDatabase
from imports.aws.glue_user_defined_function import GlueUserDefinedFunction
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = GlueCatalogDatabase(self, "example",
            name="my_database"
        )
        aws_glue_user_defined_function_example = GlueUserDefinedFunction(self, "example_1",
            catalog_id=example.catalog_id,
            class_name="class",
            database_name=example.name,
            name="my_func",
            owner_name="owner",
            owner_type="GROUP",
            resource_uris=[GlueUserDefinedFunctionResourceUris(
                resource_type="ARCHIVE",
                uri="uri"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_glue_user_defined_function_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the function.
* `catalog_id` - (Optional) ID of the Glue Catalog to create the function in. If omitted, this defaults to the AWS Account ID.
* `database_name` - (Required) The name of the Database to create the Function.
* `class_name` - (Required) The Java class that contains the function code.
* `owner_name` - (Required) The owner of the function.
* `owner_type` - (Required) The owner type. can be one of `USER`, `ROLE`, and `GROUP`.
* `resource_uris` - (Optional) The configuration block for Resource URIs. See [resource uris](#resource-uris) below for more details.

### Resource URIs

* `resource_type` - (Required) The type of the resource. can be one of `JAR`, `FILE`, and `ARCHIVE`.
* `uri` - (Required) The URI for accessing the resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id`- The id of the Glue User Defined Function.
* `arn`- The ARN of the Glue User Defined Function.
* `create_time`- The time at which the function was created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue User Defined Functions using the `catalog_id:database_name:function_name`. If you have not set a Catalog ID specify the AWS Account ID that the database is in. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_user_defined_function import GlueUserDefinedFunction
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueUserDefinedFunction.generate_config_for_import(self, "func", "123456789012:my_database:my_func")
```

Using `terraform import`, import Glue User Defined Functions using the `catalog_id:database_name:function_name`. If you have not set a Catalog ID specify the AWS Account ID that the database is in. For example:

```console
% terraform import aws_glue_user_defined_function.func 123456789012:my_database:my_func
```

<!-- cache-key: cdktf-0.20.8 input-194cac21dea8d6e573aab71efbb8346e096eb5b0106430a43511971b8c50376b -->