---
subcategory: "Transcribe"
layout: "aws"
page_title: "AWS: aws_transcribe_vocabulary_filter"
description: |-
  Terraform resource for managing an AWS Transcribe VocabularyFilter.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_transcribe_vocabulary_filter

Terraform resource for managing an AWS Transcribe VocabularyFilter.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.transcribe_vocabulary_filter import TranscribeVocabularyFilter
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        TranscribeVocabularyFilter(self, "example",
            language_code="en-US",
            tags={
                "tag1": "value1",
                "tag2": "value3"
            },
            vocabulary_filter_name="example",
            words=["cars", "bucket"]
        )
```

## Argument Reference

The following arguments are required:

* `language_code` - (Required) The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
* `vocabulary_filter_name` - (Required) The name of the VocabularyFilter.

The following arguments are optional:

* `vocabulary_filter_file_uri` - (Optional) The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words` argument.
* `tags` - (Optional) A map of tags to assign to the VocabularyFilter. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `words` - (Optional) - A list of terms to include in the vocabulary. Conflicts with `vocabulary_filter_file_uri` argument.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - VocabularyFilter name.
* `arn` - ARN of the VocabularyFilter.
* `download_uri` - Generated download URI.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Transcribe VocabularyFilter using the `vocabulary_filter_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.transcribe_vocabulary_filter import TranscribeVocabularyFilter
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        TranscribeVocabularyFilter.generate_config_for_import(self, "example", "example-name")
```

Using `terraform import`, import Transcribe VocabularyFilter using the `vocabulary_filter_name`. For example:

```console
% terraform import aws_transcribe_vocabulary_filter.example example-name
```

<!-- cache-key: cdktf-0.20.8 input-16b5be2fa7e21b3d5f8eb7e880ca04a14415ca27a321bb6d553621e84cea648d -->