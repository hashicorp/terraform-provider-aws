---
subcategory: "Directory Service"
layout: "aws"
page_title: "AWS: aws_directory_service_log_subscription"
description: |-
  Provides a Log subscription for AWS Directory Service that pushes logs to cloudwatch.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_directory_service_log_subscription

Provides a Log subscription for AWS Directory Service that pushes logs to cloudwatch.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_group import CloudwatchLogGroup
from imports.aws.cloudwatch_log_resource_policy import CloudwatchLogResourcePolicy
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.directory_service_log_subscription import DirectoryServiceLogSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CloudwatchLogGroup(self, "example",
            name="/aws/directoryservice/${" + aws_directory_service_directory_example.id + "}",
            retention_in_days=14
        )
        aws_directory_service_log_subscription_example =
        DirectoryServiceLogSubscription(self, "example_1",
            directory_id=Token.as_string(aws_directory_service_directory_example.id),
            log_group_name=example.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_directory_service_log_subscription_example.override_logical_id("example")
        ad_log_policy = DataAwsIamPolicyDocument(self, "ad-log-policy",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["logs:CreateLogStream", "logs:PutLogEvents"],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["ds.amazonaws.com"],
                    type="Service"
                )
                ],
                resources=["${" + example.arn + "}:*"]
            )
            ]
        )
        aws_cloudwatch_log_resource_policy_ad_log_policy =
        CloudwatchLogResourcePolicy(self, "ad-log-policy_3",
            policy_document=Token.as_string(ad_log_policy.json),
            policy_name="ad-log-policy"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudwatch_log_resource_policy_ad_log_policy.override_logical_id("ad-log-policy")
```

## Argument Reference

This resource supports the following arguments:

* `directory_id` - (Required) ID of directory.
* `log_group_name` - (Required) Name of the cloudwatch log group to which the logs should be published. The log group should be already created and the directory service principal should be provided with required permission to create stream and publish logs. Changing this value would delete the current subscription and create a new one. A directory can only have one log subscription at a time.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Directory Service Log Subscriptions using the directory id. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.directory_service_log_subscription import DirectoryServiceLogSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DirectoryServiceLogSubscription.generate_config_for_import(self, "msad", "d-1234567890")
```

Using `terraform import`, import Directory Service Log Subscriptions using the directory id. For example:

```console
% terraform import aws_directory_service_log_subscription.msad d-1234567890
```

<!-- cache-key: cdktf-0.20.8 input-4c454e09cdbbcc5b15311701235bc1776950d5a3aac1b39f531b202fbb8a7072 -->