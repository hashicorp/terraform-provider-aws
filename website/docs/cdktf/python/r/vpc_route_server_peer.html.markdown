---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_route_server_peer"
description: |-
  Terraform resource for managing a VPC (Virtual Private Cloud) Route Server Peer.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_route_server_peer

  Provides a resource for managing a VPC (Virtual Private Cloud) Route Server Peer.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import VpcRouteServerPeer
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpcRouteServerPeer(self, "test",
            bgp_options=[{
                "peer_asn": 65200
            }
            ],
            peer_address="10.0.1.250",
            route_server_endpoint_id=example.route_server_endpoint_id,
            tags={
                "Name": "Appliance 1"
            }
        )
```

### Complete Configuration

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import VpcRouteServer, VpcRouteServerAssociation, VpcRouteServerEndpoint, VpcRouteServerPeer, VpcRouteServerPropagation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = VpcRouteServer(self, "test",
            amazon_side_asn=4294967294,
            tags={
                "Name": "Test"
            }
        )
        aws_vpc_route_server_association_test = VpcRouteServerAssociation(self, "test_1",
            route_server_id=test.route_server_id,
            vpc_id=aws_vpc_test.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpc_route_server_association_test.override_logical_id("test")
        aws_vpc_route_server_endpoint_test = VpcRouteServerEndpoint(self, "test_2",
            depends_on=[aws_vpc_route_server_association_test],
            route_server_id=test.route_server_id,
            subnet_id=aws_subnet_test.id,
            tags={
                "Name": "Test Endpoint"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpc_route_server_endpoint_test.override_logical_id("test")
        aws_vpc_route_server_peer_test = VpcRouteServerPeer(self, "test_3",
            bgp_options=[{
                "peer_asn": 65000,
                "peer_liveness_detection": "bgp-keepalive"
            }
            ],
            peer_address="10.0.1.250",
            route_server_endpoint_id=aws_vpc_route_server_endpoint_test.route_server_endpoint_id,
            tags={
                "Name": "Test Appliance"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpc_route_server_peer_test.override_logical_id("test")
        aws_vpc_route_server_propagation_test = VpcRouteServerPropagation(self, "test_4",
            depends_on=[aws_vpc_route_server_association_test],
            route_server_id=test.route_server_id,
            route_table_id=aws_route_table_test.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpc_route_server_propagation_test.override_logical_id("test")
```

## Argument Reference

The following arguments are required:

* `route_server_endpoint_id` - (Required) The ID of the route server endpoint for which to create a peer.
* `peer_address` - (Required) The IPv4 address of the peer device.
* `bgp_options` - The BGP options for the peer, including ASN (Autonomous System Number) and BFD (Bidrectional Forwarding Detection) settings. Configuration block with BGP Options configuration Detailed below

### bgp_options

* `peer_asn` - (Required) The Border Gateway Protocol (BGP) Autonomous System Number (ASN) for the appliance. Valid values are from 1 to 4294967295. We recommend using a private ASN in the 64512–65534 (16-bit ASN) or 4200000000–4294967294 (32-bit ASN) range.
* `peer_liveness_detection` (Optional) The requested liveness detection protocol for the BGP peer. Valid values are `bgp-keepalive` and `bfd`. Default value is `bgp-keepalive`.

The following arguments are optional:

* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the route server peer.
* `route_server_peer_id` - The unique identifier of the route server peer.
* `route_server_id` - The ID of the route server associated with this peer.
* `endpoint_eni_address` - The IP address of the Elastic network interface for the route server endpoint.
* `endpoint_eni_id` - The ID of the Elastic network interface for the route server endpoint.
* `subnet_id` - The ID of the subnet containing the route server peer.
* `vpc_id` - The ID of the VPC containing the route server peer.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC (Virtual Private Cloud) Route Server using the `route_server_peer_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import VpcRouteServerPeer
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpcRouteServerPeer.generate_config_for_import(self, "example", "rsp-12345678")
```

Using `terraform import`, import VPC (Virtual Private Cloud) Route Server using the `route_server_peer_id`. For example:

```console
% terraform import aws_vpc_route_server_peer.example rsp-12345678
```

<!-- cache-key: cdktf-0.20.8 input-b9e05b8ad330dc295709947adffcced193b3d6c54167c6c9e1ef0bb9dbce34d7 -->