---
subcategory: "Resilience Hub"
layout: "aws"
page_title: "AWS: aws_resiliencehub_resiliency_policy"
description: |-
  Terraform resource for managing an AWS Resilience Hub Resiliency Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_resiliencehub_resiliency_policy

Terraform resource for managing an AWS Resilience Hub Resiliency Policy.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.resiliencehub_resiliency_policy import ResiliencehubResiliencyPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ResiliencehubResiliencyPolicy(self, "example",
            data_location_constraint="AnyLocation",
            description="testexample",
            name="testexample",
            policy=[{
                "az": [{
                    "rpo": "24h",
                    "rto": "24h"
                }
                ],
                "hardware": [{
                    "rpo": "24h",
                    "rto": "24h"
                }
                ],
                "region": [{
                    "rpo": "24h",
                    "rto": "24h"
                }
                ],
                "software_attribute": [{
                    "rpo": "24h",
                    "rto": "24h"
                }
                ]
            }
            ],
            tier="NonCritical"
        )
```

## Argument Reference

The following arguments are required:

* `name` (String) Name of Resiliency Policy.
  Must be between 2 and 60 characters long.
  Must start with an alphanumeric character and contain alphanumeric characters, underscores, or hyphens.
* `tier` (String) Resiliency Policy Tier.
  Valid values are `MissionCritical`, `Critical`, `Important`, `CoreServices`, `NonCritical`, and `NotApplicable`.
* `policy` (Attributes) The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds. See [`policy`](#policy).

The following arguments are optional:

* `description` (String) Description of Resiliency Policy.
* `data_location_constraint` (String) Data Location Constraint of the Policy.
  Valid values are `AnyLocation`, `SameContinent`, and `SameCountry`.
* `tags` - (Map Of String) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `policy`

The following arguments are required:

* `az` - (Attributes) Specifies Availability Zone failure policy. See [`policy.az`](#policyaz)
* `hardware` - (Attributes) Specifies Infrastructure failure policy. See [`policy.hardware`](#policyhardware)
* `software` - (Attributes) Specifies Application failure policy. See [`policy.software`](#policysoftware)

The following arguments are optional:

* `region` - (Attributes) Specifies Region failure policy. [`policy.region`](#policyregion)

### `policy.az`

The following arguments are required:

* `rpo` - (Number) Recovery Point Objective (RPO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.
* `rto` - (Number) Recovery Time Objective (RTO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.

### `policy.hardware`

The following arguments are required:

* `rpo` - (Number) Recovery Point Objective (RPO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.
* `rto` - (Number) Recovery Time Objective (RTO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.

### `policy.software`

The following arguments are required:

* `rpo` - (Number) Recovery Point Objective (RPO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.
* `rto` - (Number) Recovery Time Objective (RTO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.

### `policy.region`

The following arguments are required:

* `rpo` - (Number) Recovery Point Objective (RPO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.
* `rto` - (Number) Recovery Time Objective (RTO) as a Go duration.
  Represented by a string such as `1h`, `2h45m`, or `30m15s`.
  
## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Resiliency Policy.
* `estimated_cost_tier` - Estimated Cost Tier of the Resiliency Policy.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Resilience Hub Resiliency Policy using the `arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.resiliencehub_resiliency_policy import ResiliencehubResiliencyPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ResiliencehubResiliencyPolicy.generate_config_for_import(self, "example", "arn:aws:resiliencehub:us-east-1:123456789012:resiliency-policy/8c1cfa29-d1dd-4421-aa68-c9f64cced4c2")
```

Using `terraform import`, import Resilience Hub Resiliency Policy using the `arn`. For example:

```console
% terraform import aws_resiliencehub_resiliency_policy.example arn:aws:resiliencehub:us-east-1:123456789012:resiliency-policy/8c1cfa29-d1dd-4421-aa68-c9f64cced4c2
```

<!-- cache-key: cdktf-0.20.8 input-f38fb122e47bc068b7886f155c869cfc5a16286b8c9f316d838875c6cb821ede -->