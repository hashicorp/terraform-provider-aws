---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_partner"
description: |-
  Provides a Redshift Partner resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_partner

Creates a new Amazon Redshift Partner Integration.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_partner import RedshiftPartner
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftPartner(self, "example",
            account_id=Token.as_string(1234567910),
            cluster_identifier=Token.as_string(aws_redshift_cluster_example.id),
            database_name=Token.as_string(aws_redshift_cluster_example.database_name),
            partner_name="example"
        )
```

## Argument Reference

This resource supports the following arguments:

* `account_id` - (Required) The Amazon Web Services account ID that owns the cluster.
* `cluster_identifier` - (Required) The cluster identifier of the cluster that receives data from the partner.
* `database_name` - (Required) The name of the database that receives data from the partner.
* `partner_name` - (Required) The name of the partner that is authorized to send data.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The identifier of the Redshift partner, `account_id`, `cluster_identifier`, `database_name`, `partner_name` separated by a colon (`:`).
* `status` - (Optional) The partner integration status.
* `status_message` - (Optional) The status message provided by the partner.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift usage limits using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshift_partner import RedshiftPartner
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftPartner.generate_config_for_import(self, "example", "01234567910:cluster-example-id:example:example")
```

Using `terraform import`, import Redshift usage limits using the `id`. For example:

```console
% terraform import aws_redshift_partner.example 01234567910:cluster-example-id:example:example
```

<!-- cache-key: cdktf-0.20.8 input-d4438832cfe9bd08e76f7dbce4113e2e512ea90f05f4a5914f89a70db35ad904 -->