---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_customer_gateway_association"
description: |-
  Manages a Network Manager Customer Gateway Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_customer_gateway_association

Manages a Network Manager Customer Gateway Association.

Use this resource to associate a customer gateway with a device and optionally, with a link. If you specify a link, it must be associated with the specified device.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.customer_gateway import CustomerGateway
from imports.aws.ec2_transit_gateway import Ec2TransitGateway
from imports.aws.networkmanager_customer_gateway_association import NetworkmanagerCustomerGatewayAssociation
from imports.aws.networkmanager_device import NetworkmanagerDevice
from imports.aws.networkmanager_global_network import NetworkmanagerGlobalNetwork
from imports.aws.networkmanager_site import NetworkmanagerSite
from imports.aws.networkmanager_transit_gateway_registration import NetworkmanagerTransitGatewayRegistration
from imports.aws.vpn_connection import VpnConnection
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CustomerGateway(self, "example",
            bgp_asn=Token.as_string(65000),
            ip_address="172.83.124.10",
            type="ipsec.1"
        )
        aws_ec2_transit_gateway_example = Ec2TransitGateway(self, "example_1")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ec2_transit_gateway_example.override_logical_id("example")
        aws_networkmanager_global_network_example =
        NetworkmanagerGlobalNetwork(self, "example_2",
            description="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_global_network_example.override_logical_id("example")
        aws_networkmanager_site_example = NetworkmanagerSite(self, "example_3",
            global_network_id=Token.as_string(aws_networkmanager_global_network_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_site_example.override_logical_id("example")
        aws_vpn_connection_example = VpnConnection(self, "example_4",
            customer_gateway_id=example.id,
            static_routes_only=True,
            transit_gateway_id=Token.as_string(aws_ec2_transit_gateway_example.id),
            type=example.type
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpn_connection_example.override_logical_id("example")
        aws_networkmanager_device_example = NetworkmanagerDevice(self, "example_5",
            global_network_id=Token.as_string(aws_networkmanager_global_network_example.id),
            site_id=Token.as_string(aws_networkmanager_site_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_device_example.override_logical_id("example")
        aws_networkmanager_transit_gateway_registration_example =
        NetworkmanagerTransitGatewayRegistration(self, "example_6",
            depends_on=[aws_vpn_connection_example],
            global_network_id=Token.as_string(aws_networkmanager_global_network_example.id),
            transit_gateway_arn=Token.as_string(aws_ec2_transit_gateway_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_transit_gateway_registration_example.override_logical_id("example")
        aws_networkmanager_customer_gateway_association_example =
        NetworkmanagerCustomerGatewayAssociation(self, "example_7",
            customer_gateway_arn=example.arn,
            depends_on=[aws_networkmanager_transit_gateway_registration_example],
            device_id=Token.as_string(aws_networkmanager_device_example.id),
            global_network_id=Token.as_string(aws_networkmanager_global_network_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_networkmanager_customer_gateway_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `customer_gateway_arn` - (Required) ARN of the customer gateway.
* `device_id` - (Required) ID of the device.
* `global_network_id` - (Required) ID of the global network.

The following arguments are optional:

* `link_id` - (Optional) ID of the link.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)
* `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_customer_gateway_association` using the global network ID and customer gateway ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.networkmanager_customer_gateway_association import NetworkmanagerCustomerGatewayAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NetworkmanagerCustomerGatewayAssociation.generate_config_for_import(self, "example", "global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:customer-gateway/cgw-123abc05e04123abc")
```

Using `terraform import`, import `aws_networkmanager_customer_gateway_association` using the global network ID and customer gateway ARN. For example:

```console
% terraform import aws_networkmanager_customer_gateway_association.example global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:customer-gateway/cgw-123abc05e04123abc
```

<!-- cache-key: cdktf-0.20.8 input-7d4e81e8465dadfdbe707c919281afe7fa7d4c7f3c3fb18d95bffeb27a01eb0b -->