---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_managed_policy_attachment"
description: |-
  Manages an IAM managed policy for a Single Sign-On (SSO) Permission Set
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_managed_policy_attachment

Provides an IAM managed policy for a Single Sign-On (SSO) Permission Set resource

~> **NOTE:** Creating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_ssoadmin_instances import DataAwsSsoadminInstances
from imports.aws.ssoadmin_managed_policy_attachment import SsoadminManagedPolicyAttachment
from imports.aws.ssoadmin_permission_set import SsoadminPermissionSet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsSsoadminInstances(self, "example")
        aws_ssoadmin_permission_set_example = SsoadminPermissionSet(self, "example_1",
            instance_arn=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.arns), ["0"])),
            name="Example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ssoadmin_permission_set_example.override_logical_id("example")
        aws_ssoadmin_managed_policy_attachment_example =
        SsoadminManagedPolicyAttachment(self, "example_2",
            instance_arn=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.arns), ["0"])),
            managed_policy_arn="arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup",
            permission_set_arn=Token.as_string(aws_ssoadmin_permission_set_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ssoadmin_managed_policy_attachment_example.override_logical_id("example")
```

### With Account Assignment

~> Because destruction of a managed policy attachment resource also re-provisions the associated permission set to all accounts, explicitly indicating the dependency with the account assignment resource via the [`depends_on` meta argument](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) is necessary to ensure proper deletion order when these resources are used together.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_ssoadmin_instances import DataAwsSsoadminInstances
from imports.aws.identitystore_group import IdentitystoreGroup
from imports.aws.ssoadmin_account_assignment import SsoadminAccountAssignment
from imports.aws.ssoadmin_managed_policy_attachment import SsoadminManagedPolicyAttachment
from imports.aws.ssoadmin_permission_set import SsoadminPermissionSet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsSsoadminInstances(self, "example")
        aws_identitystore_group_example = IdentitystoreGroup(self, "example_1",
            description="Admin Group",
            display_name="Admin",
            identity_store_id=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.identity_store_ids), ["0"]))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_identitystore_group_example.override_logical_id("example")
        aws_ssoadmin_permission_set_example = SsoadminPermissionSet(self, "example_2",
            instance_arn=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.arns), ["0"])),
            name="Example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ssoadmin_permission_set_example.override_logical_id("example")
        SsoadminAccountAssignment(self, "account_assignment",
            instance_arn=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.arns), ["0"])),
            permission_set_arn=Token.as_string(aws_ssoadmin_permission_set_example.arn),
            principal_id=Token.as_string(aws_identitystore_group_example.group_id),
            principal_type="GROUP",
            target_id="123456789012",
            target_type="AWS_ACCOUNT"
        )
        aws_ssoadmin_managed_policy_attachment_example =
        SsoadminManagedPolicyAttachment(self, "example_4",
            depends_on=[aws_ssoadmin_account_assignment_example],
            instance_arn=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.arns), ["0"])),
            managed_policy_arn="arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup",
            permission_set_arn=Token.as_string(aws_ssoadmin_permission_set_example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ssoadmin_managed_policy_attachment_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `instance_arn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
* `managed_policy_arn` - (Required, Forces new resource) The IAM managed policy Amazon Resource Name (ARN) to be attached to the Permission Set.
* `permission_set_arn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Names (ARNs) of the Managed Policy, Permission Set, and SSO Instance, separated by a comma (`,`).
* `managed_policy_name` - The name of the IAM Managed Policy.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Managed Policy Attachments using the `managed_policy_arn`, `permission_set_arn`, and `instance_arn` separated by a comma (`,`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_managed_policy_attachment import SsoadminManagedPolicyAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminManagedPolicyAttachment.generate_config_for_import(self, "example", "arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup,arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72")
```

Using `terraform import`, import SSO Managed Policy Attachments using the `managed_policy_arn`, `permission_set_arn`, and `instance_arn` separated by a comma (`,`). For example:

```console
% terraform import aws_ssoadmin_managed_policy_attachment.example arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup,arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72
```

<!-- cache-key: cdktf-0.20.1 input-73fefc01b46b4cf4489868580522a20327e26c603ae4140b5374affcfb50ca7b -->