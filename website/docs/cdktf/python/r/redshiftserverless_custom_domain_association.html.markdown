---
subcategory: "Redshift Serverless"
layout: "aws"
page_title: "AWS: aws_redshiftserverless_custom_domain_association"
description: |-
  Terraform resource for managing an AWS Redshift Serverless Custom Domain Association.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshiftserverless_custom_domain_association

Terraform resource for managing an AWS Redshift Serverless Custom Domain Association.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.acm_certificate import AcmCertificate
from imports.aws.redshiftserverless_custom_domain_association import RedshiftserverlessCustomDomainAssociation
from imports.aws.redshiftserverless_namespace import RedshiftserverlessNamespace
from imports.aws.redshiftserverless_workgroup import RedshiftserverlessWorkgroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = AcmCertificate(self, "example",
            domain_name="example.com"
        )
        aws_redshiftserverless_namespace_example =
        RedshiftserverlessNamespace(self, "example_1",
            namespace_name="example-namespace"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshiftserverless_namespace_example.override_logical_id("example")
        aws_redshiftserverless_workgroup_example =
        RedshiftserverlessWorkgroup(self, "example_2",
            namespace_name=Token.as_string(aws_redshiftserverless_namespace_example.namespace_name),
            workgroup_name="example-workgroup"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshiftserverless_workgroup_example.override_logical_id("example")
        aws_redshiftserverless_custom_domain_association_example =
        RedshiftserverlessCustomDomainAssociation(self, "example_3",
            custom_domain_certificate_arn=example.arn,
            custom_domain_name="example.com",
            workgroup_name=Token.as_string(aws_redshiftserverless_workgroup_example.workgroup_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_redshiftserverless_custom_domain_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `workgroup_name` - (Required) Name of the workgroup.
* `custom_domain_name` - (Required) Custom domain to associate with the workgroup.
* `custom_domain_certificate_arn` - (Required) ARN of the certificate for the custom domain association.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `custom_domain_certificate_expiry_time` - Expiration time for the certificate.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Serverless Custom Domain Association using the `workgroup_name` and `custom_domain_name`, separated by the coma. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.redshiftserverless_custom_domain_association import RedshiftserverlessCustomDomainAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        RedshiftserverlessCustomDomainAssociation.generate_config_for_import(self, "example", "example-workgroup,example.com")
```

Using `terraform import`, import Redshift Serverless Custom Domain Association using the `workgroup_name` and `custom_domain_name`, separated by the coma. For example:

```console
% terraform import aws_redshiftserverless_custom_domain_association.example example-workgroup,example.com
```

<!-- cache-key: cdktf-0.20.1 input-f2ed1f05d9d7950427f9d82ae56ca1e32290bd78ace2387e3f141832feda885f -->