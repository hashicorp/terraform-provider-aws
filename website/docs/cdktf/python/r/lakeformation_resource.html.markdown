---
subcategory: "Lake Formation"
layout: "aws"
page_title: "AWS: aws_lakeformation_resource"
description: |-
  Registers a Lake Formation resource as managed by the Data Catalog.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lakeformation_resource

Registers a Lake Formation resource (e.g., S3 bucket) as managed by the Data Catalog. In other words, the S3 path is added to the data lake.

Choose a role that has read/write access to the chosen Amazon S3 path or use the service-linked role.
When you register the S3 path, the service-linked role and a new inline policy are created on your behalf.
Lake Formation adds the first path to the inline policy and attaches it to the service-linked role.
When you register subsequent paths, Lake Formation adds the path to the existing policy.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_s3_bucket import DataAwsS3Bucket
from imports.aws.lakeformation_resource import LakeformationResource
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsS3Bucket(self, "example",
            bucket="an-example-bucket"
        )
        aws_lakeformation_resource_example = LakeformationResource(self, "example_1",
            arn=Token.as_string(example.arn)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_lakeformation_resource_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `arn` - (Required) Amazon Resource Name (ARN) of the resource.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `role_arn` - (Optional) Role that has read/write access to the resource.
* `use_service_linked_role` - (Optional) Designates an AWS Identity and Access Management (IAM) service-linked role by registering this role with the Data Catalog.
* `hybrid_access_enabled` - (Optional) Flag to enable AWS LakeFormation hybrid access permission mode.
* `with_federation`- (Optional) Whether or not the resource is a federated resource. Set to true when registering AWS Glue connections for federated catalog functionality.
* `with_privileged_access` - (Optional) Boolean to grant the calling principal the permissions to perform all supported Lake Formation operations on the registered data location.

~> **NOTE:** AWS does not support registering an S3 location with an IAM role and subsequently updating the S3 location registration to a service-linked role.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `last_modified` - Date and time the resource was last modified in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).

<!-- cache-key: cdktf-0.20.8 input-1b00e3a131d1fe3bfb1681d441c5ae9446653803683ae849bce3ea4c1b2debd2 -->