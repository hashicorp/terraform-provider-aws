---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_user_pool_ui_customization"
description: |-
  Provides a Cognito User Pool UI Customization resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_user_pool_ui_customization

Provides a Cognito User Pool UI Customization resource.

~> **Note:** To use this resource, the user pool must have a domain associated with it. For more information, see the Amazon Cognito Developer Guide on [Customizing the Built-in Sign-In and Sign-up Webpages](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-app-ui-customization.html).

## Example Usage

### UI customization settings for a single client

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_user_pool import CognitoUserPool
from imports.aws.cognito_user_pool_client import CognitoUserPoolClient
from imports.aws.cognito_user_pool_domain import CognitoUserPoolDomain
from imports.aws.cognito_user_pool_ui_customization import CognitoUserPoolUiCustomization
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CognitoUserPool(self, "example",
            name="example"
        )
        aws_cognito_user_pool_client_example = CognitoUserPoolClient(self, "example_1",
            name="example",
            user_pool_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_client_example.override_logical_id("example")
        aws_cognito_user_pool_domain_example = CognitoUserPoolDomain(self, "example_2",
            domain="example",
            user_pool_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_domain_example.override_logical_id("example")
        aws_cognito_user_pool_ui_customization_example =
        CognitoUserPoolUiCustomization(self, "example_3",
            client_id=Token.as_string(aws_cognito_user_pool_client_example.id),
            css=".label-customizable {font-weight: 400;}",
            image_file=Token.as_string(Fn.filebase64("logo.png")),
            user_pool_id=Token.as_string(aws_cognito_user_pool_domain_example.user_pool_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_ui_customization_example.override_logical_id("example")
```

### UI customization settings for all clients

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_user_pool import CognitoUserPool
from imports.aws.cognito_user_pool_domain import CognitoUserPoolDomain
from imports.aws.cognito_user_pool_ui_customization import CognitoUserPoolUiCustomization
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CognitoUserPool(self, "example",
            name="example"
        )
        aws_cognito_user_pool_domain_example = CognitoUserPoolDomain(self, "example_1",
            domain="example",
            user_pool_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_domain_example.override_logical_id("example")
        aws_cognito_user_pool_ui_customization_example =
        CognitoUserPoolUiCustomization(self, "example_2",
            css=".label-customizable {font-weight: 400;}",
            image_file=Token.as_string(Fn.filebase64("logo.png")),
            user_pool_id=Token.as_string(aws_cognito_user_pool_domain_example.user_pool_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_ui_customization_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `client_id` (Optional) The client ID for the client app. Defaults to `ALL`. If `ALL` is specified, the `css` and/or `image_file` settings will be used for every client that has no UI customization set previously.
* `css` (Optional) - The CSS values in the UI customization, provided as a String. At least one of `css` or `image_file` is required.
* `image_file` (Optional) - The uploaded logo image for the UI customization, provided as a base64-encoded String. Drift detection is not possible for this argument. At least one of `css` or `image_file` is required.
* `user_pool_id` (Required) - The user pool ID for the user pool.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `creation_date` - The creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.
* `css_version` - The CSS version number.
* `image_url` - The logo image URL for the UI customization.
* `last_modified_date` - The last-modified date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) for the UI customization.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cognito User Pool UI Customizations using the `user_pool_id` and `client_id` separated by `,`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_user_pool_ui_customization import CognitoUserPoolUiCustomization
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoUserPoolUiCustomization.generate_config_for_import(self, "example", "us-west-2_ZCTarbt5C,12bu4fuk3mlgqa2rtrujgp6egq")
```

Using `terraform import`, import Cognito User Pool UI Customizations using the `user_pool_id` and `client_id` separated by `,`. For example:

```console
% terraform import aws_cognito_user_pool_ui_customization.example us-west-2_ZCTarbt5C,12bu4fuk3mlgqa2rtrujgp6egq
```

<!-- cache-key: cdktf-0.20.8 input-bf4b70b595c743ddb747623355c0d273cc993578aa1b9483b75e196d7e5ca18c -->