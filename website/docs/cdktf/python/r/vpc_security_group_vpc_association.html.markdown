---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_security_group_vpc_association"
description: |-
  Terraform resource for managing Security Group VPC Associations.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_security_group_vpc_association

Terraform resource for managing Security Group VPC Associations.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpc_security_group_vpc_association import VpcSecurityGroupVpcAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpcSecurityGroupVpcAssociation(self, "example",
            security_group_id="sg-05f1f54ab49bb39a3",
            vpc_id="vpc-01df9d105095412ba"
        )
```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `security_group_id` - (Required) The ID of the security group.
* `vpc_id` - (Required) The ID of the VPC to make the association with.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `state` - State of the VPC association. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroupVpcAssociation.html) for possible values.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a Security Group VPC Association using the `security_group_id` and `vpc_id` arguments, separated by a comma (`,`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpc_security_group_vpc_association import VpcSecurityGroupVpcAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpcSecurityGroupVpcAssociation.generate_config_for_import(self, "example", "sg-12345,vpc-67890")
```

Using `terraform import`, import a Security Group VPC Association using the `security_group_id` and `vpc_id` arguments, separated by a comma (`,`). For example:

```console
% terraform import aws_vpc_security_group_vpc_association.example sg-12345,vpc-67890
```

<!-- cache-key: cdktf-0.20.8 input-9768425a48cd05fce3839b5319d5f1ae94d691e2a4fccedf70ffb4e2c77f03c2 -->