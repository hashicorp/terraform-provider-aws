---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_package"
description: |-
  Terraform resource for managing an AWS OpenSearch package.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_package

Manages an AWS Opensearch Package.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.opensearch_package import OpensearchPackage
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_object import S3Object
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        my_opensearch_packages = S3Bucket(self, "my_opensearch_packages",
            bucket="my-opensearch-packages"
        )
        example = S3Object(self, "example",
            bucket=my_opensearch_packages.bucket,
            etag=Token.as_string(Fn.filemd5("./example.txt")),
            key="example.txt",
            source="./example.txt"
        )
        aws_opensearch_package_example = OpensearchPackage(self, "example_2",
            package_name="example-txt",
            package_source=OpensearchPackagePackageSource(
                s3_bucket_name=my_opensearch_packages.bucket,
                s3_key=example.key
            ),
            package_type="TXT-DICTIONARY"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_opensearch_package_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `package_name` - (Required, Forces new resource) Unique name for the package.
* `package_type` - (Required, Forces new resource) The type of package.
* `package_source` - (Required, Forces new resource) Configuration block for the package source options.
* `package_description` - (Optional, Forces new resource) Description of the package.

### package_source

* `s3_bucket_name` - (Required, Forces new resource) The name of the Amazon S3 bucket containing the package.
* `s3_key` - (Required, Forces new resource) Key (file name) of the package.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Id of the package.
* `available_package_version` - The current version of the package.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS Opensearch Packages using the Package ID. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.opensearch_package import OpensearchPackage
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        OpensearchPackage.generate_config_for_import(self, "example", "package-id")
```

Using `terraform import`, import AWS Opensearch Packages using the Package ID. For example:

```console
% terraform import aws_opensearch_package.example package-id
```

<!-- cache-key: cdktf-0.20.8 input-2ab49a0830ef6a746b9a1be0c59b35031692a911e2d8fee6ae0c1e34af4efbe8 -->