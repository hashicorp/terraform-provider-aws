---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_application_assignment"
description: |-
  Terraform resource for managing an AWS SSO Admin Application Assignment.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_application_assignment

Terraform resource for managing an AWS SSO Admin Application Assignment.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_application_assignment import SsoadminApplicationAssignment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminApplicationAssignment(self, "example",
            application_arn=Token.as_string(aws_ssoadmin_application_example.application_arn),
            principal_id=Token.as_string(aws_identitystore_user_example.user_id),
            principal_type="USER"
        )
```

### Group Type

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_application_assignment import SsoadminApplicationAssignment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminApplicationAssignment(self, "example",
            application_arn=Token.as_string(aws_ssoadmin_application_example.application_arn),
            principal_id=Token.as_string(aws_identitystore_group_example.group_id),
            principal_type="GROUP"
        )
```

## Argument Reference

The following arguments are required:

* `application_arn` - (Required) ARN of the application.
* `principal_id` - (Required) An identifier for an object in IAM Identity Center, such as a user or group.
* `principal_type` - (Required) Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - A comma-delimited string concatenating `application_arn`, `principal_id`, and `principal_type`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Admin Application Assignment using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_application_assignment import SsoadminApplicationAssignment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminApplicationAssignment.generate_config_for_import(self, "example", "arn:aws:sso::123456789012:application/id-12345678,abcd1234,USER")
```

Using `terraform import`, import SSO Admin Application Assignment using the `id`. For example:

```console
% terraform import aws_ssoadmin_application_assignment.example arn:aws:sso::123456789012:application/id-12345678,abcd1234,USER
```

<!-- cache-key: cdktf-0.20.8 input-2cb68a00655e293796d48311cd7c102cf57ad40e92a3e87eacbe769a8cc758b1 -->