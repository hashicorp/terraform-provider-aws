---
subcategory: "Lake Formation"
layout: "aws"
page_title: "AWS: aws_lakeformation_data_cells_filter"
description: |-
  Terraform resource for managing an AWS Lake Formation Data Cells Filter.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lakeformation_data_cells_filter

Terraform resource for managing an AWS Lake Formation Data Cells Filter.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lakeformation_data_cells_filter import LakeformationDataCellsFilter
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LakeformationDataCellsFilter(self, "example",
            table_data=[LakeformationDataCellsFilterTableData(
                column_names=["my_column"],
                database_name=test.name,
                name="example",
                row_filter=[LakeformationDataCellsFilterTableDataRowFilter(
                    filter_expression="my_column='example'"
                )
                ],
                table_catalog_id=Token.as_string(current.account_id),
                table_name=Token.as_string(aws_glue_catalog_table_test.name)
            )
            ]
        )
```

## Argument Reference

The following arguments are required:

* `table_data` - (Required) Information about the data cells filter. See [Table Data](#table-data) below for details.

### Table Data

* `database_name` - (Required) The name of the database.
* `name` - (Required) The name of the data cells filter.
* `table_catalog_id` - (Required) The ID of the Data Catalog.
* `table_name` - (Required) The name of the table.
* `column_names` - (Optional) A list of column names and/or nested column attributes.
* `column_wildcard` - (Optional) A wildcard with exclusions. See [Column Wildcard](#column-wildcard) below for details.
* `row_filter` - (Optional) A PartiQL predicate. See [Row Filter](#row-filter) below for details.
* `version_id` - (Optional) ID of the data cells filter version.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Provider composed identifier: `database_name,name,table_catalog_id,table_name`.

#### Column Wildcard

* `excluded_column_names` - (Optional) Excludes column names. Any column with this name will be excluded.

#### Row Filter

* `all_rows_wildcard` - (Optional) A wildcard that matches all rows.
* `filter_expression` - (Optional) A filter expression.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `2m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lake Formation Data Cells Filter using the `example_id_arg`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lakeformation_data_cells_filter import LakeformationDataCellsFilter
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LakeformationDataCellsFilter.generate_config_for_import(self, "example", "database_name,name,table_catalog_id,table_name")
```

Using `terraform import`, import Lake Formation Data Cells Filter using the `id`. For example:

```console
% terraform import aws_lakeformation_data_cells_filter.example database_name,name,table_catalog_id,table_name
```

<!-- cache-key: cdktf-0.20.1 input-90a60f5519ebcb7059d4d20667167c76c44a101f6078b3622f7b7f6e54918452 -->