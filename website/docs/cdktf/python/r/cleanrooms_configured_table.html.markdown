---
subcategory: "Clean Rooms"
layout: "aws"
page_title: "AWS: aws_cleanrooms_configured_table"
description: |-
  Provides a Clean Rooms Configured Table.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cleanrooms_configured_table

Provides a AWS Clean Rooms configured table. Configured tables are used to represent references to existing tables in the AWS Glue Data Catalog.

## Example Usage

### Configured table with tags

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cleanrooms_configured_table import CleanroomsConfiguredTable
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CleanroomsConfiguredTable(self, "test_configured_table",
            allowed_columns=["column1", "column2", "column3"],
            analysis_method="DIRECT_QUERY",
            description="I made this table with terraform!",
            name="terraform-example-table",
            table_reference=CleanroomsConfiguredTableTableReference(
                database_name="example_database",
                table_name="example_table"
            ),
            tags={
                "Project": "Terraform"
            }
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) - The name of the configured table.
* `description` - (Optional) - A description for the configured table.
* `analysis_method` - (Required) - The analysis method for the configured table. The only valid value is currently `DIRECT_QUERY`.
* `allowed_columns` - (Required - Forces new resource) - The columns of the references table which will be included in the configured table.
* `table_reference` - (Required - Forces new resource) - A reference to the AWS Glue table which will be used to create the configured table.
* `table_reference.database_name` - (Required - Forces new resource) - The name of the AWS Glue database which contains the table.
* `table_reference.table_name` - (Required - Forces new resource) - The name of the AWS Glue table which will be used to create the configured table.
* `tags` - (Optional) - Key value pairs which tag the configured table.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the configured table.
* `id` - The ID of the configured table.
* `create_time` - The date and time the configured table was created.
* `update_time` - The date and time the configured table was last updated.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `1m`)
- `update` - (Default `1m`)
- `delete` - (Default `1m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_cleanrooms_configured_table` using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cleanrooms_configured_table import CleanroomsConfiguredTable
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CleanroomsConfiguredTable.generate_config_for_import(self, "table", "1234abcd-12ab-34cd-56ef-1234567890ab")
```

Using `terraform import`, import `aws_cleanrooms_configured_table` using the `id`. For example:

```console
% terraform import aws_cleanrooms_configured_table.table 1234abcd-12ab-34cd-56ef-1234567890ab
```

<!-- cache-key: cdktf-0.20.8 input-453a78d0a031324d090ad2bc765ccc4d2f1ec41c65c0d162ac12a0a01d1fb07d -->