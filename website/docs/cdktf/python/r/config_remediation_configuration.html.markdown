---
subcategory: "Config"
layout: "aws"
page_title: "AWS: aws_config_remediation_configuration"
description: |-
  Provides an AWS Config Remediation Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_config_remediation_configuration

Provides an AWS Config Remediation Configuration.

~> **Note:** Config Remediation Configuration requires an existing [Config Rule](/docs/providers/aws/r/config_config_rule.html) to be present.

## Example Usage

AWS managed rules can be used by setting the source owner to `AWS` and the source identifier to the name of the managed rule. More information about AWS managed rules can be found in the [AWS Config Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html).

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.config_config_rule import ConfigConfigRule
from imports.aws.config_remediation_configuration import ConfigRemediationConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        this_var = ConfigConfigRule(self, "this",
            name="example",
            source=ConfigConfigRuleSource(
                owner="AWS",
                source_identifier="S3_BUCKET_VERSIONING_ENABLED"
            )
        )
        aws_config_remediation_configuration_this =
        ConfigRemediationConfiguration(self, "this_1",
            automatic=True,
            config_rule_name=this_var.name,
            execution_controls=ConfigRemediationConfigurationExecutionControls(
                ssm_controls=ConfigRemediationConfigurationExecutionControlsSsmControls(
                    concurrent_execution_rate_percentage=25,
                    error_percentage=20
                )
            ),
            maximum_automatic_attempts=10,
            parameter=[ConfigRemediationConfigurationParameter(
                name="AutomationAssumeRole",
                static_value="arn:aws:iam::875924563244:role/security_config"
            ), ConfigRemediationConfigurationParameter(
                name="BucketName",
                resource_value="RESOURCE_ID"
            ), ConfigRemediationConfigurationParameter(
                name="SSEAlgorithm",
                static_value="AES256"
            )
            ],
            resource_type="AWS::S3::Bucket",
            retry_attempt_seconds=600,
            target_id="AWS-EnableS3BucketEncryption",
            target_type="SSM_DOCUMENT",
            target_version="1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_config_remediation_configuration_this.override_logical_id("this")
```

## Argument Reference

The following arguments are required:

* `config_rule_name` - (Required) Name of the AWS Config rule.
* `target_id` - (Required) Target ID is the name of the public document.
* `target_type` - (Required) Type of the target. Target executes remediation. For example, SSM document.

The following arguments are optional:

* `automatic` - (Optional) Remediation is triggered automatically if `true`.
* `execution_controls` - (Optional) Configuration block for execution controls. See below.
* `maximum_automatic_attempts` - (Optional) Maximum number of failed attempts for auto-remediation. If you do not select a number, the default is 5.
* `parameter` - (Optional) Can be specified multiple times for each parameter. Each parameter block supports arguments below.
* `resource_type` - (Optional) Type of resource.
* `retry_attempt_seconds` - (Optional) Maximum time in seconds that AWS Config runs auto-remediation. If you do not select a number, the default is 60 seconds.
* `target_version` - (Optional) Version of the target. For example, version of the SSM document

### `execution_controls`

* `ssm_controls` - (Required) Configuration block for SSM controls. See below.

#### `ssm_controls`

One or both of these values are required.

* `concurrent_execution_rate_percentage` - (Optional) Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
* `error_percentage` - (Optional) Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.

### `parameter`

The value is either a dynamic (resource) value or a static value. You must select either a dynamic value or a static value.

* `name` - (Required) Name of the attribute.
* `resource_value` - (Optional) Value is dynamic and changes at run-time.
* `static_value` - (Optional) Value is static and does not change at run-time.
* `static_values` - (Optional) List of static values.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Config Remediation Configuration.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Remediation Configurations using the name config_rule_name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.config_remediation_configuration import ConfigRemediationConfiguration
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ConfigRemediationConfiguration.generate_config_for_import(self, "this", "example")
```

Using `terraform import`, import Remediation Configurations using the name config_rule_name. For example:

```console
% terraform import aws_config_remediation_configuration.this example
```

<!-- cache-key: cdktf-0.20.8 input-e4422e32c7a9b0e1b751fde0505405c8311a46abe23651a75ba503285c3a58bd -->