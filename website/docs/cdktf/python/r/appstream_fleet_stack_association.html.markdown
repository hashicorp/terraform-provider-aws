---
subcategory: "AppStream 2.0"
layout: "aws"
page_title: "AWS: aws_appstream_fleet_stack_association"
description: |-
  Manages an AppStream Fleet Stack association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appstream_fleet_stack_association

Manages an AppStream Fleet Stack association.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appstream_fleet import AppstreamFleet
from imports.aws.appstream_fleet_stack_association import AppstreamFleetStackAssociation
from imports.aws.appstream_stack import AppstreamStack
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = AppstreamFleet(self, "example",
            compute_capacity=AppstreamFleetComputeCapacity(
                desired_instances=1
            ),
            image_name="Amazon-AppStream2-Sample-Image-03-11-2023",
            instance_type="stream.standard.small",
            name="NAME"
        )
        aws_appstream_stack_example = AppstreamStack(self, "example_1",
            name="STACK NAME"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appstream_stack_example.override_logical_id("example")
        aws_appstream_fleet_stack_association_example =
        AppstreamFleetStackAssociation(self, "example_2",
            fleet_name=example.name,
            stack_name=Token.as_string(aws_appstream_stack_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_appstream_fleet_stack_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `fleet_name` - (Required) Name of the fleet.
* `stack_name` (Required) Name of the stack.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique ID of the appstream stack fleet association, composed of the `fleet_name` and `stack_name` separated by a slash (`/`).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppStream Stack Fleet Association using the `fleet_name` and `stack_name` separated by a slash (`/`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.appstream_fleet_stack_association import AppstreamFleetStackAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        AppstreamFleetStackAssociation.generate_config_for_import(self, "example", "fleetName/stackName")
```

Using `terraform import`, import AppStream Stack Fleet Association using the `fleet_name` and `stack_name` separated by a slash (`/`). For example:

```console
% terraform import aws_appstream_fleet_stack_association.example fleetName/stackName
```

<!-- cache-key: cdktf-0.20.8 input-d02e772e58ab8d188d62ad200741c9e10f12ac34ac4daa8c08f2dbd2bfc87b0a -->