---
subcategory: "Kendra"
layout: "aws"
page_title: "AWS: aws_kendra_thesaurus"
description: |-
  Terraform resource for managing an AWS Kendra Thesaurus.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_kendra_thesaurus

Terraform resource for managing an AWS Kendra Thesaurus.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.kendra_thesaurus import KendraThesaurus
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        KendraThesaurus(self, "example",
            index_id=Token.as_string(aws_kendra_index_example.id),
            name="Example",
            role_arn=Token.as_string(aws_iam_role_example.arn),
            source_s3_path=KendraThesaurusSourceS3Path(
                bucket=Token.as_string(aws_s3_bucket_example.id),
                key=Token.as_string(aws_s3_object_example.key)
            ),
            tags={
                "Name": "Example Kendra Thesaurus"
            }
        )
```

## Argument Reference

The following arguments are required:

* `index_id`- (Required, Forces new resource) The identifier of the index for a thesaurus.
* `name` - (Required) The name for the thesaurus.
* `role_arn` - (Required) The IAM (Identity and Access Management) role used to access the thesaurus file in S3.
* `source_s3_path` - (Required) The S3 path where your thesaurus file sits in S3. Detailed below.

The `source_s3_path` configuration block supports the following arguments:

* `bucket` - (Required) The name of the S3 bucket that contains the file.
* `key` - (Required) The name of the file.

The following arguments are optional:

* `description` - (Optional) The description for a thesaurus.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the thesaurus.
* `id` - The unique identifiers of the thesaurus and index separated by a slash (`/`).
* `status` - The current status of the thesaurus.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_kendra_thesaurus` using the unique identifiers of the thesaurus and index separated by a slash (`/`). For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.kendra_thesaurus import KendraThesaurus
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        KendraThesaurus.generate_config_for_import(self, "example", "thesaurus-123456780/idx-8012925589")
```

Using `terraform import`, import `aws_kendra_thesaurus` using the unique identifiers of the thesaurus and index separated by a slash (`/`). For example:

```console
% terraform import aws_kendra_thesaurus.example thesaurus-123456780/idx-8012925589
```

<!-- cache-key: cdktf-0.20.8 input-c0dadf9d404f36bcb0eb8e47f42f731ded578d3015ecba91c35c34dacf029082 -->