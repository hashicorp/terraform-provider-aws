---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_user_ssh_key"
description: |-
  Uploads an SSH public key and associates it with the specified IAM user.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iam_user_ssh_key

Uploads an SSH public key and associates it with the specified IAM user.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iam_user import IamUser
from imports.aws.iam_user_ssh_key import IamUserSshKey
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        user = IamUser(self, "user",
            name="test-user",
            path="/"
        )
        aws_iam_user_ssh_key_user = IamUserSshKey(self, "user_1",
            encoding="SSH",
            public_key="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 mytest@mydomain.com",
            username=user.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_iam_user_ssh_key_user.override_logical_id("user")
```

## Argument Reference

This resource supports the following arguments:

* `username` - (Required) The name of the IAM user to associate the SSH public key with.
* `encoding` - (Required) Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.
* `public_key` - (Required) The SSH public key. The public key must be encoded in ssh-rsa format or PEM format.
* `status` - (Optional) The status to assign to the SSH public key. Active means the key can be used for authentication with an AWS CodeCommit repository. Inactive means the key cannot be used. Default is `active`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `ssh_public_key_id` - The unique identifier for the SSH public key.
* `fingerprint` - The MD5 message digest of the SSH public key.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSH public keys using the `username`, `ssh_public_key_id`, and `encoding`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iam_user_ssh_key import IamUserSshKey
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IamUserSshKey.generate_config_for_import(self, "user", "user:APKAJNCNNJICVN7CFKCA:SSH")
```

Using `terraform import`, import SSH public keys using the `username`, `ssh_public_key_id`, and `encoding`. For example:

```console
% terraform import aws_iam_user_ssh_key.user user:APKAJNCNNJICVN7CFKCA:SSH
```

<!-- cache-key: cdktf-0.20.8 input-4cbd112ce4d145630ce699ef62acae06fbe7da8a55f9e6ceccda5f739cb8e1fe -->