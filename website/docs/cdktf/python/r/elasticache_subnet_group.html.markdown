---
subcategory: "ElastiCache"
layout: "aws"
page_title: "AWS: aws_elasticache_subnet_group"
description: |-
  Provides an ElastiCache Subnet Group resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_elasticache_subnet_group

Provides an ElastiCache Subnet Group resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.elasticache_subnet_group import ElasticacheSubnetGroup
from imports.aws.subnet import Subnet
from imports.aws.vpc import Vpc
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        foo = Vpc(self, "foo",
            cidr_block="10.0.0.0/16",
            tags={
                "Name": "tf-test"
            }
        )
        aws_subnet_foo = Subnet(self, "foo_1",
            availability_zone="us-west-2a",
            cidr_block="10.0.0.0/24",
            tags={
                "Name": "tf-test"
            },
            vpc_id=foo.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_subnet_foo.override_logical_id("foo")
        ElasticacheSubnetGroup(self, "bar",
            name="tf-test-cache-subnet",
            subnet_ids=[Token.as_string(aws_subnet_foo.id)]
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` – (Required) Name for the cache subnet group. ElastiCache converts this name to lowercase.
* `description` – (Optional) Description for the cache subnet group. Defaults to "Managed by Terraform".
* `subnet_ids` – (Required) List of VPC Subnet IDs for the cache subnet group
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpc_id` - The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ElastiCache Subnet Groups using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.elasticache_subnet_group import ElasticacheSubnetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ElasticacheSubnetGroup.generate_config_for_import(self, "bar", "tf-test-cache-subnet")
```

Using `terraform import`, import ElastiCache Subnet Groups using the `name`. For example:

```console
% terraform import aws_elasticache_subnet_group.bar tf-test-cache-subnet
```

<!-- cache-key: cdktf-0.20.8 input-ee752771376a04c8e2e6013e24fd99a2238163ed656cac17fe58b010c87938ca -->