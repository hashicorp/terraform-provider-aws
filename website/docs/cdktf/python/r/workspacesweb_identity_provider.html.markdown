---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_identity_provider"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Identity Provider.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_identity_provider

Terraform resource for managing an AWS WorkSpaces Web Identity Provider.

## Example Usage

### Basic Usage with SAML

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.workspacesweb_identity_provider import WorkspaceswebIdentityProvider
from imports.aws.workspacesweb_portal import WorkspaceswebPortal
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = WorkspaceswebPortal(self, "example",
            display_name="example"
        )
        aws_workspacesweb_identity_provider_example =
        WorkspaceswebIdentityProvider(self, "example_1",
            identity_provider_details={
                "MetadataURL": "https://example.com/metadata"
            },
            identity_provider_name="example-saml",
            identity_provider_type="SAML",
            portal_arn=example.portal_arn
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_workspacesweb_identity_provider_example.override_logical_id("example")
```

### OIDC Identity Provider

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.workspacesweb_identity_provider import WorkspaceswebIdentityProvider
from imports.aws.workspacesweb_portal import WorkspaceswebPortal
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = WorkspaceswebPortal(self, "test",
            display_name="test"
        )
        aws_workspacesweb_identity_provider_test =
        WorkspaceswebIdentityProvider(self, "test_1",
            identity_provider_details={
                "attributes_request_method": "POST",
                "authorize_scopes": "openid, email",
                "client_id": "test-client-id",
                "client_secret": "test-client-secret",
                "oidc_issuer": "https://accounts.google.com"
            },
            identity_provider_name="test-updated",
            identity_provider_type="OIDC",
            portal_arn=test.portal_arn
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_workspacesweb_identity_provider_test.override_logical_id("test")
```

## Argument Reference

The following arguments are required:

* `identity_provider_details` - (Required) Identity provider details. The following list describes the provider detail keys for each identity provider type:
    * For Google and Login with Amazon:
        * `client_id`
        * `client_secret`
        * `authorize_scopes`
    * For Facebook:
        * `client_id`
        * `client_secret`
        * `authorize_scopes`
        * `api_version`
    * For Sign in with Apple:
        * `client_id`
        * `team_id`
        * `key_id`
        * `private_key`
        * `authorize_scopes`
    * For OIDC providers:
        * `client_id`
        * `client_secret`
        * `attributes_request_method`
        * `oidc_issuer`
        * `authorize_scopes`
        * `authorize_url` if not available from discovery URL specified by `oidc_issuer` key
        * `token_url` if not available from discovery URL specified by `oidc_issuer` key
        * `attributes_url` if not available from discovery URL specified by `oidc_issuer` key
        * `jwks_uri` if not available from discovery URL specified by `oidc_issuer` key
    * For SAML providers:
        * `MetadataFile` OR `MetadataURL`
        * `IDPSignout` (boolean) optional
        * `IDPInit` (boolean) optional
        * `RequestSigningAlgorithm` (string) optional - Only accepts rsa-sha256
        * `EncryptedResponses` (boolean) optional
* `identity_provider_name` - (Required) Identity provider name.
* `identity_provider_type` - (Required) Identity provider type. Valid values: `SAML`, `Facebook`, `Google`, `LoginWithAmazon`, `SignInWithApple`, `OIDC`.
* `portal_arn` - (Required) ARN of the web portal. Forces replacement if changed.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `identity_provider_arn` - ARN of the identity provider.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Identity Provider using the `identity_provider_arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.workspacesweb_identity_provider import WorkspaceswebIdentityProvider
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        WorkspaceswebIdentityProvider.generate_config_for_import(self, "example", "arn:aws:workspaces-web:us-west-2:123456789012:identityprovider/abcdef12345678/12345678-1234-1234-1234-123456789012")
```

Using `terraform import`, import WorkSpaces Web Identity Provider using the `identity_provider_arn`. For example:

```console
% terraform import aws_workspacesweb_identity_provider.example arn:aws:workspaces-web:us-west-2:123456789012:identityprovider/abcdef12345678/12345678-1234-1234-1234-123456789012
```

<!-- cache-key: cdktf-0.20.8 input-70dc4260e3c340240c6649b1edb7f7569176a2447db5c271ba7ea1fb5f9ac0c3 -->