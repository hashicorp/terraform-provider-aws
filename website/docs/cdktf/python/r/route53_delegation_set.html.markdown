---
subcategory: "Route 53"
layout: "aws"
page_title: "AWS: aws_route53_delegation_set"
description: |-
  Provides a Route53 Delegation Set resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53_delegation_set

Provides a [Route53 Delegation Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API-actions-by-function.html#actions-by-function-reusable-delegation-sets) resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_delegation_set import Route53DelegationSet
from imports.aws.route53_zone import Route53Zone
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        main = Route53DelegationSet(self, "main",
            reference_name="DynDNS"
        )
        Route53Zone(self, "primary",
            delegation_set_id=main.id,
            name="hashicorp.com"
        )
        Route53Zone(self, "secondary",
            delegation_set_id=main.id,
            name="terraform.io"
        )
```

## Argument Reference

This resource supports the following arguments:

* `reference_name` - (Optional) This is a reference name used in Caller Reference
  (helpful for identifying single delegation set amongst others)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of the Delegation Set.
* `id` - The delegation set ID
* `name_servers` - A list of authoritative name servers for the hosted zone
  (effectively a list of NS records).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Route53 Delegation Sets using the delegation set `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_delegation_set import Route53DelegationSet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53DelegationSet.generate_config_for_import(self, "set1", "N1PA6795SAMPLE")
```

Using `terraform import`, import Route53 Delegation Sets using the delegation set `id`. For example:

```console
% terraform import aws_route53_delegation_set.set1 N1PA6795SAMPLE
```

<!-- cache-key: cdktf-0.20.8 input-b6d9fea678079df840cfe605eac21d9ef068f83b613ae7a6bc209863fccfe750 -->