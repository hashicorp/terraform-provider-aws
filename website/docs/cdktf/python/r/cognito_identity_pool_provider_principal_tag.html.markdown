---
subcategory: "Cognito Identity"
layout: "aws"
page_title: "AWS: aws_cognito_identity_pool_provider_principal_tag"
description: |-
  Provides an AWS Cognito Identity Principal Mapping.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_identity_pool_provider_principal_tag

Provides an AWS Cognito Identity Principal Mapping.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_identity_pool import CognitoIdentityPool
from imports.aws.cognito_identity_pool_provider_principal_tag import CognitoIdentityPoolProviderPrincipalTag
from imports.aws.cognito_user_pool import CognitoUserPool
from imports.aws.cognito_user_pool_client import CognitoUserPoolClient
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CognitoUserPool(self, "example",
            auto_verified_attributes=["email"],
            name="user pool"
        )
        aws_cognito_user_pool_client_example = CognitoUserPoolClient(self, "example_1",
            name="client",
            supported_identity_providers=Token.as_list(
                Fn.compact(Token.as_list(["COGNITO"]))),
            user_pool_id=example.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_user_pool_client_example.override_logical_id("example")
        aws_cognito_identity_pool_example = CognitoIdentityPool(self, "example_2",
            allow_unauthenticated_identities=False,
            cognito_identity_providers=[CognitoIdentityPoolCognitoIdentityProviders(
                client_id=Token.as_string(aws_cognito_user_pool_client_example.id),
                provider_name=example.endpoint,
                server_side_token_check=False
            )
            ],
            identity_pool_name="identity pool"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_identity_pool_example.override_logical_id("example")
        aws_cognito_identity_pool_provider_principal_tag_example =
        CognitoIdentityPoolProviderPrincipalTag(self, "example_3",
            identity_pool_id=Token.as_string(aws_cognito_identity_pool_example.id),
            identity_provider_name=example.endpoint,
            principal_tags={
                "test": "value"
            },
            use_defaults=False
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cognito_identity_pool_provider_principal_tag_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `identity_pool_id` (Required) - An identity pool ID.
* `identity_provider_name` (Required) - The name of the identity provider.
* `principal_tags`: (Optional: []) - String to string map of variables.
* `use_defaults`: (Optional: true) use default (username and clientID) attribute mappings.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cognito Identity Pool Roles Attachment using the Identity Pool ID and provider name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cognito_identity_pool_provider_principal_tag import CognitoIdentityPoolProviderPrincipalTag
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CognitoIdentityPoolProviderPrincipalTag.generate_config_for_import(self, "example", "us-west-2_abc123:CorpAD")
```

Using `terraform import`, import Cognito Identity Pool Roles Attachment using the Identity Pool ID and provider name. For example:

```console
% terraform import aws_cognito_identity_pool_provider_principal_tag.example us-west-2_abc123:CorpAD
```

<!-- cache-key: cdktf-0.20.8 input-d4f777a31b91b31ab50e67859396a09149b958fe813bebf15e96c5dcc295d8be -->