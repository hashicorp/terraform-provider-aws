---
subcategory: "SQS (Simple Queue)"
layout: "aws"
page_title: "AWS: aws_sqs_queue_policy"
description: |-
  Provides a SQS Queue Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sqs_queue_policy

Allows you to set a policy of an SQS Queue while referencing the ARN of the queue within the policy.

!> AWS will hang indefinitely when creating or updating an [`aws_sqs_queue`](/docs/providers/aws/r/sqs_queue.html) with an associated policy if `Version = "2012-10-17"` is not explicitly set in the policy. [See below](#timeout-problems-creatingupdating) for an example of how to avoid this issue.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.sqs_queue import SqsQueue
from imports.aws.sqs_queue_policy import SqsQueuePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        q = SqsQueue(self, "q",
            name="examplequeue"
        )
        test = DataAwsIamPolicyDocument(self, "test",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sqs:SendMessage"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="ArnEquals",
                    values=[example.arn],
                    variable="aws:SourceArn"
                )
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="*"
                )
                ],
                resources=[q.arn],
                sid="First"
            )
            ]
        )
        aws_sqs_queue_policy_test = SqsQueuePolicy(self, "test_2",
            policy=Token.as_string(test.json),
            queue_url=q.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sqs_queue_policy_test.override_logical_id("test")
```

### Timeout Problems Creating/Updating

If `Version = "2012-10-17"` is not explicitly set in the policy, AWS may hang, causing the AWS provider to time out. To avoid this, make sure to include `Version` as shown in the example below.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.s3_bucket import S3Bucket
from imports.aws.sqs_queue import SqsQueue
from imports.aws.sqs_queue_policy import SqsQueuePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket="brodobaggins"
        )
        aws_sqs_queue_example = SqsQueue(self, "example_1",
            name="be-giant"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sqs_queue_example.override_logical_id("example")
        aws_sqs_queue_policy_example = SqsQueuePolicy(self, "example_2",
            policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": "SQS:SendMessage",
                        "Condition": {
                            "ArnLike": {
                                "aws:_source_arn": example.arn
                            }
                        },
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "s3.amazonaws.com"
                        },
                        "Resource": aws_sqs_queue_example.arn,
                        "Sid": "Cejuwdam"
                    }
                    ],
                    "Version": "2012-10-17"
                })),
            queue_url=Token.as_string(aws_sqs_queue_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sqs_queue_policy_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `policy` - (Required) JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy). Ensure that `Version = "2012-10-17"` is set in the policy or AWS may hang in creating the queue.
* `queue_url` - (Required) URL of the SQS Queue to which to attach the policy.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SQS Queue Policies using the queue URL. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sqs_queue_policy import SqsQueuePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SqsQueuePolicy.generate_config_for_import(self, "test", "https://queue.amazonaws.com/123456789012/myqueue")
```

Using `terraform import`, import SQS Queue Policies using the queue URL. For example:

```console
% terraform import aws_sqs_queue_policy.test https://queue.amazonaws.com/123456789012/myqueue
```

<!-- cache-key: cdktf-0.20.8 input-5555f36627fbd1f1a3309a2c61f2ac45b3b761e494b6220f2cc708242288f543 -->