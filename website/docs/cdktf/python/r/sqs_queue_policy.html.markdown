---
subcategory: "SQS (Simple Queue)"
layout: "aws"
page_title: "AWS: aws_sqs_queue_policy"
description: |-
  Provides a SQS Queue Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sqs_queue_policy

Allows you to set a policy of an SQS Queue
while referencing ARN of the queue within the policy.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.sqs_queue import SqsQueue
from imports.aws.sqs_queue_policy import SqsQueuePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        q = SqsQueue(self, "q",
            name="examplequeue"
        )
        test = DataAwsIamPolicyDocument(self, "test",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["sqs:SendMessage"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="ArnEquals",
                    values=[example.arn],
                    variable="aws:SourceArn"
                )
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="*"
                )
                ],
                resources=[q.arn],
                sid="First"
            )
            ]
        )
        aws_sqs_queue_policy_test = SqsQueuePolicy(self, "test_2",
            policy=Token.as_string(test.json),
            queue_url=q.id
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sqs_queue_policy_test.override_logical_id("test")
```

## Argument Reference

This resource supports the following arguments:

* `queue_url` - (Required) The URL of the SQS Queue to which to attach the policy
* `policy` - (Required) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SQS Queue Policies using the queue URL. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sqs_queue_policy import SqsQueuePolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SqsQueuePolicy.generate_config_for_import(self, "test", "https://queue.amazonaws.com/123456789012/myqueue")
```

Using `terraform import`, import SQS Queue Policies using the queue URL. For example:

```console
% terraform import aws_sqs_queue_policy.test https://queue.amazonaws.com/123456789012/myqueue
```

<!-- cache-key: cdktf-0.20.8 input-37a0ecb36fc345df15437efc56151929ade4e151277015316ad5a75760fbd4a4 -->