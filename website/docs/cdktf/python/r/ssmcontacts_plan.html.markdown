---
subcategory: "SSM Contacts"
layout: "aws"
page_title: "AWS: aws_ssmcontacts_plan"
description: |-
  Terraform resource for managing an AWS SSM Contact Plan.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssmcontacts_plan

Terraform resource for managing an AWS SSM Contact Plan.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssmcontacts_plan import SsmcontactsPlan
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsmcontactsPlan(self, "example",
            contact_id="arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
            stage=[SsmcontactsPlanStage(
                duration_in_minutes=1
            )
            ]
        )
```

### Usage with SSM Contact

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssmcontacts_contact import SsmcontactsContact
from imports.aws.ssmcontacts_plan import SsmcontactsPlan
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        contact = SsmcontactsContact(self, "contact",
            alias="alias",
            type="PERSONAL"
        )
        SsmcontactsPlan(self, "plan",
            contact_id=contact.arn,
            stage=[SsmcontactsPlanStage(
                duration_in_minutes=1
            )
            ]
        )
```

### Usage With All Fields

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssmcontacts_contact import SsmcontactsContact
from imports.aws.ssmcontacts_plan import SsmcontactsPlan
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        contact_one = SsmcontactsContact(self, "contact_one",
            alias="alias",
            type="PERSONAL"
        )
        contact_two = SsmcontactsContact(self, "contact_two",
            alias="alias",
            type="PERSONAL"
        )
        escalation_plan = SsmcontactsContact(self, "escalation_plan",
            alias="escalation-plan-alias",
            type="ESCALATION"
        )
        SsmcontactsPlan(self, "test",
            contact_id=escalation_plan.arn,
            stage=[SsmcontactsPlanStage(
                duration_in_minutes=0,
                target=[SsmcontactsPlanStageTarget(
                    contact_target_info=SsmcontactsPlanStageTargetContactTargetInfo(
                        contact_id=contact_one.arn,
                        is_essential=False
                    )
                ), SsmcontactsPlanStageTarget(
                    contact_target_info=SsmcontactsPlanStageTargetContactTargetInfo(
                        contact_id=contact_two.arn,
                        is_essential=True
                    )
                ), SsmcontactsPlanStageTarget(
                    channel_target_info=SsmcontactsPlanStageTargetChannelTargetInfo(
                        contact_channel_id=channel.arn,
                        retry_interval_in_minutes=2
                    )
                )
                ]
            )
            ]
        )
```

## Argument Reference

The following arguments are required:

- `contact_id` - (Required) The Amazon Resource Name (ARN) of the contact or escalation plan.
- `stage` - (Required) One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See [Stage](#stage) below for more details.

### Stage

A stage specifies a set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.

The `stage` block supports the following:

- `duration_in_minutes` - (Required) The time to wait until beginning the next stage. The duration can only be set to 0 if a target is specified.
- `target` - (Required) One or more configuration blocks for specifying the contacts or contact methods that the escalation plan or engagement plan is engaging. See [Target](#target) below for more details.

### Target

A target specifies the contact or contact channel that's being engaged.

The `target` block supports the following:

- `channel_target_info` - (Optional) A configuration block for specifying information about the contact channel that Incident Manager engages. See [Channel Target Info](#channel-target-info) for more details.
- `contact_target_info` - (Optional) A configuration block for specifying information about the contact that Incident Manager engages. See [Contact Target Info](#contact-target-info) for more details.

### Channel Target Info

Channel target info specifies information about the contact channel that Incident Manager uses to engage the contact.

The `channel_target_info` block supports the following:

- `contact_channel_id` - (Required) The Amazon Resource Name (ARN) of the contact channel.
- `retry_interval_in_minutes` - (Optional) The number of minutes to wait before retrying to send engagement if the engagement initially failed.

### Contact Target Info

Contact target info specifies the contact that Incident Manager is engaging during an incident.

The `contact_target_info` block supports the following:

- `contact_id` - (Optional) The Amazon Resource Name (ARN) of the contact.
- `is_essential` - (Optional) A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSM Contact Plan using the Contact ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssmcontacts_plan import SsmcontactsPlan
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsmcontactsPlan.generate_config_for_import(self, "example", "{ARNValue}")
```

Using `terraform import`, import SSM Contact Plan using the Contact ARN. For example:

```console
% terraform import aws_ssmcontacts_plan.example {ARNValue}
```

<!-- cache-key: cdktf-0.20.8 input-ebafc47434cea7da059f684803495b00c4efdbcf05a67a147647049af89fafc1 -->