---
subcategory: "DMS (Database Migration)"
layout: "aws"
page_title: "AWS: aws_dms_replication_subnet_group"
description: |-
  Provides a DMS (Data Migration Service) subnet group resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dms_replication_subnet_group

Provides a DMS (Data Migration Service) replication subnet group resource. DMS replication subnet groups can be created, updated, deleted, and imported.

~> **Note:** AWS requires a special IAM role called `dms-vpc-role` when using this resource. See the example below to create it as part of your configuration.

## Example Usage

### Basic

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dms_replication_subnet_group import DmsReplicationSubnetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DmsReplicationSubnetGroup(self, "example",
            replication_subnet_group_description="Example replication subnet group",
            replication_subnet_group_id="example-dms-replication-subnet-group-tf",
            subnet_ids=["subnet-12345678", "subnet-12345679"],
            tags={
                "Name": "example"
            }
        )
```

### Creating special IAM role

If your account does not already include the `dms-vpc-role` IAM role, you will need to create it to allow DMS to manage subnets in the VPC.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dms_replication_subnet_group import DmsReplicationSubnetGroup
from imports.aws.iam_role import IamRole
from imports.aws.iam_role_policy_attachment import IamRolePolicyAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        dms_vpc_role = IamRole(self, "dms-vpc-role",
            assume_role_policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "dms.amazonaws.com"
                        }
                    }
                    ],
                    "Version": "2012-10-17"
                })),
            description="Allows DMS to manage VPC",
            name="dms-vpc-role"
        )
        example = IamRolePolicyAttachment(self, "example",
            policy_arn="arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
            role=dms_vpc_role.name
        )
        aws_dms_replication_subnet_group_example = DmsReplicationSubnetGroup(self, "example_2",
            depends_on=[example],
            replication_subnet_group_description="Example",
            replication_subnet_group_id="example-id",
            subnet_ids=["subnet-12345678", "subnet-12345679"],
            tags={
                "Name": "example-id"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_dms_replication_subnet_group_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `replication_subnet_group_description` - (Required) Description for the subnet group.
* `replication_subnet_group_id` - (Required) Name for the replication subnet group. This value is stored as a lowercase string. It must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens and cannot be `default`.
* `subnet_ids` - (Required) List of at least 2 EC2 subnet IDs for the subnet group. The subnets must cover at least 2 availability zones.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpc_id` - The ID of the VPC the subnet group is in.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `15m`)
- `update` - (Default `15m`)
- `delete` - (Default `15m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import replication subnet groups using the `replication_subnet_group_id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dms_replication_subnet_group import DmsReplicationSubnetGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DmsReplicationSubnetGroup.generate_config_for_import(self, "test", "test-dms-replication-subnet-group-tf")
```

Using `terraform import`, import replication subnet groups using the `replication_subnet_group_id`. For example:

```console
% terraform import aws_dms_replication_subnet_group.test test-dms-replication-subnet-group-tf
```

<!-- cache-key: cdktf-0.20.8 input-fa31dcade703f4d670cd66caa1d006a3088f31feb8196071fd288c511faec143 -->