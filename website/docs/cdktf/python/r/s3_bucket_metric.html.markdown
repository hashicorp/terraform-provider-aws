---
subcategory: "S3 (Simple Storage)"
layout: "aws"
page_title: "AWS: aws_s3_bucket_metric"
description: |-
  Provides a S3 bucket metrics configuration resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3_bucket_metric

Provides a S3 bucket [metrics configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/metrics-configurations.html) resource.

-> This resource cannot be used with S3 directory buckets.

## Example Usage

### Add metrics configuration for entire S3 bucket

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_bucket_metric import S3BucketMetric
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket="example"
        )
        S3BucketMetric(self, "example-entire-bucket",
            bucket=example.id,
            name="EntireBucket"
        )
```

### Add metrics configuration with S3 object filter

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_bucket_metric import S3BucketMetric
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket="example"
        )
        S3BucketMetric(self, "example-filtered",
            bucket=example.id,
            filter=S3BucketMetricFilter(
                prefix="documents/",
                tags={
                    "class": "blue",
                    "priority": "high"
                }
            ),
            name="ImportantBlueDocuments"
        )
```

### Add metrics configuration with S3 object filter for S3 Access Point

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.s3_access_point import S3AccessPoint
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_bucket_metric import S3BucketMetric
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket="example"
        )
        example_access_point = S3AccessPoint(self, "example-access-point",
            bucket=example.id,
            name="example-access-point"
        )
        S3BucketMetric(self, "example-filtered",
            bucket=example.id,
            filter=S3BucketMetricFilter(
                access_point=example_access_point.arn,
                tags={
                    "class": "blue",
                    "priority": "high"
                }
            ),
            name="ImportantBlueDocuments"
        )
```

## Argument Reference

This resource supports the following arguments:

* `bucket` - (Required) Name of the bucket to put metric configuration.
* `name` - (Required) Unique identifier of the metrics configuration for the bucket. Must be less than or equal to 64 characters in length.
* `filter` - (Optional) [Object filtering](http://docs.aws.amazon.com/AmazonS3/latest/dev/metrics-configurations.html#metrics-configurations-filter) that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).

The `filter` metric configuration supports the following:

~> **NOTE:** At least one of `access_point`, `prefix`, or `tags` is required when specifying a `filter`

* `access_point` - (Optional) S3 Access Point ARN for filtering (singular).
* `prefix` - (Optional) Object prefix for filtering (singular).
* `tags` - (Optional) Object tags for filtering (up to 10).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 bucket metric configurations using `bucket:metric`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.s3_bucket_metric import S3BucketMetric
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        S3BucketMetric.generate_config_for_import(self, "myBucketEntireBucket", "my-bucket:EntireBucket")
```

Using `terraform import`, import S3 bucket metric configurations using `bucket:metric`. For example:

```console
% terraform import aws_s3_bucket_metric.my-bucket-entire-bucket my-bucket:EntireBucket
```

<!-- cache-key: cdktf-0.20.8 input-490b1eb1181c3efda1dde28185cec6c51621e51d6133087bfb3f30541f6ac55e -->