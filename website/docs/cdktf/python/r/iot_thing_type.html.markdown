---
subcategory: "IoT Core"
layout: "aws"
page_title: "AWS: aws_iot_thing_type"
description: |-
    Creates and manages an AWS IoT Thing Type.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iot_thing_type

Creates and manages an AWS IoT Thing Type.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iot_thing_type import IotThingType
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IotThingType(self, "foo",
            name="my_iot_thing"
        )
```

## Argument Reference

* `name` - (Required, Forces New Resource) The name of the thing type.
* `deprecated` - (Optional, Defaults to false) Whether the thing type is deprecated. If true, no new things could be associated with this type.
* `properties` - (Optional), Configuration block that can contain the following properties of the thing type:
    * `description` - (Optional, Forces New Resource) The description of the thing type.
    * `searchable_attributes` - (Optional, Forces New Resource) A list of searchable thing attribute names.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the created AWS IoT Thing Type.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IOT Thing Types using the name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.iot_thing_type import IotThingType
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        IotThingType.generate_config_for_import(self, "example", "example")
```

Using `terraform import`, import IOT Thing Types using the name. For example:

```console
% terraform import aws_iot_thing_type.example example
```

<!-- cache-key: cdktf-0.20.8 input-f6bb5e58ad214ec278c62df3ca0c39674a3e3f822552368c4b48cf6dedb96258 -->