---
subcategory: "DMS (Database Migration)"
layout: "aws"
page_title: "AWS: aws_dms_event_subscription"
description: |-
  Provides a DMS (Data Migration Service) event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dms_event_subscription

Provides a DMS (Data Migration Service) event subscription resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dms_event_subscription import DmsEventSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DmsEventSubscription(self, "example",
            enabled=True,
            event_categories=["creation", "failure"],
            name="my-favorite-event-subscription",
            sns_topic_arn=Token.as_string(aws_sns_topic_example.arn),
            source_ids=[
                Token.as_string(aws_dms_replication_task_example.replication_task_id)
            ],
            source_type="replication-task",
            tags={
                "Name": "example"
            }
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name of event subscription.
* `enabled` - (Optional, Default: true) Whether the event subscription should be enabled.
* `event_categories` - (Optional) List of event categories to listen for, see `DescribeEventCategories` for a canonical list.
* `sns_topic_arn` - (Required) SNS topic arn to send events on.
* `source_ids` - (Optional) Ids of sources to listen to. If you don't specify a value, notifications are provided for all sources.
* `source_type` - (Required) Type of source for events. Valid values: `replication-instance` or `replication-task`
* `tags` - (Optional) Map of resource tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the DMS Event Subscription.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `update` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import event subscriptions using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.dms_event_subscription import DmsEventSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DmsEventSubscription.generate_config_for_import(self, "test", "my-awesome-event-subscription")
```

Using `terraform import`, import event subscriptions using the `name`. For example:

```console
% terraform import aws_dms_event_subscription.test my-awesome-event-subscription
```

<!-- cache-key: cdktf-0.20.8 input-2f447ab96c9a08460b4acbd3ba91be11686915ef160434d71e6252904010aa15 -->