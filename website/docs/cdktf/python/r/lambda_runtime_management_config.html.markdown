---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_runtime_management_config"
description: |-
  Manages an AWS Lambda Runtime Management Config.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lambda_runtime_management_config

Manages an AWS Lambda Runtime Management Config. Use this resource to control how Lambda updates the runtime for your function.

Refer to the [AWS Lambda documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) for supported runtimes.

~> **Note:** Deletion of this resource returns the runtime update mode to `Auto` (the default behavior). To leave the configured runtime management options in-place, use a [`removed` block](https://developer.hashicorp.com/terraform/language/resources/syntax#removing-resources) with the destroy lifecycle set to `false`.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_runtime_management_config import LambdaRuntimeManagementConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaRuntimeManagementConfig(self, "example",
            function_name=Token.as_string(aws_lambda_function_example.function_name),
            update_runtime_on="FunctionUpdate"
        )
```

### Manual Update

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_runtime_management_config import LambdaRuntimeManagementConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaRuntimeManagementConfig(self, "example",
            function_name=Token.as_string(aws_lambda_function_example.function_name),
            runtime_version_arn="arn:aws:lambda:us-east-1::runtime:abcd1234",
            update_runtime_on="Manual"
        )
```

~> **Note:** Once the runtime update mode is set to `Manual`, the `aws_lambda_function` `runtime` cannot be updated. To upgrade a runtime, the `update_runtime_on` argument must be set to `Auto` or `FunctionUpdate` prior to changing the function's `runtime` argument.

## Argument Reference

The following arguments are required:

* `function_name` - (Required) Name or ARN of the Lambda function.

The following arguments are optional:

* `qualifier` - (Optional) Version of the function. This can be `$LATEST` or a published version number. If omitted, this resource will manage the runtime configuration for `$LATEST`.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `runtime_version_arn` - (Optional) ARN of the runtime version. Only required when `update_runtime_on` is `Manual`.
* `update_runtime_on` - (Optional) Runtime update mode. Valid values are `Auto`, `FunctionUpdate`, and `Manual`. When a function is created, the default mode is `Auto`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `function_arn` - ARN of the function.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lambda Runtime Management Config using a comma-delimited string combining `function_name` and `qualifier`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lambda_runtime_management_config import LambdaRuntimeManagementConfig
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        LambdaRuntimeManagementConfig.generate_config_for_import(self, "example", "example,$LATEST")
```

Using `terraform import`, import Lambda Runtime Management Config using a comma-delimited string combining `function_name` and `qualifier`. For example:

```console
% terraform import aws_lambda_runtime_management_config.example example,$LATEST
```

<!-- cache-key: cdktf-0.20.8 input-95eb18c299f9dd7f5e39a2a2c31fa5765a24630660b36b50e72d82c0ab10dbad -->