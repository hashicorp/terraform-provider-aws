---
subcategory: "Neptune"
layout: "aws"
page_title: "AWS: aws_neptune_cluster_parameter_group"
description: |-
  Manages a Neptune Cluster Parameter Group
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_neptune_cluster_parameter_group

Manages a Neptune Cluster Parameter Group

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.neptune_cluster_parameter_group import NeptuneClusterParameterGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NeptuneClusterParameterGroup(self, "example",
            description="neptune cluster parameter group",
            family="neptune1",
            name="example",
            parameter=[NeptuneClusterParameterGroupParameter(
                name="neptune_enable_audit_log",
                value=Token.as_string(1)
            )
            ]
        )
```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional, Forces new resource) The name of the neptune cluster parameter group. If omitted, Terraform will assign a random, unique name.
* `name_prefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
* `family` - (Required) The family of the neptune cluster parameter group.
* `description` - (Optional) The description of the neptune cluster parameter group. Defaults to "Managed by Terraform".
* `parameter` - (Optional) A list of neptune parameters to apply.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

Parameter blocks support the following:

* `name` - (Required) The name of the neptune parameter.
* `value` - (Required) The value of the neptune parameter.
* `apply_method` - (Optional) Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The neptune cluster parameter group name.
* `arn` - The ARN of the neptune cluster parameter group.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Neptune Cluster Parameter Groups using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.neptune_cluster_parameter_group import NeptuneClusterParameterGroup
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NeptuneClusterParameterGroup.generate_config_for_import(self, "clusterPg", "production-pg-1")
```

Using `terraform import`, import Neptune Cluster Parameter Groups using the `name`. For example:

```console
% terraform import aws_neptune_cluster_parameter_group.cluster_pg production-pg-1
```

<!-- cache-key: cdktf-0.20.8 input-3c39999f95e5475d491571cada3c79f247de16c4aa849b9cba8ecd969f7df95d -->