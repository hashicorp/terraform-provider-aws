---
subcategory: "CE (Cost Explorer)"
layout: "aws"
page_title: "AWS: aws_ce_anomaly_monitor"
description: |-
  Provides a CE Cost Anomaly Monitor
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ce_anomaly_monitor

Provides a CE Anomaly Monitor.

## Example Usage

There are two main types of a Cost Anomaly Monitor: `DIMENSIONAL` and `CUSTOM`.

### Dimensional Example

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ce_anomaly_monitor import CeAnomalyMonitor
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CeAnomalyMonitor(self, "service_monitor",
            monitor_dimension="SERVICE",
            monitor_type="DIMENSIONAL",
            name="AWSServiceMonitor"
        )
```

### Custom Example

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ce_anomaly_monitor import CeAnomalyMonitor
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CeAnomalyMonitor(self, "test",
            monitor_specification=Token.as_string(
                Fn.jsonencode({
                    "And": "null",
                    "CostCategories": "null",
                    "Dimensions": "null",
                    "Not": "null",
                    "Or": "null",
                    "Tags": {
                        "Key": "CostCenter",
                        "MatchOptions": "null",
                        "Values": ["10000"]
                    }
                })),
            monitor_type="CUSTOM",
            name="AWSCustomAnomalyMonitor"
        )
```

## Argument Reference

The following arguments are required:

* `name` - (Required) The name of the monitor.
* `monitor_type` - (Required) The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
* `monitor_dimension` - (Required, if `monitor_type` is `DIMENSIONAL`) The dimensions to evaluate. Valid values: `SERVICE`.
* `monitor_specification` - (Required, if `monitor_type` is `CUSTOM`) A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the anomaly monitor.
* `id` - Unique ID of the anomaly monitor. Same as `arn`.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_ce_anomaly_monitor` using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ce_anomaly_monitor import CeAnomalyMonitor
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CeAnomalyMonitor.generate_config_for_import(self, "example", "costAnomalyMonitorARN")
```

Using `terraform import`, import `aws_ce_anomaly_monitor` using the `id`. For example:

```console
% terraform import aws_ce_anomaly_monitor.example costAnomalyMonitorARN
```

<!-- cache-key: cdktf-0.20.8 input-1578f36961ed88a11a17f0c1c8745d16387472eae9e80de6c376da2f0ebcc68e -->