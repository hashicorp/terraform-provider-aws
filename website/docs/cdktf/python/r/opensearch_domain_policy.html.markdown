---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_domain_policy"
description: |-
  Provides an OpenSearch Domain Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_domain_policy

Allows setting policy to an OpenSearch domain while referencing domain attributes (e.g., ARN).

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
from imports.aws.opensearch_domain import OpensearchDomain
from imports.aws.opensearch_domain_policy import OpensearchDomainPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = OpensearchDomain(self, "example",
            domain_name="tf-test",
            engine_version="OpenSearch_1.1"
        )
        main = DataAwsIamPolicyDocument(self, "main",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["es:*"],
                condition=[DataAwsIamPolicyDocumentStatementCondition(
                    test="IpAddress",
                    values=["127.0.0.1/32"],
                    variable="aws:SourceIp"
                )
                ],
                effect="Allow",
                principals=[DataAwsIamPolicyDocumentStatementPrincipals(
                    identifiers=["*"],
                    type="*"
                )
                ],
                resources=["${" + example.arn + "}/*"]
            )
            ]
        )
        aws_opensearch_domain_policy_main = OpensearchDomainPolicy(self, "main_2",
            access_policies=Token.as_string(main.json),
            domain_name=example.domain_name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_opensearch_domain_policy_main.override_logical_id("main")
```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `access_policies` - (Optional) IAM policy document specifying the access policies for the domain
* `domain_name` - (Required) Name of the domain.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `update` - (Default `180m`)
* `delete` - (Default `90m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearch Domain Policy using `domain_name` prefixed with `esd-policy-`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.opensearch_domain_policy import OpensearchDomainPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        OpensearchDomainPolicy.generate_config_for_import(self, "example", "esd-policy-tf-test")
```

Using `terraform import`, import OpenSearch Domain Policy using `domain_name` prefixed with `esd-policy-`. For example:

```console
% terraform import aws_opensearch_domain_policy.example esd-policy-tf-test
```

<!-- cache-key: cdktf-0.20.8 input-db06c612500502df2a1e52f84ce9177be196dd144c134442025874d77e2fc7b7 -->