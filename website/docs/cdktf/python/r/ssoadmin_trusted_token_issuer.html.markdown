---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_trusted_token_issuer"
description: |-
  Terraform resource for managing an AWS SSO Admin Trusted Token Issuer.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_trusted_token_issuer

Terraform resource for managing an AWS SSO Admin Trusted Token Issuer.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_ssoadmin_instances import DataAwsSsoadminInstances
from imports.aws.ssoadmin_trusted_token_issuer import SsoadminTrustedTokenIssuer
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsSsoadminInstances(self, "example")
        aws_ssoadmin_trusted_token_issuer_example = SsoadminTrustedTokenIssuer(self, "example_1",
            instance_arn=Token.as_string(
                Fn.lookup_nested(Fn.tolist(example.arns), ["0"])),
            name="example",
            trusted_token_issuer_configuration=[SsoadminTrustedTokenIssuerTrustedTokenIssuerConfiguration(
                oidc_jwt_configuration=[SsoadminTrustedTokenIssuerTrustedTokenIssuerConfigurationOidcJwtConfiguration(
                    claim_attribute_path="email",
                    identity_store_attribute_path="emails.value",
                    issuer_url="https://example.com",
                    jwks_retrieval_option="OPEN_ID_DISCOVERY"
                )
                ]
            )
            ],
            trusted_token_issuer_type="OIDC_JWT"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_ssoadmin_trusted_token_issuer_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `instance_arn` - (Required) ARN of the instance of IAM Identity Center.
* `name` - (Required) Name of the trusted token issuer.
* `trusted_token_issuer_configuration` - (Required) A block that specifies settings that apply to the trusted token issuer, these change depending on the type you specify in `trusted_token_issuer_type`. [Documented below](#trusted_token_issuer_configuration-argument-reference).
* `trusted_token_issuer_type` - (Required) Specifies the type of the trusted token issuer. Valid values are `OIDC_JWT`

The following arguments are optional:

* `client_token` - (Optional) A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `trusted_token_issuer_configuration` Argument Reference

* `oidc_jwt_configuration` - (Optional) A block that describes the settings for a trusted token issuer that works with OpenID Connect (OIDC) by using JSON Web Tokens (JWT). See [Documented below](#oidc_jwt_configuration-argument-reference) below.

### `oidc_jwt_configuration` Argument Reference

* `claim_attribute_path` - (Required) Specifies the path of the source attribute in the JWT from the trusted token issuer.
* `identity_store_attribute_path` - (Required) Specifies path of the destination attribute in a JWT from IAM Identity Center. The attribute mapped by this JMESPath expression is compared against the attribute mapped by `claim_attribute_path` when a trusted token issuer token is exchanged for an IAM Identity Center token.
* `issuer_url` - (Required) Specifies the URL that IAM Identity Center uses for OpenID Discovery. OpenID Discovery is used to obtain the information required to verify the tokens that the trusted token issuer generates.
* `jwks_retrieval_option` - (Required) The method that the trusted token issuer can use to retrieve the JSON Web Key Set used to verify a JWT. Valid values are `OPEN_ID_DISCOVERY`

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the trusted token issuer.
* `id` - ARN of the trusted token issuer.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Admin Trusted Token Issuer using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ssoadmin_trusted_token_issuer import SsoadminTrustedTokenIssuer
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SsoadminTrustedTokenIssuer.generate_config_for_import(self, "example", "arn:aws:sso::123456789012:trustedTokenIssuer/ssoins-lu1ye3gew4mbc7ju/tti-2657c556-9707-11ee-b9d1-0242ac120002")
```

Using `terraform import`, import SSO Admin Trusted Token Issuer using the `id`. For example:

```console
% terraform import aws_ssoadmin_trusted_token_issuer.example arn:aws:sso::123456789012:trustedTokenIssuer/ssoins-lu1ye3gew4mbc7ju/tti-2657c556-9707-11ee-b9d1-0242ac120002
```

<!-- cache-key: cdktf-0.20.8 input-592172194ecc9eca04f581d60dec1bcc1b2ca4bb1d6297df14214cca4674ec1a -->