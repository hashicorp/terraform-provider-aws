---
subcategory: "Global Accelerator"
layout: "aws"
page_title: "AWS: aws_globalaccelerator_listener"
description: |-
  Provides a Global Accelerator listener.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_globalaccelerator_listener

Provides a Global Accelerator listener.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.globalaccelerator_accelerator import GlobalacceleratorAccelerator
from imports.aws.globalaccelerator_listener import GlobalacceleratorListener
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = GlobalacceleratorAccelerator(self, "example",
            attributes=GlobalacceleratorAcceleratorAttributes(
                flow_logs_enabled=True,
                flow_logs_s3_bucket="example-bucket",
                flow_logs_s3_prefix="flow-logs/"
            ),
            enabled=True,
            ip_address_type="IPV4",
            name="Example"
        )
        aws_globalaccelerator_listener_example = GlobalacceleratorListener(self, "example_1",
            accelerator_arn=example.id,
            client_affinity="SOURCE_IP",
            port_range=[GlobalacceleratorListenerPortRange(
                from_port=80,
                to_port=80
            )
            ],
            protocol="TCP"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_globalaccelerator_listener_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `accelerator_arn` - (Required) The Amazon Resource Name (ARN) of your accelerator.
* `client_affinity` - (Optional) Direct all requests from a user to the same endpoint. Valid values are `NONE`, `SOURCE_IP`. Default: `NONE`. If `NONE`, Global Accelerator uses the "five-tuple" properties of source IP address, source port, destination IP address, destination port, and protocol to select the hash value. If `SOURCE_IP`, Global Accelerator uses the "two-tuple" properties of source (client) IP address and destination IP address to select the hash value.
* `protocol` - (Optional) The protocol for the connections from clients to the accelerator. Valid values are `TCP`, `UDP`.
* `port_range` - (Optional) The list of port ranges for the connections from clients to the accelerator. Fields documented below.

`port_range` supports the following arguments:

* `from_port` - (Optional) The first port in the range of ports, inclusive.
* `to_port` - (Optional) The last port in the range of ports, inclusive.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Name (ARN) of the listener.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Global Accelerator listeners using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.globalaccelerator_listener import GlobalacceleratorListener
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlobalacceleratorListener.generate_config_for_import(self, "example", "arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxxx")
```

Using `terraform import`, import Global Accelerator listeners using the `id`. For example:

```console
% terraform import aws_globalaccelerator_listener.example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxxx
```

<!-- cache-key: cdktf-0.20.8 input-916b1c351e05097e7ddc260e23377eafd367b2e2e899550a7d4798b0d81ab853 -->