---
subcategory: "SageMaker"
layout: "aws"
page_title: "AWS: aws_sagemaker_code_repository"
description: |-
  Provides a SageMaker Code Repository resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_code_repository

Provides a SageMaker Code Repository resource.

## Example Usage

### Basic usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sagemaker_code_repository import SagemakerCodeRepository
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SagemakerCodeRepository(self, "example",
            code_repository_name="example",
            git_config=SagemakerCodeRepositoryGitConfig(
                repository_url="https://github.com/hashicorp/terraform-provider-aws.git"
            )
        )
```

### Example with Secret

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sagemaker_code_repository import SagemakerCodeRepository
from imports.aws.secretsmanager_secret import SecretsmanagerSecret
from imports.aws.secretsmanager_secret_version import SecretsmanagerSecretVersion
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = SecretsmanagerSecret(self, "example",
            name="example"
        )
        aws_secretsmanager_secret_version_example =
        SecretsmanagerSecretVersion(self, "example_1",
            secret_id=example.id,
            secret_string=Token.as_string(
                Fn.jsonencode({
                    "password": "example",
                    "username": "example"
                }))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_secretsmanager_secret_version_example.override_logical_id("example")
        aws_sagemaker_code_repository_example = SagemakerCodeRepository(self, "example_2",
            code_repository_name="example",
            depends_on=[aws_secretsmanager_secret_version_example],
            git_config=SagemakerCodeRepositoryGitConfig(
                repository_url="https://github.com/hashicorp/terraform-provider-aws.git",
                secret_arn=example.arn
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sagemaker_code_repository_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `code_repository_name` - (Required) The name of the Code Repository (must be unique).
* `git_config` - (Required) Specifies details about the repository. see [Git Config](#git-config) details below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Git Config

* `repository_url` - (Required) The URL where the Git repository is located.
* `branch` - (Optional) The default branch for the Git repository.
* `secret_arn` - (Optional) The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format: `{"username": UserName, "password": Password}`

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Code Repository.
* `arn` - The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker Code Repositories using the `name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.sagemaker_code_repository import SagemakerCodeRepository
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SagemakerCodeRepository.generate_config_for_import(self, "testCodeRepository", "my-code-repo")
```

Using `terraform import`, import SageMaker Code Repositories using the `name`. For example:

```console
% terraform import aws_sagemaker_code_repository.test_code_repository my-code-repo
```

<!-- cache-key: cdktf-0.20.8 input-f41c8a9771692edb44a7045ff9315ec42a11e03a25966ecdac6ca144a79c5a90 -->