---
subcategory: "CloudWatch Observability Access Manager"
layout: "aws"
page_title: "AWS: aws_oam_link"
description: |-
  Terraform resource for managing an AWS CloudWatch Observability Access Manager Link.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_oam_link

Terraform resource for managing an AWS CloudWatch Observability Access Manager Link.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.oam_link import OamLink
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        OamLink(self, "example",
            label_template="$AccountName",
            resource_types=["AWS::CloudWatch::Metric"],
            sink_identifier=test.id,
            tags={
                "Env": "prod"
            }
        )
```

### Log Group Filtering

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.oam_link import OamLink
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        OamLink(self, "example",
            label_template="$AccountName",
            link_configuration=OamLinkLinkConfiguration(
                log_group_configuration=OamLinkLinkConfigurationLogGroupConfiguration(
                    filter="LogGroupName LIKE 'aws/lambda/%' OR LogGroupName LIKE 'AWSLogs%'"
                )
            ),
            resource_types=["AWS::Logs::LogGroup"],
            sink_identifier=test.id
        )
```

### Metric Filtering

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.oam_link import OamLink
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        OamLink(self, "example",
            label_template="$AccountName",
            link_configuration=OamLinkLinkConfiguration(
                metric_configuration=OamLinkLinkConfigurationMetricConfiguration(
                    filter="Namespace IN ('AWS/EC2', 'AWS/ELB', 'AWS/S3')"
                )
            ),
            resource_types=["AWS::CloudWatch::Metric"],
            sink_identifier=test.id
        )
```

## Argument Reference

The following arguments are required:

* `label_template` - (Required) Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
* `resource_types` - (Required) Types of data that the source account shares with the monitoring account.
* `sink_identifier` - (Required) Identifier of the sink to use to create this link.

The following arguments are optional:

* `link_configuration` - (Optional) Configuration for creating filters that specify that only some metric namespaces or log groups are to be shared from the source account to the monitoring account. See [`link_configuration` Block](#link_configuration-block) for details.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `link_configuration` Block

The `link_configuration` configuration block supports the following arguments:

* `log_group_configuration` - (Optional) Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See [`log_group_configuration` Block](#log_group_configuration-block) for details.
* `metric_configuration` - (Optional) Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See [`metric_configuration` Block](#metric_configuration-block) for details.

### `log_group_configuration` Block

The `log_group_configuration` configuration block supports the following arguments:

* `filter` - (Required) Filter string that specifies which log groups are to share their log events with the monitoring account. See [LogGroupConfiguration](https://docs.aws.amazon.com/OAM/latest/APIReference/API_LogGroupConfiguration.html) for details.

### `metric_configuration` Block

The `metric_configuration` configuration block supports the following arguments:

* `filter` - (Required) Filter string that specifies  which metrics are to be shared with the monitoring account. See [MetricConfiguration](https://docs.aws.amazon.com/OAM/latest/APIReference/API_MetricConfiguration.html) for details.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the link.
* `id` - ARN of the link.
* `label` - Label that is assigned to this link.
* `link_id` - ID string that AWS generated as part of the link ARN.
* `sink_arn` - ARN of the sink that is used for this link.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `1m`)
* `update` - (Default `1m`)
* `delete` - (Default `1m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch Observability Access Manager Link using the `arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.oam_link import OamLink
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        OamLink.generate_config_for_import(self, "example", "arn:aws:oam:us-west-2:123456789012:link/link-id")
```

Using `terraform import`, import CloudWatch Observability Access Manager Link using the `arn`. For example:

```console
% terraform import aws_oam_link.example arn:aws:oam:us-west-2:123456789012:link/link-id
```

<!-- cache-key: cdktf-0.20.1 input-28fa5b043aa7266b9585a1363822c4ef6e13576f18d0d7d60800126ef856a79d -->