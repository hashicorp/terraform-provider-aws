---
subcategory: "API Gateway"
layout: "aws"
page_title: "AWS: aws_api_gateway_base_path_mapping"
description: |-
  Connects a custom domain with a deployed API
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_api_gateway_base_path_mapping

Connects a custom domain name registered via `aws_api_gateway_domain_name`
with a deployed API so that its methods can be called via the
custom domain name.

## Example Usage

An end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_base_path_mapping import ApiGatewayBasePathMapping
from imports.aws.api_gateway_domain_name import ApiGatewayDomainName
from imports.aws.api_gateway_stage import ApiGatewayStage
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = ApiGatewayDomainName(self, "example",
            certificate_body=Token.as_string(
                Fn.file("${path.module}/example.com/example.crt")),
            certificate_chain=Token.as_string(
                Fn.file("${path.module}/example.com/ca.crt")),
            certificate_name="example-api",
            certificate_private_key=Token.as_string(
                Fn.file("${path.module}/example.com/example.key")),
            domain_name="example.com"
        )
        aws_api_gateway_stage_example = ApiGatewayStage(self, "example_1",
            deployment_id=Token.as_string(aws_api_gateway_deployment_example.id),
            rest_api_id=Token.as_string(aws_api_gateway_rest_api_example.id),
            stage_name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_stage_example.override_logical_id("example")
        aws_api_gateway_base_path_mapping_example = ApiGatewayBasePathMapping(self, "example_2",
            api_id=Token.as_string(aws_api_gateway_rest_api_example.id),
            domain_name=example.domain_name,
            stage_name=Token.as_string(aws_api_gateway_stage_example.stage_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_api_gateway_base_path_mapping_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `domain_name` - (Required) Already-registered domain name to connect the API to.
* `api_id` - (Required) ID of the API to connect.
* `stage_name` - (Optional) Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
* `base_path` - (Optional) Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
* `domain_name_id` - (Optional) The identifier for the domain name resource. Supported only for private custom domain names.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:

For an empty `base_path` or, in other words, a root path (`/`):

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_base_path_mapping import ApiGatewayBasePathMapping
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ApiGatewayBasePathMapping.generate_config_for_import(self, "example", "example.com/")
```

For a non-root `base_path`:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_base_path_mapping import ApiGatewayBasePathMapping
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ApiGatewayBasePathMapping.generate_config_for_import(self, "example", "example.com/base-path")
```

For a non-root `base_path` and a private custom domain name:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.api_gateway_base_path_mapping import ApiGatewayBasePathMapping
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        ApiGatewayBasePathMapping.generate_config_for_import(self, "example", "api.internal.example.com/base-path/abcde12345")
```

Using `terraform import`, import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:

For an empty `base_path` or, in other words, a root path (`/`):

```console
% terraform import aws_api_gateway_base_path_mapping.example example.com/
```

For a non-root `base_path`:

```console
% terraform import aws_api_gateway_base_path_mapping.example example.com/base-path
```

For a non-root `base_path` and a private custom domain name:

```console
% terraform import aws_api_gateway_base_path_mapping.example api.internal.example.com/base-path/abcde12345
```

<!-- cache-key: cdktf-0.20.8 input-c51ac15572f07a88e4a3c4b4234009fb84d363692c6355e0ceff12c7d87d9000 -->