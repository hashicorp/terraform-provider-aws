---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_data_protection_policy"
description: |-
  Provides a CloudWatch Log Data Protection Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_data_protection_policy

Provides a CloudWatch Log Data Protection Policy resource.

Read more about protecting sensitive user data in the [User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_data_protection_policy import CloudwatchLogDataProtectionPolicy
from imports.aws.cloudwatch_log_group import CloudwatchLogGroup
from imports.aws.s3_bucket import S3Bucket
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = CloudwatchLogGroup(self, "example",
            name="example"
        )
        aws_s3_bucket_example = S3Bucket(self, "example_1",
            bucket="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_s3_bucket_example.override_logical_id("example")
        aws_cloudwatch_log_data_protection_policy_example =
        CloudwatchLogDataProtectionPolicy(self, "example_2",
            log_group_name=example.name,
            policy_document=Token.as_string(
                Fn.jsonencode({
                    "Name": "Example",
                    "Statement": [{
                        "DataIdentifier": ["arn:aws:dataprotection::aws:data-identifier/EmailAddress"
                        ],
                        "Operation": {
                            "Audit": {
                                "FindingsDestination": {
                                    "S3": {
                                        "Bucket": aws_s3_bucket_example.bucket
                                    }
                                }
                            }
                        },
                        "Sid": "Audit"
                    }, {
                        "DataIdentifier": ["arn:aws:dataprotection::aws:data-identifier/EmailAddress"
                        ],
                        "Operation": {
                            "Deidentify": {
                                "MaskConfig": {}
                            }
                        },
                        "Sid": "Redact"
                    }
                    ],
                    "Version": "2021-06-01"
                }))
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_cloudwatch_log_data_protection_policy_example.override_logical_id("example")
```

## Argument Reference

This resource supports the following arguments:

* `log_group_name` - (Required) The name of the log group under which the log stream is to be created.
* `policy_document` - (Required) Specifies the data protection policy in JSON. Read more at [Data protection policy syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-start.html#mask-sensitive-log-data-policysyntax).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import this resource using the `log_group_name`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.cloudwatch_log_data_protection_policy import CloudwatchLogDataProtectionPolicy
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        CloudwatchLogDataProtectionPolicy.generate_config_for_import(self, "example", "my-log-group")
```

Using `terraform import`, import this resource using the `log_group_name`. For example:

```console
% terraform import aws_cloudwatch_log_data_protection_policy.example my-log-group
```

<!-- cache-key: cdktf-0.20.8 input-5d0eb45bdebf63544029d216f663f1fa8e735ed48c73f741006440431b616666 -->