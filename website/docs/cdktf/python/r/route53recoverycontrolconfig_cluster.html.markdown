---
subcategory: "Route 53 Recovery Control Config"
layout: "aws"
page_title: "AWS: aws_route53recoverycontrolconfig_cluster"
description: |-
  Provides an AWS Route 53 Recovery Control Config Cluster
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53recoverycontrolconfig_cluster

Provides an AWS Route 53 Recovery Control Config Cluster.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_recoverycontrolconfig_cluster import Route53RecoverycontrolconfigCluster
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53RecoverycontrolconfigCluster(self, "example",
            name="georgefitzgerald"
        )
```

## Argument Reference

The following arguments are required:

* `name` - (Required) Unique name describing the cluster.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the cluster
* `cluster_endpoints` - List of 5 endpoints in 5 regions that can be used to talk to the cluster. See below.
* `status` - Status of cluster. `PENDING` when it is being created, `PENDING_DELETION` when it is being deleted and `DEPLOYED` otherwise.

### cluster_endpoints

* `endpoint` - Cluster endpoint.
* `region` - Region of the endpoint.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Route53 Recovery Control Config cluster using the cluster ARN. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.route53_recoverycontrolconfig_cluster import Route53RecoverycontrolconfigCluster
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Route53RecoverycontrolconfigCluster.generate_config_for_import(self, "mycluster", "arn:aws:route53-recovery-control::313517334327:cluster/f9ae13be-a11e-4ec7-8522-94a70468e6ea")
```

Using `terraform import`, import Route53 Recovery Control Config cluster using the cluster ARN. For example:

```console
% terraform import aws_route53recoverycontrolconfig_cluster.mycluster arn:aws:route53-recovery-control::313517334327:cluster/f9ae13be-a11e-4ec7-8522-94a70468e6ea
```

<!-- cache-key: cdktf-0.20.8 input-4f9ee8256b3a92970727893900eccbfd348f2d0fcefd370211ce5756a28dbab1 -->