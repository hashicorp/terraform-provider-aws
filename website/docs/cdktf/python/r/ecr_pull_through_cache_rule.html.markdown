---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_pull_through_cache_rule"
description: |-
  Provides an Elastic Container Registry Pull Through Cache Rule.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ecr_pull_through_cache_rule

Provides an Elastic Container Registry Pull Through Cache Rule.

More information about pull through cache rules, including the set of supported
upstream repositories, see [Using pull through cache rules](https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html).

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ecr_pull_through_cache_rule import EcrPullThroughCacheRule
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EcrPullThroughCacheRule(self, "example",
            credential_arn="arn:aws:secretsmanager:us-east-1:123456789:secret:ecr-pullthroughcache/ecrpublic",
            ecr_repository_prefix="ecr-public",
            upstream_registry_url="public.ecr.aws"
        )
```

## Argument Reference

This resource supports the following arguments:

* `credential_arn` - (Optional) ARN of the Secret which will be used to authenticate against the registry.
* `ecr_repository_prefix` - (Required, Forces new resource) The repository name prefix to use when caching images from the source registry.
* `upstream_registry_url` - (Required, Forces new resource) The registry URL of the upstream public registry to use as the source.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `registry_id` - The registry ID where the repository was created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a pull-through cache rule using the `ecr_repository_prefix`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.ecr_pull_through_cache_rule import EcrPullThroughCacheRule
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        EcrPullThroughCacheRule.generate_config_for_import(self, "example", "ecr-public")
```

Using `terraform import`, import a pull-through cache rule using the `ecr_repository_prefix`. For example:

```console
% terraform import aws_ecr_pull_through_cache_rule.example ecr-public
```

<!-- cache-key: cdktf-0.20.8 input-77d631b6c1d1bb98f7a86171d386d0798201bb4f64ec08a93c7983727ec7dec9 -->