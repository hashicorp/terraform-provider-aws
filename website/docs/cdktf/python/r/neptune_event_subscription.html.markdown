---
subcategory: "Neptune"
layout: "aws"
page_title: "AWS: aws_neptune_event_subscription"
description: |-
  Provides a Neptune event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_neptune_event_subscription

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.neptune_cluster import NeptuneCluster
from imports.aws.neptune_cluster_instance import NeptuneClusterInstance
from imports.aws.neptune_event_subscription import NeptuneEventSubscription
from imports.aws.sns_topic import SnsTopic
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        default_var = NeptuneCluster(self, "default",
            apply_immediately=Token.as_boolean("true"),
            backup_retention_period=5,
            cluster_identifier="neptune-cluster-demo",
            engine="neptune",
            iam_database_authentication_enabled=Token.as_boolean("true"),
            preferred_backup_window="07:00-09:00",
            skip_final_snapshot=True
        )
        example = NeptuneClusterInstance(self, "example",
            apply_immediately=Token.as_boolean("true"),
            cluster_identifier=default_var.id,
            engine="neptune",
            instance_class="db.r4.large"
        )
        aws_sns_topic_default = SnsTopic(self, "default_2",
            name="neptune-events"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_sns_topic_default.override_logical_id("default")
        aws_neptune_event_subscription_default = NeptuneEventSubscription(self, "default_3",
            event_categories=["maintenance", "availability", "creation", "backup", "restoration", "recovery", "deletion", "failover", "failure", "notification", "configuration change", "read replica"
            ],
            name="neptune-event-sub",
            sns_topic_arn=Token.as_string(aws_sns_topic_default.arn),
            source_ids=[example.id],
            source_type="db-instance",
            tags={
                "env": "test"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_neptune_event_subscription_default.override_logical_id("default")
```

## Argument Reference

This resource supports the following arguments:

* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to true.
* `event_categories` - (Optional) A list of event categories for a `source_type` that you want to subscribe to. Run `aws neptune describe-event-categories` to find all the event categories.
* `name` - (Optional) The name of the Neptune event subscription. By default generated by Terraform.
* `name_prefix` - (Optional) The name of the Neptune event subscription. Conflicts with `name`.
* `sns_topic_arn` - (Required) The ARN of the SNS topic to send events to.
* `source_ids` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `source_type` must also be specified.
* `source_type` - (Optional) The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster` or `db-cluster-snapshot`. If not set, all sources will be subscribed to.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Neptune event notification subscription.
* `arn` - The Amazon Resource Name of the Neptune event notification subscription.
* `customer_aws_id` - The AWS customer account associated with the Neptune event notification subscription.
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `40m`)
- `delete` - (Default `40m`)
- `update` - (Default `40m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_neptune_event_subscription` using the event subscription name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.neptune_event_subscription import NeptuneEventSubscription
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        NeptuneEventSubscription.generate_config_for_import(self, "example", "my-event-subscription")
```

Using `terraform import`, import `aws_neptune_event_subscription` using the event subscription name. For example:

```console
% terraform import aws_neptune_event_subscription.example my-event-subscription
```

<!-- cache-key: cdktf-0.20.8 input-e328d5c2f0ddd8aeab59e5a796150d1bafdd5b04018dd038f0bce4cd0cb07a04 -->