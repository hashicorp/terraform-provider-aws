---
subcategory: "Elemental MediaLive"
layout: "aws"
page_title: "AWS: aws_medialive_multiplex"
description: |-
  Terraform resource for managing an AWS MediaLive Multiplex.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_medialive_multiplex

Terraform resource for managing an AWS MediaLive Multiplex.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_availability_zones import DataAwsAvailabilityZones
from imports.aws.medialive_multiplex import MedialiveMultiplex
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        available = DataAwsAvailabilityZones(self, "available",
            state="available"
        )
        MedialiveMultiplex(self, "example",
            availability_zones=[
                Token.as_string(Fn.lookup_nested(available.names, ["0"])),
                Token.as_string(Fn.lookup_nested(available.names, ["1"]))
            ],
            multiplex_settings=MedialiveMultiplexMultiplexSettings(
                maximum_video_buffer_delay_milliseconds=1000,
                transport_stream_bitrate=1000000,
                transport_stream_id=1,
                transport_stream_reserved_bitrate=1
            ),
            name="example-multiplex-changed",
            start_multiplex=True,
            tags={
                "tag1": "value1"
            }
        )
```

## Argument Reference

The following arguments are required:

* `availability_zones` - (Required) A list of availability zones. You must specify exactly two.
* `multiplex_settings`- (Required) Multiplex settings. See [Multiplex Settings](#multiplex-settings) for more details.
* `name` - (Required) name of Multiplex.

The following arguments are optional:

* `start_multiplex` - (Optional) Whether to start the Multiplex. Defaults to `false`.
* `tags` - (Optional) A map of tags to assign to the Multiplex. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Multiplex Settings

* `transport_stream_bitrate` - (Required) Transport stream bit rate.
* `transport_stream_id` - (Required) Unique ID for each multiplex.
* `transport_stream_reserved_bitrate` - (Optional) Transport stream reserved bit rate.
* `maximum_video_buffer_delay_milliseconds` - (Optional) Maximum video buffer delay.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Multiplex.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MediaLive Multiplex using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.medialive_multiplex import MedialiveMultiplex
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        MedialiveMultiplex.generate_config_for_import(self, "example", "12345678")
```

Using `terraform import`, import MediaLive Multiplex using the `id`. For example:

```console
% terraform import aws_medialive_multiplex.example 12345678
```

<!-- cache-key: cdktf-0.20.8 input-ef0b0248360f7c92f3d75bdb422730873d3e865bff521828049e013dc339473a -->