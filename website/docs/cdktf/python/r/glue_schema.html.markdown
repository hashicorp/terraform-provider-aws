---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_schema"
description: |-
  Provides a Glue Schema resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glue_schema

Provides a Glue Schema resource.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_schema import GlueSchema
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueSchema(self, "example",
            compatibility="NONE",
            data_format="AVRO",
            registry_arn=test.arn,
            schema_definition="{\\\"type\\\": \\\"record\\\", \\\"name\\\": \\\"r1\\\", \\\"fields\\\": [ {\\\"name\\\": \\\"f1\\\", \\\"type\\\": \\\"int\\\"}, {\\\"name\\\": \\\"f2\\\", \\\"type\\\": \\\"string\\\"} ]}",
            schema_name="example"
        )
```

## Argument Reference

This resource supports the following arguments:

* `schema_name` – (Required) The Name of the schema.
* `registry_arn` - (Required) The ARN of the Glue Registry to create the schema in.
* `data_format` - (Required) The data format of the schema definition. Valid values are `AVRO`, `JSON` and `PROTOBUF`.
* `compatibility` - (Required) The compatibility mode of the schema. Values values are: `NONE`, `DISABLED`, `BACKWARD`, `BACKWARD_ALL`, `FORWARD`, `FORWARD_ALL`, `FULL`, and `FULL_ALL`.
* `schema_definition` - (Required) The schema definition using the `data_format` setting for `schema_name`.
* `description` – (Optional) A description of the schema.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the schema.
* `id` - Amazon Resource Name (ARN) of the schema.
* `registry_name` - The name of the Glue Registry.
* `latest_schema_version` - The latest version of the schema associated with the returned schema definition.
* `next_schema_version` - The next version of the schema associated with the returned schema definition.
* `schema_checkpoint` - The version number of the checkpoint (the last time the compatibility mode was changed).
* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue Registries using `arn`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.glue_schema import GlueSchema
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        GlueSchema.generate_config_for_import(self, "example", "arn:aws:glue:us-west-2:123456789012:schema/example/example")
```

Using `terraform import`, import Glue Registries using `arn`. For example:

```console
% terraform import aws_glue_schema.example arn:aws:glue:us-west-2:123456789012:schema/example/example
```

<!-- cache-key: cdktf-0.20.8 input-07d8be72b0ef5ec7a36f90bf89a090da4b36963b4802cf618422290e600eac94 -->