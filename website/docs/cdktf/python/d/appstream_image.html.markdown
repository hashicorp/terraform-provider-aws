---
subcategory: "AppStream 2.0"
layout: "aws"
page_title: "AWS: aws_appstream_image"
description: |-
  Terraform data source for describing an AWS AppStream 2.0 Appstream Image.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_appstream_image

Terraform data source for managing an AWS AppStream 2.0 Image.

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_appstream_image import DataAwsAppstreamImage
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsAppstreamImage(self, "test",
            most_recent=True,
            name="AppStream-WinServer2019-06-17-2024",
            type="PUBLIC"
        )
```

## Argument Reference

The following arguments are optional:

* `name` - Name of the image being searched for. Cannot be used with name_regex or arn.
* `name_regex` - Regular expression name of the image being searched for. Cannot be used with arn or name.
* `arn` - Arn of the image being searched for. Cannot be used with name_regex or name.
* `type` - The type of image which must be (PUBLIC, PRIVATE, or SHARED).
* `most_recent` - Boolean that if it is set to true and there are multiple images returned the most recent will be returned. If it is set to false and there are multiple images return the datasource will error.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `application` - A application object that contains the following:
    * `app_block_arn` - The app block ARN of the application.
    * `created_time` - The time at which the application was created within the app block.
    * `description` - The description of the application.
    * `display_name` - The application name to display.
    * `enabled` - Bool based on if the application is enabled.
    * `icon_s3_location` - A list named icon_s3_location that contains the following:
        * `s3_bucket` - S3 bucket of the S3 object.
        * `s3_key` - S3 key of the S3 object.
    * `icon_url` - URL of the application icon. This URL may be time-limited.
    * `instance_families` - List of the instance families of the application.
    * `launch_parameters` - Arguments that are passed to the application at it's launch.
    * `launch_path` -  Path to the application's excecutable in the instance.
    * `metadata` - String to string map that contains additional attributes used to describe the application.
    * `Name` - Name of the application.
    * `platforms` - Array of strings describing the platforms on which the application can run.
      Values will be from: WINDOWS | WINDOWS_SERVER_2016 | WINDOWS_SERVER_2019 | WINDOWS_SERVER_2022 | AMAZON_LINUX2
    * `working_directory` - Working directory for the application.
* `appstream_agent_version` - Version of the AppStream 2.0 agent to use for instances that are launched from this image. Has a maximum length of 100 characters.
* `arn` - ARN of the image.
* `base_image_arn` - ARN of the image from which the image was created.
* `created_time` - Time at which this image was created.
* `description` - Description of image.
* `display_name` - Image name to display.
* `image_builder_name` - The name of the image builder that was used to created the private image. If the image is sharedthen the value is null.
* `image_builder_supported` - Boolean to indicate whether an image builder can be launched from this image.
* `image error` - Resource error object that describes the error containing the following:
    * `error_code` - Error code of the image. Values will be from: IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION | IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION | IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION | NETWORK_INTERFACE_LIMIT_EXCEEDED | INTERNAL_SERVICE_ERROR | IAM_SERVICE_ROLE_IS_MISSING | MACHINE_ROLE_IS_MISSING | STS_DISABLED_IN_REGION | SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES | IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION | SUBNET_NOT_FOUND | IMAGE_NOT_FOUND | INVALID_SUBNET_CONFIGURATION | SECURITY_GROUPS_NOT_FOUND | IGW_NOT_ATTACHED | IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION | FLEET_STOPPED | FLEET_INSTANCE_PROVISIONING_FAILURE | DOMAIN_JOIN_ERROR_FILE_NOT_FOUND | DOMAIN_JOIN_ERROR_ACCESS_DENIED | DOMAIN_JOIN_ERROR_LOGON_FAILURE | DOMAIN_JOIN_ERROR_INVALID_PARAMETER | DOMAIN_JOIN_ERROR_MORE_DATA | DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN | DOMAIN_JOIN_ERROR_NOT_SUPPORTED | DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME | DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED | DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED | DOMAIN_JOIN_NERR_PASSWORD_EXPIRED | DOMAIN_JOIN_INTERNAL_SERVICE_ERROR as the values.
    * `error_message` - Error message of the image.
    * `error_timestamp` - Time when the error occurred.
* `image_permissions` - List of strings describing the image permissions containing the following:
    * `allow_fleet` - Boolean indicating if the image can be used for a fleet.
    * `allow_image_builder` - indicated whether the image can be used for an image builder.
* `platform` - Operating system platform of the image. Values will be from: WINDOWS | WINDOWS_SERVER_2016 | WINDOWS_SERVER_2019 | WINDOWS_SERVER_2022 | AMAZON_LINUX2
* `public_image_released_date` - Release date of base image if public. For private images, it is the release date of the base image that it was created from.
* `state` - Current state of image. Image starts in PENDING state which changes to AVAILABLE if creation passes and FAILED if it fails. Values will be from: PENDING | AVAILABLE | FAILED | COPYING | DELETING | CREATING | IMPORTING.
* `visibility` - Visibility type enum indicating whether the image is PUBLIC, PRIVATE, or SHARED. Valid values include: PUBLIC | PRIVATE | SHARED.

<!-- cache-key: cdktf-0.20.1 input-39f03a832e6704e24654ff2ffaed108e62f2139a01511d5bb7d35829e13a0986 -->