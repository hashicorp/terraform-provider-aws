---
subcategory: "Audit Manager"
layout: "aws"
page_title: "AWS: aws_auditmanager_control"
description: |-
  Terraform data source for managing an AWS Audit Manager Control.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_auditmanager_control

Terraform data source for managing an AWS Audit Manager Control.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_auditmanager_control import DataAwsAuditmanagerControl
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsAuditmanagerControl(self, "example",
            name="1. Risk Management",
            type="Standard"
        )
```

### With Framework Resource

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.auditmanager_framework import AuditmanagerFramework
from imports.aws.data_aws_auditmanager_control import DataAwsAuditmanagerControl
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsAuditmanagerControl(self, "example",
            name="1. Risk Management",
            type="Standard"
        )
        example2 = DataAwsAuditmanagerControl(self, "example2",
            name="2. Personnel",
            type="Standard"
        )
        aws_auditmanager_framework_example = AuditmanagerFramework(self, "example_2",
            control_sets=[AuditmanagerFrameworkControlSets(
                controls=[AuditmanagerFrameworkControlSetsControls(
                    id=Token.as_string(example.id)
                )
                ],
                name="example"
            ), AuditmanagerFrameworkControlSets(
                controls=[AuditmanagerFrameworkControlSetsControls(
                    id=Token.as_string(example2.id)
                )
                ],
                name="example2"
            )
            ],
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_auditmanager_framework_example.override_logical_id("example")
```

## Argument Reference

This data source supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `name` - (Required) Name of the control.
* `type` - (Required) Type of control. Valid values are `Custom` and `Standard`.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

See the [`aws_auditmanager_control` resource](/docs/providers/aws/r/auditmanager_control.html) for details on the returned attributes - they are identical.

<!-- cache-key: cdktf-0.20.8 input-a74be0523108913cc58ef3c07f4c6fba23d784e83b3fec53e84e214d5f73f9cf -->