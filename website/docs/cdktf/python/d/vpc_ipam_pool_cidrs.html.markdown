---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_pool_cidrs"
description: |-
    Returns cidrs provisioned into an IPAM pool.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_vpc_ipam_pool_cidrs

`aws_vpc_ipam_pool_cidrs` provides details about an IPAM pool.

This resource can prove useful when an ipam pool was shared to your account and you want to know all (or a filtered list) of the CIDRs that are provisioned into the pool.

## Example Usage

Basic usage:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_vpc_ipam_pool import DataAwsVpcIpamPool
from imports.aws.data_aws_vpc_ipam_pool_cidrs import DataAwsVpcIpamPoolCidrs
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        p = DataAwsVpcIpamPool(self, "p",
            filter=[DataAwsVpcIpamPoolFilter(
                name="description",
                values=["*mypool*"]
            ), DataAwsVpcIpamPoolFilter(
                name="address-family",
                values=["ipv4"]
            )
            ]
        )
        DataAwsVpcIpamPoolCidrs(self, "c",
            ipam_pool_id=Token.as_string(p.id)
        )
```

Filtering:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformIterator, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_vpc_ipam_pool_cidrs import DataAwsVpcIpamPoolCidrs
from imports.aws.ec2_managed_prefix_list import Ec2ManagedPrefixList
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        c = DataAwsVpcIpamPoolCidrs(self, "c",
            filter=[DataAwsVpcIpamPoolCidrsFilter(
                name="cidr",
                values=["10.*"]
            )
            ],
            ipam_pool_id="ipam-pool-123"
        )
        mycidrs = "${[ for cidr in ${" + c.ipam_pool_cidrs + "} : cidr.cidr if cidr.state == \"provisioned\"]}"
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        pls_dynamic_iterator0 = TerraformIterator.from_list(
            Token.as_any(mycidrs))
        Ec2ManagedPrefixList(self, "pls",
            address_family="IPv4",
            max_entries=Token.as_number(Fn.length_of(mycidrs)),
            name="IPAM Pool (${" + test.id + "}) Cidrs",
            entry=pls_dynamic_iterator0.dynamic({
                "cidr": pls_dynamic_iterator0.value,
                "description": pls_dynamic_iterator0.value
            })
        )
```

## Argument Reference

This data source supports the following arguments:

* `ipam_pool_id` - ID of the IPAM pool you would like the list of provisioned CIDRs.
* `filter` - Custom filter block as described below.

### `filter`

More complex filters can be expressed using one or more `filter` sub-blocks, which take the following arguments:

* `name` - (Required) Name of the field to filter by, as defined by
  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetIpamPoolCidrs.html).
* `values` - (Required) Set of values that are accepted for the given field.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `ipam_pool_cidrs` - The CIDRs provisioned into the IPAM pool, described below.

### ipam_pool_cidrs

* `cidr` - A network CIDR.
* `state` - The provisioning state of that CIDR.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `1m`)

<!-- cache-key: cdktf-0.20.8 input-e6aeb2e0aaf75b93552763f30ce2969165ef5e2ba0b203aa62b11b342bc1609b -->