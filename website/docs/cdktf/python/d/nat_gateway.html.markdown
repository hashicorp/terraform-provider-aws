---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_nat_gateway"
description: |-
    Provides details about a specific VPC NAT Gateway.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_nat_gateway

Provides details about a specific VPC NAT Gateway.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_nat_gateway import DataAwsNatGateway
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsNatGateway(self, "default",
            subnet_id=public.id
        )
```

### With tags

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_nat_gateway import DataAwsNatGateway
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsNatGateway(self, "default",
            subnet_id=public.id,
            tags={
                "Name": "gw NAT"
            }
        )
```

## Argument Reference

The arguments of this data source act as filters for querying the available
NAT Gateways in the current Region. The given filters must match exactly one
NAT Gateway whose data will be exported as attributes.

* `id` - (Optional) ID of the specific NAT Gateway to retrieve.
* `subnet_id` - (Optional) ID of subnet that the NAT Gateway resides in.
* `vpc_id` - (Optional) ID of the VPC that the NAT Gateway resides in.
* `state` - (Optional) State of the NAT Gateway (pending | failed | available | deleting | deleted ).
* `tags` - (Optional) Map of tags, each pair of which must exactly match
  a pair on the desired NAT Gateway.
* `filter` - (Optional) Custom filter block as described below.

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:

* `name` - (Required) Name of the field to filter by, as defined by
  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
* `values` - (Required) Set of values that are accepted for the given field.
  An Nat Gateway will be selected if any one of the given values matches.

## Attribute Reference

All of the argument attributes except `filter` block are also exported as
result attributes. This data source will complete the data by populating
any fields that are not included in the configuration with the data for
the selected Nat Gateway.

* `allocation_id` - ID of the EIP allocated to the selected NAT Gateway.
* `association_id` - The association ID of the Elastic IP address that's associated with the NAT Gateway. Only available when `connectivity_type` is `public`.
* `connectivity_type` - Connectivity type of the NAT Gateway.
* `network_interface_id` - The ID of the ENI allocated to the selected NAT Gateway.
* `private_ip` - Private IP address of the selected NAT Gateway.
* `public_ip` - Public IP (EIP) address of the selected NAT Gateway.
* `secondary_allocation_ids` - Secondary allocation EIP IDs for the selected NAT Gateway.
* `secondary_private_ip_address_count` - The number of secondary private IPv4 addresses assigned to the selected NAT Gateway.
* `secondary_private_ip_addresses` - Secondary private IPv4 addresses assigned to the selected NAT Gateway.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.8 input-4030116e2abe81b3824dc015b0bf174d688531f1ad8692b89eca913c4b816418 -->