---
subcategory: "EMR"
layout: "aws"
page_title: "AWS: aws_emr_supported_instance_types"
description: |-
  Terraform data source for managing AWS EMR Supported Instance Types.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_emr_supported_instance_types

Terraform data source for managing AWS EMR Supported Instance Types.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_emr_supported_instance_types import DataAwsEmrSupportedInstanceTypes
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsEmrSupportedInstanceTypes(self, "example",
            release_label="ebs-6.15.0"
        )
```

### With a Lifecycle Pre-Condition

This data source can be used with a [lifecycle precondition](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#custom-condition-checks) to ensure a given instance type is supported by EMR.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from cdktf import TerraformResourceLifecycle, Precondition
from constructs import Construct
from cdktf import Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_emr_supported_instance_types import DataAwsEmrSupportedInstanceTypes
from imports.aws.emr_cluster import EmrCluster
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name, *, name, serviceRole):
        super().__init__(scope, name)
        instance_type = "r7g.large"
        release_label = "emr-6.15.0"
        test = DataAwsEmrSupportedInstanceTypes(self, "test",
            release_label=release_label
        )
        aws_emr_cluster_test = EmrCluster(self, "test_1",
            lifecycle=TerraformResourceLifecycle(
                precondition=[Precondition(
                    condition=Fn.contains(
                        Fn.lookup_nested(test.supported_instance_types, ["*", "type"]), instance_type),
                    error_message="${" + instance_type + "} is not supported with this EMR release label!"
                )
                ]
            ),
            master_instance_group=EmrClusterMasterInstanceGroup(
                instance_type=instance_type
            ),
            release_label=release_label,
            name=name,
            service_role=service_role
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_emr_cluster_test.override_logical_id("test")
```

## Argument Reference

The following arguments are required:

* `release_label` - (Required) Amazon EMR release label. For more information about Amazon EMR releases and their included application versions and features, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `supported_instance_types` - List of supported instance types. See [`supported_instance_types`](#supported_instance_types-attribute-reference) below.

### `supported_instance_types` Attribute Reference

* `architecture` - CPU architecture.
* `ebs_optimized_available` - Indicates whether the instance type supports Amazon EBS optimization.
* `ebs_optimized_by_default` - Indicates whether the instance type uses Amazon EBS optimization by default.
* `ebs_storage_only` - Indicates whether the instance type only supports Amazon EBS.
* `instance_family_id` - The Amazon EC2 family and generation for the instance type.
* `is_64_bits_only` - Indicates whether the instance type only supports 64-bit architecture.
* `memory_gb` - Memory that is available to Amazon EMR from the instance type.
* `number_of_disks` - Number of disks for the instance type.
* `storage_gb` - Storage capacity of the instance type.
* `type` - Amazon EC2 instance type. For example, `m5.xlarge`.
* `vcpu` - The number of vCPUs available for the instance type.

<!-- cache-key: cdktf-0.20.8 input-ba212951c23add89500cd142afe5608d4a6a81dcaef51a7d3aedfa014eec03d7 -->