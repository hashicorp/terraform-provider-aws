---
subcategory: "CloudFront"
layout: "aws"
page_title: "AWS: aws_cloudfront_log_delivery_canonical_user_id"
description: |-
  Provides the canonical user ID of the AWS `awslogsdelivery` account for CloudFront bucket logging.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_cloudfront_log_delivery_canonical_user_id

The CloudFront Log Delivery Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS `awslogsdelivery` account for CloudFront bucket logging.
See the [Amazon CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) for more information.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_canonical_user_id import DataAwsCanonicalUserId
from imports.aws.data_aws_cloudfront_log_delivery_canonical_user_id import DataAwsCloudfrontLogDeliveryCanonicalUserId
from imports.aws.s3_bucket import S3Bucket
from imports.aws.s3_bucket_acl import S3BucketAcl
from imports.aws.s3_bucket_ownership_controls import S3BucketOwnershipControls
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = S3Bucket(self, "example",
            bucket="example"
        )
        aws_s3_bucket_ownership_controls_example = S3BucketOwnershipControls(self, "example_1",
            bucket=example.id,
            rule=S3BucketOwnershipControlsRule(
                object_ownership="BucketOwnerPreferred"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_s3_bucket_ownership_controls_example.override_logical_id("example")
        current = DataAwsCanonicalUserId(self, "current")
        data_aws_cloudfront_log_delivery_canonical_user_id_example =
        DataAwsCloudfrontLogDeliveryCanonicalUserId(self, "example_3")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_cloudfront_log_delivery_canonical_user_id_example.override_logical_id("example")
        aws_s3_bucket_acl_example = S3BucketAcl(self, "example_4",
            access_control_policy=S3BucketAclAccessControlPolicy(
                grant=[S3BucketAclAccessControlPolicyGrant(
                    grantee=S3BucketAclAccessControlPolicyGrantGrantee(
                        id=Token.as_string(data_aws_cloudfront_log_delivery_canonical_user_id_example.id),
                        type="CanonicalUser"
                    ),
                    permission="FULL_CONTROL"
                )
                ],
                owner=S3BucketAclAccessControlPolicyOwner(
                    id=Token.as_string(current.id)
                )
            ),
            bucket=example.id,
            depends_on=[aws_s3_bucket_ownership_controls_example]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_s3_bucket_acl_example.override_logical_id("example")
```

## Argument Reference

This data source supports the following arguments:

* `region` - (Optional) Region you'd like the zone for. By default, fetches the current region.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `id` - Canonical user ID for the AWS `awslogsdelivery` account in the region.

<!-- cache-key: cdktf-0.20.8 input-93b0ce0acde54dbb2724e7094b16f951a34315b647d556a75aa2324267cf2fad -->