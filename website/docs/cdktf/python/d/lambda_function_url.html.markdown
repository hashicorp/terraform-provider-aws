---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_function_url"
description: |-
  Provides details about an AWS Lambda Function URL.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_lambda_function_url

Provides details about an AWS Lambda Function URL. Use this data source to retrieve information about an existing function URL configuration.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformOutput, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_lambda_function_url import DataAwsLambdaFunctionUrl
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsLambdaFunctionUrl(self, "example",
            function_name="my_lambda_function"
        )
        TerraformOutput(self, "function_url",
            value=example.function_url
        )
```

### With Qualifier

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_lambda_function_url import DataAwsLambdaFunctionUrl
from imports.aws.route53_record import Route53Record
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsLambdaFunctionUrl(self, "example",
            function_name=Token.as_string(aws_lambda_function_example.function_name),
            qualifier="production"
        )
        Route53Record(self, "lambda_alias",
            name="api.example.com",
            records=[
                Token.as_string(
                    Fn.replace(Token.as_string(example.function_url), "https://", ""))
            ],
            ttl=300,
            type="CNAME",
            zone_id=Token.as_string(aws_route53_zone_example.zone_id)
        )
```

### Retrieve CORS Configuration

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Op, conditional, TerraformOutput, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_lambda_function_url import DataAwsLambdaFunctionUrl
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsLambdaFunctionUrl(self, "example",
            function_name="api_function"
        )
        cors_config = conditional(
            Op.gt(Fn.length_of(example.cors), 0),
            Fn.lookup_nested(example.cors, ["0"]), "null")
        allowed_origins = conditional(
            Op.neq(cors_config, "null"),
            Fn.lookup_nested(cors_config, ["allow_origins"]), [])
        TerraformOutput(self, "cors_allowed_origins",
            value=allowed_origins
        )
```

## Argument Reference

The following arguments are required:

* `function_name` - (Required) Name or ARN of the Lambda function.

The following arguments are optional:

* `qualifier` - (Optional) Alias name or `$LATEST`.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `authorization_type` - Type of authentication that the function URL uses.
* `cors` - Cross-origin resource sharing (CORS) settings for the function URL. [See below](#cors-attribute-reference).
* `creation_time` - When the function URL was created, in [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).
* `function_arn` - ARN of the function.
* `function_url` - HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws/`.
* `invoke_mode` - Whether the Lambda function responds in `BUFFERED` or `RESPONSE_STREAM` mode.
* `last_modified_time` - When the function URL configuration was last updated, in [ISO-8601 format](https://www.w3.org/TR/NOTE-datetime).
* `url_id` - Generated ID for the endpoint.

### cors Attribute Reference

* `allow_credentials` - Whether credentials are included in the CORS request.
* `allow_headers` - List of headers that are specified in the Access-Control-Request-Headers header.
* `allow_methods` - List of HTTP methods that are allowed when calling the function URL.
* `allow_origins` - List of origins that are allowed to make requests to the function URL.
* `expose_headers` - List of headers in the response that you want to expose to the origin that called the function URL.
* `max_age` - Maximum amount of time, in seconds, that web browsers can cache results of a preflight request.

<!-- cache-key: cdktf-0.20.8 input-a3fbb7d4a1cde826c9cf5ce4af263c86d37313ebad8b1b916b410f8067689714 -->