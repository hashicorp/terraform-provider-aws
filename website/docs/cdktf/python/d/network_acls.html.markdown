---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_network_acls"
description: |-
    Provides a list of network ACL ids for a VPC
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_network_acls

## Example Usage

The following shows outputting all network ACL ids in a vpc.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformOutput, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_network_acls import DataAwsNetworkAcls
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsNetworkAcls(self, "example",
            vpc_id=vpc_id.string_value
        )
        cdktf_terraform_output_example = TerraformOutput(self, "example_1",
            value=example.ids
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        cdktf_terraform_output_example.override_logical_id("example")
```

The following example retrieves a list of all network ACL ids in a VPC with a custom
tag of `Tier` set to a value of "Private".

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_network_acls import DataAwsNetworkAcls
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsNetworkAcls(self, "example",
            tags={
                "Tier": "Private"
            },
            vpc_id=vpc_id.string_value
        )
```

The following example retrieves a network ACL id in a VPC which associated
with specific subnet.

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_network_acls import DataAwsNetworkAcls
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsNetworkAcls(self, "example",
            filter=[DataAwsNetworkAclsFilter(
                name="association.subnet-id",
                values=[test.id]
            )
            ],
            vpc_id=vpc_id.string_value
        )
```

## Argument Reference

* `vpc_id` - (Optional) VPC ID that you want to filter from.

* `tags` - (Optional) Map of tags, each pair of which must exactly match
  a pair on the desired network ACLs.

* `filter` - (Optional) Custom filter block as described below.

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:

* `name` - (Required) Name of the field to filter by, as defined by
  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).

* `values` - (Required) Set of values that are accepted for the given field.
  A VPC will be selected if any one of the given values matches.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `id` - AWS Region.
* `ids` - List of all the network ACL ids found.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.8 input-9e00033620073e117ff35c3a96437d5e582bff32daaefd9214f39ae3299dcbdb -->