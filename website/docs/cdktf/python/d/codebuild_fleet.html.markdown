---
subcategory: "CodeBuild"
layout: "aws"
page_title: "AWS: aws_codebuild_fleet"
description: |-
  Retrieve information about an CodeBuild Fleet
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_codebuild_fleet

Retrieve information about an CodeBuild Fleet.

## Example Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.codebuild_fleet import CodebuildFleet
from imports.aws.data_aws_codebuild_fleet import DataAwsCodebuildFleet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        test = CodebuildFleet(self, "test",
            base_capacity=2,
            compute_type="BUILD_GENERAL1_SMALL",
            environment_type="LINUX_CONTAINER",
            name="full-example-codebuild-fleet",
            overflow_behavior="QUEUE",
            scaling_configuration=CodebuildFleetScalingConfiguration(
                max_capacity=5,
                scaling_type="TARGET_TRACKING_SCALING",
                target_tracking_scaling_configs=[CodebuildFleetScalingConfigurationTargetTrackingScalingConfigs(
                    metric_type="FLEET_UTILIZATION_RATE",
                    target_value=97.5
                )
                ]
            )
        )
        data_aws_codebuild_fleet_test = DataAwsCodebuildFleet(self, "test_1",
            name=test.name
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_codebuild_fleet_test.override_logical_id("test")
```

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_codebuild_fleet import DataAwsCodebuildFleet
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsCodebuildFleet(self, "example",
            name="my-codebuild-fleet-name"
        )
```

## Argument Reference

The following arguments are required:

* `name` - (Required) Fleet name.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Fleet.
* `base_capacity` - Number of machines allocated to the ﬂeet.
* `compute_configuration` - Compute configuration of the compute fleet.
    * `disk` - Amount of disk space of the instance type included in the fleet.
    * `machine_type` - Machine type of the instance type included in the fleet.
    * `memory` - Amount of memory of the instance type included in the fleet.
    * `vcpu` - Number of vCPUs of the instance type included in the fleet.
* `compute_type` - Compute resources the compute fleet uses.
* `created` - Creation time of the fleet.
* `environment_type` - Environment type of the compute fleet.
* `fleet_service_role` - The service role associated with the compute fleet.
* `id` - ARN of the Fleet.
* `image_id` - The Amazon Machine Image (AMI) of the compute fleet.
* `last_modified` - Last modification time of the fleet.
* `overflow_behavior` - Overflow behavior for compute fleet.
* `scaling_configuration` -  Nested attribute containing information about the scaling configuration.
    * `desired_capacity` - The desired number of instances in the ﬂeet when auto-scaling.
    * `max_capacity` - The maximum number of instances in the ﬂeet when auto-scaling.
    * `scaling_type` - The scaling type for a compute fleet.
    * `target_tracking_scaling_configs` - Nested attribute containing information about thresholds when new instance is auto-scaled into the compute fleet.
        * `metric_type` - The metric type to determine auto-scaling.
        * `target_value` - The value of metric_type when to start scaling.
* `status` - Nested attribute containing information about the current status of the fleet.
    * `context` - Additional information about a compute fleet.
    * `message` - Message associated with the status of a compute fleet.
    * `status_code` - Status code of the compute fleet.
* `tags` - Mapping of Key-Value tags for the resource.
* `vpc_config` - Nested attribute containing information about the VPC configuration.
    * `security_group_ids` - A list of one or more security groups IDs in your Amazon VPC.
    * `subnets` - A list of one or more subnet IDs in your Amazon VPC.
    * `vpc_id` - The ID of the Amazon VPC.

<!-- cache-key: cdktf-0.20.8 input-491769edc9be1c75876e7a5a84dad33645eb6230108b9cd1455d98c4aa15d046 -->