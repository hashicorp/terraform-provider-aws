---
subcategory: "AppConfig"
layout: "aws"
page_title: "AWS: aws_appconfig_configuration_profiles"
description: |-
    Terraform data source for managing an AWS AppConfig Configuration Profiles.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_appconfig_configuration_profiles

Provides access to all Configuration Properties for an AppConfig Application. This will allow you to pass Configuration
Profile IDs to another resource.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformIterator, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_appconfig_configuration_profile import DataAwsAppconfigConfigurationProfile
from imports.aws.data_aws_appconfig_configuration_profiles import DataAwsAppconfigConfigurationProfiles
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsAppconfigConfigurationProfiles(self, "example",
            application_id="a1d3rpe"
        )
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        example_for_each_iterator = TerraformIterator.from_list(
            Token.as_any(example.configuration_profile_ids))
        data_aws_appconfig_configuration_profile_example =
        DataAwsAppconfigConfigurationProfile(self, "example_1",
            application_id=Token.as_string(aws_appconfig_application_example.id),
            configuration_profile_id=Token.as_string(example_for_each_iterator.value),
            for_each=example_for_each_iterator
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_appconfig_configuration_profile_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `application_id` - (Required) ID of the AppConfig Application.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `configuration_profile_ids` - Set of Configuration Profile IDs associated with the AppConfig Application.

<!-- cache-key: cdktf-0.20.8 input-b4fc2e385f4cf8f2b77339adbebe9e03369792e3c761bb5599667ff5bad6268d -->