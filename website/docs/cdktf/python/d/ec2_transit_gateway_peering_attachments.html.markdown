---
subcategory: "Transit Gateway"
layout: "aws"
page_title: "AWS: aws_ec2_transit_gateway_peering_attachments"
description: |-
  Get information on EC2 Transit Gateway Peering Attachments
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_ec2_transit_gateway_peering_attachments

Get information on EC2 Transit Gateway Peering Attachments.

## Example Usage

### All Resources

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import DataAwsEc2TransitGatewayPeeringAttachments
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        DataAwsEc2TransitGatewayPeeringAttachments(self, "test")
```

### By Filter

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformCount, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws. import DataAwsEc2TransitGatewayPeeringAttachments
from imports.aws.data_aws_ec2_transit_gateway_peering_attachment import DataAwsEc2TransitGatewayPeeringAttachment
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        filtered = DataAwsEc2TransitGatewayPeeringAttachments(self, "filtered",
            filter=[{
                "name": "state",
                "values": ["pendingAcceptance"]
            }
            ]
        )
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        unit_count = TerraformCount.of(
            Token.as_number(Fn.length_of(filtered.ids)))
        DataAwsEc2TransitGatewayPeeringAttachment(self, "unit",
            id=Token.as_string(Fn.lookup_nested(filtered.ids, [unit_count.index])),
            count=unit_count
        )
```

## Argument Reference

This data source supports the following arguments:

* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.

### filter Argument Reference

* `name` - (Required) Name of the field to filter by, as defined by [the underlying AWS API][1]
* `values` - (Required) List of one or more values for the filter.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `ids` A list of all attachments ids matching the filter. You can retrieve more information about the attachment using the [aws_ec2_transit_gateway_peering_attachment][2] data source, searching by identifier.

[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html
[2]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ec2_transit_gateway_peering_attachment

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.1 input-b3e93364fc7a2123f1def158db8ce8c818facf6aeffe3642603bdae2f2525b1d -->