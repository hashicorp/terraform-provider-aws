---
subcategory: "FIS (Fault Injection Simulator)"
layout: "aws"
page_title: "AWS: aws_fis_experiment_templates"
description: |-
  Get information about a set of FIS Experiment Templates
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_fis_experiment_templates

This resource can be useful for getting back a set of FIS experiment template IDs.

## Example Usage

The following shows outputting a list of all FIS experiment template IDs

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformOutput, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_fis_experiment_templates import DataAwsFisExperimentTemplates
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        all = DataAwsFisExperimentTemplates(self, "all")
        cdktf_terraform_output_all = TerraformOutput(self, "all_1",
            value=all.ids
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        cdktf_terraform_output_all.override_logical_id("all")
```

The following shows filtering FIS experiment templates by tag

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, Fn, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_fis_experiment_templates import DataAwsFisExperimentTemplates
from imports.aws.data_aws_iam_policy_document import DataAwsIamPolicyDocument
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsFisExperimentTemplates(self, "example",
            tags={
                "Name": "example",
                "Tier": Token.as_string(1)
            }
        )
        data_aws_iam_policy_document_example = DataAwsIamPolicyDocument(self, "example_1",
            statement=[DataAwsIamPolicyDocumentStatement(
                actions=["fis:StartExperiment"],
                effect="Allow",
                resources=["arn:aws:fis:*:*:experiment-template/" +
                    Token.as_string(Fn.lookup_nested(example.ids, ["0"])), "arn:aws:fis:*:*:experiment/*"
                ],
                sid="StartFISExperiment"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_iam_policy_document_example.override_logical_id("example")
```

## Argument Reference

* `tags` - (Optional) Map of tags, each pair of which must exactly match
  a pair on the desired experiment templates.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `ids` - List of all the experiment template ids found.

<!-- cache-key: cdktf-0.20.8 input-1de350657fcef3be6a456372dafddc7be800fa6e9cf13640b7cf9f1c1083861e -->