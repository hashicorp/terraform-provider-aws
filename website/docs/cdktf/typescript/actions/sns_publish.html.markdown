---
subcategory: "SNS (Simple Notification)"
layout: "aws"
page_title: "AWS: aws_sns_publish"
description: |-
  Publishes a message to an Amazon SNS topic.
---


<!-- Please do not edit this file, it is generated. -->
# Action: aws_sns_publish

~> **Note:** `aws_sns_publish` is in beta. Its interface and behavior may change as the feature evolves, and breaking changes are possible. It is offered as a technical preview without compatibility guarantees until Terraform 1.14 is generally available.

Publishes a message to an Amazon SNS topic. This action allows for imperative message publishing with full control over message attributes and structure.

For information about Amazon SNS, see the [Amazon SNS Developer Guide](https://docs.aws.amazon.com/sns/latest/dg/). For specific information about publishing messages, see the [Publish](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) page in the Amazon SNS API Reference.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { DataResource, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SnsTopic(this, "example", {
      name: "example-topic",
    });
    const terraformDataExample = new DataResource(this, "example_1", {
      input: "trigger-message",
      lifecycle: {
        actionTrigger: [
          {
            actions: [awsSnsPublish.example],
            events: [beforeCreate, beforeUpdate],
          },
        ],
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    terraformDataExample.overrideLogicalId("example");
  }
}

```

### Message with Subject

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

### JSON Message Structure

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

### Message with Attributes

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

### Deployment Notification

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { DataResource, TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataResource(this, "deploy_trigger", {
      dependsOn: [app, main],
      input: deploymentId.value,
      lifecycle: {
        actionTrigger: [
          {
            actions: [awsSnsPublish.deployComplete],
            events: [beforeCreate, beforeUpdate],
          },
        ],
      },
    });
  }
}

```

## Argument Reference

This action supports the following arguments:

* `message` - (Required) Message to publish. For JSON message structure, this should be a JSON object with protocol-specific messages. Maximum size is 256 KB.
* `message_attributes` - (Optional) Message attributes to include with the message. Each attribute consists of a name, data type, and value. Up to 10 attributes are allowed. [See below.](#message-attributes)
* `message_structure` - (Optional) Set to `json` if you want to send different messages for each protocol. If not specified, the message will be sent as-is to all protocols.
* `subject` - (Optional) Optional subject for the message. Only used for email and email-json protocols. Maximum length is 100 characters.
* `topicArn` - (Required) ARN of the SNS topic to publish the message to.

### Message Attributes

The `message_attributes` block supports:

* `dataType` - (Required) Data type of the message attribute. Valid values are `String`, `Number`, and `Binary`.
* `mapBlockKey` - (Required) Name of the message attribute (used as map key). Must be unique within the message.
* `stringValue` - (Required) Value of the message attribute.

<!-- cache-key: cdktf-0.20.8 input-c0478d7376f377525252e3f6b26d58d33907fdecb7f5a8dc67fbc710a54f4f28 -->