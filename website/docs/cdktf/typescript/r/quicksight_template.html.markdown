---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_template"
description: |-
  Manages a QuickSight Template.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_template

Resource for managing a QuickSight Template.

## Example Usage

### From Source Template

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightTemplate } from "./.gen/providers/aws/quicksight-template";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new QuicksightTemplate(this, "example", {
      name: "example-name",
      sourceEntity: {
        sourceTemplate: {
          arn: source.arn,
        },
      },
      templateId: "example-id",
      versionDescription: "version",
    });
  }
}

```

### With Definition

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightTemplate } from "./.gen/providers/aws/quicksight-template";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new QuicksightTemplate(this, "example", {
      definition: {
        dataSetConfiguration: [
          {
            dataSetSchema: {
              columnSchemaList: [
                {
                  dataType: "STRING",
                  name: "Column1",
                },
                {
                  dataType: "INTEGER",
                  name: "Column2",
                },
              ],
            },
            placeholder: "1",
          },
        ],
        sheets: [
          {
            sheetId: "Test1",
            title: "Test",
            visuals: [
              {
                barChartVisual: {
                  chartConfiguration: {
                    fieldWells: {
                      barChartAggregatedFieldWells: {
                        category: [
                          {
                            categoricalDimensionField: {
                              column: {
                                columnName: "Column1",
                                dataSetIdentifier: "1",
                              },
                              fieldId: "1",
                            },
                          },
                        ],
                        values: [
                          {
                            numericalMeasureField: {
                              aggregationFunction: {
                                simpleNumericalAggregation: "SUM",
                              },
                              column: {
                                columnName: "Column2",
                                dataSetIdentifier: "1",
                              },
                              fieldId: "2",
                            },
                          },
                        ],
                      },
                    },
                  },
                  visualId: "BarChart",
                },
              },
            ],
          },
        ],
      },
      name: "example-name",
      templateId: "example-id",
      versionDescription: "version",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `templateId` - (Required, Forces new resource) Identifier for the template.
* `name` - (Required) Display name for the template.
* `versionDescription` - (Required) A description of the current template version being created/updated.

The following arguments are optional:

* `awsAccountId` - (Optional, Forces new resource) AWS account ID.
* `definition` - (Optional) A detailed template definition. Only one of `definition` or `sourceEntity` should be configured. See [definition](#definition).
* `permissions` - (Optional) A set of resource permissions on the template. Maximum of 64 items. See [permissions](#permissions).
* `sourceEntity` - (Optional) The entity that you are using as a source when you create the template (analysis or template). Only one of `definition` or `sourceEntity` should be configured. See [source_entity](#source_entity).
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### permissions

* `actions` - (Required) List of IAM actions to grant or revoke permissions on.
* `principal` - (Required) ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.

### source_entity

* `sourceAnalysis` - (Optional) The source analysis, if it is based on an analysis.. Only one of `sourceAnalysis` or `sourceTemplate` should be configured. See [source_analysis](#source_analysis).
* `sourceTemplate` - (Optional) The source template, if it is based on an template.. Only one of `sourceAnalysis` or `sourceTemplate` should be configured. See [source_template](#source_template).

### source_analysis

* `arn` - (Required) The Amazon Resource Name (ARN) of the resource.
* `dataSetReferences` - (Required) A list of dataset references used as placeholders in the template. See [data_set_references](#data_set_references).

### data_set_references

* `dataSetArn` - (Required) Dataset Amazon Resource Name (ARN).
* `dataSetPlaceholder` - (Required) Dataset placeholder.

### source_template

* `arn` - (Required) The Amazon Resource Name (ARN) of the resource.

### definition

* `dataSetConfiguration` - (Required) A list of dataset configurations. These configurations define the required columns for each dataset used within a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DataSetConfiguration.html).
* `analysisDefaults` - (Optional) The configuration for default analysis settings. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_AnalysisDefaults.html).
* `calculatedFields` - (Optional) A list of calculated field definitions for the template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CalculatedField.html).
* `columnConfigurations` - (Optional) A list of template-level column configurations. Column configurations are used to set default formatting for a column that's used throughout a template. See [AWS API Documentation for complete description](ttps://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnConfiguration.html).
* `filterGroups` - (Optional) A list of filter definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_FilterGroup.html). For more information, see [Filtering Data](https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html) in Amazon QuickSight User Guide.
* `parametersDeclarations` - (Optional) A list of parameter declarations for a template. Parameters are named variables that can transfer a value for use by an action or an object. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ParameterDeclaration.html). For more information, see [Parameters in Amazon QuickSight](https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html) in the Amazon QuickSight User Guide.
* `sheets` - (Optional) A list of sheet definitions for a template. See [AWS API Documentation for complete description](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_SheetDefinition.html).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the template.
* `createdTime` - The time that the template was created.
* `id` - A comma-delimited string joining AWS account ID and template ID.
* `lastUpdatedTime` - The time that the template was last updated.
* `sourceEntityArn` - Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
* `status` - The template creation status.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).
* `versionNumber` - The version number of the template version.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a QuickSight Template using the AWS account ID and template ID separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightTemplate } from "./.gen/providers/aws/quicksight-template";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    QuicksightTemplate.generateConfigForImport(
      this,
      "example",
      "123456789012,example-id"
    );
  }
}

```

Using `terraform import`, import a QuickSight Template using the AWS account ID and template ID separated by a comma (`,`). For example:

```console
% terraform import aws_quicksight_template.example 123456789012,example-id
```

<!-- cache-key: cdktf-0.20.8 input-684fee6425d01e2059464d789630cbb0f5fd11eece6c679b299e9511a988d107 -->