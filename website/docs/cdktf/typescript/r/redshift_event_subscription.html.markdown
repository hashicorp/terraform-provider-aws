---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_event_subscription"
description: |-
  Provides a Redshift event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_event_subscription

Provides a Redshift event subscription resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftCluster } from "./.gen/providers/aws/redshift-cluster";
import { RedshiftEventSubscription } from "./.gen/providers/aws/redshift-event-subscription";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
interface MyConfig {
  nodeType: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const defaultVar = new RedshiftCluster(this, "default", {
      clusterIdentifier: "default",
      databaseName: "default",
      nodeType: config.nodeType,
    });
    const awsSnsTopicDefault = new SnsTopic(this, "default_1", {
      name: "redshift-events",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSnsTopicDefault.overrideLogicalId("default");
    const awsRedshiftEventSubscriptionDefault = new RedshiftEventSubscription(
      this,
      "default_2",
      {
        eventCategories: [
          "configuration",
          "management",
          "monitoring",
          "security",
        ],
        name: "redshift-event-sub",
        severity: "INFO",
        snsTopicArn: Token.asString(awsSnsTopicDefault.arn),
        sourceIds: [defaultVar.id],
        sourceType: "cluster",
        tags: {
          Name: "default",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRedshiftEventSubscriptionDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the Redshift event subscription.
* `snsTopicArn` - (Required) The ARN of the SNS topic to send events to.
* `sourceIds` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `sourceType` must also be specified.
* `sourceType` - (Optional) The type of source that will be generating the events. Valid options are `cluster`, `cluster-parameter-group`, `cluster-security-group`, `cluster-snapshot`, or `scheduled-action`. If not set, all sources will be subscribed to.
* `severity` - (Optional) The event severity to be published by the notification subscription. Valid options are `INFO` or `ERROR`. Default value of `INFO`.
* `eventCategories` - (Optional) A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html or run `aws redshift describe-event-categories`.
* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to `true`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the Redshift event notification subscription
* `id` - The name of the Redshift event notification subscription
* `customerAwsId` - The AWS customer account associated with the Redshift event notification subscription
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Event Subscriptions using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftEventSubscription } from "./.gen/providers/aws/redshift-event-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftEventSubscription.generateConfigForImport(
      this,
      "default",
      "redshift-event-sub"
    );
  }
}

```

Using `terraform import`, import Redshift Event Subscriptions using the `name`. For example:

```console
% terraform import aws_redshift_event_subscription.default redshift-event-sub
```

<!-- cache-key: cdktf-0.20.8 input-15f307fc07a5350a90201b05a1ab1284198872ef394e5f0b141e17d35b730070 -->