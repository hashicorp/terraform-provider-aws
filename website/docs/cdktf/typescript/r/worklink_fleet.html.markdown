---
subcategory: "WorkLink"
layout: "aws"
page_title: "AWS: aws_worklink_fleet"
description: |-
  Provides a AWS WorkLink Fleet resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_worklink_fleet

Provides a AWS WorkLink Fleet resource.

!> **WARNING:** The `aws_worklink_fleet` resource has been deprecated and will be removed in a future version. Use Amazon WorkSpaces Secure Browser instead.

## Example Usage

Basic usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorklinkFleet } from "./.gen/providers/aws/worklink-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorklinkFleet(this, "example", {
      name: "terraform-example",
    });
  }
}

```

Network Configuration Usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorklinkFleet } from "./.gen/providers/aws/worklink-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorklinkFleet(this, "example", {
      name: "terraform-example",
      network: {
        securityGroupIds: [test.id],
        subnetIds: [
          Token.asString(Fn.lookupNested(awsSubnetTest, ["*", "id"])),
        ],
        vpcId: Token.asString(awsVpcTest.id),
      },
    });
  }
}

```

Identity Provider Configuration Usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorklinkFleet } from "./.gen/providers/aws/worklink-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorklinkFleet(this, "test", {
      identityProvider: {
        samlMetadata: Token.asString(Fn.file("saml-metadata.xml")),
        type: "SAML",
      },
      name: "tf-worklink-fleet",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) A region-unique name for the AMI.
* `auditStreamArn` - (Optional) The ARN of the Amazon Kinesis data stream that receives the audit events. Kinesis data stream name must begin with `"AmazonWorkLink-"`.
* `deviceCaCertificate` - (Optional) The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.
* `identityProvider` - (Optional) Provide this to allow manage the identity provider configuration for the fleet. Fields documented below.
* `displayName` - (Optional) The name of the fleet.
* `network` - (Optional) Provide this to allow manage the company network configuration for the fleet. Fields documented below.
* `optimizeForEndUserLocation` - (Optional) The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region. Defaults to `true`.

**network** requires the following:

~> **NOTE:** `network` cannot be removed without force recreating by `terraform taint`.

* `vpcId` - (Required) The VPC ID with connectivity to associated websites.
* `subnetIds` - (Required) A list of subnet IDs used for X-ENI connections from Amazon WorkLink rendering containers.
* `securityGroupIds` - (Required) A list of security group IDs associated with access to the provided subnets.

**identity_provider** requires the following:

~> **NOTE:** `identityProvider` cannot be removed without force recreating by `terraform taint`.

* `type` - (Required) The type of identity provider.
* `samlMetadata` - (Required) The SAML metadata document provided by the customerâ€™s identity provider.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ARN of the created WorkLink Fleet.
* `arn` - The ARN of the created WorkLink Fleet.
* `companyCode` - The identifier used by users to sign in to the Amazon WorkLink app.
* `createdTime` - The time that the fleet was created.
* `lastUpdatedTime` - The time that the fleet was last updated.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkLink using the ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorklinkFleet } from "./.gen/providers/aws/worklink-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorklinkFleet.generateConfigForImport(
      this,
      "test",
      "arn:aws:worklink::123456789012:fleet/example"
    );
  }
}

```

Using `terraform import`, import WorkLink using the ARN. For example:

```console
% terraform import aws_worklink_fleet.test arn:aws:worklink::123456789012:fleet/example
```

<!-- cache-key: cdktf-0.20.8 input-de4721d0f567af2f20e065d8192e4e8dd3de568ba8f5bfb6fa4c9439256c075c -->