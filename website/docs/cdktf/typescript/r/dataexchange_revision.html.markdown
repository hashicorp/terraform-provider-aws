---
subcategory: "Data Exchange"
layout: "aws"
page_title: "AWS: aws_dataexchange_revision"
description: |-
  Provides a DataExchange Revision
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dataexchange_revision

Provides a resource to manage AWS Data Exchange Revisions.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataexchangeRevision } from "./.gen/providers/aws/dataexchange-revision";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataexchangeRevision(this, "example", {
      dataSetId: Token.asString(awsDataexchangeDataSetExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `dataSetId` - (Required) The dataset id.
* `comment` - (Required) An optional comment about the revision.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Id of the data set.
* `revisionId` - The Id of the revision.
* `arn` - The Amazon Resource Name of this data set.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DataExchange Revisions using their `data-set-id:revision-id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataexchangeRevision } from "./.gen/providers/aws/dataexchange-revision";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DataexchangeRevision.generateConfigForImport(
      this,
      "example",
      "4fa784c7-ccb4-4dbf-ba4f-02198320daa1:4fa784c7-ccb4-4dbf-ba4f-02198320daa1"
    );
  }
}

```

Using `terraform import`, import DataExchange Revisions using their `data-set-id:revision-id`. For example:

```console
% terraform import aws_dataexchange_revision.example 4fa784c7-ccb4-4dbf-ba4f-02198320daa1:4fa784c7-ccb4-4dbf-ba4f-02198320daa1
```

<!-- cache-key: cdktf-0.20.8 input-04c054f1de1c3058cf50874fec9c98503b25376135616f7bb981f43361b49dde -->