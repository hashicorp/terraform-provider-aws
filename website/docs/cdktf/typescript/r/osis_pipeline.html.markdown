---
subcategory: "OpenSearch Ingestion"
layout: "aws"
page_title: "AWS: aws_osis_pipeline"
description: |-
  Terraform resource for managing an AWS OpenSearch Ingestion Pipeline.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_osis_pipeline

Terraform resource for managing an AWS OpenSearch Ingestion Pipeline.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { IamRole } from "./.gen/providers/aws/iam-role";
import { OsisPipeline } from "./.gen/providers/aws/osis-pipeline";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new IamRole(this, "example", {
      assumeRolePolicy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: "sts:AssumeRole",
              Effect: "Allow",
              Principal: {
                Service: "osis-pipelines.amazonaws.com",
              },
              Sid: "",
            },
          ],
          Version: "2012-10-17",
        })
      ),
    });
    const current = new DataAwsRegion(this, "current", {});
    const awsOsisPipelineExample = new OsisPipeline(this, "example_2", {
      maxUnits: 1,
      minUnits: 1,
      pipelineConfigurationBody:
        'version: "2"\nexample-pipeline:\n  source:\n    http:\n      path: "/example"\n  sink:\n    - s3:\n        aws:\n          sts_role_arn: "${' +
        example.arn +
        '}"\n          region: "${' +
        current.name +
        '}"\n        bucket: "example"\n        threshold:\n          event_collect_timeout: "60s"\n        codec:\n          ndjson:\n\n',
      pipelineName: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsOsisPipelineExample.overrideLogicalId("example");
  }
}

```

### Using file function

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OsisPipeline } from "./.gen/providers/aws/osis-pipeline";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OsisPipeline(this, "example", {
      maxUnits: 1,
      minUnits: 1,
      pipelineConfigurationBody: Token.asString(Fn.file("example.yaml")),
      pipelineName: "example",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `maxUnits` - (Required) The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
* `minUnits` - (Required) The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
* `pipelineConfigurationBody` - (Required) The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \n.
* `pipelineName` - (Required) The name of the OpenSearch Ingestion pipeline to create. Pipeline names are unique across the pipelines owned by an account within an AWS Region.

The following arguments are optional:

* `bufferOptions` - (Optional) Key-value pairs to configure persistent buffering for the pipeline. See [`bufferOptions`](#buffer_options) below.
* `encryptionAtRestOptions` - (Optional) Key-value pairs to configure encryption for data that is written to a persistent buffer. See [`encryptionAtRestOptions`](#encryption_at_rest_options) below.
* `logPublishingOptions` - (Optional) Key-value pairs to configure log publishing. See [`logPublishingOptions`](#log_publishing_options) below.
* `tags` - (Optional) A map of tags to assign to the pipeline. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `vpcOptions` - (Optional) Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See [`vpcOptions`](#vpc_options) below.

### buffer_options

* `persistentBufferEnabled` - (Required) Whether persistent buffering should be enabled.

### encryption_at_rest_options

* `kmsKeyArn` - (Required) The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.

### log_publishing_options

* `cloudwatchLogDestination` - (Optional) The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See [`cloudwatchLogDestination`](#cloudwatch_log_destination) below.
* `isLoggingEnabled` - (Optional) Whether logs should be published.

### cloudwatch_log_destination

* `logGroup` - (Required) The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.

### vpc_options

* `subnetIds` - (Required) A list of subnet IDs associated with the VPC endpoint.
* `securityGroupIds` - (Optional) A list of security groups associated with the VPC endpoint.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique identifier for the pipeline.
* `ingestEndpointUrls` - The list of ingestion endpoints for the pipeline, which you can send data to.
* `pipelineArn` - Amazon Resource Name (ARN) of the pipeline.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `45m`)
* `update` - (Default `45m`)
* `delete` - (Default `45m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearch Ingestion Pipeline using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OsisPipeline } from "./.gen/providers/aws/osis-pipeline";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OsisPipeline.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import OpenSearch Ingestion Pipeline using the `id`. For example:

```console
% terraform import aws_osis_pipeline.example example
```

<!-- cache-key: cdktf-0.20.8 input-102e9aec43b3118029eeda9efb34ad22903eda3b2298d7b6960f663cf5642db3 -->