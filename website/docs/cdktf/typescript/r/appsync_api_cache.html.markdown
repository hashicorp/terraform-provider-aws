---
subcategory: "AppSync"
layout: "aws"
page_title: "AWS: aws_appsync_api_cache"
description: |-
  Provides an AppSync API Cache.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appsync_api_cache

Provides an AppSync API Cache.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppsyncApiCache } from "./.gen/providers/aws/appsync-api-cache";
import { AppsyncGraphqlApi } from "./.gen/providers/aws/appsync-graphql-api";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new AppsyncGraphqlApi(this, "example", {
      authenticationType: "API_KEY",
      name: "example",
    });
    const awsAppsyncApiCacheExample = new AppsyncApiCache(this, "example_1", {
      apiCachingBehavior: "FULL_REQUEST_CACHING",
      apiId: example.id,
      ttl: 900,
      type: "LARGE",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppsyncApiCacheExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `apiId` - (Required) GraphQL API ID.
* `apiCachingBehavior` - (Required) Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.
* `type` - (Required) Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.
* `ttl` - (Required) TTL in seconds for cache entries.
* `atRestEncryptionEnabled` - (Optional) At-rest encryption flag for cache. You cannot update this setting after creation.
* `transitEncryptionEnabled` - (Optional) Transit encryption flag when connecting to cache. You cannot update this setting after creation.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - AppSync API ID.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_appsync_api_cache` using the AppSync API ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppsyncApiCache } from "./.gen/providers/aws/appsync-api-cache";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AppsyncApiCache.generateConfigForImport(this, "example", "xxxxx");
  }
}

```

Using `terraform import`, import `aws_appsync_api_cache` using the AppSync API ID. For example:

```console
% terraform import aws_appsync_api_cache.example xxxxx
```

<!-- cache-key: cdktf-0.20.8 input-7b300ac441f82586ce425ea9b3f1fabbacd0aa2e6e9a8cba068619ac2633970e -->