---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_resource_discovery_association"
description: |-
  Provides an IPAM Resource Discovery Association resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_ipam_resource_discovery_association

Provides an association between an Amazon IP Address Manager (IPAM) and a IPAM Resource Discovery. IPAM Resource Discoveries are resources meant for multi-organization customers. If you wish to use a single IPAM across multiple orgs, a resource discovery can be created and shared from a subordinate organization to the management organizations IPAM delegated admin account.

Once an association is created between two organizations via IPAM & a IPAM Resource Discovery, IPAM Pools can be shared via Resource Access Manager (RAM) to accounts in the subordinate organization; these RAM shares must be accepted by the end user account. Pools can then also discover and monitor IPAM resources in the subordinate organization.

## Example Usage

Basic usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcIpamResourceDiscoveryAssociation } from "./.gen/providers/aws/vpc-ipam-resource-discovery-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpcIpamResourceDiscoveryAssociation(this, "test", {
      ipamId: Token.asString(awsVpcIpamTest.id),
      ipamResourceDiscoveryId: Token.asString(
        awsVpcIpamResourceDiscoveryTest.id
      ),
      tags: {
        Name: "test",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `ipamId` - (Required) The ID of the IPAM to associate.
* `ipamResourceDiscoveryId` - (Required) The ID of the Resource Discovery to associate.
* `tags` - (Optional) A map of tags to add to the IPAM resource discovery association resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of IPAM Resource Discovery Association.
* `id` - The ID of the IPAM Resource Discovery Association.
* `ownerId` - The account ID for the account that manages the Resource Discovery
* `ipamArn` - The Amazon Resource Name (ARN) of the IPAM.
* `ipamRegion` - The home region of the IPAM.
* `isDefault` - A boolean to identify if the Resource Discovery is the accounts default resource discovery.
* `state` - The lifecycle state of the association when you associate or disassociate a resource discovery.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IPAMs using the IPAM resource discovery association `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcIpamResourceDiscoveryAssociation } from "./.gen/providers/aws/vpc-ipam-resource-discovery-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcIpamResourceDiscoveryAssociation.generateConfigForImport(
      this,
      "example",
      "ipam-res-disco-assoc-0178368ad2146a492"
    );
  }
}

```

Using `terraform import`, import IPAMs using the IPAM resource discovery association `id`. For example:

```console
% terraform import aws_vpc_ipam_resource_discovery_association.example ipam-res-disco-assoc-0178368ad2146a492
```

<!-- cache-key: cdktf-0.20.8 input-2c4fa99bfb738f9f0be2e68e4355392d3059a63e4a0484bb71e7e7d9ceaf0056 -->