---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_protection_health_check_association"
description: |-
  Creates an association between a Route53 Health Check and a Shield Advanced protected resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_protection_health_check_association

Creates an association between a Route53 Health Check and a Shield Advanced protected resource.
This association uses the health of your applications to improve responsiveness and accuracy in attack detection and mitigation.

Blog post: [AWS Shield Advanced now supports Health Based Detection](https://aws.amazon.com/about-aws/whats-new/2020/02/aws-shield-advanced-now-supports-health-based-detection/)

## Example Usage

### Create an association between a protected EIP and a Route53 Health Check

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsPartition } from "./.gen/providers/aws/data-aws-partition";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { Eip } from "./.gen/providers/aws/eip";
import { Route53HealthCheck } from "./.gen/providers/aws/route53-health-check";
import { ShieldProtection } from "./.gen/providers/aws/shield-protection";
import { ShieldProtectionHealthCheckAssociation } from "./.gen/providers/aws/shield-protection-health-check-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Eip(this, "example", {
      domain: "vpc",
      tags: {
        Name: "example",
      },
    });
    const awsRoute53HealthCheckExample = new Route53HealthCheck(
      this,
      "example_1",
      {
        failureThreshold: Token.asNumber("3"),
        ipAddress: example.publicIp,
        port: 80,
        requestInterval: Token.asNumber("30"),
        resourcePath: "/ready",
        tags: {
          Name: "tf-example-health-check",
        },
        type: "HTTP",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRoute53HealthCheckExample.overrideLogicalId("example");
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new DataAwsPartition(this, "current_3", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_4", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    const awsShieldProtectionExample = new ShieldProtection(this, "example_5", {
      name: "example-protection",
      resourceArn:
        "arn:${" +
        dataAwsPartitionCurrent.partition +
        "}:ec2:${" +
        dataAwsRegionCurrent.name +
        "}:${" +
        current.accountId +
        "}:eip-allocation/${" +
        example.id +
        "}",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProtectionExample.overrideLogicalId("example");
    const awsShieldProtectionHealthCheckAssociationExample =
      new ShieldProtectionHealthCheckAssociation(this, "example_6", {
        healthCheckArn: Token.asString(awsRoute53HealthCheckExample.arn),
        shieldProtectionId: Token.asString(awsShieldProtectionExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProtectionHealthCheckAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `healthCheckArn` - (Required) The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.
* `shieldProtectionId` - (Required) The ID of the protected resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The unique identifier (ID) for the Protection object that is created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield protection health check association resources using the `shieldProtectionId` and `healthCheckArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ShieldProtectionHealthCheckAssociation } from "./.gen/providers/aws/shield-protection-health-check-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ShieldProtectionHealthCheckAssociation.generateConfigForImport(
      this,
      "example",
      "ff9592dc-22f3-4e88-afa1-7b29fde9669a+arn:aws:route53:::healthcheck/3742b175-edb9-46bc-9359-f53e3b794b1b"
    );
  }
}

```

Using `terraform import`, import Shield protection health check association resources using the `shieldProtectionId` and `healthCheckArn`. For example:

```console
% terraform import aws_shield_protection_health_check_association.example ff9592dc-22f3-4e88-afa1-7b29fde9669a+arn:aws:route53:::healthcheck/3742b175-edb9-46bc-9359-f53e3b794b1b
```

<!-- cache-key: cdktf-0.20.8 input-478a1032d8fe5c2226eef877393c56223519392521f48d921b8d7bf25f16a9aa -->