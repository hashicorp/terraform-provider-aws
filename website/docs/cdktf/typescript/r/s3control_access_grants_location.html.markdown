---
subcategory: "S3 Control"
layout: "aws"
page_title: "AWS: aws_s3control_access_grants_location"
description: |-
  Provides a resource to manage an S3 Access Grants location.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3control_access_grants_location

Provides a resource to manage an S3 Access Grants location.
A location is an S3 resource (bucket or prefix) in a permission grant that the grantee can access.
The S3 data must be in the same Region as your S3 Access Grants instance.
When you register a location, you must include the IAM role that has permission to manage the S3 location that you are registering.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlAccessGrantsInstance } from "./.gen/providers/aws/s3-control-access-grants-instance";
import { S3ControlAccessGrantsLocation } from "./.gen/providers/aws/s3-control-access-grants-location";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3ControlAccessGrantsInstance(this, "example", {});
    const awsS3ControlAccessGrantsLocationExample =
      new S3ControlAccessGrantsLocation(this, "example_1", {
        dependsOn: [example],
        iamRoleArn: Token.asString(awsIamRoleExample.arn),
        locationScope: "s3://",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3ControlAccessGrantsLocationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `accountId` - (Optional) The AWS account ID for the S3 Access Grants location. Defaults to automatically determined account ID of the Terraform AWS provider.
* `iamRoleArn` - (Required) The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
requests to the location.
* `locationScope` - (Required) The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `accessGrantsLocationArn` - Amazon Resource Name (ARN) of the S3 Access Grants location.
* `accessGrantsLocationId` - Unique ID of the S3 Access Grants location.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 Access Grants locations using the `accountId` and `accessGrantsLocationId`, separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlAccessGrantsLocation } from "./.gen/providers/aws/s3-control-access-grants-location";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3ControlAccessGrantsLocation.generateConfigForImport(
      this,
      "example",
      "123456789012,default"
    );
  }
}

```

Using `terraform import`, import S3 Access Grants locations using the `accountId` and `accessGrantsLocationId`, separated by a comma (`,`). For example:

```console
% terraform import aws_s3control_access_grants_location.example 123456789012,default
```

<!-- cache-key: cdktf-0.20.8 input-00a08b277ec91e24309d1edae7d8df05172848de4d8e44b507d33423f4b4aa85 -->