---
subcategory: "DynamoDB"
layout: "aws"
page_title: "AWS: aws_dynamodb_tag"
description: |-
  Manages an individual DynamoDB resource tag
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dynamodb_tag

Manages an individual DynamoDB resource tag. This resource should only be used in cases where DynamoDB resources are created outside Terraform (e.g., Table replicas in other regions).

~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_dynamodb_table` and `aws_dynamodb_tag` to manage tags of the same DynamoDB Table in the same region will cause a perpetual difference where the `aws_dynamodb_cluster` resource will try to remove the tag being added by the `aws_dynamodb_tag` resource.

~> **NOTE:** This tagging resource does not use the [provider `ignoreTags` configuration](/docs/providers/aws/index.html#ignore_tags).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { DynamodbTable } from "./.gen/providers/aws/dynamodb-table";
import { DynamodbTag } from "./.gen/providers/aws/dynamodb-tag";
import { AwsProvider } from "./.gen/providers/aws/provider";
interface MyConfig {
  name: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new AwsProvider(this, "aws", {
      region: "us-west-2",
    });
    const replica = new AwsProvider(this, "aws_1", {
      alias: "replica",
      region: "us-east-1",
    });
    const current = new DataAwsRegion(this, "current", {});
    const dataAwsRegionReplica = new DataAwsRegion(this, "replica", {
      provider: replica,
    });
    const example = new DynamodbTable(this, "example", {
      replica: [
        {
          regionName: Token.asString(dataAwsRegionReplica.name),
        },
      ],
      name: config.name,
    });
    new DynamodbTag(this, "test", {
      key: "testkey",
      provider: replica,
      resourceArn: Token.asString(
        Fn.replace(
          example.arn,
          Token.asString(current.name),
          Token.asString(dataAwsRegionReplica.name)
        )
      ),
      value: "testvalue",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `resourceArn` - (Required) Amazon Resource Name (ARN) of the DynamoDB resource to tag.
* `key` - (Required) Tag name.
* `value` - (Required) Tag value.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - DynamoDB resource identifier and key, separated by a comma (`,`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_dynamodb_tag` using the DynamoDB resource identifier and key, separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DynamodbTag } from "./.gen/providers/aws/dynamodb-tag";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DynamodbTag.generateConfigForImport(
      this,
      "example",
      "arn:aws:dynamodb:us-east-1:123456789012:table/example,Name"
    );
  }
}

```

Using `terraform import`, import `aws_dynamodb_tag` using the DynamoDB resource identifier and key, separated by a comma (`,`). For example:

```console
% terraform import aws_dynamodb_tag.example arn:aws:dynamodb:us-east-1:123456789012:table/example,Name
```

<!-- cache-key: cdktf-0.20.8 input-75e8bd469b3a6122cab5fe6f134e77c1f13bdbca2f2645fd979c4c90c7684f40 -->