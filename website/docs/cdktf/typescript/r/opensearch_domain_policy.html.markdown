---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_domain_policy"
description: |-
  Provides an OpenSearch Domain Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_domain_policy

Allows setting policy to an OpenSearch domain while referencing domain attributes (e.g., ARN).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { OpensearchDomain } from "./.gen/providers/aws/opensearch-domain";
import { OpensearchDomainPolicy } from "./.gen/providers/aws/opensearch-domain-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new OpensearchDomain(this, "example", {
      domainName: "tf-test",
      engineVersion: "OpenSearch_1.1",
    });
    const main = new DataAwsIamPolicyDocument(this, "main", {
      statement: [
        {
          actions: ["es:*"],
          condition: [
            {
              test: "IpAddress",
              values: ["127.0.0.1/32"],
              variable: "aws:SourceIp",
            },
          ],
          effect: "Allow",
          principals: [
            {
              identifiers: ["*"],
              type: "*",
            },
          ],
          resources: ["${" + example.arn + "}/*"],
        },
      ],
    });
    const awsOpensearchDomainPolicyMain = new OpensearchDomainPolicy(
      this,
      "main_2",
      {
        accessPolicies: Token.asString(main.json),
        domainName: example.domainName,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsOpensearchDomainPolicyMain.overrideLogicalId("main");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `accessPolicies` - (Optional) IAM policy document specifying the access policies for the domain
* `domainName` - (Required) Name of the domain.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `update` - (Default `180m`)
* `delete` - (Default `90m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearch Domain Policy using `domainName` prefixed with `esd-policy-`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchDomainPolicy } from "./.gen/providers/aws/opensearch-domain-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OpensearchDomainPolicy.generateConfigForImport(
      this,
      "example",
      "esd-policy-tf-test"
    );
  }
}

```

Using `terraform import`, import OpenSearch Domain Policy using `domainName` prefixed with `esd-policy-`. For example:

```console
% terraform import aws_opensearch_domain_policy.example esd-policy-tf-test
```

<!-- cache-key: cdktf-0.20.8 input-db06c612500502df2a1e52f84ce9177be196dd144c134442025874d77e2fc7b7 -->