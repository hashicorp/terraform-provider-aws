---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_ingestion"
description: |-
  Terraform resource for managing an AWS QuickSight Ingestion.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_ingestion

Terraform resource for managing an AWS QuickSight Ingestion.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightIngestion } from "./.gen/providers/aws/quicksight-ingestion";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new QuicksightIngestion(this, "example", {
      dataSetId: Token.asString(awsQuicksightDataSetExample.dataSetId),
      ingestionId: "example-id",
      ingestionType: "FULL_REFRESH",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `dataSetId` - (Required) ID of the dataset used in the ingestion.
* `ingestionId` - (Required) ID for the ingestion.
* `ingestionType` - (Required) Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.

The following arguments are optional:

* `awsAccountId` - (Optional) AWS account ID.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Ingestion.
* `id` - A comma-delimited string joining AWS account ID, data set ID, and ingestion ID.
* `ingestionStatus` - Ingestion status.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import QuickSight Ingestion using the AWS account ID, data set ID, and ingestion ID separated by commas (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightIngestion } from "./.gen/providers/aws/quicksight-ingestion";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    QuicksightIngestion.generateConfigForImport(
      this,
      "example",
      "123456789012,example-dataset-id,example-ingestion-id"
    );
  }
}

```

Using `terraform import`, import QuickSight Ingestion using the AWS account ID, data set ID, and ingestion ID separated by commas (`,`). For example:

```console
% terraform import aws_quicksight_ingestion.example 123456789012,example-dataset-id,example-ingestion-id
```

<!-- cache-key: cdktf-0.20.8 input-31d890ca0d6ed00093cbbdafdda99150291ae49c1b91bc06892ea8eaaaf8c038 -->