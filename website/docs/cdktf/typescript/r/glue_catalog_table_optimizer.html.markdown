---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_catalog_table_optimizer"
description: |-
  Terraform resource for managing an AWS Glue Catalog Table Optimizer.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glue_catalog_table_optimizer

Terraform resource for managing an AWS Glue Catalog Table Optimizer.

## Example Usage

### Compaction Optimizer

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogTableOptimizer } from "./.gen/providers/aws/glue-catalog-table-optimizer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GlueCatalogTableOptimizer(this, "example", {
      catalogId: "123456789012",
      configuration: [
        {
          enabled: true,
          roleArn: "arn:aws:iam::123456789012:role/example-role",
        },
      ],
      databaseName: "example_database",
      tableName: "example_table",
      type: "compaction",
    });
  }
}

```

### Snapshot Retention Optimizer

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogTableOptimizer } from "./.gen/providers/aws/glue-catalog-table-optimizer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GlueCatalogTableOptimizer(this, "example", {
      catalogId: "123456789012",
      configuration: [
        {
          enabled: true,
          retentionConfiguration: [
            {
              icebergConfiguration: [
                {
                  cleanExpiredFiles: true,
                  numberOfSnapshotsToRetain: 3,
                  snapshotRetentionPeriodInDays: 7,
                },
              ],
            },
          ],
          roleArn: "arn:aws:iam::123456789012:role/example-role",
        },
      ],
      databaseName: "example_database",
      tableName: "example_table",
      type: "retention",
    });
  }
}

```

### Orphan File Deletion Optimizer

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogTableOptimizer } from "./.gen/providers/aws/glue-catalog-table-optimizer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GlueCatalogTableOptimizer(this, "example", {
      catalogId: "123456789012",
      configuration: [
        {
          enabled: true,
          orphanFileDeletionConfiguration: [
            {
              icebergConfiguration: [
                {
                  location: "s3://example-bucket/example_table/",
                  orphanFileRetentionPeriodInDays: 7,
                },
              ],
            },
          ],
          roleArn: "arn:aws:iam::123456789012:role/example-role",
        },
      ],
      databaseName: "example_database",
      tableName: "example_table",
      type: "orphan_file_deletion",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `catalogId` - (Required) The Catalog ID of the table.
* `configuration` - (Required) A configuration block that defines the table optimizer settings. See [Configuration](#configuration) for additional details.
* `databaseName` - (Required) The name of the database in the catalog in which the table resides.
* `tableName` - (Required) The name of the table.
* `type` - (Required) The type of table optimizer. Valid values are `compaction`, `retention`, and `orphan_file_deletion`.

### Configuration

* `enabled` - (Required) Indicates whether the table optimizer is enabled.
* `orphanFileDeletionConfiguration` (Optional) - The configuration block for an orphan file deletion optimizer. See [Orphan File Deletion Configuration](#orphan-file-deletion-configuration) for additional details.
* `retentionConfiguration` (Optional) - The configuration block for a snapshot retention optimizer. See [Retention Configuration](#retention-configuration) for additional details.
* `roleArn` - (Required) The ARN of the IAM role to use for the table optimizer.

### Orphan File Deletion Configuration

* `icebergConfiguration` (Optional) - The configuration for an Iceberg orphan file deletion optimizer.
    * `orphanFileRetentionPeriodInDays` (Optional) - The number of days that orphan files should be retained before file deletion. Defaults to `3`.
    * `location` (Optional) - Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.
  
### Retention Configuration

* `icebergConfiguration` (Optional) - The configuration for an Iceberg snapshot retention optimizer.
    * `snapshotRetentionPeriodInDays` (Optional) - The number of days to retain the Iceberg snapshots. Defaults to `5`, or the corresponding Iceberg table configuration field if it exists.
    * `numberOfSnapshotsToRetain` (Optional) - The number of Iceberg snapshots to retain within the retention period. Defaults to `1` or the corresponding Iceberg table configuration field if it exists.
    * `cleanExpiredFiles` (Optional) - If set to `false`, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to `false`.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue Catalog Table Optimizer using the `catalog_id,database_name,table_name,type`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogTableOptimizer } from "./.gen/providers/aws/glue-catalog-table-optimizer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GlueCatalogTableOptimizer.generateConfigForImport(
      this,
      "example",
      "123456789012,example_database,example_table,compaction"
    );
  }
}

```

Using `terraform import`, import Glue Catalog Table Optimizer using the `catalog_id,database_name,table_name,type`. For example:

```console
% terraform import aws_glue_catalog_table_optimizer.example 123456789012,example_database,example_table,compaction
```

<!-- cache-key: cdktf-0.20.8 input-5cb17126b69dfd13d7795225555ce6d4a4323885f16e8cbe02161e9d8e8e1455 -->