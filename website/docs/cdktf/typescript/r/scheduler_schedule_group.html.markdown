---
subcategory: "EventBridge Scheduler"
layout: "aws"
page_title: "AWS: aws_scheduler_schedule_group"
description: |-
  Provides an EventBridge Scheduler Schedule Group resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_scheduler_schedule_group

Provides an EventBridge Scheduler Schedule Group resource.

You can find out more about EventBridge Scheduler in the [User Guide](https://docs.aws.amazon.com/scheduler/latest/UserGuide/what-is-scheduler.html).

~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SchedulerScheduleGroup } from "./.gen/providers/aws/scheduler-schedule-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SchedulerScheduleGroup(this, "example", {
      name: "my-schedule-group",
    });
  }
}

```

## Argument Reference

The following arguments are optional:

* `name` - (Optional, Forces new resource) Name of the schedule group. If omitted, Terraform will assign a random, unique name. Conflicts with `namePrefix`.
* `namePrefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Name of the schedule group.
* `arn` - ARN of the schedule group.
* `creationDate` - Time at which the schedule group was created.
* `lastModificationDate` - Time at which the schedule group was last modified.
* `state` - State of the schedule group. Can be `ACTIVE` or `DELETING`.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `5m`)
- `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import schedule groups using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SchedulerScheduleGroup } from "./.gen/providers/aws/scheduler-schedule-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SchedulerScheduleGroup.generateConfigForImport(
      this,
      "example",
      "my-schedule-group"
    );
  }
}

```

Using `terraform import`, import schedule groups using the `name`. For example:

```console
% terraform import aws_scheduler_schedule_group.example my-schedule-group
```

<!-- cache-key: cdktf-0.20.8 input-10168b28a6e4905d4caa31ec8a7ac8f50e27b681fd289f91d98f6ade6ba63b5c -->