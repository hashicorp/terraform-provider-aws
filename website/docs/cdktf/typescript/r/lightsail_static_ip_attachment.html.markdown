---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_static_ip_attachment"
description: |-
  Manages a Lightsail Static IP Attachment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_static_ip_attachment

Manages a static IP address attachment - relationship between a Lightsail static IP and Lightsail instance.

Use this resource to attach a static IP address to a Lightsail instance to provide a consistent public IP address that persists across instance restarts.

~> **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailInstance } from "./.gen/providers/aws/lightsail-instance";
import { LightsailStaticIp } from "./.gen/providers/aws/lightsail-static-ip";
import { LightsailStaticIpAttachment } from "./.gen/providers/aws/lightsail-static-ip-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new LightsailInstance(this, "example", {
      availabilityZone: "us-east-1a",
      blueprintId: "ubuntu_20_04",
      bundleId: "nano_2_0",
      name: "example",
    });
    const awsLightsailStaticIpExample = new LightsailStaticIp(
      this,
      "example_1",
      {
        name: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailStaticIpExample.overrideLogicalId("example");
    const awsLightsailStaticIpAttachmentExample =
      new LightsailStaticIpAttachment(this, "example_2", {
        instanceName: example.id,
        staticIpName: Token.asString(awsLightsailStaticIpExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailStaticIpAttachmentExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `instanceName` - (Required) Name of the Lightsail instance to attach the IP to.
* `staticIpName` - (Required) Name of the allocated static IP.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `ipAddress` - Allocated static IP address.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_static_ip_attachment` using the static IP name. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailStaticIpAttachment } from "./.gen/providers/aws/lightsail-static-ip-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LightsailStaticIpAttachment.generateConfigForImport(
      this,
      "example",
      "example-static-ip"
    );
  }
}

```

Using `terraform import`, import `aws_lightsail_static_ip_attachment` using the static IP name. For example:

```console
% terraform import aws_lightsail_static_ip_attachment.example example-static-ip
```

<!-- cache-key: cdktf-0.20.8 input-268579791422ee2193c73519cbb4097ebdfc4c21ba272a2cf66beda3c6b3cd8c -->