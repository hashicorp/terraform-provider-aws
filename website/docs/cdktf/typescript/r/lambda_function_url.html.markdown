---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_function_url"
description: Manages a Lambda function URL.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lambda_function_url

Manages a Lambda function URL. Creates a dedicated HTTP(S) endpoint for a Lambda function to enable direct invocation via HTTP requests.

## Example Usage

### Basic Function URL with No Authentication

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaFunctionUrl } from "./.gen/providers/aws/lambda-function-url";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new LambdaFunctionUrl(this, "example", {
      authorizationType: "NONE",
      functionName: Token.asString(awsLambdaFunctionExample.functionName),
    });
  }
}

```

### Function URL with IAM Authentication and CORS Configuration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaFunctionUrl } from "./.gen/providers/aws/lambda-function-url";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new LambdaFunctionUrl(this, "example", {
      authorizationType: "AWS_IAM",
      cors: {
        allowCredentials: true,
        allowHeaders: ["date", "keep-alive"],
        allowMethods: ["GET", "POST"],
        allowOrigins: ["https://example.com"],
        exposeHeaders: ["keep-alive", "date"],
        maxAge: 86400,
      },
      functionName: Token.asString(awsLambdaFunctionExample.functionName),
      invokeMode: "RESPONSE_STREAM",
      qualifier: "my_alias",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `authorizationType` - (Required) Type of authentication that the function URL uses. Valid values are `AWS_IAM` and `NONE`.
* `functionName` - (Required) Name or ARN of the Lambda function.

The following arguments are optional:

* `cors` - (Optional) Cross-origin resource sharing (CORS) settings for the function URL. [See below](#cors).
* `invokeMode` - (Optional) How the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`.
* `qualifier` - (Optional) Alias name or `$LATEST`.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

### CORS

* `allowCredentials` - (Optional) Whether to allow cookies or other credentials in requests to the function URL.
* `allowHeaders` - (Optional) HTTP headers that origins can include in requests to the function URL.
* `allowMethods` - (Optional) HTTP methods that are allowed when calling the function URL.
* `allowOrigins` - (Optional) Origins that can access the function URL.
* `exposeHeaders` - (Optional) HTTP headers in your function response that you want to expose to origins that call the function URL.
* `maxAge` - (Optional) Maximum amount of time, in seconds, that web browsers can cache results of a preflight request. Maximum value is `86400`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `functionArn` - ARN of the Lambda function.
* `functionUrl` - HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws/`.
* `urlId` - Generated ID for the endpoint.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lambda function URLs using the `functionName` or `function_name/qualifier`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaFunctionUrl } from "./.gen/providers/aws/lambda-function-url";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LambdaFunctionUrl.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import Lambda function URLs using the `functionName` or `function_name/qualifier`. For example:

```console
% terraform import aws_lambda_function_url.example example
```

<!-- cache-key: cdktf-0.20.8 input-1423d2f5b65feadb2d8439ab68903932abe598a68b2c6a9a73300e7db9d3ab1c -->