---
subcategory: "Bedrock"
layout: "aws"
page_title: "AWS: aws_bedrock_guardrail"
description: |-
  Terraform resource for managing an Amazon Bedrock Guardrail.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_bedrock_guardrail

Terraform resource for managing an Amazon Bedrock Guardrail.

## Example Usage

### Basic Usage

```terraform
resource "aws_bedrock_guardrail" "example" {
  name                      = "example"
  blocked_input_messaging   = "example"
  blocked_outputs_messaging = "example"
  description               = "example"

  content_policy_config {
    filters_config {
      input_strength  = "MEDIUM"
      output_strength = "MEDIUM"
      type            = "HATE"
    }
  }

  sensitive_information_policy_config {
    pii_entities_config {
      action = "BLOCK"
      type   = "NAME"
    }

    regexes_config {
      action      = "BLOCK"
      description = "example regex"
      name        = "regex_example"
      pattern     = "^\\d{3}-\\d{2}-\\d{4}$"
    }
  }

  topic_policy_config {
    topics_config {
      name       = "investment_topic"
      examples   = ["Where should I invest my money ?"]
      type       = "DENY"
      definition = "Investment advice refers to inquiries, guidance, or recommendations regarding the management or allocation of funds or assets with the goal of generating returns ."
    }
  }

  word_policy_config {
    managed_word_lists_config {
      type = "PROFANITY"
    }
    words_config {
      text = "HATE"
    }
  }
}
```

## Argument Reference

The following arguments are required:

* `blockedInputMessaging` - (Required) Message to return when the guardrail blocks a prompt.
* `blockedOutputsMessaging` - (Required) Message to return when the guardrail blocks a model response.
* `name` - (Required) Name of the guardrail.

The following arguments are optional:

* `contentPolicyConfig` - (Optional) Content policy config for a guardrail. See [Content Policy Config](#content-policy-config) for more information.
* `contextualGroundingPolicyConfig` - (Optional) Contextual grounding policy config for a guardrail. See [Contextual Grounding Policy Config](#contextual-grounding-policy-config) for more information.
* `description` (Optional) Description of the guardrail or its version.
* `kmsKeyArn` (Optional) The KMS key with which the guardrail was encrypted at rest.
* `sensitiveInformationPolicyConfig` (Optional) Sensitive information policy config for a guardrail. See [Sensitive Information Policy Config](#sensitive-information-policy-config) for more information.
* `tags` (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `topicPolicyConfig` (Optional) Topic policy config for a guardrail. See [Topic Policy Config](#topic-policy-config) for more information.
* `wordPolicyConfig` (Optional) Word policy config for a guardrail. See [Word Policy Config](#word-policy-config) for more information.

### Content Policy Config

The `contentPolicyConfig` configuration block supports the following arguments:

* `filtersConfig` - (Optional) List of content filter configs in content policy. See [Filters Config](#content-filters-config) for more information.

#### Content Filters Config

The `filtersConfig` configuration block supports the following arguments:

* `inputStrength` - (Optional) Strength for filters.
* `outputStrength` - (Optional) Strength for filters.
* `type` - (Optional) Type of filter in content policy.

### Contextual Grounding Policy Config

* `filtersConfig` (Required) List of contextual grounding filter configs. See [Contextual Grounding Filters Config](#contextual-grounding-filters-config) for more information.

#### Contextual Grounding Filters Config

The `filtersConfig` configuration block supports the following arguments:

* `threshold` - (Required) The threshold for this filter.
* `type` - (Required) Type of contextual grounding filter.

### Topic Policy Config

* `topicsConfig` (Required) List of topic configs in topic policy. See [Topics Config](#topics-config) for more information.

#### Topics Config

* `definition` (Required) Definition of topic in topic policy.
* `name` (Required) Name of topic in topic policy.
* `type` (Required) Type of topic in a policy.
* `examples` (Optional) List of text examples.

### Sensitive Information Policy Config

* `piiEntitiesConfig` (Optional) List of entities. See [PII Entities Config](#pii-entities-config) for more information.
* `regexesConfig` (Optional) List of regex. See [Regexes Config](#regexes-config) for more information.

#### PII Entities Config

* `action` (Required) Options for sensitive information action.
* `type` (Required) The currently supported PII entities.

#### Regexes Config

* `action` (Required) Options for sensitive information action.
* `name` (Required) The regex name.
* `pattern` (Required) The regex pattern.
* `description` (Optional) The regex description.

### Word Policy Config

* `managedWordListsConfig` (Optional) A config for the list of managed words. See [Managed Word Lists Config](#managed-word-lists-config) for more information.
* `wordsConfig` (Optional) List of custom word configs. See [Words Config](#words-config) for more information.

#### Managed Word Lists Config

* `type` (Required) Options for managed words.

#### Words Config

* `text` (Required) The custom word text.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `createdAt` - Unix epoch timestamp in seconds for when the Guardrail was created.
* `guardrailArn` - ARN of the Guardrail.
* `guardrailId` - ID of the Guardrail.
* `status` - Status of the Bedrock Guardrail. One of `READY`, `FAILED`.
* `version` - Version of the Guardrail.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amazon Bedrock Guardrail using a comma-delimited string of `guardrailId` and `version`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BedrockGuardrail } from "./.gen/providers/aws/bedrock-guardrail";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    BedrockGuardrail.generateConfigForImport(
      this,
      "example",
      "guardrail-id-12345678,DRAFT"
    );
  }
}

```

Using `terraform import`, import Amazon Bedrock Guardrail using using a comma-delimited string of `guardrailId` and `version`. For example:

```console
% terraform import aws_bedrock_guardrail.example guardrail-id-12345678,DRAFT
```

<!-- cache-key: cdktf-0.20.1 input-32f1ffb82434765f7f939865f265bce2bc581d70840fa99c7110d5d88a55a5c6 -->