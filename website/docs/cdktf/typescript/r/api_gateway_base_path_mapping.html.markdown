---
subcategory: "API Gateway"
layout: "aws"
page_title: "AWS: aws_api_gateway_base_path_mapping"
description: |-
  Connects a custom domain with a deployed API
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_api_gateway_base_path_mapping

Connects a custom domain name registered via `aws_api_gateway_domain_name`
with a deployed API so that its methods can be called via the
custom domain name.

## Example Usage

An end-to-end example of a REST API configured with OpenAPI can be found in the [`/examples/api-gateway-rest-api-openapi` directory within the GitHub repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/api-gateway-rest-api-openapi).

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayBasePathMapping } from "./.gen/providers/aws/api-gateway-base-path-mapping";
import { ApiGatewayDomainName } from "./.gen/providers/aws/api-gateway-domain-name";
import { ApiGatewayStage } from "./.gen/providers/aws/api-gateway-stage";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new ApiGatewayDomainName(this, "example", {
      certificateBody: Token.asString(
        Fn.file("${path.module}/example.com/example.crt")
      ),
      certificateChain: Token.asString(
        Fn.file("${path.module}/example.com/ca.crt")
      ),
      certificateName: "example-api",
      certificatePrivateKey: Token.asString(
        Fn.file("${path.module}/example.com/example.key")
      ),
      domainName: "example.com",
    });
    const awsApiGatewayStageExample = new ApiGatewayStage(this, "example_1", {
      deploymentId: Token.asString(awsApiGatewayDeploymentExample.id),
      restApiId: Token.asString(awsApiGatewayRestApiExample.id),
      stageName: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApiGatewayStageExample.overrideLogicalId("example");
    const awsApiGatewayBasePathMappingExample = new ApiGatewayBasePathMapping(
      this,
      "example_2",
      {
        apiId: Token.asString(awsApiGatewayRestApiExample.id),
        domainName: example.domainName,
        stageName: Token.asString(awsApiGatewayStageExample.stageName),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApiGatewayBasePathMappingExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `domainName` - (Required) Already-registered domain name to connect the API to.
* `apiId` - (Required) ID of the API to connect.
* `stageName` - (Optional) Name of a specific deployment stage to expose at the given path. If omitted, callers may select any stage by including its name as a path element after the base path.
* `basePath` - (Optional) Path segment that must be prepended to the path when accessing the API via this mapping. If omitted, the API is exposed at the root of the given domain.
* `domain_name_id` - (Optional) The identifier for the domain name resource. Supported only for private custom domain names.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:

For an empty `basePath` or, in other words, a root path (`/`):

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayBasePathMapping } from "./.gen/providers/aws/api-gateway-base-path-mapping";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ApiGatewayBasePathMapping.generateConfigForImport(
      this,
      "example",
      "example.com/"
    );
  }
}

```

For a non-root `basePath`:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayBasePathMapping } from "./.gen/providers/aws/api-gateway-base-path-mapping";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ApiGatewayBasePathMapping.generateConfigForImport(
      this,
      "example",
      "example.com/base-path"
    );
  }
}

```

For a non-root `basePath` and a private custom domain name:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayBasePathMapping } from "./.gen/providers/aws/api-gateway-base-path-mapping";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ApiGatewayBasePathMapping.generateConfigForImport(
      this,
      "example",
      "api.internal.example.com/base-path/abcde12345"
    );
  }
}

```

Using `terraform import`, import `aws_api_gateway_base_path_mapping` using the domain name and base path or domain name, base path and domain name ID (for private custom domain names). For example:

For an empty `basePath` or, in other words, a root path (`/`):

```console
% terraform import aws_api_gateway_base_path_mapping.example example.com/
```

For a non-root `basePath`:

```console
% terraform import aws_api_gateway_base_path_mapping.example example.com/base-path
```

For a non-root `basePath` and a private custom domain name:

```console
% terraform import aws_api_gateway_base_path_mapping.example api.internal.example.com/base-path/abcde12345
```

<!-- cache-key: cdktf-0.20.8 input-c51ac15572f07a88e4a3c4b4234009fb84d363692c6355e0ceff12c7d87d9000 -->