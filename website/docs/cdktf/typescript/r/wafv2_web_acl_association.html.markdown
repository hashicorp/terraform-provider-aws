---
subcategory: "WAF"
layout: "aws"
page_title: "AWS: aws_wafv2_web_acl_association"
description: |-
  Creates a WAFv2 Web ACL Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_wafv2_web_acl_association

Creates a WAFv2 Web ACL Association.

~> **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource][1] notes that you should use the [`webAclId`][2] property on the [`cloudfrontDistribution`][2] instead.

[1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
[2]: /docs/providers/aws/r/cloudfront_distribution.html#web_acl_id

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayDeployment } from "./.gen/providers/aws/api-gateway-deployment";
import { ApiGatewayRestApi } from "./.gen/providers/aws/api-gateway-rest-api";
import { ApiGatewayStage } from "./.gen/providers/aws/api-gateway-stage";
import { Wafv2WebAcl } from "./.gen/providers/aws/wafv2-web-acl";
import { Wafv2WebAclAssociation } from "./.gen/providers/aws/wafv2-web-acl-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new ApiGatewayRestApi(this, "example", {
      body: Token.asString(
        Fn.jsonencode({
          info: {
            title: "example",
            version: "1.0",
          },
          openapi: "3.0.1",
          paths: {
            "/path1": {
              get: {
                "x-amazon-apigateway-integration": {
                  httpMethod: "GET",
                  payloadFormatVersion: "1.0",
                  type: "HTTP_PROXY",
                  uri: "https://ip-ranges.amazonaws.com/ip-ranges.json",
                },
              },
            },
          },
        })
      ),
      name: "example",
    });
    const awsWafv2WebAclExample = new Wafv2WebAcl(this, "example_1", {
      defaultAction: {
        allow: {},
      },
      name: "web-acl-association-example",
      scope: "REGIONAL",
      visibilityConfig: {
        cloudwatchMetricsEnabled: false,
        metricName: "friendly-metric-name",
        sampledRequestsEnabled: false,
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWafv2WebAclExample.overrideLogicalId("example");
    const awsApiGatewayDeploymentExample = new ApiGatewayDeployment(
      this,
      "example_2",
      {
        lifecycle: {
          createBeforeDestroy: true,
        },
        restApiId: example.id,
        triggers: {
          redeployment: Token.asString(
            Fn.sha1(Token.asString(Fn.jsonencode(example.body)))
          ),
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApiGatewayDeploymentExample.overrideLogicalId("example");
    const awsApiGatewayStageExample = new ApiGatewayStage(this, "example_3", {
      deploymentId: Token.asString(awsApiGatewayDeploymentExample.id),
      restApiId: example.id,
      stageName: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApiGatewayStageExample.overrideLogicalId("example");
    const awsWafv2WebAclAssociationExample = new Wafv2WebAclAssociation(
      this,
      "example_4",
      {
        resourceArn: Token.asString(awsApiGatewayStageExample.arn),
        webAclArn: Token.asString(awsWafv2WebAclExample.arn),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWafv2WebAclAssociationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `resourceArn` - (Required) The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage (REST only, HTTP is unsupported), an Amazon Cognito User Pool, an Amazon AppSync GraphQL API, an Amazon App Runner service, or an Amazon Verified Access instance.
* `webAclArn` - (Required) The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WAFv2 Web ACL Association using `WEB_ACL_ARN,RESOURCE_ARN`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Wafv2WebAclAssociation } from "./.gen/providers/aws/wafv2-web-acl-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Wafv2WebAclAssociation.generateConfigForImport(
      this,
      "example",
      "arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name"
    );
  }
}

```

Using `terraform import`, import WAFv2 Web ACL Association using `WEB_ACL_ARN,RESOURCE_ARN`. For example:

```console
% terraform import aws_wafv2_web_acl_association.example arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name
```

<!-- cache-key: cdktf-0.20.1 input-a27998dfc5e188299395b679b4a1dc7cb0d0a3339e79b0e25fae805f43a48faa -->