---
subcategory: "CloudFront KeyValueStore"
layout: "aws"
page_title: "AWS: aws_cloudfrontkeyvaluestore_key"
description: |-
  Terraform resource for managing an AWS CloudFront KeyValueStore Key.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudfrontkeyvaluestore_key

Terraform resource for managing an AWS CloudFront KeyValueStore Key.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontKeyValueStore } from "./.gen/providers/aws/cloudfront-key-value-store";
import { CloudfrontkeyvaluestoreKey } from "./.gen/providers/aws/cloudfrontkeyvaluestore-key";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new CloudfrontKeyValueStore(this, "example", {
      comment: "This is an example key value store",
      name: "ExampleKeyValueStore",
    });
    const awsCloudfrontkeyvaluestoreKeyExample = new CloudfrontkeyvaluestoreKey(
      this,
      "example_1",
      {
        key: "Test Key",
        keyValueStoreArn: example.arn,
        value: "Test Value",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudfrontkeyvaluestoreKeyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `key` - (Required) Key to put.
* `keyValueStoreArn` - (Required) Amazon Resource Name (ARN) of the Key Value Store.
* `value` - (Required) Value to put.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Combination of attributes separated by a `,` to create a unique id: `keyValueStoreArn`,`key`
* `totalSizeInBytes` - Total size of the Key Value Store in bytes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudFront KeyValueStore Key using the `example_id_arg`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontkeyvaluestoreKey } from "./.gen/providers/aws/cloudfrontkeyvaluestore-key";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudfrontkeyvaluestoreKey.generateConfigForImport(
      this,
      "example",
      "arn:aws:cloudfront::111111111111:key-value-store/8562g61f-caba-2845-9d99-b97diwae5d3c,someKey"
    );
  }
}

```

Using `terraform import`, import CloudFront KeyValueStore Key using the `id`. For example:

```console
% terraform import aws_cloudfrontkeyvaluestore_key.example arn:aws:cloudfront::111111111111:key-value-store/8562g61f-caba-2845-9d99-b97diwae5d3c,someKey
```

<!-- cache-key: cdktf-0.20.1 input-8be706fbd3f242284c279369e9109cd860f070c155ffa699042454a80549babc -->