---
subcategory: "CloudWatch Observability Access Manager"
layout: "aws"
page_title: "AWS: aws_oam_sink_policy"
description: |-
  Terraform resource for managing an AWS CloudWatch Observability Access Manager Sink Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_oam_sink_policy

Terraform resource for managing an AWS CloudWatch Observability Access Manager Sink Policy.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OamSink } from "./.gen/providers/aws/oam-sink";
import { OamSinkPolicy } from "./.gen/providers/aws/oam-sink-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new OamSink(this, "example", {
      name: "ExampleSink",
    });
    const awsOamSinkPolicyExample = new OamSinkPolicy(this, "example_1", {
      policy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: ["oam:CreateLink", "oam:UpdateLink"],
              Condition: {
                "ForAllValues:StringEquals": {
                  "oam:ResourceTypes": [
                    "AWS::CloudWatch::Metric",
                    "AWS::Logs::LogGroup",
                  ],
                },
              },
              Effect: "Allow",
              Principal: {
                AWS: ["1111111111111", "222222222222"],
              },
              Resource: "*",
            },
          ],
          Version: "2012-10-17",
        })
      ),
      sinkIdentifier: example.id,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsOamSinkPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `sinkIdentifier` - (Required) ARN of the sink to attach this policy to.
* `policy` - (Required) JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Sink.
* `id` - ARN of the sink to attach this policy to.
* `sinkId` - ID string that AWS generated as part of the sink ARN.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `1m`)
* `update` - (Default `1m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch Observability Access Manager Sink Policy using the `sinkIdentifier`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OamSinkPolicy } from "./.gen/providers/aws/oam-sink-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OamSinkPolicy.generateConfigForImport(
      this,
      "example",
      "arn:aws:oam:us-west-2:123456789012:sink/sink-id"
    );
  }
}

```

Using `terraform import`, import CloudWatch Observability Access Manager Sink Policy using the `sinkIdentifier`. For example:

```console
% terraform import aws_oam_sink_policy.example arn:aws:oam:us-west-2:123456789012:sink/sink-id
```

<!-- cache-key: cdktf-0.20.1 input-3104be1032f63aa0777772ea39d5affcd9dbd045ec6dd561056122f6cf1be805 -->