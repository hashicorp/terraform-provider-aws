---
subcategory: "EventBridge"
layout: "aws"
page_title: "AWS: aws_cloudwatch_event_endpoint"
description: |-
  Provides a resource to create an EventBridge Global Endpoint.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_event_endpoint

Provides a resource to create an EventBridge Global Endpoint.

~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchEventEndpoint } from "./.gen/providers/aws/cloudwatch-event-endpoint";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CloudwatchEventEndpoint(this, "this", {
      eventBus: [
        {
          eventBusArn: primary.arn,
        },
        {
          eventBusArn: secondary.arn,
        },
      ],
      name: "global-endpoint",
      replicationConfig: {
        state: "DISABLED",
      },
      roleArn: replication.arn,
      routingConfig: {
        failoverConfig: {
          primary: {
            healthCheck: Token.asString(awsRoute53HealthCheckPrimary.arn),
          },
          secondary: {
            route: "us-east-2",
          },
        },
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `description` - (Optional) A description of the global endpoint.
* `eventBus` - (Required) The event buses to use. The names of the event buses must be identical in each Region. Exactly two event buses are required. Documented below.
* `name` - (Required) The name of the global endpoint.
* `replicationConfig` - (Optional) Parameters used for replication. Documented below.
* `roleArn` - (Optional) The ARN of the IAM role used for replication between event buses.
* `routingConfig` - (Required) Parameters used for routing, including the health check and secondary Region. Documented below.

`eventBus` supports the following:

* `eventBusArn` - (Required) The ARN of the event bus the endpoint is associated with.

`replicationConfig` supports the following:

* `state` - (Optional) The state of event replication. Valid values: `ENABLED`, `DISABLED`. The default state is `ENABLED`, which means you must supply a `roleArn`. If you don't have a `roleArn` or you don't want event replication enabled, set `state` to `DISABLED`.

`routingConfig` support the following:

* `failoverConfig` - (Required) Parameters used for failover. This includes what triggers failover and what happens when it's triggered. Documented below.

`failoverConfig` support the following:

* `primary` - (Required) Parameters used for the primary Region. Documented below.
* `secondary` - (Required) Parameters used for the secondary Region, the Region that events are routed to when failover is triggered or event replication is enabled. Documented below.

`primary` support the following:

* `healthCheck` - (Required) The ARN of the health check used by the endpoint to determine whether failover is triggered.

`secondary` support the following:

* `route` - (Required) The name of the secondary Region.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the endpoint that was created.
* `endpointUrl` - The URL of the endpoint that was created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EventBridge Global Endpoints using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchEventEndpoint } from "./.gen/providers/aws/cloudwatch-event-endpoint";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudwatchEventEndpoint.generateConfigForImport(
      this,
      "importedEndpoint",
      "example-endpoint"
    );
  }
}

```

Using `terraform import`, import EventBridge Global Endpoints using the `name`. For example:

```console
% terraform import aws_cloudwatch_event_endpoint.imported_endpoint example-endpoint
```

<!-- cache-key: cdktf-0.20.8 input-dac45f03f23cfb9ec43d7243c7ab30a08379fa9704853c26c6d6b06354f671a4 -->