---
subcategory: "EFS (Elastic File System)"
layout: "aws"
page_title: "AWS: aws_efs_replication_configuration"
description: Provides an Elastic File System (EFS) Replication Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_efs_replication_configuration

Creates a replica of an existing EFS file system in the same or another region. Creating this resource causes the source EFS file system to be replicated to a new read-only destination EFS file system (unless using the `destination.file_system_id` attribute). Deleting this resource will cause the replication from source to destination to stop and the destination file system will no longer be read only.

~> **NOTE:** Deleting this resource does **not** delete the destination file system that was created.

## Example Usage

Will create a replica using regional storage in us-west-2 that will be encrypted by the default EFS KMS key `/aws/elasticfilesystem`.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EfsFileSystem } from "./.gen/providers/aws/efs-file-system";
import { EfsReplicationConfiguration } from "./.gen/providers/aws/efs-replication-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new EfsFileSystem(this, "example", {});
    const awsEfsReplicationConfigurationExample =
      new EfsReplicationConfiguration(this, "example_1", {
        destination: {
          region: "us-west-2",
        },
        sourceFileSystemId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEfsReplicationConfigurationExample.overrideLogicalId("example");
  }
}

```

Replica will be created as One Zone storage in the us-west-2b Availability Zone and encrypted with the specified KMS key.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EfsFileSystem } from "./.gen/providers/aws/efs-file-system";
import { EfsReplicationConfiguration } from "./.gen/providers/aws/efs-replication-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new EfsFileSystem(this, "example", {});
    const awsEfsReplicationConfigurationExample =
      new EfsReplicationConfiguration(this, "example_1", {
        destination: {
          availabilityZoneName: "us-west-2b",
          kmsKeyId: "1234abcd-12ab-34cd-56ef-1234567890ab",
        },
        sourceFileSystemId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEfsReplicationConfigurationExample.overrideLogicalId("example");
  }
}

```

Will create a replica and set the existing file system with id `fs-1234567890` in us-west-2 as destination.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EfsFileSystem } from "./.gen/providers/aws/efs-file-system";
import { EfsReplicationConfiguration } from "./.gen/providers/aws/efs-replication-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new EfsFileSystem(this, "example", {});
    const awsEfsReplicationConfigurationExample =
      new EfsReplicationConfiguration(this, "example_1", {
        destination: {
          fileSystemId: "fs-1234567890",
          region: "us-west-2",
        },
        sourceFileSystemId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEfsReplicationConfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `destination` - (Required) A destination configuration block (documented below).
* `sourceFileSystemId` - (Required) The ID of the file system that is to be replicated.

### Destination Arguments

`destination` supports the following arguments:

* `availabilityZoneName` - (Optional) The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
* `fileSystemId` - (Optional) The ID of the destination file system for the replication. If no ID is provided, then EFS creates a new file system with the default settings.
* `kmsKeyId` - (Optional) The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
* `region` - (Optional) The region in which the replica should be created.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `creationTime` - When the replication configuration was created.
* `destination[0].file_system_id` - The fs ID of the replica.
* `destination[0].status` - The status of the replication.
* `originalSourceFileSystemArn` - The Amazon Resource Name (ARN) of the original source Amazon EFS file system in the replication configuration.
* `sourceFileSystemArn` - The Amazon Resource Name (ARN) of the current source file system in the replication configuration.
* `sourceFileSystemRegion` - The AWS Region in which the source Amazon EFS file system is located.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EFS Replication Configurations using the file system ID of either the source or destination file system. When importing, the `availabilityZoneName` and `kmsKeyId` attributes must **not** be set in the configuration. The AWS API does not return these values when querying the replication configuration and their presence will therefore show as a diff in a subsequent plan. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EfsReplicationConfiguration } from "./.gen/providers/aws/efs-replication-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EfsReplicationConfiguration.generateConfigForImport(
      this,
      "example",
      "fs-id"
    );
  }
}

```

Using `terraform import`, import EFS Replication Configurations using the file system ID of either the source or destination file system. When importing, the `availabilityZoneName` and `kmsKeyId` attributes must **not** be set in the configuration. The AWS API does not return these values when querying the replication configuration and their presence will therefore show as a diff in a subsequent plan. For example:

```console
% terraform import aws_efs_replication_configuration.example fs-id
```

<!-- cache-key: cdktf-0.20.8 input-1733ce7a87552e8c77ed074c1d04833b59465654d7b5d51de517434538c91632 -->