---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_ip_access_settings"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web IP Access Settings.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_ip_access_settings

Terraform resource for managing an AWS WorkSpaces Web IP Access Settings resource. Once associated with a web portal, IP access settings control which IP addresses users can connect from.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebIpAccessSettings } from "./.gen/providers/aws/workspacesweb-ip-access-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebIpAccessSettings(this, "example", {
      displayName: "example",
      ipRule: [
        {
          ipRange: "10.0.0.0/16",
        },
      ],
    });
  }
}

```

### With Multiple IP Rules

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebIpAccessSettings } from "./.gen/providers/aws/workspacesweb-ip-access-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebIpAccessSettings(this, "example", {
      description: "Example IP access settings",
      displayName: "example",
      ipRule: [
        {
          description: "Main office",
          ipRange: "10.0.0.0/16",
        },
        {
          description: "Branch office",
          ipRange: "192.168.0.0/24",
        },
      ],
    });
  }
}

```

### With All Arguments

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { KmsKey } from "./.gen/providers/aws/kms-key";
import { WorkspaceswebIpAccessSettings } from "./.gen/providers/aws/workspacesweb-ip-access-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new KmsKey(this, "example", {
      deletionWindowInDays: 7,
      description: "KMS key for WorkSpaces Web IP Access Settings",
    });
    const awsWorkspaceswebIpAccessSettingsExample =
      new WorkspaceswebIpAccessSettings(this, "example_1", {
        additionalEncryptionContext: {
          Environment: "Production",
        },
        customerManagedKey: example.arn,
        description: "Example IP access settings",
        displayName: "example",
        ipRule: [
          {
            description: "Main office",
            ipRange: "10.0.0.0/16",
          },
          {
            description: "Branch office",
            ipRange: "192.168.0.0/24",
          },
        ],
        tags: {
          Name: "example-ip-access-settings",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebIpAccessSettingsExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `displayName` - (Required) The display name of the IP access settings.
* `ipRule` - (Required) The IP rules of the IP access settings. See [IP Rule](#ip-rules) below.

The following arguments are optional:

* `additionalEncryptionContext` - (Optional) Additional encryption context for the IP access settings.
* `customerManagedKey` - (Optional) ARN of the customer managed KMS key.
* `description` - (Optional) The description of the IP access settings.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### IP Rules

* `ipRange` - (Required) The IP range of the IP rule.
* `description` - (Optional) The description of the IP rule.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `associatedPortalArns` - List of web portal ARNs that this IP access settings resource is associated with.
* `ipAccessSettingsArn` - ARN of the IP access settings resource.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web IP Access Settings using the `ipAccessSettingsArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebIpAccessSettings } from "./.gen/providers/aws/workspacesweb-ip-access-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebIpAccessSettings.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:ipAccessSettings/abcdef12345"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web IP Access Settings using the `ipAccessSettingsArn`. For example:

```console
% terraform import aws_workspacesweb_ip_access_settings.example arn:aws:workspaces-web:us-west-2:123456789012:ipAccessSettings/abcdef12345
```

<!-- cache-key: cdktf-0.20.8 input-7b70a65c43dd7fccf20b33e25eb694845c9d6b08fef726828e20aa1e4d3c351e -->