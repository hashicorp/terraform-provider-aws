---
subcategory: "User Notifications"
layout: "aws"
page_title: "AWS: aws_notifications_notification_configuration"
description: |-
  Terraform resource for managing an AWS User Notifications Notification Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_notifications_notification_configuration

Terraform resource for managing an AWS User Notifications Notification Configuration.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NotificationsNotificationConfiguration } from "./.gen/providers/aws/notifications-notification-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new NotificationsNotificationConfiguration(this, "example", {
      description: "Example notification configuration",
      name: "example",
      tags: {
        Environment: "production",
        Project: "example",
      },
    });
  }
}

```

### With Aggregation Duration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NotificationsNotificationConfiguration } from "./.gen/providers/aws/notifications-notification-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new NotificationsNotificationConfiguration(this, "example", {
      aggregationDuration: "SHORT",
      description: "Example notification configuration with aggregation",
      name: "example-aggregation",
      tags: {
        Environment: "production",
        Project: "example",
      },
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `description` - (Required) Description of the NotificationConfiguration. Length constraints: Minimum length of 0,
  maximum length of 256.
* `name` - (Required) Name of the NotificationConfiguration. Supports RFC 3986's unreserved characters. Length
  constraints: Minimum length of 1, maximum length of 64. Pattern: `[A-Za-z0-9_\-]+`.

The following arguments are optional:

* `aggregationDuration` - (Optional) Aggregation preference of the NotificationConfiguration. Valid values: `LONG` (
  aggregate notifications for 12 hours), `SHORT` (aggregate notifications for 5 minutes), `NONE` (don't aggregate
  notifications). Default: `NONE`.
* `tags` - (Optional) Map of tags to assign to the resource. A tag is a string-to-string map of key-value pairs. If
  configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those
  defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the NotificationConfiguration.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider `defaultTags`
  configuration block.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to
import User Notifications Notification Configuration using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NotificationsNotificationConfiguration } from "./.gen/providers/aws/notifications-notification-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NotificationsNotificationConfiguration.generateConfigForImport(
      this,
      "example",
      "arn:aws:notifications::123456789012:configuration/abcdef1234567890abcdef1234567890"
    );
  }
}

```

Using `terraform import`, import User Notifications Notification Configuration using the `arn`. For example:

```console
% terraform import aws_notifications_notification_configuration.example arn:aws:notifications::123456789012:configuration/abcdef1234567890abcdef1234567890
```

<!-- cache-key: cdktf-0.20.8 input-f075210883da04ae4b9fcd5d9473d92c4823fdcc800bc30f5dc5fbb34c126df7 -->