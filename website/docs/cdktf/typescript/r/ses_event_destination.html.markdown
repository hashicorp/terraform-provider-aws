---
subcategory: "SES (Simple Email)"
layout: "aws"
page_title: "AWS: aws_ses_event_destination"
description: |-
  Provides an SES event destination
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ses_event_destination

Provides an SES event destination

## Example Usage

### CloudWatch Destination

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesEventDestination } from "./.gen/providers/aws/ses-event-destination";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SesEventDestination(this, "cloudwatch", {
      cloudwatchDestination: [
        {
          defaultValue: "default",
          dimensionName: "dimension",
          valueSource: "emailHeader",
        },
      ],
      configurationSetName: example.name,
      enabled: true,
      matchingTypes: ["bounce", "send"],
      name: "event-destination-cloudwatch",
    });
  }
}

```

### Kinesis Destination

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesEventDestination } from "./.gen/providers/aws/ses-event-destination";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SesEventDestination(this, "kinesis", {
      configurationSetName: example.name,
      enabled: true,
      kinesisDestination: {
        roleArn: Token.asString(awsIamRoleExample.arn),
        streamArn: Token.asString(awsKinesisFirehoseDeliveryStreamExample.arn),
      },
      matchingTypes: ["bounce", "send"],
      name: "event-destination-kinesis",
    });
  }
}

```

### SNS Destination

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesEventDestination } from "./.gen/providers/aws/ses-event-destination";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SesEventDestination(this, "sns", {
      configurationSetName: example.name,
      enabled: true,
      matchingTypes: ["bounce", "send"],
      name: "event-destination-sns",
      snsDestination: {
        topicArn: Token.asString(awsSnsTopicExample.arn),
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the event destination
* `configurationSetName` - (Required) The name of the configuration set
* `enabled` - (Optional) If true, the event destination will be enabled
* `matchingTypes` - (Required) A list of matching types. May be any of `"send"`, `"reject"`, `"bounce"`, `"complaint"`, `"delivery"`, `"open"`, `"click"`, or `"renderingFailure"`.
* `cloudwatchDestination` - (Optional) CloudWatch destination for the events
* `kinesisDestination` - (Optional) Send the events to a kinesis firehose destination
* `snsDestination` - (Optional) Send the events to an SNS Topic destination

~> **NOTE:** You can specify `"cloudwatch_destination"` or `"kinesis_destination"` but not both

### cloudwatch_destination Argument Reference

* `defaultValue` - (Required) The default value for the event
* `dimensionName` - (Required) The name for the dimension
* `valueSource` - (Required) The source for the value. May be any of `"messageTag"`, `"emailHeader"` or `"linkTag"`.

### kinesis_destination Argument Reference

* `streamArn` - (Required) The ARN of the Kinesis Stream
* `roleArn` - (Required) The ARN of the role that has permissions to access the Kinesis Stream

### sns_destination Argument Reference

* `topicArn` - (Required) The ARN of the SNS topic

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The SES event destination name.
* `arn` - The SES event destination ARN.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SES event destinations using `configurationSetName` together with the event destination's `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesEventDestination } from "./.gen/providers/aws/ses-event-destination";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SesEventDestination.generateConfigForImport(
      this,
      "sns",
      "some-configuration-set-test/event-destination-sns"
    );
  }
}

```

Using `terraform import`, import SES event destinations using `configurationSetName` together with the event destination's `name`. For example:

```console
% terraform import aws_ses_event_destination.sns some-configuration-set-test/event-destination-sns
```

<!-- cache-key: cdktf-0.20.8 input-03d0657b4ec477015386f442c464924c2a2cf73364ec9a281d1dab9658fde299 -->