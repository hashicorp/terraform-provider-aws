---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_permission_set_inline_policy"
description: |-
  Manages an IAM inline policy for a Single Sign-On (SSO) Permission Set
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_permission_set_inline_policy

Provides an IAM inline policy for a Single Sign-On (SSO) Permission Set resource

~> **NOTE:** AWS Single Sign-On (SSO) only supports one IAM inline policy per [`aws_ssoadmin_permission_set`](ssoadmin_permission_set.html) resource.
Creating or updating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.

~> **NOTE:** We suggest using [`jsonencode()`](https://developer.hashicorp.com/terraform/language/functions/jsonencode) or [`aws_iam_policy_document`](/docs/providers/aws/d/iam_policy_document.html) when assigning a value to `inlinePolicy`. They seamlessly translate Terraform language into JSON, enabling you to maintain consistency within your configuration without the need for context switches. Also, you can sidestep potential complications arising from formatting discrepancies, whitespace inconsistencies, and other nuances inherent to JSON.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { DataAwsSsoadminInstances } from "./.gen/providers/aws/data-aws-ssoadmin-instances";
import { SsoadminPermissionSet } from "./.gen/providers/aws/ssoadmin-permission-set";
import { SsoadminPermissionSetInlinePolicy } from "./.gen/providers/aws/ssoadmin-permission-set-inline-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsIamPolicyDocument(this, "example", {
      statement: [
        {
          actions: ["s3:ListAllMyBuckets", "s3:GetBucketLocation"],
          resources: ["arn:aws:s3:::*"],
          sid: "1",
        },
      ],
    });
    const dataAwsSsoadminInstancesExample = new DataAwsSsoadminInstances(
      this,
      "example_1",
      {}
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsSsoadminInstancesExample.overrideLogicalId("example");
    const awsSsoadminPermissionSetExample = new SsoadminPermissionSet(
      this,
      "example_2",
      {
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(dataAwsSsoadminInstancesExample.arns), [
            "0",
          ])
        ),
        name: "Example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionSetExample.overrideLogicalId("example");
    const awsSsoadminPermissionSetInlinePolicyExample =
      new SsoadminPermissionSetInlinePolicy(this, "example_3", {
        inlinePolicy: Token.asString(example.json),
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(dataAwsSsoadminInstancesExample.arns), [
            "0",
          ])
        ),
        permissionSetArn: Token.asString(awsSsoadminPermissionSetExample.arn),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionSetInlinePolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `inlinePolicy` - (Required) The IAM inline policy to attach to a Permission Set.
* `instanceArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
* `permissionSetArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Names (ARNs) of the Permission Set and SSO Instance, separated by a comma (`,`).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Permission Set Inline Policies using the `permissionSetArn` and `instanceArn` separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsoadminPermissionSetInlinePolicy } from "./.gen/providers/aws/ssoadmin-permission-set-inline-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsoadminPermissionSetInlinePolicy.generateConfigForImport(
      this,
      "example",
      "arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72"
    );
  }
}

```

Using `terraform import`, import SSO Permission Set Inline Policies using the `permissionSetArn` and `instanceArn` separated by a comma (`,`). For example:

```console
% terraform import aws_ssoadmin_permission_set_inline_policy.example arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72
```

<!-- cache-key: cdktf-0.20.1 input-95b8d64fe066ee16ba01d7244ac2fba2a6e51ee42f865a1ca5ad7f4d7b3ef82b -->