---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_endpoint_subnet_association"
description: |-
  Provides a resource to create an association between a VPC endpoint and a subnet.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_endpoint_subnet_association

Provides a resource to create an association between a VPC endpoint and a subnet.

~> **NOTE on VPC Endpoints and VPC Endpoint Subnet Associations:** Terraform provides
both a standalone VPC Endpoint Subnet Association (an association between a VPC endpoint
and a single `subnetId`) and a [VPC Endpoint](vpc_endpoint.html) resource with a `subnetIds`
attribute. Do not use the same subnet ID in both a VPC Endpoint resource and a VPC Endpoint Subnet
Association resource. Doing so will cause a conflict of associations and will overwrite the association.

## Example Usage

Basic usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointSubnetAssociation } from "./.gen/providers/aws/vpc-endpoint-subnet-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpcEndpointSubnetAssociation(this, "sn_ec2", {
      subnetId: sn.id,
      vpcEndpointId: ec2.id,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `vpcEndpointId` - (Required) The ID of the VPC endpoint with which the subnet will be associated.
* `subnetId` - (Required) The ID of the subnet to be associated with the VPC endpoint.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the association.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoint Subnet Associations using `vpcEndpointId` together with `subnetId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointSubnetAssociation } from "./.gen/providers/aws/vpc-endpoint-subnet-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcEndpointSubnetAssociation.generateConfigForImport(
      this,
      "example",
      "vpce-aaaaaaaa/subnet-bbbbbbbbbbbbbbbbb"
    );
  }
}

```

Using `terraform import`, import VPC Endpoint Subnet Associations using `vpcEndpointId` together with `subnetId`. For example:

```console
% terraform import aws_vpc_endpoint_subnet_association.example vpce-aaaaaaaa/subnet-bbbbbbbbbbbbbbbbb
```

<!-- cache-key: cdktf-0.20.8 input-5669b71eb1929dcdffdde12d53b4824d055cb34a6173d0e6db8bbbcb9c7d5708 -->