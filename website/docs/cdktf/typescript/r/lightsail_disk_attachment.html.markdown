---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_disk_attachment"
description: |-
  Manages the attachment of a Lightsail disk to an instance.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_disk_attachment

Manages a Lightsail disk attachment. Use this resource to attach additional storage disks to your Lightsail instances for expanded storage capacity.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAvailabilityZones } from "./.gen/providers/aws/data-aws-availability-zones";
import { LightsailDisk } from "./.gen/providers/aws/lightsail-disk";
import { LightsailDiskAttachment } from "./.gen/providers/aws/lightsail-disk-attachment";
import { LightsailInstance } from "./.gen/providers/aws/lightsail-instance";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const available = new DataAwsAvailabilityZones(this, "available", {
      filter: [
        {
          name: "opt-in-status",
          values: ["opt-in-not-required"],
        },
      ],
      state: "available",
    });
    const example = new LightsailDisk(this, "example", {
      availabilityZone: Token.asString(Fn.lookupNested(available.names, ["0"])),
      name: "example-disk",
      sizeInGb: 8,
    });
    const awsLightsailInstanceExample = new LightsailInstance(
      this,
      "example_2",
      {
        availabilityZone: Token.asString(
          Fn.lookupNested(available.names, ["0"])
        ),
        blueprintId: "amazon_linux_2",
        bundleId: "nano_3_0",
        name: "example-instance",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailInstanceExample.overrideLogicalId("example");
    const awsLightsailDiskAttachmentExample = new LightsailDiskAttachment(
      this,
      "example_3",
      {
        diskName: example.name,
        diskPath: "/dev/xvdf",
        instanceName: Token.asString(awsLightsailInstanceExample.name),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailDiskAttachmentExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `diskName` - (Required) Name of the Lightsail disk.
* `diskPath` - (Required) Disk path to expose to the instance.
* `instanceName` - (Required) Name of the Lightsail instance to attach to.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Combination of attributes to create a unique id: `diskName`,`instanceName`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_disk_attachment` using the id attribute. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailDiskAttachment } from "./.gen/providers/aws/lightsail-disk-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LightsailDiskAttachment.generateConfigForImport(
      this,
      "example",
      "example-disk,example-instance"
    );
  }
}

```

Using `terraform import`, import `aws_lightsail_disk_attachment` using the id attribute. For example:

```console
% terraform import aws_lightsail_disk_attachment.example example-disk,example-instance
```

<!-- cache-key: cdktf-0.20.8 input-5810b562d79c97621ea49dd3faa5723d304ae39ca68f9fb9af2633d07296e82f -->