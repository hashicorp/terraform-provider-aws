---
subcategory: "Redshift Serverless"
layout: "aws"
page_title: "AWS: aws_redshiftserverless_usage_limit"
description: |-
  Provides a Redshift Serverless Usage Limit resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshiftserverless_usage_limit

Creates a new Amazon Redshift Serverless Usage Limit.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftserverlessUsageLimit } from "./.gen/providers/aws/redshiftserverless-usage-limit";
import { RedshiftserverlessWorkgroup } from "./.gen/providers/aws/redshiftserverless-workgroup";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new RedshiftserverlessWorkgroup(this, "example", {
      namespaceName: Token.asString(
        awsRedshiftserverlessNamespaceExample.namespaceName
      ),
      workgroupName: "example",
    });
    const awsRedshiftserverlessUsageLimitExample =
      new RedshiftserverlessUsageLimit(this, "example_1", {
        amount: 60,
        resourceArn: example.arn,
        usageType: "serverless-compute",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRedshiftserverlessUsageLimitExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `amount` - (Required) The limit amount. If time-based, this amount is in Redshift Processing Units (RPU) consumed per hour. If data-based, this amount is in terabytes (TB) of data transferred between Regions in cross-account sharing. The value must be a positive number.
* `breachAction` - (Optional) The action that Amazon Redshift Serverless takes when the limit is reached. Valid values are `log`, `emit-metric`, and `deactivate`. The default is `log`.
* `period` - (Optional) The time period that the amount applies to. A weekly period begins on Sunday. Valid values are `daily`, `weekly`, and `monthly`. The default is `monthly`.
* `resourceArn` - (Required) The Amazon Resource Name (ARN) of the Amazon Redshift Serverless resource to create the usage limit for.
* `usageType` - (Required) The type of Amazon Redshift Serverless usage to create a usage limit for. Valid values are `serverless-compute` or `cross-region-datasharing`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the Redshift Serverless Usage Limit.
* `id` - The Redshift Usage Limit id.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Serverless Usage Limits using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftserverlessUsageLimit } from "./.gen/providers/aws/redshiftserverless-usage-limit";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftserverlessUsageLimit.generateConfigForImport(
      this,
      "example",
      "example-id"
    );
  }
}

```

Using `terraform import`, import Redshift Serverless Usage Limits using the `id`. For example:

```console
% terraform import aws_redshiftserverless_usage_limit.example example-id
```

<!-- cache-key: cdktf-0.20.8 input-84a424322614113d9d70f498bff96348f7b00d895883170bcacbcdfd508f8a95 -->