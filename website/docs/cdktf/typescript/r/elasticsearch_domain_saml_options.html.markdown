---
subcategory: "Elasticsearch"
layout: "aws"
page_title: "AWS: aws_elasticsearch_domain_saml_options"
description: |-
  Terraform resource for managing SAML authentication options for an AWS Elasticsearch Domain.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_elasticsearch_domain_saml_options

Manages SAML authentication options for an AWS Elasticsearch Domain.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ElasticsearchDomain } from "./.gen/providers/aws/elasticsearch-domain";
import { ElasticsearchDomainSamlOptions } from "./.gen/providers/aws/elasticsearch-domain-saml-options";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new ElasticsearchDomain(this, "example", {
      clusterConfig: {
        instanceType: "r4.large.elasticsearch",
      },
      domainName: "example",
      elasticsearchVersion: "1.5",
      snapshotOptions: {
        automatedSnapshotStartHour: 23,
      },
      tags: {
        Domain: "TestDomain",
      },
    });
    const awsElasticsearchDomainSamlOptionsExample =
      new ElasticsearchDomainSamlOptions(this, "example_1", {
        domainName: example.domainName,
        samlOptions: {
          enabled: true,
          idp: {
            entityId: "https://example.com",
            metadataContent: Token.asString(Fn.file("./saml-metadata.xml")),
          },
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsElasticsearchDomainSamlOptionsExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `domainName` - (Required) Name of the domain.

The following arguments are optional:

* `samlOptions` - (Optional) The SAML authentication options for an AWS Elasticsearch Domain.

### saml_options

* `enabled` - (Required) Whether SAML authentication is enabled.
* `idp` - (Optional) Information from your identity provider.
* `masterBackendRole` - (Optional) This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
* `masterUserName` - (Optional) This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
* `rolesKey` - (Optional) Element of the SAML assertion to use for backend roles. Default is roles.
* `sessionTimeoutMinutes` - (Optional) Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
* `subjectKey` - (Optional) Custom SAML attribute to use for user names. Default is an empty string - `""`. This will cause Elasticsearch to use the `NameID` element of the `Subject`, which is the default location for name identifiers in the SAML specification.

#### idp

* `entityId` - (Required) The unique Entity ID of the application in SAML Identity Provider.
* `metadataContent` - (Required) The Metadata of the SAML application in xml format.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the domain the SAML options are associated with.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Elasticsearch domains using the `domainName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ElasticsearchDomainSamlOptions } from "./.gen/providers/aws/elasticsearch-domain-saml-options";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ElasticsearchDomainSamlOptions.generateConfigForImport(
      this,
      "example",
      "domain_name"
    );
  }
}

```

Using `terraform import`, import Elasticsearch domains using the `domainName`. For example:

```console
% terraform import aws_elasticsearch_domain_saml_options.example domain_name
```

<!-- cache-key: cdktf-0.20.8 input-65d51b7512d651dc02ab5c3e4dec870cf5f9710ffdd2fa0237566b35396e143c -->