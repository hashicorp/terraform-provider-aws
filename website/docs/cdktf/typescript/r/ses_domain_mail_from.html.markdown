---
subcategory: "SES (Simple Email)"
layout: "aws"
page_title: "AWS: aws_ses_domain_mail_from"
description: |-
  Provides an SES domain MAIL FROM resource
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ses_domain_mail_from

Provides an SES domain MAIL FROM resource.

~> **NOTE:** For the MAIL FROM domain to be fully usable, this resource should be paired with the [aws_ses_domain_identity resource](/docs/providers/aws/r/ses_domain_identity.html). To validate the MAIL FROM domain, a DNS MX record is required. To pass SPF checks, a DNS TXT record may also be required. See the [Amazon SES MAIL FROM documentation](https://docs.aws.amazon.com/ses/latest/dg/mail-from.html) for more information.

## Example Usage

### Domain Identity MAIL FROM

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route53Record } from "./.gen/providers/aws/route53-record";
import { SesDomainIdentity } from "./.gen/providers/aws/ses-domain-identity";
import { SesDomainMailFrom } from "./.gen/providers/aws/ses-domain-mail-from";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SesDomainIdentity(this, "example", {
      domain: "example.com",
    });
    const awsSesDomainMailFromExample = new SesDomainMailFrom(
      this,
      "example_1",
      {
        domain: example.domain,
        mailFromDomain: "bounce.${" + example.domain + "}",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSesDomainMailFromExample.overrideLogicalId("example");
    new Route53Record(this, "example_ses_domain_mail_from_mx", {
      name: Token.asString(awsSesDomainMailFromExample.mailFromDomain),
      records: ["10 feedback-smtp.us-east-1.amazonses.com"],
      ttl: Token.asNumber("600"),
      type: "MX",
      zoneId: Token.asString(awsRoute53ZoneExample.id),
    });
    new Route53Record(this, "example_ses_domain_mail_from_txt", {
      name: Token.asString(awsSesDomainMailFromExample.mailFromDomain),
      records: ["v=spf1 include:amazonses.com ~all"],
      ttl: Token.asNumber("600"),
      type: "TXT",
      zoneId: Token.asString(awsRoute53ZoneExample.id),
    });
  }
}

```

### Email Identity MAIL FROM

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesDomainMailFrom } from "./.gen/providers/aws/ses-domain-mail-from";
import { SesEmailIdentity } from "./.gen/providers/aws/ses-email-identity";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SesEmailIdentity(this, "example", {
      email: "user@example.com",
    });
    const awsSesDomainMailFromExample = new SesDomainMailFrom(
      this,
      "example_1",
      {
        domain: example.email,
        mailFromDomain: "mail.example.com",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSesDomainMailFromExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `domain` - (Required) Verified domain name or email identity to generate DKIM tokens for.
* `mailFromDomain` - (Required) Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)

The following arguments are optional:

* `behaviorOnMxFailure` - (Optional) The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The domain name.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MAIL FROM domain using the `domain` attribute. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesDomainMailFrom } from "./.gen/providers/aws/ses-domain-mail-from";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SesDomainMailFrom.generateConfigForImport(this, "example", "example.com");
  }
}

```

Using `terraform import`, import MAIL FROM domain using the `domain` attribute. For example:

```console
% terraform import aws_ses_domain_mail_from.example example.com
```

<!-- cache-key: cdktf-0.20.1 input-cca74ce9256128a7d6ff8310ec22a5ff479d41f4dbdb04a2e94b2f5957898ed1 -->