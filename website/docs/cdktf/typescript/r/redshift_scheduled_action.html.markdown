---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_scheduled_action"
description: |-
  Provides a Redshift Scheduled Action resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_scheduled_action

## Example Usage

### Pause Cluster Action

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { IamPolicy } from "./.gen/providers/aws/iam-policy";
import { IamRole } from "./.gen/providers/aws/iam-role";
import { IamRolePolicyAttachment } from "./.gen/providers/aws/iam-role-policy-attachment";
import { RedshiftScheduledAction } from "./.gen/providers/aws/redshift-scheduled-action";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const assumeRole = new DataAwsIamPolicyDocument(this, "assume_role", {
      statement: [
        {
          actions: ["sts:AssumeRole"],
          effect: "Allow",
          principals: [
            {
              identifiers: ["scheduler.redshift.amazonaws.com"],
              type: "Service",
            },
          ],
        },
      ],
    });
    const example = new DataAwsIamPolicyDocument(this, "example", {
      statement: [
        {
          actions: [
            "redshift:PauseCluster",
            "redshift:ResumeCluster",
            "redshift:ResizeCluster",
          ],
          effect: "Allow",
          resources: ["*"],
        },
      ],
    });
    const awsIamPolicyExample = new IamPolicy(this, "example_2", {
      name: "redshift_scheduled_action",
      policy: Token.asString(example.json),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIamPolicyExample.overrideLogicalId("example");
    const awsIamRoleExample = new IamRole(this, "example_3", {
      assumeRolePolicy: Token.asString(assumeRole.json),
      name: "redshift_scheduled_action",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIamRoleExample.overrideLogicalId("example");
    const awsIamRolePolicyAttachmentExample = new IamRolePolicyAttachment(
      this,
      "example_4",
      {
        policyArn: Token.asString(awsIamPolicyExample.arn),
        role: Token.asString(awsIamRoleExample.name),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIamRolePolicyAttachmentExample.overrideLogicalId("example");
    const awsRedshiftScheduledActionExample = new RedshiftScheduledAction(
      this,
      "example_5",
      {
        iamRole: Token.asString(awsIamRoleExample.arn),
        name: "tf-redshift-scheduled-action",
        schedule: "cron(00 23 * * ? *)",
        targetAction: {
          pauseCluster: {
            clusterIdentifier: "tf-redshift001",
          },
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRedshiftScheduledActionExample.overrideLogicalId("example");
  }
}

```

### Resize Cluster Action

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftScheduledAction } from "./.gen/providers/aws/redshift-scheduled-action";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftScheduledAction(this, "example", {
      iamRole: Token.asString(awsIamRoleExample.arn),
      name: "tf-redshift-scheduled-action",
      schedule: "cron(00 23 * * ? *)",
      targetAction: {
        resizeCluster: {
          clusterIdentifier: "tf-redshift001",
          clusterType: "multi-node",
          nodeType: "dc1.large",
          numberOfNodes: 2,
        },
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The scheduled action name.
* `description` - (Optional) The description of the scheduled action.
* `enable` - (Optional) Whether to enable the scheduled action. Default is `true` .
* `startTime` - (Optional) The start time in UTC when the schedule is active, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ).
* `endTime` - (Optional) The end time in UTC when the schedule is active, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ).
* `schedule` - (Required) The schedule of action. The schedule is defined format of "at expression" or "cron expression", for example `at(2016-03-04T17:27:00)` or `cron(0 10 ? * MON *)`. See [Scheduled Action](https://docs.aws.amazon.com/redshift/latest/APIReference/API_ScheduledAction.html) for more information.
* `iamRole` - (Required) The IAM role to assume to run the scheduled action.
* `targetAction` - (Required) Target action. Documented below.

### Nested Blocks

#### `targetAction`

* `pauseCluster` - (Optional) An action that runs a `PauseCluster` API operation. Documented below.
* `resizeCluster` - (Optional) An action that runs a `ResizeCluster` API operation. Documented below.
* `resumeCluster` - (Optional) An action that runs a `ResumeCluster` API operation. Documented below.

### `pauseCluster`

* `clusterIdentifier` - (Required) The identifier of the cluster to be paused.

### `resizeCluster`

* `clusterIdentifier` - (Required) The unique identifier for the cluster to resize.
* `classic` - (Optional) A boolean value indicating whether the resize operation is using the classic resize process. Default: `false`.
* `clusterType` - (Optional)ã€€The new cluster type for the specified cluster.
* `nodeType` - (Optional) The new node type for the nodes you are adding.
* `numberOfNodes` - (Optional) The new number of nodes for the cluster.

### `resumeCluster`

* `clusterIdentifier` - (Required) The identifier of the cluster to be resumed.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Redshift Scheduled Action name.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Scheduled Action using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftScheduledAction } from "./.gen/providers/aws/redshift-scheduled-action";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftScheduledAction.generateConfigForImport(
      this,
      "example",
      "tf-redshift-scheduled-action"
    );
  }
}

```

Using `terraform import`, import Redshift Scheduled Action using the `name`. For example:

```console
% terraform import aws_redshift_scheduled_action.example tf-redshift-scheduled-action
```

<!-- cache-key: cdktf-0.20.8 input-bb46dc91c30f3bd0e92ef6f30fbb8c2c42b66b25bd27c78c262e5e212679b4d1 -->