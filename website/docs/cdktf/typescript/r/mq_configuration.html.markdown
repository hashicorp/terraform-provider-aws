---
subcategory: "MQ"
layout: "aws"
page_title: "AWS: aws_mq_configuration"
description: |-
  Provides an MQ configuration Resource
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_mq_configuration

Provides an MQ Configuration Resource.

For more information on Amazon MQ, see [Amazon MQ documentation](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/welcome.html).

## Example Usage

### ActiveMQ

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MqConfiguration } from "./.gen/providers/aws/mq-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new MqConfiguration(this, "example", {
      data: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n<broker xmlns="http://activemq.apache.org/schema/core">\n  <plugins>\n    <forcePersistencyModeBrokerPlugin persistenceFlag="true"/>\n    <statisticsBrokerPlugin/>\n    <timeStampingBrokerPlugin ttlCeiling="86400000" zeroExpirationOverride="86400000"/>\n  </plugins>\n</broker>\n\n',
      description: "Example Configuration",
      engineType: "ActiveMQ",
      engineVersion: "5.17.6",
      name: "example",
    });
  }
}

```

### RabbitMQ

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MqConfiguration } from "./.gen/providers/aws/mq-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new MqConfiguration(this, "example", {
      data: "# Default RabbitMQ delivery acknowledgement timeout is 30 minutes in milliseconds\nconsumer_timeout = 1800000\n\n",
      description: "Example Configuration",
      engineType: "RabbitMQ",
      engineVersion: "3.11.20",
      name: "example",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `data` - (Required) Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.
* `engineType` - (Required) Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.
* `engineVersion` - (Required) Version of the broker engine.
* `name` - (Required) Name of the configuration.

The following arguments are optional:

* `authenticationStrategy` - (Optional) Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engineType` `RabbitMQ`.
* `description` - (Optional) Description of the configuration.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the configuration.
* `id` - Unique ID that Amazon MQ generates for the configuration.
* `latestRevision` - Latest revision of the configuration.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MQ Configurations using the configuration ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MqConfiguration } from "./.gen/providers/aws/mq-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    MqConfiguration.generateConfigForImport(
      this,
      "example",
      "c-0187d1eb-88c8-475a-9b79-16ef5a10c94f"
    );
  }
}

```

Using `terraform import`, import MQ Configurations using the configuration ID. For example:

```console
% terraform import aws_mq_configuration.example c-0187d1eb-88c8-475a-9b79-16ef5a10c94f
```

<!-- cache-key: cdktf-0.20.8 input-692d3129e9e66fb877e1b432563a265729c8bf6b5c33e77ade50073e2ac04eba -->