---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_alias"
description: |-
  Creates a Lambda function alias.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lambda_alias

Creates a Lambda function alias. Creates an alias that points to the specified Lambda function version.

For information about Lambda and how to use it, see [What is AWS Lambda?][1]
For information about function aliases, see [CreateAlias][2] and [AliasRoutingConfiguration][3] in the API docs.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaAlias } from "./.gen/providers/aws/lambda-alias";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new LambdaAlias(this, "test_lambda_alias", {
      description: "a sample description",
      functionName: lambdaFunctionTest.arn,
      functionVersion: "1",
      name: "my_alias",
      routingConfig: {
        additionalVersionWeights: {
          2: 0.5,
        },
      },
    });
  }
}

```

## Argument Reference

* `name` - (Required) Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`
* `description` - (Optional) Description of the alias.
* `functionName` - (Required) Lambda Function name or ARN.
* `functionVersion` - (Required) Lambda function version for which you are creating the alias. Pattern: `(\$LATEST|[0-9]+)`.
* `routingConfig` - (Optional) The Lambda alias' route configuration settings. Fields documented below

`routingConfig` supports the following arguments:

* `additionalVersionWeights` - (Optional) A map that defines the proportion of events that should be sent to different versions of a lambda function.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) identifying your Lambda function alias.
* `invokeArn` - The ARN to be used for invoking Lambda Function from API Gateway - to be used in [`aws_api_gateway_integration`](/docs/providers/aws/r/api_gateway_integration.html)'s `uri`

[1]: http://docs.aws.amazon.com/lambda/latest/dg/welcome.html
[2]: http://docs.aws.amazon.com/lambda/latest/dg/API_CreateAlias.html
[3]: https://docs.aws.amazon.com/lambda/latest/dg/API_AliasRoutingConfiguration.html

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lambda Function Aliases using the `function_name/alias`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaAlias } from "./.gen/providers/aws/lambda-alias";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LambdaAlias.generateConfigForImport(
      this,
      "testLambdaAlias",
      "my_test_lambda_function/my_alias"
    );
  }
}

```

Using `terraform import`, import Lambda Function Aliases using the `function_name/alias`. For example:

```console
% terraform import aws_lambda_alias.test_lambda_alias my_test_lambda_function/my_alias
```

<!-- cache-key: cdktf-0.20.8 input-8fb769e7276158548fab5fb93af4f2a28e9364558792a79cc5b94ffb6bf2c452 -->