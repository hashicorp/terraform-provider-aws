---
subcategory: "MemoryDB"
layout: "aws"
page_title: "AWS: aws_memorydb_subnet_group"
description: |-
  Provides a MemoryDB Subnet Group.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_memorydb_subnet_group

Provides a MemoryDB Subnet Group.

More information about subnet groups can be found in the [MemoryDB User Guide](https://docs.aws.amazon.com/memorydb/latest/devguide/subnetgroups.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MemorydbSubnetGroup } from "./.gen/providers/aws/memorydb-subnet-group";
import { Subnet } from "./.gen/providers/aws/subnet";
import { Vpc } from "./.gen/providers/aws/vpc";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Vpc(this, "example", {
      cidrBlock: "10.0.0.0/16",
    });
    const awsSubnetExample = new Subnet(this, "example_1", {
      availabilityZone: "us-west-2a",
      cidrBlock: "10.0.0.0/24",
      vpcId: example.id,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSubnetExample.overrideLogicalId("example");
    const awsMemorydbSubnetGroupExample = new MemorydbSubnetGroup(
      this,
      "example_2",
      {
        name: "my-subnet-group",
        subnetIds: [Token.asString(awsSubnetExample.id)],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsMemorydbSubnetGroupExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `subnetIds` - (Required) Set of VPC Subnet ID-s for the subnet group. At least one subnet must be provided.

The following arguments are optional:

* `name` - (Optional, Forces new resource) Name of the subnet group. If omitted, Terraform will assign a random, unique name. Conflicts with `namePrefix`.
* `namePrefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
* `description` - (Optional) Description for the subnet group. Defaults to `"Managed by Terraform"`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the subnet group.
* `arn` - The ARN of the subnet group.
* `vpcId` - The VPC in which the subnet group exists.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a subnet group using its `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MemorydbSubnetGroup } from "./.gen/providers/aws/memorydb-subnet-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    MemorydbSubnetGroup.generateConfigForImport(
      this,
      "example",
      "my-subnet-group"
    );
  }
}

```

Using `terraform import`, import a subnet group using its `name`. For example:

```console
% terraform import aws_memorydb_subnet_group.example my-subnet-group
```

<!-- cache-key: cdktf-0.20.8 input-e811f3e22c552003c2bcc699f959ec66adf8ada63b2e23dd00112891e0d2734c -->