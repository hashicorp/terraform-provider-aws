---
subcategory: "Location"
layout: "aws"
page_title: "AWS: aws_location_tracker_association"
description: |-
  Terraform resource for managing an AWS Location Tracker Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_location_tracker_association

Terraform resource for managing an AWS Location Tracker Association.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LocationGeofenceCollection } from "./.gen/providers/aws/location-geofence-collection";
import { LocationTracker } from "./.gen/providers/aws/location-tracker";
import { LocationTrackerAssociation } from "./.gen/providers/aws/location-tracker-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new LocationGeofenceCollection(this, "example", {
      collectionName: "example",
    });
    const awsLocationTrackerExample = new LocationTracker(this, "example_1", {
      trackerName: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLocationTrackerExample.overrideLogicalId("example");
    const awsLocationTrackerAssociationExample = new LocationTrackerAssociation(
      this,
      "example_2",
      {
        consumerArn: example.collectionArn,
        trackerName: Token.asString(awsLocationTrackerExample.trackerName),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLocationTrackerAssociationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `consumerArn` - (Required) The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker resource. Used when you need to specify a resource across all AWS.
* `trackerName` - (Required) The name of the tracker resource to be associated with a geofence collection.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

`aws_location_tracker_association` provides the following [Timeouts](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts) configuration options:

* `create` - (Optional, Default: `30m`)
* `delete` - (Optional, Default: `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Location Tracker Association using the `tracker_name|consumer_arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LocationTrackerAssociation } from "./.gen/providers/aws/location-tracker-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LocationTrackerAssociation.generateConfigForImport(
      this,
      "example",
      "tracker_name|consumer_arn"
    );
  }
}

```

Using `terraform import`, import Location Tracker Association using the `tracker_name|consumer_arn`. For example:

```console
% terraform import aws_location_tracker_association.example "tracker_name|consumer_arn"
```

<!-- cache-key: cdktf-0.20.8 input-4b73757483307c737f70b7bfb906a6a6449e1a0b838a9a4bb533c9ccf5e4bd2b -->