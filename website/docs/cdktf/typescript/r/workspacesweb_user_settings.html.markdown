---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_user_settings"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web User Settings.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_user_settings

Terraform resource for managing an AWS WorkSpaces Web User Settings resource. Once associated with a web portal, user settings control how users can transfer data between a streaming session and their local devices.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebUserSettings } from "./.gen/providers/aws/workspacesweb-user-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebUserSettings(this, "example", {
      copyAllowed: "Enabled",
      downloadAllowed: "Enabled",
      pasteAllowed: "Enabled",
      printAllowed: "Enabled",
      uploadAllowed: "Enabled",
    });
  }
}

```

### With Toolbar Configuration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebUserSettings } from "./.gen/providers/aws/workspacesweb-user-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebUserSettings(this, "example", {
      copyAllowed: "Enabled",
      downloadAllowed: "Enabled",
      pasteAllowed: "Enabled",
      printAllowed: "Enabled",
      toolbarConfiguration: [
        {
          hiddenToolbarItems: ["Webcam", "Microphone"],
          toolbarType: "Docked",
          visualMode: "Dark",
        },
      ],
      uploadAllowed: "Enabled",
    });
  }
}

```

### Complete Example

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { KmsKey } from "./.gen/providers/aws/kms-key";
import { WorkspaceswebUserSettings } from "./.gen/providers/aws/workspacesweb-user-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new KmsKey(this, "example", {
      deletionWindowInDays: 7,
      description: "KMS key for WorkSpaces Web User Settings",
    });
    const awsWorkspaceswebUserSettingsExample = new WorkspaceswebUserSettings(
      this,
      "example_1",
      {
        additionalEncryptionContext: {
          Environment: "Production",
        },
        cookieSynchronizationConfiguration: [
          {
            allowlist: [
              {
                domain: "example.com",
                path: "/path",
              },
            ],
            blocklist: [
              {
                domain: "blocked.com",
              },
            ],
          },
        ],
        copyAllowed: "Enabled",
        customerManagedKey: example.arn,
        deepLinkAllowed: "Enabled",
        disconnectTimeoutInMinutes: 30,
        downloadAllowed: "Enabled",
        idleDisconnectTimeoutInMinutes: 15,
        pasteAllowed: "Enabled",
        printAllowed: "Enabled",
        tags: {
          Name: "example-user-settings",
        },
        toolbarConfiguration: [
          {
            hiddenToolbarItems: ["Webcam", "Microphone"],
            maxDisplayResolution: "size1920X1080",
            toolbarType: "Docked",
            visualMode: "Dark",
          },
        ],
        uploadAllowed: "Enabled",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebUserSettingsExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `copyAllowed` - (Required) Specifies whether the user can copy text from the streaming session to the local device. Valid values are `Enabled` or `Disabled`.
* `downloadAllowed` - (Required) Specifies whether the user can download files from the streaming session to the local device. Valid values are `Enabled` or `Disabled`.
* `pasteAllowed` - (Required) Specifies whether the user can paste text from the local device to the streaming session. Valid values are `Enabled` or `Disabled`.
* `printAllowed` - (Required) Specifies whether the user can print to the local device. Valid values are `Enabled` or `Disabled`.
* `uploadAllowed` - (Required) Specifies whether the user can upload files from the local device to the streaming session. Valid values are `Enabled` or `Disabled`.

The following arguments are optional:

* `additionalEncryptionContext` - (Optional) Additional encryption context for the user settings.
* `associatedPortalArns` - (Optional) List of web portal ARNs to associate with the user settings.
* `cookieSynchronizationConfiguration` - (Optional) Configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser. Detailed below.
* `customerManagedKey` - (Optional) ARN of the customer managed KMS key.
* `deepLinkAllowed` - (Optional) Specifies whether the user can use deep links that open automatically when connecting to a session. Valid values are `Enabled` or `Disabled`.
* `disconnectTimeoutInMinutes` - (Optional) Amount of time that a streaming session remains active after users disconnect. Value must be between 1 and 600 minutes.
* `idleDisconnectTimeoutInMinutes` - (Optional) Amount of time that users can be idle before they are disconnected from their streaming session. Value must be between 0 and 60 minutes.
* `toolbarConfiguration` - (Optional) Configuration of the toolbar. Detailed below.
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### cookie_synchronization_configuration

* `allowlist` - (Required) List of cookie specifications that are allowed to be synchronized to the remote browser.
    * `domain` - (Required) Domain of the cookie.
    * `name` - (Optional) Name of the cookie.
    * `path` - (Optional) Path of the cookie.
* `blocklist` - (Optional) List of cookie specifications that are blocked from being synchronized to the remote browser.
    * `domain` - (Required) Domain of the cookie.
    * `name` - (Optional) Name of the cookie.
    * `path` - (Optional) Path of the cookie.

### toolbar_configuration

* `hiddenToolbarItems` - (Optional) List of toolbar items to be hidden.
* `maxDisplayResolution` - (Optional) Maximum display resolution that is allowed for the session.
* `toolbarType` - (Optional) Type of toolbar displayed during the session.
* `visualMode` - (Optional) Visual mode of the toolbar.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `userSettingsArn` - ARN of the user settings resource.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web User Settings using the `userSettingsArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebUserSettings } from "./.gen/providers/aws/workspacesweb-user-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebUserSettings.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:usersettings/abcdef12345"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web User Settings using the `userSettingsArn`. For example:

```console
% terraform import aws_workspacesweb_user_settings.example arn:aws:workspacesweb:us-west-2:123456789012:usersettings/abcdef12345
```

<!-- cache-key: cdktf-0.20.8 input-14a2f85b4533f4f27dfaa34ef71eeac348be190ffbc7e8dba9125f4ed3780366 -->