---
subcategory: "CodeStar Connections"
layout: "aws"
page_title: "AWS: aws_codestarconnections_host"
description: |-
  Provides a CodeStar Host
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codestarconnections_host

Provides a CodeStar Host.

~> **NOTE:** The `aws_codestarconnections_host` resource is created in the state `PENDING`. Authentication with the host provider must be completed in the AWS Console. For more information visit [Set up a pending host](https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-host-setup.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodestarconnectionsHost } from "./.gen/providers/aws/codestarconnections-host";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CodestarconnectionsHost(this, "example", {
      name: "example-host",
      providerEndpoint: "https://example.com",
      providerType: "GitHubEnterpriseServer",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the host to be created. The name must be unique in the calling AWS account.
* `providerEndpoint` - (Required) The endpoint of the infrastructure to be represented by the host after it is created.
* `providerType` - (Required) The name of the external provider where your third-party code repository is configured.
* `vpcConfiguration` - (Optional) The VPC configuration to be provisioned for the host. A VPC must be configured, and the infrastructure to be represented by the host must already be connected to the VPC.

A `vpcConfiguration` block supports the following arguments:

* `securityGroupIds` - (Required) ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
* `subnetIds` - (Required) The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
* `tlsCertificate` - (Optional) The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.
* `vpcId` - (Required) The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The CodeStar Host ARN.
* `arn` - The CodeStar Host ARN.
* `status` - The CodeStar Host status. Possible values are `PENDING`, `AVAILABLE`, `VPC_CONFIG_DELETING`, `VPC_CONFIG_INITIALIZING`, and `VPC_CONFIG_FAILED_INITIALIZATION`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeStar Host using the ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodestarconnectionsHost } from "./.gen/providers/aws/codestarconnections-host";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CodestarconnectionsHost.generateConfigForImport(
      this,
      "exampleHost",
      "arn:aws:codestar-connections:us-west-1:0123456789:host/79d4d357-a2ee-41e4-b350-2fe39ae59448"
    );
  }
}

```

Using `terraform import`, import CodeStar Host using the ARN. For example:

```console
% terraform import aws_codestarconnections_host.example-host arn:aws:codestar-connections:us-west-1:0123456789:host/79d4d357-a2ee-41e4-b350-2fe39ae59448
```

<!-- cache-key: cdktf-0.20.8 input-deb204f04b1d3b40e9230a8529e261bf3e35a0ba36cd5b092788c3a247d424f1 -->