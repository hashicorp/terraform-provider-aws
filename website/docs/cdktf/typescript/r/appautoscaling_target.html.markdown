---
subcategory: "Application Auto Scaling"
layout: "aws"
page_title: "AWS: aws_appautoscaling_target"
description: |-
  Provides an Application AutoScaling ScalableTarget resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appautoscaling_target

Provides an Application AutoScaling ScalableTarget resource. To manage policies which get attached to the target, see the [`aws_appautoscaling_policy` resource](/docs/providers/aws/r/appautoscaling_policy.html).

~> **NOTE:** Scalable targets created before 2023-03-20 may not have an assigned `arn`. These resource cannot use `tags` or participate in `defaultTags`. To prevent `terraform plan` showing differences that can never be reconciled, use the [`lifecycle.ignore_changes`](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes) meta-argument. See the example below.

~> **NOTE:** The [Application Auto Scaling service automatically attempts to manage IAM Service-Linked Roles](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles) when registering certain service namespaces for the first time. To manually manage this role, see the [`aws_iam_service_linked_role` resource](/docs/providers/aws/r/iam_service_linked_role.html).

## Example Usage

### DynamoDB Table Autoscaling

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppautoscalingTarget(this, "dynamodb_table_read_target", {
      maxCapacity: 100,
      minCapacity: 5,
      resourceId: "table/${" + example.name + "}",
      scalableDimension: "dynamodb:table:ReadCapacityUnits",
      serviceNamespace: "dynamodb",
    });
  }
}

```

### DynamoDB Index Autoscaling

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppautoscalingTarget(this, "dynamodb_index_read_target", {
      maxCapacity: 100,
      minCapacity: 5,
      resourceId:
        "table/${" + example.name + "}/index/${" + indexName.value + "}",
      scalableDimension: "dynamodb:index:ReadCapacityUnits",
      serviceNamespace: "dynamodb",
    });
  }
}

```

### ECS Service Autoscaling

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppautoscalingTarget(this, "ecs_target", {
      maxCapacity: 4,
      minCapacity: 1,
      resourceId:
        "service/${" + example.name + "}/${" + awsEcsServiceExample.name + "}",
      scalableDimension: "ecs:service:DesiredCount",
      serviceNamespace: "ecs",
    });
  }
}

```

### Aurora Read Replica Autoscaling

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppautoscalingTarget(this, "replicas", {
      maxCapacity: 15,
      minCapacity: 1,
      resourceId: "cluster:${" + example.id + "}",
      scalableDimension: "rds:cluster:ReadReplicaCount",
      serviceNamespace: "rds",
    });
  }
}

```

### Suppressing `tagsAll` Differences For Older Resources

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppautoscalingTarget(this, "ecs_target", {
      lifecycle: {
        ignoreChanges: [tagsAll],
      },
      maxCapacity: 4,
      minCapacity: 1,
      resourceId:
        "service/${" + example.name + "}/${" + awsEcsServiceExample.name + "}",
      scalableDimension: "ecs:service:DesiredCount",
      serviceNamespace: "ecs",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `maxCapacity` - (Required) Max capacity of the scalable target.
* `minCapacity` - (Required) Min capacity of the scalable target.
* `resourceId` - (Required) Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
* `roleArn` - (Optional) ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the [AWS Application Auto Scaling documentation](https://docs.aws.amazon.com/autoscaling/application/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-roles) for more information about how this service interacts with IAM.
* `scalableDimension` - (Required) Scalable dimension of the scalable target. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
* `serviceNamespace` - (Required) AWS service namespace of the scalable target. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)
* `suspendedState` - (Optional) Specifies whether the scaling activities for a scalable target are in a suspended state.
* `tags` - (Optional) Map of tags to assign to the scalable target. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### suspended_state

The `suspendedState` configuration block supports the following arguments:

* `dynamicScalingInSuspended` (Optional) Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Default is `false`.
* `dynamicScalingOutSuspended` (Optional) Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Default is `false`.
* `scheduledScalingSuspended` (Optional) Whether scheduled scaling is suspended. Default is `false`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the scalable target.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Application AutoScaling Target using the `service-namespace` , `resource-id` and `scalable-dimension` separated by `/`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AppautoscalingTarget.generateConfigForImport(
      this,
      "testTarget",
      "service-namespace/resource-id/scalable-dimension"
    );
  }
}

```

Using `terraform import`, import Application AutoScaling Target using the `service-namespace` , `resource-id` and `scalable-dimension` separated by `/`. For example:

```console
% terraform import aws_appautoscaling_target.test-target service-namespace/resource-id/scalable-dimension
```

<!-- cache-key: cdktf-0.20.8 input-59e23cfb0876150f3e680ba270a8d818960ea34e93d37e9dea28d1559dcee5dd -->