---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_session_logger_association"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Session Logger Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_session_logger_association

Terraform resource for managing an AWS WorkSpaces Web Session Logger Association.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketPolicy } from "./.gen/providers/aws/s3-bucket-policy";
import { WorkspaceswebPortal } from "./.gen/providers/aws/workspacesweb-portal";
import { WorkspaceswebSessionLogger } from "./.gen/providers/aws/workspacesweb-session-logger";
import { WorkspaceswebSessionLoggerAssociation } from "./.gen/providers/aws/workspacesweb-session-logger-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucket: "example-session-logs",
      forceDestroy: true,
    });
    const awsWorkspaceswebPortalExample = new WorkspaceswebPortal(
      this,
      "example_1",
      {
        displayName: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebPortalExample.overrideLogicalId("example");
    const dataAwsIamPolicyDocumentExample = new DataAwsIamPolicyDocument(
      this,
      "example_2",
      {
        statement: [
          {
            actions: ["s3:PutObject"],
            effect: "Allow",
            principals: [
              {
                identifiers: ["workspaces-web.amazonaws.com"],
                type: "Service",
              },
            ],
            resources: ["${" + example.arn + "}/*"],
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsIamPolicyDocumentExample.overrideLogicalId("example");
    const awsS3BucketPolicyExample = new S3BucketPolicy(this, "example_3", {
      bucket: example.id,
      policy: Token.asString(dataAwsIamPolicyDocumentExample.json),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketPolicyExample.overrideLogicalId("example");
    const awsWorkspaceswebSessionLoggerExample = new WorkspaceswebSessionLogger(
      this,
      "example_4",
      {
        dependsOn: [awsS3BucketPolicyExample],
        displayName: "example",
        eventFilter: [
          {
            all: [{}],
          },
        ],
        logConfiguration: [
          {
            s3: [
              {
                bucket: example.id,
                folderStructure: "Flat",
                logFileFormat: "Json",
              },
            ],
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebSessionLoggerExample.overrideLogicalId("example");
    const awsWorkspaceswebSessionLoggerAssociationExample =
      new WorkspaceswebSessionLoggerAssociation(this, "example_5", {
        portalArn: Token.asString(awsWorkspaceswebPortalExample.portalArn),
        sessionLoggerArn: Token.asString(
          awsWorkspaceswebSessionLoggerExample.sessionLoggerArn
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebSessionLoggerAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are required:

* `portalArn` - (Required) ARN of the web portal.
* `sessionLoggerArn` - (Required) ARN of the session logger.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Session Logger Association using the `session_logger_arn,portal_arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebSessionLoggerAssociation } from "./.gen/providers/aws/workspacesweb-session-logger-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebSessionLoggerAssociation.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:sessionLogger/session_logger-id-12345678,arn:aws:workspaces-web:us-west-2:123456789012:portal/portal-id-12345678"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web Session Logger Association using the `session_logger_arn,portal_arn`. For example:

```console
% terraform import aws_workspacesweb_session_logger_association.example arn:aws:workspaces-web:us-west-2:123456789012:sessionLogger/session_logger-id-12345678,arn:aws:workspaces-web:us-west-2:123456789012:portal/portal-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-911f613c306645300eaeedc6bfe09f040365f4ea0696d20345f62414c1378371 -->