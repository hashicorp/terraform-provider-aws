---
subcategory: "SageMaker"
layout: "aws"
page_title: "AWS: aws_sagemaker_flow_definition"
description: |-
  Provides a SageMaker Flow Definition resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_flow_definition

Provides a SageMaker Flow Definition resource.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerFlowDefinition } from "./.gen/providers/aws/sagemaker-flow-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerFlowDefinition(this, "example", {
      flowDefinitionName: "example",
      humanLoopConfig: {
        humanTaskUiArn: Token.asString(awsSagemakerHumanTaskUiExample.arn),
        taskAvailabilityLifetimeInSeconds: 1,
        taskCount: 1,
        taskDescription: "example",
        taskTitle: "example",
        workteamArn: Token.asString(awsSagemakerWorkteamExample.arn),
      },
      outputConfig: {
        s3OutputPath: "s3://${" + awsS3BucketExample.bucket + "}/",
      },
      roleArn: Token.asString(awsIamRoleExample.arn),
    });
  }
}

```

### Public Workteam Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerFlowDefinition } from "./.gen/providers/aws/sagemaker-flow-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerFlowDefinition(this, "example", {
      flowDefinitionName: "example",
      humanLoopConfig: {
        humanTaskUiArn: Token.asString(awsSagemakerHumanTaskUiExample.arn),
        publicWorkforceTaskPrice: {
          amountInUsd: {
            cents: 1,
            tenthFractionsOfACent: 2,
          },
        },
        taskAvailabilityLifetimeInSeconds: 1,
        taskCount: 1,
        taskDescription: "example",
        taskTitle: "example",
        workteamArn:
          "arn:aws:sagemaker:${" +
          current.name +
          "}:394669845002:workteam/public-crowd/default",
      },
      outputConfig: {
        s3OutputPath: "s3://${" + awsS3BucketExample.bucket + "}/",
      },
      roleArn: Token.asString(awsIamRoleExample.arn),
    });
  }
}

```

### Human Loop Activation Config Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerFlowDefinition } from "./.gen/providers/aws/sagemaker-flow-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerFlowDefinition(this, "example", {
      flowDefinitionName: "example",
      humanLoopActivationConfig: {
        humanLoopActivationConditionsConfig: {
          humanLoopActivationConditions:
            '        {\n\t\t\t"Conditions": [\n\t\t\t  {\n\t\t\t\t"ConditionType": "Sampling",\n\t\t\t\t"ConditionParameters": {\n\t\t\t\t  "RandomSamplingPercentage": 5\n\t\t\t\t}\n\t\t\t  }\n\t\t\t]\n\t\t}\n\n',
        },
      },
      humanLoopConfig: {
        humanTaskUiArn: Token.asString(awsSagemakerHumanTaskUiExample.arn),
        taskAvailabilityLifetimeInSeconds: 1,
        taskCount: 1,
        taskDescription: "example",
        taskTitle: "example",
        workteamArn: Token.asString(awsSagemakerWorkteamExample.arn),
      },
      humanLoopRequestSource: {
        awsManagedHumanLoopRequestSource:
          "AWS/Textract/AnalyzeDocument/Forms/V1",
      },
      outputConfig: {
        s3OutputPath: "s3://${" + awsS3BucketExample.bucket + "}/",
      },
      roleArn: Token.asString(awsIamRoleExample.arn),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `flowDefinitionName` - (Required) The name of your flow definition.
* `humanLoopConfig` - (Required)  An object containing information about the tasks the human reviewers will perform. See [Human Loop Config](#human-loop-config) details below.
* `roleArn` - (Required) The Amazon Resource Name (ARN) of the role needed to call other services on your behalf.
* `outputConfig` - (Required) An object containing information about where the human review results will be uploaded. See [Output Config](#output-config) details below.
* `humanLoopActivationConfig` - (Optional) An object containing information about the events that trigger a human workflow. See [Human Loop Activation Config](#human-loop-activation-config) details below.
* `humanLoopRequestSource` - (Optional) Container for configuring the source of human task requests. Use to specify if Amazon Rekognition or Amazon Textract is used as an integration source. See [Human Loop Request Source](#human-loop-request-source) details below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Human Loop Config

* `humanTaskUiArn` - (Required) The Amazon Resource Name (ARN) of the human task user interface.
* `publicWorkforceTaskPrice` - (Optional) Defines the amount of money paid to an Amazon Mechanical Turk worker for each task performed. See [Public Workforce Task Price](#public-workforce-task-price) details below.
* `taskAvailabilityLifetimeInSeconds` - (Required) The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.
* `taskCount` - (Required) The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.
* `taskDescription` - (Required) A description for the human worker task.
* `taskKeywords` - (Optional) An array of keywords used to describe the task so that workers can discover the task.
* `taskTimeLimitInSeconds` - (Optional) The amount of time that a worker has to complete a task. The default value is `3600` seconds.
* `taskTitle` - (Required) A title for the human worker task.
* `workteamArn` - (Required) The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).

#### Public Workforce Task Price

* `amountInUsd` - (Optional) Defines the amount of money paid to an Amazon Mechanical Turk worker in United States dollars. See [Amount In Usd](#amount-in-usd) details below.

##### Amount In Usd

* `cents` - (Optional) The fractional portion, in cents, of the amount. Valid value range between `0` and `99`.
* `dollars` - (Optional) The whole number of dollars in the amount. Valid value range between `0` and `2`.
* `tenthFractionsOfACent` - (Optional) Fractions of a cent, in tenths. Valid value range between `0` and `9`.

### Human Loop Activation Config

* `humanLoopActivationConditionsConfig` - (Required) defines under what conditions SageMaker creates a human loop. See [Human Loop Activation Conditions Config](#human-loop-activation-conditions-config) details below.

#### Human Loop Activation Conditions Config

* `humanLoopActivationConditions` - (Required) A JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. For more information about how to structure the JSON, see [JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI](https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-human-fallback-conditions-json-schema.html).

### Human Loop Request Source

* `awsManagedHumanLoopRequestSource` - (Required) Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. Valid values are: `AWS/Rekognition/DetectModerationLabels/Image/V3` and `AWS/Textract/AnalyzeDocument/Forms/V1`.

### Output Config

* `s3OutputPath` - (Required) The Amazon S3 path where the object containing human output will be made available.
* `kmsKeyId` - (Optional) The Amazon Key Management Service (KMS) key ARN for server-side encryption.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) assigned by AWS to this Flow Definition.
* `id` - The name of the Flow Definition.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker Flow Definitions using the `flowDefinitionName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerFlowDefinition } from "./.gen/providers/aws/sagemaker-flow-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SagemakerFlowDefinition.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import SageMaker Flow Definitions using the `flowDefinitionName`. For example:

```console
% terraform import aws_sagemaker_flow_definition.example example
```

<!-- cache-key: cdktf-0.20.8 input-e8fd07fc83ab3a1b65cb95209fcf2268f33197e551f1560760b16e1b34bf135b -->