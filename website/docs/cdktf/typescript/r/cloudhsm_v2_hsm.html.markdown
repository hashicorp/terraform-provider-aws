---
subcategory: "CloudHSM"
layout: "aws"
page_title: "AWS: aws_cloudhsm_v2_hsm"
description: |-
  Provides a CloudHSM v2 HSM module resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudhsm_v2_hsm

Creates an HSM module in Amazon CloudHSM v2 cluster.

## Example Usage

The following example below creates an HSM module in CloudHSM cluster.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudhsmV2Hsm } from "./.gen/providers/aws/cloudhsm-v2-hsm";
import { DataAwsCloudhsmV2Cluster } from "./.gen/providers/aws/data-aws-cloudhsm-v2-cluster";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const cluster = new DataAwsCloudhsmV2Cluster(this, "cluster", {
      clusterId: cloudhsmClusterId.stringValue,
    });
    new CloudhsmV2Hsm(this, "cloudhsm_v2_hsm", {
      clusterId: Token.asString(cluster.clusterId),
      subnetId: Token.asString(Fn.lookupNested(cluster.subnetIds, ["0"])),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

~> **NOTE:** Either `subnetId` or `availabilityZone` must be specified.

* `clusterId` - (Required) The ID of Cloud HSM v2 cluster to which HSM will be added.
* `subnetId` - (Optional) The ID of subnet in which HSM module will be located. Conflicts with `availabilityZone`.
* `availabilityZone` - (Optional) The IDs of AZ in which HSM module will be located. Conflicts with `subnetId`.
* `ipAddress` - (Optional) The IP address of HSM module. Must be within the CIDR of selected subnet.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `availabilityZone` - Name of the Availability Zone the HSM instance is located in.
* `clusterId` - ID of Cloud HSM v2 cluster.
* `hsmEniId` - The id of the ENI interface allocated for HSM module.
* `hsmId` - The id of the HSM module.
* `hsmState` - The state of the HSM module.
* `ipAddress` - The IP address of the HSM Module.
* `subnetId` -  The ID of subnet in which HSM is located

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import HSM modules using their HSM ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudhsmV2Hsm } from "./.gen/providers/aws/cloudhsm-v2-hsm";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudhsmV2Hsm.generateConfigForImport(this, "bar", "hsm-quo8dahtaca");
  }
}

```

Using `terraform import`, import HSM modules using their HSM ID. For example:

```console
% terraform import aws_cloudhsm_v2_hsm.bar hsm-quo8dahtaca
```

<!-- cache-key: cdktf-0.20.8 input-b2e37695762fb364be3f6f2f816de9e94b8a2df9afc85641ce60b5c3da254207 -->