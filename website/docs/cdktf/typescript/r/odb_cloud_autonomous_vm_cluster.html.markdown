---
subcategory: "Oracle Database@AWS"
layout: "AWS: aws_odb_cloud_autonomous_vm_cluster"
page_title: "AWS: aws_odb_cloud_autonomous_vm_cluster"
description: |-
  Terraform resource managing cloud autonomous vm cluster in AWS for Oracle Database@AWS.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_odb_cloud_autonomous_vm_cluster

Terraform resource managing cloud autonomous vm cluster in AWS for Oracle Database@AWS.

You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OdbCloudAutonomousVmCluster } from "./.gen/providers/aws/odb-cloud-autonomous-vm-cluster";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OdbCloudAutonomousVmCluster(this, "avmc_with_all_params", {
      autonomousDataStorageSizeInTbs: 5,
      cloudExadataInfrastructureId:
        "<aws_odb_cloud_exadata_infrastructure.test.id>",
      cpuCoreCountPerNode: 40,
      dbServers: ["<my_db_server_1>", "<my_db_server_2>"],
      description: "my first avmc",
      displayName: "Ofake_my avmc",
      licenseModel: "LICENSE_INCLUDED",
      maintenanceWindow: [
        {
          daysOfWeek: [
            {
              name: "MONDAY",
            },
            {
              name: "TUESDAY",
            },
          ],
          hoursOfDay: [4, 16],
          leadTimeInWeeks: 3,
          months: [
            {
              name: "FEBRUARY",
            },
            {
              name: "MAY",
            },
            {
              name: "AUGUST",
            },
            {
              name: "NOVEMBER",
            },
          ],
          preference: "CUSTOM_PREFERENCE",
          weeksOfMonth: [2, 4],
        },
      ],
      memoryPerOracleComputeUnitInGbs: 2,
      odbNetworkId: "<aws_odb_network.test.id>",
      scanListenerPortNonTls: 1024,
      scanListenerPortTls: 8561,
      tags: {
        env: "dev",
      },
      timeZone: "UTC",
      totalContainerDatabases: 1,
    });
    new OdbCloudAutonomousVmCluster(this, "avmc_with_minimum_parameters", {
      autonomousDataStorageSizeInTbs: 5,
      cloudExadataInfrastructureId: "<exadata_infra_id>",
      cpuCoreCountPerNode: 40,
      dbServers: ["<my_db_server_id>"],
      displayName: "Ofake-avmc-my_avmc",
      licenseModel: "LICENSE_INCLUDED",
      maintenanceWindow: [
        {
          preference: "NO_PREFERENCE",
        },
      ],
      memoryPerOracleComputeUnitInGbs: 2,
      odbNetworkId: "<odb_net_id>",
      scanListenerPortNonTls: 1024,
      scanListenerPortTls: 8561,
      totalContainerDatabases: 1,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `cloudExadataInfrastructureId` - (Required) Exadata infrastructure id. Changing this will force terraform to create new resource.
* `autonomousDataStorageSizeInTbs` - (Required) The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB. Changing this will force terraform to create new resource.
* `cpuCoreCountPerNode` - (Required) The number of CPU cores enabled per node in the Autonomous VM cluster. Changing this will force terraform to create new resource.
* `dbServers` - (Required) The database servers in the Autonomous VM cluster. Changing this will force terraform to create new resource.
* `displayName` - (Required) The display name of the Autonomous VM cluster. Changing this will force terraform to create new resource.
* `memoryPerOracleComputeUnitInGbs` - (Required) The amount of memory allocated per Oracle Compute Unit, in GB. Changing this will force terraform to create new resource.
* `odbNetworkId` - (Required) The unique identifier of the ODB network associated with this Autonomous VM Cluster. Changing this will force terraform to create new resource.
* `scanListenerPortNonTls` - (Required) The SCAN listener port for non-TLS (TCP) protocol. The default is 1521. Changing this will force terraform to create new resource.
* `scanListenerPortTls` - (Required) The SCAN listener port for TLS (TCP) protocol. The default is 2484. Changing this will force terraform to create new resource.
* `totalContainerDatabases` - (Required) The total number of Autonomous Container Databases that can be created with the allocated local storage. Changing this will force terraform to create new resource.
* `maintenanceWindow` - (Required) The maintenance window of the Autonomous VM cluster. Changing this will force terraform to create new resource.

The following arguments are optional:

* `description` - (Optional) The description of the Autonomous VM cluster.
* `isMtlsEnabledVmCluster` - (Optional) Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster. Changing this will force terraform to create new resource.
* `licenseModel` - (Optional) The license model for the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE. Changing this will force terraform to create new resource.
* `timeZone` - (Optional) The time zone of the Autonomous VM cluster. Changing this will force terraform to create new resource.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `tags` - (Optional) A map of tags to assign to the exadata infrastructure. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### maintenance_window

* `preference` - (Required) The preference for the maintenance window scheduling. Changing this will force terraform to create new resource.
* `daysOfWeek` - (Optional) The days of the week when maintenance can be performed. Changing this will force terraform to create new resource.
* `hoursOfDay` - (Optional) The hours of the day when maintenance can be performed. Changing this will force terraform to create new resource.
* `leadTimeInWeeks` - (Optional) The lead time in weeks before the maintenance window. Changing this will force terraform to create new resource.
* `months` - (Optional) The months when maintenance can be performed. Changing this will force terraform to create new resource.
* `weeksOfMonth` - (Optional) Indicates whether to skip release updates during maintenance. Changing this will force terraform to create new resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) for the Exadata infrastructure.
* `autonomousDataStoragePercentage` - The progress of the current operation on the Autonomous VM cluster, as a percentage.
* `availableAutonomousDataStorageSizeInTbs` - The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
* `availableContainerDatabases` - The number of Autonomous CDBs that you can create with the currently available storage.
* `availableCpus` - The number of CPU cores available for allocation to Autonomous Databases.
* `computeModel` - The compute model of the Autonomous VM cluster: ECPU or OCPU.
* `cpuCoreCount` - The total number of CPU cores in the Autonomous VM cluster.
* `cpuPercentage` - The percentage of total CPU cores currently in use in the Autonomous VM cluster.
* `createdAt` - The date and time when the Autonomous VM cluster was created.
* `dataStorageSizeInGbs` - The total data storage allocated to the Autonomous VM cluster, in GB.
* `dataStorageSizeInTbs` - The total data storage allocated to the Autonomous VM cluster, in TB.
* `odbNodeStorageSizeInGbs` - The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
* `domain` - The domain name of the Autonomous VM cluster.
* `exadataStorageInTbsLowestScaledValue` - The minimum value to which you can scale down the Exadata storage, in TB.
* `hostname` - The hostname of the Autonomous VM cluster.
* `licenseModel` - The license model for the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.
* `maxAcdsLowestScaledValue` - The minimum value to which you can scale down the maximum number of Autonomous CDBs.
* `memorySizeInGbs` - The total amount of memory allocated to the Autonomous VM cluster, in gigabytes(GB).
* `nodeCount` - The number of database server nodes in the Autonomous VM cluster.
* `nonProvisionableAutonomousContainerDatabases` - The number of Autonomous CDBs that can't be provisioned because of resource constraints.
* `ociResourceAnchorName` - The name of the OCI resource anchor associated with this Autonomous VM cluster.
* `ociUrl` - The URL for accessing the OCI console page for this Autonomous VM cluster.
* `ocid` - The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
* `percentProgress` - The progress of the current operation on the Autonomous VM cluster, as a percentage.
* `provisionableAutonomousContainerDatabases` - The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
* `provisionedAutonomousContainerDatabases` - The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
* `provisionedCpus` - The number of CPUs provisioned in the Autonomous VM cluster.
* `reclaimableCpus` - The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
* `reservedCpus` - The number of CPU cores reserved for system operations and redundancy.
* `shape` - The shape of the Exadata infrastructure for the Autonomous VM cluster.
* `status` - The status of the Autonomous VM cluster. Possible values include CREATING, AVAILABLE, UPDATING, DELETING, DELETED, FAILED.
* `statusReason` - Additional information about the current status of the Autonomous VM cluster.
* `timeZone` - The time zone of the Autonomous VM cluster.
* `timeOrdsCertificateExpires` - The expiration date and time of the ORDS certificate.
* `timeDatabaseSslCertificateExpires` - The expiration date and time of the database SSL certificate.
* `tagsAll` - The combined set of user-defined and provider-defined tags.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `24h`)
* `update` - (Default `24h`)
* `delete` - (Default `24h`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearch Ingestion Pipeline using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OdbCloudAutonomousVmCluster } from "./.gen/providers/aws/odb-cloud-autonomous-vm-cluster";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OdbCloudAutonomousVmCluster.generateConfigForImport(
      this,
      "example",
      "example"
    );
  }
}

```

Using `terraform import`, import cloud autonomous vm cluster `id`. For example:

```console
% terraform import aws_odb_cloud_autonomous_vm_cluster.example example
```

<!-- cache-key: cdktf-0.20.8 input-aed390b80b509c9f00d8498639987bd0e0cf703ce18aff93885f7db7c46abaf4 -->