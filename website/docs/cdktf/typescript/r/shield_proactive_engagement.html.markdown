---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_proactive_engagement"
description: |-
  Terraform resource for managing a AWS Shield Proactive Engagement.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_proactive_engagement

Terraform resource for managing a AWS Shield Proactive Engagement.
Proactive engagement authorizes the Shield Response Team (SRT) to use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IamRole } from "./.gen/providers/aws/iam-role";
import { IamRolePolicyAttachment } from "./.gen/providers/aws/iam-role-policy-attachment";
import { ShieldDrtAccessRoleArnAssociation } from "./.gen/providers/aws/shield-drt-access-role-arn-association";
import { ShieldProactiveEngagement } from "./.gen/providers/aws/shield-proactive-engagement";
import { ShieldProtectionGroup } from "./.gen/providers/aws/shield-protection-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new IamRole(this, "example", {
      assumeRolePolicy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: "sts:AssumeRole",
              Effect: "Allow",
              Principal: {
                Service: "drt.shield.amazonaws.com",
              },
              Sid: "",
            },
          ],
          Version: "2012-10-17",
        })
      ),
      name: "example-role",
    });
    const awsIamRolePolicyAttachmentExample = new IamRolePolicyAttachment(
      this,
      "example_1",
      {
        policyArn:
          "arn:aws:iam::aws:policy/service-role/AWSShieldDRTAccessPolicy",
        role: example.name,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIamRolePolicyAttachmentExample.overrideLogicalId("example");
    const awsShieldDrtAccessRoleArnAssociationExample =
      new ShieldDrtAccessRoleArnAssociation(this, "example_2", {
        roleArn: example.arn,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldDrtAccessRoleArnAssociationExample.overrideLogicalId("example");
    const awsShieldProactiveEngagementExample = new ShieldProactiveEngagement(
      this,
      "example_3",
      {
        dependsOn: [awsShieldDrtAccessRoleArnAssociationExample],
        emergencyContact: [
          {
            contactNotes: "Notes",
            emailAddress: "contact1@example.com",
            phoneNumber: "+12358132134",
          },
          {
            contactNotes: "Notes 2",
            emailAddress: "contact2@example.com",
            phoneNumber: "+12358132134",
          },
        ],
        enabled: true,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProactiveEngagementExample.overrideLogicalId("example");
    const awsShieldProtectionGroupExample = new ShieldProtectionGroup(
      this,
      "example_4",
      {
        aggregation: "MAX",
        pattern: "ALL",
        protectionGroupId: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProtectionGroupExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `enabled` - (Required) Boolean value indicating if Proactive Engagement should be enabled or not.
* `emergencyContact` - (Required) One or more emergency contacts. You must provide at least one phone number in the emergency contact list. See [`emergency_contacts`](#emergency_contacts).

### emergency_contacts

* `contactNotes` - (Optional) Additional notes regarding the contact.
* `emailAddress` - (Required) A valid email address that will be used for this contact.
* `phoneNumber` - (Optional) A phone number, starting with `+` and up to 15 digits that will be used for this contact.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield proactive engagement using the AWS account ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ShieldProactiveEngagement } from "./.gen/providers/aws/shield-proactive-engagement";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ShieldProactiveEngagement.generateConfigForImport(
      this,
      "example",
      "123456789012"
    );
  }
}

```

Using `terraform import`, import Shield proactive engagement using the AWS account ID. For example:

```console
% terraform import aws_shield_proactive_engagement.example 123456789012
```

<!-- cache-key: cdktf-0.20.8 input-20fc99cd448022b4ae311eda83ba5e27f0f9eae7fd8f28be2dcf5adb9ce77603 -->