---
subcategory: "EventBridge Schemas"
layout: "aws"
page_title: "AWS: aws_schemas_registry_policy"
description: |-
  Terraform resource for managing an AWS EventBridge Schemas Registry Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_schemas_registry_policy

Terraform resource for managing an AWS EventBridge Schemas Registry Policy.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { SchemasRegistryPolicy } from "./.gen/providers/aws/schemas-registry-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsIamPolicyDocument(this, "example", {
      statement: [
        {
          actions: ["schemas:*"],
          effect: "Allow",
          principals: [
            {
              identifiers: ["109876543210"],
              type: "AWS",
            },
          ],
          resources: [
            "arn:aws:schemas:us-east-1:123456789012:registry/example",
            "arn:aws:schemas:us-east-1:123456789012:schema/example*",
          ],
          sid: "example",
        },
      ],
    });
    const awsSchemasRegistryPolicyExample = new SchemasRegistryPolicy(
      this,
      "example_1",
      {
        policy: Token.asString(example.json),
        registryName: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSchemasRegistryPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `registryName` - (Required) Name of EventBridge Schema Registry
* `policy` - (Required) Resource Policy for EventBridge Schema Registry

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EventBridge Schema Registry Policy using the `registryName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SchemasRegistryPolicy } from "./.gen/providers/aws/schemas-registry-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SchemasRegistryPolicy.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import EventBridge Schema Registry Policy using the `registryName`. For example:

```console
% terraform import aws_schemas_registry_policy.example example
```

<!-- cache-key: cdktf-0.20.8 input-62f22e7b540422b32e9ccd82d0528f6eb0fb7caef34af87d1e13ddbc71adefb5 -->