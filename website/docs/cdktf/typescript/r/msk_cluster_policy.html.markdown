---
subcategory: "Managed Streaming for Kafka"
layout: "aws"
page_title: "AWS: aws_msk_cluster_policy"
description: |-
  Terraform resource for managing an AWS Managed Streaming for Kafka Cluster Policy.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_msk_cluster_policy

Terraform resource for managing an AWS Managed Streaming for Kafka Cluster Policy.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsPartition } from "./.gen/providers/aws/data-aws-partition";
import { MskClusterPolicy } from "./.gen/providers/aws/msk-cluster-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new DataAwsPartition(this, "current_1", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    new MskClusterPolicy(this, "example", {
      clusterArn: Token.asString(awsMskClusterExample.arn),
      policy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: [
                "kafka:Describe*",
                "kafka:Get*",
                "kafka:CreateVpcConnection",
                "kafka:GetBootstrapBrokers",
              ],
              Effect: "Allow",
              Principal: {
                AWS:
                  "arn:${" +
                  dataAwsPartitionCurrent.partition +
                  "}:iam::${" +
                  current.accountId +
                  "}:root",
              },
              Resource: awsMskClusterExample.arn,
              Sid: "ExampleMskClusterPolicy",
            },
          ],
          Version: "2012-10-17",
        })
      ),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `clusterArn` - (Required) The Amazon Resource Name (ARN) that uniquely identifies the cluster.
* `policy` - (Required) Resource policy for cluster.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Same as `clusterArn`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Managed Streaming for Kafka Cluster Policy using the `cluster_arn. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MskClusterPolicy } from "./.gen/providers/aws/msk-cluster-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    MskClusterPolicy.generateConfigForImport(
      this,
      "example",
      "arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3"
    );
  }
}

```

Using `terraform import`, import Managed Streaming for Kafka Cluster Policy using the `clusterArn`. For example:

```console
% terraform import aws_msk_cluster_policy.example arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3
```

<!-- cache-key: cdktf-0.20.8 input-1d0af5714d8c3f37bc8001ce239abd95f2f1a370064fc908a9872519c5f9e04e -->