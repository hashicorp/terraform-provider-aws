---
subcategory: "Device Farm"
layout: "aws"
page_title: "AWS: aws_devicefarm_test_grid_project"
description: |-
  Provides a Devicefarm test_grid_project
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_devicefarm_test_grid_project

Provides a resource to manage AWS Device Farm Test Grid Projects.

~> **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DevicefarmTestGridProject } from "./.gen/providers/aws/devicefarm-test-grid-project";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DevicefarmTestGridProject(this, "example", {
      name: "example",
      vpcConfig: {
        securityGroupIds: Token.asList(
          Fn.lookupNested(awsSecurityGroupExample, ["*", "id"])
        ),
        subnetIds: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "id"])),
        vpcId: Token.asString(awsVpcExample.id),
      },
    });
  }
}

```

## Argument Reference

* `name` - (Required) The name of the Selenium testing project.
* `description` - (Optional) Human-readable description of the project.
* `vpcConfig` - (Required) The VPC security groups and subnets that are attached to a project. See [VPC Config](#vpc-config) below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### VPC Config

* `securityGroupIds` - (Required) A list of VPC security group IDs in your Amazon VPC.
* `subnetIds` - (Required) A list of VPC subnet IDs in your Amazon VPC.
* `vpcId` - (Required) The ID of the Amazon VPC.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name of this Test Grid Project.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DeviceFarm Test Grid Projects using their ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DevicefarmTestGridProject } from "./.gen/providers/aws/devicefarm-test-grid-project";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DevicefarmTestGridProject.generateConfigForImport(
      this,
      "example",
      "arn:aws:devicefarm:us-west-2:123456789012:testgrid-project:4fa784c7-ccb4-4dbf-ba4f-02198320daa1"
    );
  }
}

```

Using `terraform import`, import DeviceFarm Test Grid Projects using their ARN. For example:

```console
% terraform import aws_devicefarm_test_grid_project.example arn:aws:devicefarm:us-west-2:123456789012:testgrid-project:4fa784c7-ccb4-4dbf-ba4f-02198320daa1
```

<!-- cache-key: cdktf-0.20.8 input-2f5eb3ada6471cdbf41632a80ae508f4c526e15908f83a9d3ac70cb7c05f37b2 -->