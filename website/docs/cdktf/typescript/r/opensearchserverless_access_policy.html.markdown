---
subcategory: "OpenSearch Serverless"
layout: "aws"
page_title: "AWS: aws_opensearchserverless_access_policy"
description: |-
  Terraform resource for managing an AWS OpenSearch Serverless Access Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearchserverless_access_policy

Terraform resource for managing an AWS OpenSearch Serverless Access Policy. See AWS documentation for [data access policies](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html) and [supported data access policy permissions](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html#serverless-data-supported-permissions).

## Example Usage

### Grant all collection and index permissions

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { OpensearchserverlessAccessPolicy } from "./.gen/providers/aws/opensearchserverless-access-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    new OpensearchserverlessAccessPolicy(this, "example", {
      description: "read and write permissions",
      name: "example",
      policy: Token.asString(
        Fn.jsonencode([
          {
            Principal: [current.arn],
            Rules: [
              {
                Permission: ["aoss:*"],
                Resource: ["index/example-collection/*"],
                ResourceType: "index",
              },
              {
                Permission: ["aoss:*"],
                Resource: ["collection/example-collection"],
                ResourceType: "collection",
              },
            ],
          },
        ])
      ),
      type: "data",
    });
  }
}

```

### Grant read-only collection and index permissions

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { OpensearchserverlessAccessPolicy } from "./.gen/providers/aws/opensearchserverless-access-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    new OpensearchserverlessAccessPolicy(this, "example", {
      description: "read-only permissions",
      name: "example",
      policy: Token.asString(
        Fn.jsonencode([
          {
            Principal: [current.arn],
            Rules: [
              {
                Permission: ["aoss:DescribeIndex", "aoss:ReadDocument"],
                Resource: ["index/example-collection/*"],
                ResourceType: "index",
              },
              {
                Permission: ["aoss:DescribeCollectionItems"],
                Resource: ["collection/example-collection"],
                ResourceType: "collection",
              },
            ],
          },
        ])
      ),
      type: "data",
    });
  }
}

```

### Grant SAML identity permissions

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchserverlessAccessPolicy } from "./.gen/providers/aws/opensearchserverless-access-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OpensearchserverlessAccessPolicy(this, "example", {
      description: "saml permissions",
      name: "example",
      policy: Token.asString(
        Fn.jsonencode([
          {
            Principal: [
              "saml/123456789012/myprovider/user/Annie",
              "saml/123456789012/anotherprovider/group/Accounting",
            ],
            Rules: [
              {
                Permission: ["aoss:*"],
                Resource: ["index/example-collection/*"],
                ResourceType: "index",
              },
              {
                Permission: ["aoss:*"],
                Resource: ["collection/example-collection"],
                ResourceType: "collection",
              },
            ],
          },
        ])
      ),
      type: "data",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the policy.
* `policy` - (Required) JSON policy document to use as the content for the new policy
* `type` - (Required) Type of access policy. Must be `data`.

The following arguments are optional:

* `description` - (Optional) Description of the policy. Typically used to store information about the permissions defined in the policy.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `policyVersion` - Version of the policy.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearchServerless Access Policy using the `name` and `type` arguments separated by a slash (`/`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchserverlessAccessPolicy } from "./.gen/providers/aws/opensearchserverless-access-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OpensearchserverlessAccessPolicy.generateConfigForImport(
      this,
      "example",
      "example/data"
    );
  }
}

```

Using `terraform import`, import OpenSearchServerless Access Policy using the `name` and `type` arguments separated by a slash (`/`). For example:

```console
% terraform import aws_opensearchserverless_access_policy.example example/data
```

<!-- cache-key: cdktf-0.20.8 input-025702799f46af465a8f782db7f780da1b73dd0220b3ff605a2cb05cd1fc3137 -->