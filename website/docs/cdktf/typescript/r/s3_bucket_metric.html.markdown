---
subcategory: "S3 (Simple Storage)"
layout: "aws"
page_title: "AWS: aws_s3_bucket_metric"
description: |-
  Provides a S3 bucket metrics configuration resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3_bucket_metric

Provides a S3 bucket [metrics configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/metrics-configurations.html) resource.

-> This resource cannot be used with S3 directory buckets.

## Example Usage

### Add metrics configuration for entire S3 bucket

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketMetric } from "./.gen/providers/aws/s3-bucket-metric";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucket: "example",
    });
    new S3BucketMetric(this, "example-entire-bucket", {
      bucket: example.id,
      name: "EntireBucket",
    });
  }
}

```

### Add metrics configuration with S3 object filter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketMetric } from "./.gen/providers/aws/s3-bucket-metric";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucket: "example",
    });
    new S3BucketMetric(this, "example-filtered", {
      bucket: example.id,
      filter: {
        prefix: "documents/",
        tags: {
          class: "blue",
          priority: "high",
        },
      },
      name: "ImportantBlueDocuments",
    });
  }
}

```

### Add metrics configuration with S3 object filter for S3 Access Point

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3AccessPoint } from "./.gen/providers/aws/s3-access-point";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketMetric } from "./.gen/providers/aws/s3-bucket-metric";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucket: "example",
    });
    const exampleAccessPoint = new S3AccessPoint(this, "example-access-point", {
      bucket: example.id,
      name: "example-access-point",
    });
    new S3BucketMetric(this, "example-filtered", {
      bucket: example.id,
      filter: {
        accessPoint: exampleAccessPoint.arn,
        tags: {
          class: "blue",
          priority: "high",
        },
      },
      name: "ImportantBlueDocuments",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `bucket` - (Required) Name of the bucket to put metric configuration.
* `name` - (Required) Unique identifier of the metrics configuration for the bucket. Must be less than or equal to 64 characters in length.
* `filter` - (Optional) [Object filtering](http://docs.aws.amazon.com/AmazonS3/latest/dev/metrics-configurations.html#metrics-configurations-filter) that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).

The `filter` metric configuration supports the following:

~> **NOTE:** At least one of `accessPoint`, `prefix`, or `tags` is required when specifying a `filter`

* `accessPoint` - (Optional) S3 Access Point ARN for filtering (singular).
* `prefix` - (Optional) Object prefix for filtering (singular).
* `tags` - (Optional) Object tags for filtering (up to 10).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 bucket metric configurations using `bucket:metric`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3BucketMetric } from "./.gen/providers/aws/s3-bucket-metric";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3BucketMetric.generateConfigForImport(
      this,
      "myBucketEntireBucket",
      "my-bucket:EntireBucket"
    );
  }
}

```

Using `terraform import`, import S3 bucket metric configurations using `bucket:metric`. For example:

```console
% terraform import aws_s3_bucket_metric.my-bucket-entire-bucket my-bucket:EntireBucket
```

<!-- cache-key: cdktf-0.20.8 input-490b1eb1181c3efda1dde28185cec6c51621e51d6133087bfb3f30541f6ac55e -->