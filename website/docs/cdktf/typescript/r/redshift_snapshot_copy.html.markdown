---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_snapshot_copy"
description: |-
  Terraform resource for managing an AWS Redshift Snapshot Copy.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_snapshot_copy

Terraform resource for managing an AWS Redshift Snapshot Copy.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftSnapshotCopy } from "./.gen/providers/aws/redshift-snapshot-copy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftSnapshotCopy(this, "example", {
      clusterIdentifier: Token.asString(awsRedshiftClusterExample.id),
      destinationRegion: "us-east-1",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `clusterIdentifier` - (Required) Identifier of the source cluster.
* `destinationRegion` - (Required) AWS Region to copy snapshots to.

The following arguments are optional:

* `manualSnapshotRetentionPeriod` - (Optional) Number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is `-1`, the manual snapshot is retained indefinitely.
* `retentionPeriod` - (Optional) Number of days to retain automated snapshots in the destination region after they are copied from the source region.
* `snapshotCopyGrantName` - (Optional) Name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Identifier of the source cluster.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Snapshot Copy using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftSnapshotCopy } from "./.gen/providers/aws/redshift-snapshot-copy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftSnapshotCopy.generateConfigForImport(
      this,
      "example",
      "cluster-id-12345678"
    );
  }
}

```

Using `terraform import`, import Redshift Snapshot Copy using the `id`. For example:

```console
% terraform import aws_redshift_snapshot_copy.example cluster-id-12345678
```

<!-- cache-key: cdktf-0.20.1 input-1dff7706ee2b35f7be957abe90c7084c9f3efd26e47065e0ac3bdd3ab9677bbf -->