---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_registry_scanning_configuration"
description: |-
  Provides an Elastic Container Registry Scanning Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ecr_registry_scanning_configuration

Provides an Elastic Container Registry Scanning Configuration. Can't be completely deleted, instead reverts to the default `BASIC` scanning configuration without rules.

## Example Usage

### Basic example

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcrRegistryScanningConfiguration } from "./.gen/providers/aws/ecr-registry-scanning-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new EcrRegistryScanningConfiguration(this, "configuration", {
      rule: [
        {
          repositoryFilter: [
            {
              filter: "example",
              filterType: "WILDCARD",
            },
          ],
          scanFrequency: "CONTINUOUS_SCAN",
        },
      ],
      scanType: "ENHANCED",
    });
  }
}

```

### Multiple rules

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcrRegistryScanningConfiguration } from "./.gen/providers/aws/ecr-registry-scanning-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new EcrRegistryScanningConfiguration(this, "test", {
      rule: [
        {
          repositoryFilter: [
            {
              filter: "*",
              filterType: "WILDCARD",
            },
          ],
          scanFrequency: "SCAN_ON_PUSH",
        },
        {
          repositoryFilter: [
            {
              filter: "example",
              filterType: "WILDCARD",
            },
          ],
          scanFrequency: "CONTINUOUS_SCAN",
        },
      ],
      scanType: "ENHANCED",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

- `scanType` - (Required) the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`.
- `rule` - (Optional) One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See [below for schema](#rule).

### rule

- `repositoryFilter` - (Required) One or more repository filter blocks, containing a `filter` (required string filtering repositories, see pattern regex [here](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_ScanningRepositoryFilter.html)) and a `filterType` (required string, currently only `WILDCARD` is supported).
- `scanFrequency` - (Required) The frequency that scans are performed at for a private registry. Can be `SCAN_ON_PUSH`, `CONTINUOUS_SCAN`, or `MANUAL`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `registryId` - The registry ID the scanning configuration applies to.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECR Scanning Configurations using the `registryId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcrRegistryScanningConfiguration } from "./.gen/providers/aws/ecr-registry-scanning-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EcrRegistryScanningConfiguration.generateConfigForImport(
      this,
      "example",
      "123456789012"
    );
  }
}

```

Using `terraform import`, import ECR Scanning Configurations using the `registryId`. For example:

```console
% terraform import aws_ecr_registry_scanning_configuration.example 123456789012
```

<!-- cache-key: cdktf-0.20.8 input-77b7a95ee014db4c3fbe941bd65f117c9c9aa71a97a27537a92562158d4361cb -->