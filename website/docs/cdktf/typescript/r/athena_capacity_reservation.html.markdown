---
subcategory: "Athena"
layout: "aws"
page_title: "AWS: aws_athena_capacity_reservation"
description: |-
  Terraform resource for managing an AWS Athena Capacity Reservation.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_athena_capacity_reservation

Terraform resource for managing an AWS Athena Capacity Reservation.

~> Destruction of this resource will both [cancel](https://docs.aws.amazon.com/athena/latest/ug/capacity-management-cancelling-a-capacity-reservation.html) and [delete](https://docs.aws.amazon.com/athena/latest/ug/capacity-management-deleting-a-capacity-reservation.html) the capacity reservation.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AthenaCapacityReservation } from "./.gen/providers/aws/athena-capacity-reservation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AthenaCapacityReservation(this, "example", {
      name: "example-reservation",
      targetDpus: 24,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the capacity reservation.
* `targetDpus` - (Required) Number of data processing units requested. Must be at least `24` units.

The following arguments are optional:

* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `allocatedDpus` - Number of data processing units currently allocated.
* `arn` - ARN of the Capacity Reservation.
* `status` - Status of the capacity reservation.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Athena Capacity Reservation using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AthenaCapacityReservation } from "./.gen/providers/aws/athena-capacity-reservation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AthenaCapacityReservation.generateConfigForImport(
      this,
      "example",
      "example-reservation"
    );
  }
}

```

Using `terraform import`, import Athena Capacity Reservation using the `name`. For example:

```console
% terraform import aws_athena_capacity_reservation.example example-reservation
```

<!-- cache-key: cdktf-0.20.8 input-afefdc06facbfbafb464401e80bf4bda23f7a26db5dfaa6bc478a403e5fa0947 -->