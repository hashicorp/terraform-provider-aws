---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_endpoint_connection_notification"
description: |-
  Provides a VPC Endpoint connection notification resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_endpoint_connection_notification

Provides a VPC Endpoint connection notification resource.
Connection notifications notify subscribers of VPC Endpoint events.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
import { VpcEndpointConnectionNotification } from "./.gen/providers/aws/vpc-endpoint-connection-notification";
import { VpcEndpointService } from "./.gen/providers/aws/vpc-endpoint-service";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const foo = new VpcEndpointService(this, "foo", {
      acceptanceRequired: false,
      networkLoadBalancerArns: [test.arn],
    });
    const topic = new DataAwsIamPolicyDocument(this, "topic", {
      statement: [
        {
          actions: ["SNS:Publish"],
          effect: "Allow",
          principals: [
            {
              identifiers: ["vpce.amazonaws.com"],
              type: "Service",
            },
          ],
          resources: ["arn:aws:sns:*:*:vpce-notification-topic"],
        },
      ],
    });
    const awsSnsTopicTopic = new SnsTopic(this, "topic_2", {
      name: "vpce-notification-topic",
      policy: Token.asString(topic.json),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSnsTopicTopic.overrideLogicalId("topic");
    const awsVpcEndpointConnectionNotificationFoo =
      new VpcEndpointConnectionNotification(this, "foo_3", {
        connectionEvents: ["Accept", "Reject"],
        connectionNotificationArn: Token.asString(awsSnsTopicTopic.arn),
        vpcEndpointServiceId: foo.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpcEndpointConnectionNotificationFoo.overrideLogicalId("foo");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `vpcEndpointServiceId` - (Optional) The ID of the VPC Endpoint Service to receive notifications for.
* `vpcEndpointId` - (Optional) The ID of the VPC Endpoint to receive notifications for.
* `connectionNotificationArn` - (Required) The ARN of the SNS topic for the notifications.
* `connectionEvents` - (Required) One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.

~> **NOTE:** One of `vpcEndpointServiceId` or `vpcEndpointId` must be specified.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the VPC connection notification.
* `state` - The state of the notification.
* `notificationType` - The type of notification.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoint connection notifications using the VPC endpoint connection notification `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointConnectionNotification } from "./.gen/providers/aws/vpc-endpoint-connection-notification";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcEndpointConnectionNotification.generateConfigForImport(
      this,
      "foo",
      "vpce-nfn-09e6ed3b4efba2263"
    );
  }
}

```

Using `terraform import`, import VPC Endpoint connection notifications using the VPC endpoint connection notification `id`. For example:

```console
% terraform import aws_vpc_endpoint_connection_notification.foo vpce-nfn-09e6ed3b4efba2263
```

<!-- cache-key: cdktf-0.20.8 input-0a73ca44fb468e8731df240f6476acb6d3f8563d6140121d0844ddbde55b7aff -->