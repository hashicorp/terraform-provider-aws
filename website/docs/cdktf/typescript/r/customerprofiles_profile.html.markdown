---
subcategory: "Connect Customer Profiles"
layout: "aws"
page_title: "AWS: aws_customerprofiles_profile"
description: |-
  Terraform resource for managing an Amazon Customer Profiles Profile.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_customerprofiles_profile

Terraform resource for managing an Amazon Customer Profiles Profile.
See the [Create Profile](https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateProfile.html) for more information.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CustomerprofilesDomain } from "./.gen/providers/aws/customerprofiles-domain";
import { CustomerprofilesProfile } from "./.gen/providers/aws/customerprofiles-profile";
interface MyConfig {
  defaultExpirationDays: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const example = new CustomerprofilesDomain(this, "example", {
      domainName: "example",
      defaultExpirationDays: config.defaultExpirationDays,
    });
    const awsCustomerprofilesProfileExample = new CustomerprofilesProfile(
      this,
      "example_1",
      {
        domainName: example.domainName,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCustomerprofilesProfileExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `domainName` - The name of your Customer Profile domain. It must be unique for your AWS account.

The following arguments are optional:

* `accountNumber` - A unique account number that you have given to the customer.
* `additionalInformation` - Any additional information relevant to the customer’s profile.
* `address` - A block that specifies a generic address associated with the customer that is not mailing, shipping, or billing. [Documented below](#address).
* `attributes` - A key value pair of attributes of a customer profile.
* `billingAddress` - A block that specifies the customer’s billing address. [Documented below](#address).
* `birthDate` - The customer’s birth date.
* `businessEmailAddress` - The customer’s business email address.
* `businessName` - The name of the customer’s business.
* `businessPhoneNumber` - The customer’s business phone number.
* `emailAddress` - The customer’s email address, which has not been specified as a personal or business address.
* `firstName` - The customer’s first name.
* `genderString` - The gender with which the customer identifies.
* `homePhoneNumber` - The customer’s home phone number.
* `lastName` - The customer’s last name.
* `mailingAddress` - A block that specifies the customer’s mailing address. [Documented below](#address).
* `middleName` - The customer’s middle name.
* `mobilePhoneNumber` - The customer’s mobile phone number.
* `partyTypeString` - The type of profile used to describe the customer.
* `personalEmailAddress` - The customer’s personal email address.
* `phoneNumber` - The customer’s phone number, which has not been specified as a mobile, home, or business number.
* `shippingAddress` - A block that specifies the customer’s shipping address. [Documented below](#address).

### `address`

The `address` configuration block supports the following attributes:

* `address1` - The first line of a customer address.
* `address2` - The second line of a customer address.
* `address3` - The third line of a customer address.
* `address4` - The fourth line of a customer address.
* `city` - The city in which a customer lives.
* `country` - The country in which a customer lives.
* `county` - The county in which a customer lives.
* `postalCode` - The postal code of a customer address.
* `province` - The province in which a customer lives.
* `state` - The state in which a customer lives.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The identifier of the Customer Profiles Profile.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amazon Customer Profiles Profile using the resource `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CustomerprofilesProfile } from "./.gen/providers/aws/customerprofiles-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CustomerprofilesProfile.generateConfigForImport(
      this,
      "example",
      "domain-name/5f2f473dfbe841eb8d05cfc2a4c926df"
    );
  }
}

```

Using `terraform import`, import Amazon Customer Profiles Profile using the resource `id`. For example:

```console
% terraform import aws_customerprofiles_profile.example domain-name/5f2f473dfbe841eb8d05cfc2a4c926df
```

<!-- cache-key: cdktf-0.20.8 input-8ad6d59612e9634afeca89733cb00849002233aaf02fcec05c1ddb4c1373ee09 -->