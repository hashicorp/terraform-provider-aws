---
subcategory: "Network Firewall"
layout: "aws"
page_title: "AWS: aws_networkfirewall_vpc_endpoint_association"
description: |-
  Manages a firewall endpoint for an AWS Network Firewall firewall.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkfirewall_vpc_endpoint_association

Manages a firewall endpoint for an AWS Network Firewall firewall.

Use `aws_networkfirewall_vpc_endpoint_association` to establish new firewall endpoints in any Availability Zone where the firewall is already being used. The first use of a firewall in an Availability Zone must be defined by `aws_networkfirewall_firewall` resource and `subnetMapping` argument.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkfirewallVpcEndpointAssociation } from "./.gen/providers/aws/networkfirewall-vpc-endpoint-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new NetworkfirewallVpcEndpointAssociation(this, "example", {
      firewallArn: Token.asString(awsNetworkfirewallFirewallExample.arn),
      subnetMapping: [
        {
          subnetId: Token.asString(awsSubnetExample.id),
        },
        {
          subnetId: exampleTwo.id,
        },
      ],
      tags: {
        Name: "example endpoint",
      },
      vpcId: Token.asString(awsVpcExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `description` (Optional) - A description of the VPC endpoint association.
* `firewallArn` (Required) - The Amazon Resource Name (ARN) that identifies the firewall.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `subnetMapping` (Required) - The ID for a subnet that's used in an association with a firewall. See [Subnet Mapping](#subnet-mapping) below for details.
* `tags` - (Optional) Map of resource tags to associate with the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `vpcId` (Required) - The unique identifier of the VPC for the endpoint association.

### Subnet Mapping

The `subnetMapping` block supports the following arguments:

* `ipAddressType` - (Optional) The subnet's IP address type. Valid values: `"DUALSTACK"`, `"IPV4"`.
* `subnetId` - (Required) The unique identifier for the subnet.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpcEndpointAssociationArn` - ARN of the VPC Endpoint Association.
* `vpcEndpointAssociationId` - The unique identifier of the VPC endpoint association.
* `vpcEndpointAssociationStatus` - Nested list of information about the current status of the VPC Endpoint Association.
    * `association_sync_states` - Set of subnets configured for use by the VPC Endpoint Association.
        * `attachment` - Nested list describing the attachment status of the firewall's VPC Endpoint Association with a single VPC subnet.
            * `endpointId` - The identifier of the VPC endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
            * `subnetId` - The unique identifier of the subnet that you've specified to be used for a VPC Endpoint Association endpoint.
        * `availabilityZone` - The Availability Zone where the subnet is configured.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Network Firewall VPC Endpoint Association using the `vpcEndpointAssociationArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkfirewallVpcEndpointAssociation } from "./.gen/providers/aws/networkfirewall-vpc-endpoint-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkfirewallVpcEndpointAssociation.generateConfigForImport(
      this,
      "example",
      "arn:aws:network-firewall:us-west-1:123456789012:vpc-endpoint-association/example"
    );
  }
}

```

Using `terraform import`, import Network Firewall VPC Endpoint Association using the `vpcEndpointAssociationArn`. For example:

```console
% terraform import aws_networkfirewall_vpc_endpoint_association.example arn:aws:network-firewall:us-west-1:123456789012:vpc-endpoint-association/example
```

<!-- cache-key: cdktf-0.20.8 input-40babd47a33d87ec386cd9b43f30f54535fcf12b8e4e8fddc4d46c92f1a89d09 -->