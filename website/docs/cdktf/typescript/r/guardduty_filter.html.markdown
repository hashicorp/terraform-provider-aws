---
subcategory: "GuardDuty"
layout: "aws"
page_title: "AWS: aws_guardduty_filter"
description: |-
  Provides a resource to manage a GuardDuty filter
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_guardduty_filter

Provides a resource to manage a GuardDuty filter.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GuarddutyFilter } from "./.gen/providers/aws/guardduty-filter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GuarddutyFilter(this, "MyFilter", {
      action: "ARCHIVE",
      detectorId: example.id,
      findingCriteria: {
        criterion: [
          {
            equalTo: ["eu-west-1"],
            field: "region",
          },
          {
            field: "service.additionalInfo.threatListName",
            notEquals: ["some-threat", "another-threat"],
          },
          {
            field: "updatedAt",
            greaterThan: "2020-01-01T00:00:00Z",
            lessThan: "2020-02-01T00:00:00Z",
          },
          {
            field: "severity",
            greaterThanOrEqual: "4",
          },
        ],
      },
      name: "MyFilter",
      rank: 1,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `detectorId` - (Required) ID of a GuardDuty detector, attached to your account.
* `name` - (Required) The name of your filter.
* `description` - (Optional) Description of the filter.
* `rank` - (Required) Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.
* `action` - (Required) Specifies the action that is to be applied to the findings that match the filter. Can be one of `ARCHIVE` or `NOOP`.
* `tags` (Optional) - The tags that you want to add to the Filter resource. A tag consists of a key and a value. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `findingCriteria` (Required) - Represents the criteria to be used in the filter for querying findings. Contains one or more `criterion` blocks, documented [below](#criterion).

### criterion

The `criterion` block suports the following:

* `field` - (Required) The name of the field to be evaluated. The full list of field names can be found in [AWS documentation](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_filter-findings.html#filter_criteria).
* `equals` - (Optional) List of string values to be evaluated.
* `notEquals` - (Optional) List of string values to be evaluated.
* `greaterThan` - (Optional) A value to be evaluated. Accepts either an integer or a date in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
* `greaterThanOrEqual` - (Optional) A value to be evaluated. Accepts either an integer or a date in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
* `lessThan` - (Optional) A value to be evaluated. Accepts either an integer or a date in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
* `lessThanOrEqual` - (Optional) A value to be evaluated. Accepts either an integer or a date in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the GuardDuty filter.
* `id` - A compound field, consisting of the ID of the GuardDuty detector and the name of the filter.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GuardDuty filters using the detector ID and filter's name separated by a colon. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GuarddutyFilter } from "./.gen/providers/aws/guardduty-filter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GuarddutyFilter.generateConfigForImport(
      this,
      "myFilter",
      "00b00fd5aecc0ab60a708659477e9617:MyFilter"
    );
  }
}

```

Using `terraform import`, import GuardDuty filters using the detector ID and filter's name separated by a colon. For example:

```console
% terraform import aws_guardduty_filter.MyFilter 00b00fd5aecc0ab60a708659477e9617:MyFilter
```

<!-- cache-key: cdktf-0.20.8 input-1e606d1888ce4c1d9fc3a9cf0b4de2053e508ab6db3e76bc7736c3226909e127 -->