---
subcategory: "AMP (Managed Prometheus)"
layout: "aws"
page_title: "AWS: aws_prometheus_workspace_configuration"
description: |-
  Terraform resource for managing an AWS Managed Service for Prometheus Workspace Configuration.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_prometheus_workspace_configuration

Manages an AWS Managed Service for Prometheus Workspace Configuration.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { PrometheusWorkspaceConfiguration } from "./.gen/providers/aws/";
import { PrometheusWorkspace } from "./.gen/providers/aws/prometheus-workspace";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new PrometheusWorkspace(this, "example", {});
    const awsPrometheusWorkspaceConfigurationExample =
      new PrometheusWorkspaceConfiguration(this, "example_1", {
        limits_per_label_set: [
          {
            label_set: [
              {
                env: "dev",
              },
            ],
            limits: [
              {
                max_series: 100000,
              },
            ],
          },
          {
            label_set: [
              {
                env: "prod",
              },
            ],
            limits: [
              {
                max_series: 400000,
              },
            ],
          },
        ],
        retention_period_in_days: 60,
        workspace_id: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsPrometheusWorkspaceConfigurationExample.overrideLogicalId("example");
  }
}

```

### Setting up default bucket

The default bucket limit is the maximum number of active time series that can be
ingested in the workspace, counting only time series that donâ€™t match a defined
label set.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { PrometheusWorkspaceConfiguration } from "./.gen/providers/aws/";
import { PrometheusWorkspace } from "./.gen/providers/aws/prometheus-workspace";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new PrometheusWorkspace(this, "example", {});
    const awsPrometheusWorkspaceConfigurationExample =
      new PrometheusWorkspaceConfiguration(this, "example_1", {
        limits_per_label_set: [
          {
            label_set: [{}],
            limits: [
              {
                max_series: 50000,
              },
            ],
          },
        ],
        workspace_id: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsPrometheusWorkspaceConfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `workspaceId` - (Required) ID of the workspace to configure.

The following arguments are optional:

* `retentionPeriodInDays` - (Optional) Number of days to retain metric data in the workspace.
* `limits_per_label_set` - (Optional) Configuration block for setting limits on metrics with specific label sets. Detailed below.

### `limits_per_label_set`

The `limits_per_label_set` configuration block supports the following arguments:

* `label_set` - (Required) Map of label key-value pairs that identify the metrics to which the limits apply. An empty map represents the default bucket for metrics that don't match any other label set.

* `limits` - (Required) Configuration block for the limits to apply to the specified label set. Detailed below.

#### `limits`

The `limits` configuration block supports the following arguments:

* `max_series` - (Required) Maximum number of active time series that can be ingested for metrics matching the label set.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AMP (Managed Prometheus) Workspace Configuration using the `workspaceId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { PrometheusWorkspaceConfiguration } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    PrometheusWorkspaceConfiguration.generateConfigForImport(
      this,
      "example",
      "ws-12345678-abcd-1234-abcd-123456789012"
    );
  }
}

```

Using `terraform import`, import AMP (Managed Prometheus) Workspace Configuration using the `workspaceId`. For example

```console
% terraform import aws_prometheus_workspace_configuration.example ws-12345678-abcd-1234-abcd-123456789012
```

<!-- cache-key: cdktf-0.20.8 input-1a7cf6a7f6b5363d49225d29ffcfd5f3e7cb2db94852961955072354cddc00d4 -->