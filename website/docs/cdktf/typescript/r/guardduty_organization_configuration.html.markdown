---
subcategory: "GuardDuty"
layout: "aws"
page_title: "AWS: aws_guardduty_organization_configuration"
description: |-
  Manages the GuardDuty Organization Configuration
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_guardduty_organization_configuration

Manages the GuardDuty Organization Configuration in the current AWS Region. The AWS account utilizing this resource must have been assigned as a delegated Organization administrator account, e.g., via the [`aws_guardduty_organization_admin_account` resource](/docs/providers/aws/r/guardduty_organization_admin_account.html). More information about Organizations support in GuardDuty can be found in the [GuardDuty User Guide](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_organizations.html).

~> **NOTE:** This is an advanced Terraform resource. Terraform will automatically assume management of the GuardDuty Organization Configuration without import and perform no actions on removal from the Terraform configuration.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GuarddutyDetector } from "./.gen/providers/aws/guardduty-detector";
import { GuarddutyOrganizationConfiguration } from "./.gen/providers/aws/guardduty-organization-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new GuarddutyDetector(this, "example", {
      enable: true,
    });
    const awsGuarddutyOrganizationConfigurationExample =
      new GuarddutyOrganizationConfiguration(this, "example_1", {
        autoEnableOrganizationMembers: "ALL",
        datasources: {
          kubernetes: {
            auditLogs: {
              enable: true,
            },
          },
          malwareProtection: {
            scanEc2InstanceWithFindings: {
              ebsVolumes: {
                autoEnable: true,
              },
            },
          },
          s3Logs: {
            autoEnable: true,
          },
        },
        detectorId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsGuarddutyOrganizationConfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

~> **NOTE:** One of `autoEnable` or `autoEnableOrganizationMembers` must be specified.

This resource supports the following arguments:

* `autoEnable` - (Optional) *Deprecated:* Use `autoEnableOrganizationMembers` instead. When this setting is enabled, all new accounts that are created in, or added to, the organization are added as a member accounts of the organizationâ€™s GuardDuty delegated administrator and GuardDuty is enabled in that AWS Region.
* `autoEnableOrganizationMembers` - (Optional) Indicates the auto-enablement configuration of GuardDuty for the member accounts in the organization. Valid values are `ALL`, `NEW`, `NONE`.
* `detectorId` - (Required) The detector ID of the GuardDuty account.
* `datasources` - (Optional) Configuration for the collected datasources.

`datasources` supports the following:

* `s3Logs` - (Optional) Enable S3 Protection automatically for new member accounts.
* `kubernetes` - (Optional) Enable Kubernetes Audit Logs Monitoring automatically for new member accounts.
* `malwareProtection` - (Optional) Enable Malware Protection automatically for new member accounts.

### S3 Logs

`s3Logs` block supports the following:

* `autoEnable` - (Optional) Set to `true` if you want S3 data event logs to be automatically enabled for new members of the organization. Default: `false`

### Kubernetes

`kubernetes` block supports the following:

* `auditLogs` - (Required) Enable Kubernetes Audit Logs Monitoring automatically for new member accounts. [Kubernetes protection](https://docs.aws.amazon.com/guardduty/latest/ug/kubernetes-protection.html).
  See [Kubernetes Audit Logs](#kubernetes-audit-logs) below for more details.

#### Kubernetes Audit Logs

The `auditLogs` block supports the following:

* `enable` - (Required) If true, enables Kubernetes audit logs as a data source for [Kubernetes protection](https://docs.aws.amazon.com/guardduty/latest/ug/kubernetes-protection.html).
  Defaults to `true`.

### Malware Protection

`malwareProtection` block supports the following:

* `scanEc2InstanceWithFindings` - (Required) Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for EC2 instances with findings should be auto-enabled for new members joining the organization.
   See [Scan EC2 instance with findings](#scan-ec2-instance-with-findings) below for more details.

#### Scan EC2 instance with findings

The `scanEc2InstanceWithFindings` block supports the following:

* `ebsVolumes` - (Required) Configure whether scanning EBS volumes should be auto-enabled for new members joining the organization
  See [EBS volumes](#ebs-volumes) below for more details.

#### EBS volumes

The `ebsVolumes` block supports the following:

* `autoEnable` - (Required) If true, enables [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for all new accounts joining the organization.
  Defaults to `true`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Identifier of the GuardDuty Detector.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GuardDuty Organization Configurations using the GuardDuty Detector ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GuarddutyOrganizationConfiguration } from "./.gen/providers/aws/guardduty-organization-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GuarddutyOrganizationConfiguration.generateConfigForImport(
      this,
      "example",
      "00b00fd5aecc0ab60a708659477e9617"
    );
  }
}

```

Using `terraform import`, import GuardDuty Organization Configurations using the GuardDuty Detector ID. For example:

```console
% terraform import aws_guardduty_organization_configuration.example 00b00fd5aecc0ab60a708659477e9617
```

<!-- cache-key: cdktf-0.20.1 input-0204debd69a542a4ab875fac471e6f3104005ffcf7df6f2813bc3941f9df1990 -->