---
subcategory: "Lex V2 Models"
layout: "aws"
page_title: "AWS: aws_lexv2models_bot_version"
description: |-
  Terraform resource for managing an AWS Lex V2 Models Bot Version.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lexv2models_bot_version

Terraform resource for managing an AWS Lex V2 Models Bot Version.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Lexv2ModelsBotVersion } from "./.gen/providers/aws/lexv2-models-bot-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Lexv2ModelsBotVersion(this, "test", {
      botId: Token.asString(awsLexv2ModelsBotTest.id),
      localeSpecification: {
        en_US: [
          {
            sourceBotVersion: "DRAFT",
          },
        ],
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `botId` - (Required) Idientifier of the bot to create the version for.
* `localeSpecification` - (Required) Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.

   The attribute value is a map with one or more entries, each of which has a locale name as the key and an object with the following attribute as the value:
    * `sourceBotVersion` - (Required) The version of a bot used for a bot locale. Valid values: `DRAFT`, a numeric version.
* `description` - (Optional) A description of the version. Use the description to help identify the version in lists.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `botVersion` - Version number assigned to the version.
* `id` - A comma-delimited string concatinating `botId` and `botVersion`.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lex V2 Models Bot Version using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Lexv2ModelsBotVersion } from "./.gen/providers/aws/lexv2-models-bot-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Lexv2ModelsBotVersion.generateConfigForImport(
      this,
      "example",
      "id-12345678,1"
    );
  }
}

```

Using `terraform import`, import Lex V2 Models Bot Version using the `id`. For example:

```console
% terraform import aws_lexv2models_bot_version.example id-12345678,1
```

<!-- cache-key: cdktf-0.20.8 input-1083d8e00d95e96391a8f8ae1d36ea86d249c001a0286867966cba1d749c0b69 -->