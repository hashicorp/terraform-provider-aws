---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_automation_rule"
description: |-
  Terraform resource for managing an AWS Security Hub Automation Rule.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_securityhub_automation_rule

Terraform resource for managing an AWS Security Hub Automation Rule.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAutomationRule } from "./.gen/providers/aws/securityhub-automation-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SecurityhubAutomationRule(this, "example", {
      actions: [
        {
          findingFieldsUpdate: [
            {
              note: [
                {
                  text: "This is a critical resource. Please review ASAP.",
                  updatedBy: "sechub-automation",
                },
              ],
              severity: [
                {
                  label: "CRITICAL",
                  product: Token.asNumber("0.0"),
                },
              ],
              types: [
                "Software and Configuration Checks/Industry and Regulatory Standards",
              ],
              userDefinedFields: {
                key: "value",
              },
            },
          ],
          type: "FINDING_FIELDS_UPDATE",
        },
      ],
      criteria: [
        {
          resourceId: [
            {
              comparison: "EQUALS",
              value: "arn:aws:s3:::examplebucket/*",
            },
          ],
        },
      ],
      description:
        "Elevate finding severity to CRITICAL when specific resources such as an S3 bucket is at risk",
      ruleName:
        "Elevate severity of findings that relate to important resources",
      ruleOrder: 1,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `actions` - (Required) A block that specifies one or more actions to update finding fields if a finding matches the conditions specified in `Criteria`. [Documented below](#actions).
* `criteria` - (Required) A block that specifies a set of ASFF finding field attributes and corresponding expected values that Security Hub uses to filter findings. [Documented below](#criteria).
* `description` - (Required) The description of the rule.
* `isTerminal` - (Optional) Specifies whether a rule is the last to be applied with respect to a finding that matches the rule criteria. Defaults to `false`.
* `ruleName` - (Required) The name of the rule.
* `ruleOrder` - (Required) An integer ranging from 1 to 1000 that represents the order in which the rule action is applied to findings. Security Hub applies rules with lower values for this parameter first.
* `ruleStatus` - (Optional) Whether the rule is active after it is created.

### `actions`

The `actions` configuration block supports the following attributes:

* `findingFieldsUpdate` - (Optional) A block that specifies that the automation rule action is an update to a finding field.  [Documented below](#finding-fields-update-argument-reference).
* `type` - (Optional) Specifies that the rule action should update the `Types` finding field. The `Types` finding field classifies findings in the format of namespace/category/classifier.

### `criteria`

The `criteria` configuration block supports the following attributes:

* `awsAccountId` - (Optional) The AWS account ID in which a finding was generated. [Documented below](#string-filter-argument-reference).
* `awsAccountName` - (Optional) The name of the AWS account in which a finding was generated. [Documented below](#string-filter-argument-reference).
* `companyName` - (Optional) The name of the company for the product that generated the finding. For control-based findings, the company is AWS. [Documented below](#string-filter-argument-reference).
* `complianceAssociatedStandardsId` - (Optional) The unique identifier of a standard in which a control is enabled. [Documented below](#string-filter-argument-reference).
* `complianceSecurityControlId` - (Optional) The security control ID for which a finding was generated. Security control IDs are the same across standards. [Documented below](#string-filter-argument-reference).
* `complianceStatus` - (Optional) The result of a security check. This field is only used for findings generated from controls. [Documented below](#string-filter-argument-reference).
* `confidence` - (Optional) The likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. `Confidence` is scored on a 0â€“100 basis using a ratio scale. A value of `0` means 0 percent confidence, and a value of `100` means 100 percent confidence. [Documented below](#number-filter-argument-reference).
* `createdAt` - (Optional) A timestamp that indicates when this finding record was created. [Documented below](#date-filter-argument-reference).
* `criticality` - (Optional) The level of importance that is assigned to the resources that are associated with a finding. [Documented below](#number-filter-argument-reference).
* `description` - (Optional) A finding's description. [Documented below](#string-filter-argument-reference).
* `firstObservedAt` - (Optional) A timestamp that indicates when the potential security issue captured by a finding was first observed by the security findings product. [Documented below](#date-filter-argument-reference).
* `generatorId` - (Optional) The identifier for the solution-specific component that generated a finding. [Documented below](#string-filter-argument-reference).
* `id` - (Optional) The product-specific identifier for a finding. [Documented below](#string-filter-argument-reference).
* `lastObservedAt` - (Optional) A timestamp that indicates when the potential security issue captured by a finding was most recently observed by the security findings product. [Documented below](#date-filter-argument-reference).
* `noteText` - (Optional) The text of a user-defined note that's added to a finding. [Documented below](#string-filter-argument-reference).
* `noteUpdatedAt` - (Optional) The timestamp of when the note was updated. [Documented below](#date-filter-argument-reference).
* `noteUpdatedBy` - (Optional) The principal that created a note. [Documented below](#string-filter-argument-reference).
* `productArn` - (Optional) The Amazon Resource Name (ARN) for a third-party product that generated a finding in Security Hub. [Documented below](#string-filter-argument-reference).
* `productName` - (Optional) Provides the name of the product that generated the finding. For control-based findings, the product name is Security Hub. [Documented below](#string-filter-argument-reference).
* `recordState` - (Optional) Provides the current state of a finding. [Documented below](#string-filter-argument-reference).
* `relatedFindingsId` - (Optional) The product-generated identifier for a related finding.  [Documented below](#string-filter-argument-reference).
* `relatedFindingsProductArn` - (Optional) The ARN for the product that generated a related finding. [Documented below](#string-filter-argument-reference).
* `resourceApplicationArn` - (Optional) The Amazon Resource Name (ARN) of the application that is related to a finding. [Documented below](#string-filter-argument-reference).
* `resourceApplicationName` - (Optional) The name of the application that is related to a finding. [Documented below](#string-filter-argument-reference).
* `resourceDetailsOther` - (Optional) Custom fields and values about the resource that a finding pertains to. [Documented below](#map-filter-argument-reference).
* `resourceId` - (Optional) The identifier for the given resource type. For AWS resources that are identified by Amazon Resource Names (ARNs), this is the ARN. For AWS resources that lack ARNs, this is the identifier as defined by the AWS service that created the resource. For non-AWS resources, this is a unique identifier that is associated with the resource. [Documented below](#string-filter-argument-reference).
* `resourcePartition` - (Optional) The partition in which the resource that the finding pertains to is located. A partition is a group of AWS Regions. Each AWS account is scoped to one partition. [Documented below](#string-filter-argument-reference).
* `resourceRegion` - (Optional) The AWS Region where the resource that a finding pertains to is located. [Documented below](#string-filter-argument-reference).
* `resourceTags` - (Optional) A list of AWS tags associated with a resource at the time the finding was processed. [Documented below](#map-filter-argument-reference).
* `resourceType` - (Optional) The type of resource that the finding pertains to. [Documented below](#string-filter-argument-reference).
* `severityLabel` - (Optional) The severity value of the finding. [Documented below](#string-filter-argument-reference).
* `sourceUrl` - (Optional) Provides a URL that links to a page about the current finding in the finding product. [Documented below](#string-filter-argument-reference).
* `title` - (Optional) A finding's title. [Documented below](#string-filter-argument-reference).
* `type` - (Optional) One or more finding types in the format of namespace/category/classifier that classify a finding. [Documented below](#string-filter-argument-reference).
* `updatedAt` - (Optional) A timestamp that indicates when the finding record was most recently updated. [Documented below](#date-filter-argument-reference).
* `userDefinedFields` - (Optional) A list of user-defined name and value string pairs added to a finding. [Documented below](#map-filter-argument-reference).
* `verificationState` - (Optional) Provides the veracity of a finding. [Documented below](#string-filter-argument-reference).
* `workflowStatus` - (Optional) Provides information about the status of the investigation into a finding. [Documented below](#string-filter-argument-reference).

### String Filter Argument reference

The string filter configuration block supports the following arguments:

* `comparison` - (Required) The condition to apply to a string value when querying for findings. Valid values include: `EQUALS`, `PREFIX`, `NOT_EQUALS`, `PREFIX_NOT_EQUALS`.
* `value` - (Required) The string filter value. Filter values are case sensitive.

### Number Filter Argument reference

The number filter configuration block supports the following arguments:

~> **NOTE:** Only one of `eg`, `gte`, or `lte` must be specified.

* `eq` - (Optional) The equal-to condition to be applied to a single field when querying for findings, provided as a String.
* `gte` - (Optional) The greater-than-equal condition to be applied to a single field when querying for findings, provided as a String.
* `lte` - (Optional) The less-than-equal condition to be applied to a single field when querying for findings, provided as a String.

### Map Filter Argument reference

The map filter configuration block supports the following arguments:

* `comparison` - (Required) The condition to apply to a string value when querying for findings. Valid values include: `EQUALS` and `NOT_EQUALS`.
* `key` - (Required) The key of the map filter.
* `value` - (Required) The value for the key in the map filter. Filter values are case sensitive.

### Date Filter Argument reference

The date filter configuration block supports the following arguments:

* `dateRange` - (Optional) A configuration block of the date range for the date filter. See [date_range](#date_range-argument-reference) below for more details.
* `end` - (Optional) An end date for the date filter. Required with `start` if `dateRange` is not specified.
* `start` - (Optional) A start date for the date filter. Required with `end` if `dateRange` is not specified.

### date_range Argument reference

The `dateRange` configuration block supports the following arguments:

* `unit` - (Required) A date range unit for the date filter. Valid values: `DAYS`.
* `value` - (Required) A date range value for the date filter, provided as an Integer.

### Finding Fields Update Argument reference

The `findingFieldsUpdate` configuration block supports the following arguments:

* `confidence` - (Optional) The rule action updates the `Confidence` field of a finding.
* `criticality` - (Optional) The rule action updates the `Criticality` field of a finding.
* `note` - (Optional) A resource block that updates the note. [Documented below](#note-argument-reference).
* `relatedFindings` - (Optional) A resource block that the rule action updates the `RelatedFindings` field of a finding. [Documented below](#related-findings-argument-reference).
* `severity` - (Optional) A resource block that updates to the severity information for a finding. [Documented below](#severity-argument-reference).
* `types` - (Optional) The rule action updates the `Types` field of a finding.
* `userDefinedFields` - (Optional) The rule action updates the `UserDefinedFields` field of a finding.
* `verificationState` - (Optional) The rule action updates the `VerificationState` field of a finding. The allowed values are the following `UNKNOWN`, `TRUE_POSITIVE`, `FALSE_POSITIVE` and `BENIGN_POSITIVE`.
* `workflow` - (Optional) A resource block that is used to update information about the investigation into the finding. [Documented below](#workflow-argument-reference).

### Note Argument reference

The `note` configuration block supports the following arguments:

* `text` - (Required) The updated note text.
* `updatedBy` - (Required) The principal that updated the note.

### Related Findings argument reference

The `relatedFindings` configuration block supports the following arguments:

* `id` - (Required) The product-generated identifier for a related finding.
* `productArn` - (Required) The ARN of the product that generated a related finding.

### Severity argument reference

The `severity` configuration block supports the following arguments:

* `label` - (Optional) The severity value of the finding. The allowed values are the following `INFORMATIONAL`, `LOW`, `MEDIUM`, `HIGH` and `CRITICAL`.
* `product` - (Optional) The native severity as defined by the AWS service or integrated partner product that generated the finding.

### Workflow argument reference

The `workflow` configuration block supports the following arguments:

* `status` - (Optional) The status of the investigation into the finding. The allowed values are the following `NEW`, `NOTIFIED`, `RESOLVED` and `SUPPRESSED`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the Security Hub automation rule (matches `arn`).
* `arn` - The ARN of the Security Hub automation rule.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Security Hub Automation Rule using their ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAutomationRule } from "./.gen/providers/aws/securityhub-automation-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SecurityhubAutomationRule.generateConfigForImport(
      this,
      "example",
      "arn:aws:securityhub:us-west-2:123456789012:automation-rule/473eddde-f5c4-4ae5-85c7-e922f271fffc"
    );
  }
}

```

Using `terraform import`, import Security Hub automation rule using their ARN. For example:

```console
% terraform import aws_securityhub_automation_rule.example arn:aws:securityhub:us-west-2:123456789012:automation-rule/473eddde-f5c4-4ae5-85c7-e922f271fffc
```

<!-- cache-key: cdktf-0.20.1 input-d39a588992b913aa1997d25a28592253791dd418817f1cd29a608ab212177149 -->