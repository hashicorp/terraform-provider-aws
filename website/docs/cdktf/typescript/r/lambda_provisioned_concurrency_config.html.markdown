---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_provisioned_concurrency_config"
description: |-
  Manages an AWS Lambda Provisioned Concurrency Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lambda_provisioned_concurrency_config

Manages an AWS Lambda Provisioned Concurrency Configuration. Use this resource to configure provisioned concurrency for Lambda functions.

~> **Note:** Setting `skipDestroy` to `true` means that the AWS Provider will not destroy a provisioned concurrency configuration, even when running `terraform destroy`. The configuration is thus an intentional dangling resource that is not managed by Terraform and may incur extra expense in your AWS account.

## Example Usage

### Alias Name

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaProvisionedConcurrencyConfig } from "./.gen/providers/aws/lambda-provisioned-concurrency-config";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new LambdaProvisionedConcurrencyConfig(this, "example", {
      functionName: Token.asString(awsLambdaAliasExample.functionName),
      provisionedConcurrentExecutions: 1,
      qualifier: Token.asString(awsLambdaAliasExample.name),
    });
  }
}

```

### Function Version

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaProvisionedConcurrencyConfig } from "./.gen/providers/aws/lambda-provisioned-concurrency-config";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new LambdaProvisionedConcurrencyConfig(this, "example", {
      functionName: Token.asString(awsLambdaFunctionExample.functionName),
      provisionedConcurrentExecutions: 1,
      qualifier: Token.asString(awsLambdaFunctionExample.version),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `functionName` - (Required) Name or Amazon Resource Name (ARN) of the Lambda Function.
* `provisionedConcurrentExecutions` - (Required) Amount of capacity to allocate. Must be greater than or equal to 1.
* `qualifier` - (Required) Lambda Function version or Lambda Alias name.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `skipDestroy` - (Optional) Whether to retain the provisioned concurrency configuration upon destruction. Defaults to `false`. If set to `true`, the resource is simply removed from state instead.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Lambda Function name and qualifier separated by a comma (`,`).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `15m`)
* `update` - (Default `15m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a Lambda Provisioned Concurrency Configuration using the `functionName` and `qualifier` separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LambdaProvisionedConcurrencyConfig } from "./.gen/providers/aws/lambda-provisioned-concurrency-config";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LambdaProvisionedConcurrencyConfig.generateConfigForImport(
      this,
      "example",
      "example,production"
    );
  }
}

```

Using `terraform import`, import a Lambda Provisioned Concurrency Configuration using the `functionName` and `qualifier` separated by a comma (`,`). For example:

```console
% terraform import aws_lambda_provisioned_concurrency_config.example example,production
```

<!-- cache-key: cdktf-0.20.8 input-9e96be72ca128434e95b56fd02de74603cea7d34217500c43a5176e8976a8232 -->