---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_disk"
description: |-
  Provides a Lightsail Disk resource
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_disk

Provides a Lightsail Disk resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAvailabilityZones } from "./.gen/providers/aws/data-aws-availability-zones";
import { LightsailDisk } from "./.gen/providers/aws/lightsail-disk";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const available = new DataAwsAvailabilityZones(this, "available", {
      filter: [
        {
          name: "opt-in-status",
          values: ["opt-in-not-required"],
        },
      ],
      state: "available",
    });
    new LightsailDisk(this, "test", {
      availabilityZone: Token.asString(Fn.lookupNested(available.names, ["0"])),
      name: "test",
      sizeInGb: 8,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the disk.
* `sizeInGb` - (Required) The size of the disk in GB.
* `availabilityZone` - (Required) The Availability Zone in which to create your disk.
* `tags` - (Optional) A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the disk (matches `name`).
* `arn` - The ARN of the Lightsail disk.
* `createdAt` - The timestamp when the disk was created.
* `supportCode` - The support code for the disk. Include this code in your email to support when you have questions about a disk in Lightsail. This code enables our support team to look up your Lightsail information more easily.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_disk` using the name attribute. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailDisk } from "./.gen/providers/aws/lightsail-disk";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LightsailDisk.generateConfigForImport(this, "test", "test");
  }
}

```

Using `terraform import`, import `aws_lightsail_disk` using the name attribute. For example:

```console
% terraform import aws_lightsail_disk.test test
```

<!-- cache-key: cdktf-0.20.8 input-f3b7be0368c0c66053b5d2e78c2a98f66963707eb332959000ce9922a7f5e0e4 -->