---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_theme"
description: |-
  Manages a QuickSight Theme.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_theme

Resource for managing a QuickSight Theme.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightTheme } from "./.gen/providers/aws/quicksight-theme";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new QuicksightTheme(this, "example", {
      baseThemeId: "MIDNIGHT",
      configuration: {
        dataColorPalette: {
          colors: [
            "#FFFFFF",
            "#111111",
            "#222222",
            "#333333",
            "#444444",
            "#555555",
            "#666666",
            "#777777",
            "#888888",
            "#999999",
          ],
          emptyFillColor: "#FFFFFF",
          minMaxGradient: ["#FFFFFF", "#111111"],
        },
      },
      name: "example",
      themeId: "example",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `themeId` - (Required, Forces new resource) Identifier of the theme.
* `baseThemeId` - (Required) The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
* `name` - (Required) Display name of the theme.
* `configuration` - (Required) The theme configuration, which contains the theme display properties. See [configuration](#configuration).

The following arguments are optional:

* `awsAccountId` - (Optional, Forces new resource) AWS account ID.
* `permissions` - (Optional) A set of resource permissions on the theme. Maximum of 64 items. See [permissions](#permissions).
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `versionDescription` - (Optional) A description of the current theme version being created/updated.

### permissions

* `actions` - (Required) List of IAM actions to grant or revoke permissions on.
* `principal` - (Required) ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.

### configuration

* `dataColorPalette` - (Optional) Color properties that apply to chart data colors. See [data_color_palette](#data_color_palette).
* `sheet` - (Optional) Display options related to sheets. See [sheet](#sheet).
* `typography` - (Optional) Determines the typography options. See [typography](#typography).
* `uiColorPalette` - (Optional) Color properties that apply to the UI and to charts, excluding the colors that apply to data. See [ui_color_palette](#ui_color_palette).

### data_color_palette

* `colors` - (Optional) List of hexadecimal codes for the colors. Minimum of 8 items and maximum of 20 items.
* `emptyFillColor` - (Optional) The hexadecimal code of a color that applies to charts where a lack of data is highlighted.
* `minMaxGradient` - (Optional) The minimum and maximum hexadecimal codes that describe a color gradient. List of exactly 2 items.

### sheet

* `tile` - (Optional) The display options for tiles. See [tile](#tile).
* `tileLayout` - (Optional) The layout options for tiles. See [tile_layout](#tile_layout).

### tile

* `border` - (Optional) The border around a tile. See [border](#border).

### border

* `show` - (Optional) The option to enable display of borders for visuals.

### tile_layout

* `gutter` - (Optional) The gutter settings that apply between tiles. See [gutter](#gutter).
* `margin` - (Optional) The margin settings that apply around the outside edge of sheets. See [margin](#margin).

### gutter

* `show` - (Optional) This Boolean value controls whether to display a gutter space between sheet tiles.

### margin

* `show` - (Optional) This Boolean value controls whether to display sheet margins.

### typography

* `fontFamilies` - (Optional) Determines the list of font families. Maximum number of 5 items. See [font_families](#font_families).

### font_families

* `fontFamily` - (Optional) Font family name.

### ui_color_palette

* `accent` - (Optional) Color (hexadecimal) that applies to selected states and buttons.
* `accentForeground` - (Optional) Color (hexadecimal) that applies to any text or other elements that appear over the accent color.
* `danger` - (Optional) Color (hexadecimal) that applies to error messages.
* `dangerForeground` - (Optional) Color (hexadecimal) that applies to any text or other elements that appear over the error color.
* `dimension` - (Optional) Color (hexadecimal) that applies to the names of fields that are identified as dimensions.
* `dimensionForeground` - (Optional) Color (hexadecimal) that applies to any text or other elements that appear over the dimension color.
* `measure` - (Optional) Color (hexadecimal) that applies to the names of fields that are identified as measures.
* `measureForeground` - (Optional) Color (hexadecimal) that applies to any text or other elements that appear over the measure color.
* `primaryBackground` - (Optional) Color (hexadecimal) that applies to visuals and other high emphasis UI.
* `primaryForeground` - (Optional) Color (hexadecimal) of text and other foreground elements that appear over the primary background regions, such as grid lines, borders, table banding, icons, and so on.
* `secondaryBackground` - (Optional) Color (hexadecimal) that applies to the sheet background and sheet controls.
* `secondaryForeground` - (Optional) Color (hexadecimal) that applies to any sheet title, sheet control text, or UI that appears over the secondary background.
* `success` - (Optional) Color (hexadecimal) that applies to success messages, for example the check mark for a successful download.
* `successForeground` - (Optional) Color (hexadecimal) that applies to any text or other elements that appear over the success color.
* `warning` - (Optional) Color (hexadecimal) that applies to warning and informational messages.
* `warningForeground` - (Optional) Color (hexadecimal) that applies to any text or other elements that appear over the warning color.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the theme.
* `createdTime` - The time that the theme was created.
* `id` - A comma-delimited string joining AWS account ID and theme ID.
* `lastUpdatedTime` - The time that the theme was last updated.
* `status` - The theme creation status.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).
* `versionNumber` - The version number of the theme version.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a QuickSight Theme using the AWS account ID and theme ID separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightTheme } from "./.gen/providers/aws/quicksight-theme";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    QuicksightTheme.generateConfigForImport(
      this,
      "example",
      "123456789012,example-id"
    );
  }
}

```

Using `terraform import`, import a QuickSight Theme using the AWS account ID and theme ID separated by a comma (`,`). For example:

```console
% terraform import aws_quicksight_theme.example 123456789012,example-id
```

<!-- cache-key: cdktf-0.20.8 input-aa652dec5ece740b9a748611a9a30b95144c3c47e65363b38cd20d01eab3af22 -->