---
subcategory: "SSM Quick Setup"
layout: "aws"
page_title: "AWS: aws_ssmquicksetup_configuration_manager"
description: |-
  Terraform resource for managing an AWS SSM Quick Setup Configuration Manager.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssmquicksetup_configuration_manager

Terraform resource for managing an AWS SSM Quick Setup Configuration Manager.

## Example Usage

### Patch Policy Configuration Type

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsPartition } from "./.gen/providers/aws/data-aws-partition";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { DataAwsSsmPatchBaselines } from "./.gen/providers/aws/data-aws-ssm-patch-baselines";
import { SsmquicksetupConfigurationManager } from "./.gen/providers/aws/ssmquicksetup-configuration-manager";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new DataAwsPartition(this, "current_1", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_2", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    const example = new DataAwsSsmPatchBaselines(this, "example", {
      defaultBaselines: true,
    });
    const selectedPatchBaselines = Fn.jsonencode(
      "${{ for baseline in ${" +
        example.baselineIdentities +
        '} : baseline.operating_system => {\n      "value" : baseline.baseline_id\n      "label" : baseline.baseline_name\n      "description" : baseline.baseline_description\n      "disabled" : !baseline.default_baseline\n    }}}'
    );
    const awsSsmquicksetupConfigurationManagerExample =
      new SsmquicksetupConfigurationManager(this, "example_4", {
        configurationDefinition: [
          {
            localDeploymentAdministrationRoleArn:
              "arn:${" +
              dataAwsPartitionCurrent.partition +
              "}:iam::${" +
              current.accountId +
              "}:role/AWS-QuickSetup-PatchPolicy-LocalAdministrationRole",
            localDeploymentExecutionRoleName:
              "AWS-QuickSetup-PatchPolicy-LocalExecutionRole",
            parameters: {
              ConfigurationOptionsPatchOperation: "Scan",
              ConfigurationOptionsScanNextInterval: "false",
              ConfigurationOptionsScanValue: "cron(0 1 * * ? *)",
              IsPolicyAttachAllowed: "false",
              OutputLogEnableS3: "false",
              PatchBaselineRegion: Token.asString(dataAwsRegionCurrent.name),
              PatchBaselineUseDefault: "default",
              PatchPolicyName: "example",
              RateControlConcurrency: "10%",
              RateControlErrorThreshold: "2%",
              SelectedPatchBaselines: selectedPatchBaselines,
              TargetAccounts: Token.asString(current.accountId),
              TargetRegions: Token.asString(dataAwsRegionCurrent.name),
              TargetType: "*",
            },
            type: "AWSQuickSetupType-PatchPolicy",
          },
        ],
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsmquicksetupConfigurationManagerExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `configurationDefinition` - (Required) Definition of the Quick Setup configuration that the configuration manager deploys. See [`configurationDefinition`](#configuration_definition-argument-reference) below.
* `name` - (Required) Configuration manager name.

The following arguments are optional:

* `description` - (Optional) Description of the configuration manager.
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `configurationDefinition` Argument Reference

* `local_deployment_administrator_role_arn` - (Optional) ARN of the IAM role used to administrate local configuration deployments.
* `localDeploymentExecutionRoleName` - (Optional) Name of the IAM role used to deploy local configurations.
* `parameters` - (Required) Parameters for the configuration definition type. Parameters for configuration definitions vary based the configuration type. See the [AWS API documentation](https://docs.aws.amazon.com/quick-setup/latest/APIReference/API_ConfigurationDefinitionInput.html) for a complete list of parameters for each configuration type.
* `type` - (Required) Type of the Quick Setup configuration.
* `typeVersion` - (Optional) Version of the Quick Setup type to use.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `managerArn` - ARN of the Configuration Manager.
* `statusSummaries` - A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See [`statusSummaries`](#status_summaries-attribute-reference) below.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

### `statusSummaries` Attribute Reference

* `status` - Current status.
* `statusMessage` - When applicable, returns an informational message relevant to the current status and status type of the status summary object.
* `status_type` - Type of a status summary.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `20m`)
* `update` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSM Quick Setup Configuration Manager using the `managerArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmquicksetupConfigurationManager } from "./.gen/providers/aws/ssmquicksetup-configuration-manager";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsmquicksetupConfigurationManager.generateConfigForImport(
      this,
      "example",
      "arn:aws:ssm-quicksetup:us-east-1:012345678901:configuration-manager/abcd-1234"
    );
  }
}

```

Using `terraform import`, import SSM Quick Setup Configuration Manager using the `managerArn`. For example:

```console
% terraform import aws_ssmquicksetup_configuration_manager.example arn:aws:ssm-quicksetup:us-east-1:012345678901:configuration-manager/abcd-1234
```

<!-- cache-key: cdktf-0.20.8 input-406027c15e99aa70cd4454256b4b0d1488e2194f4e1184b4d5d4888b6946622b -->