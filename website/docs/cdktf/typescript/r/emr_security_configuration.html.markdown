---
subcategory: "EMR"
layout: "aws"
page_title: "AWS: aws_emr_security_configuration"
description: |-
  Provides a resource to manage AWS EMR Security Configurations
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_emr_security_configuration

Provides a resource to manage AWS EMR Security Configurations

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EmrSecurityConfiguration } from "./.gen/providers/aws/emr-security-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new EmrSecurityConfiguration(this, "foo", {
      configuration:
        '{\n  "EncryptionConfiguration": {\n    "AtRestEncryptionConfiguration": {\n      "S3EncryptionConfiguration": {\n        "EncryptionMode": "SSE-S3"\n      },\n      "LocalDiskEncryptionConfiguration": {\n        "EncryptionKeyProviderType": "AwsKms",\n        "AwsKmsKey": "arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key"\n      }\n    },\n    "EnableInTransitEncryption": false,\n    "EnableAtRestEncryption": true\n  }\n}\n\n',
      name: "emrsc_other",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional) The name of the EMR Security Configuration. By default generated by Terraform.
* `namePrefix` - (Optional) Creates a unique name beginning with the specified
  prefix. Conflicts with `name`.
* `configuration` - (Required) A JSON formatted Security Configuration

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the EMR Security Configuration (Same as the `name`)
* `name` - The Name of the EMR Security Configuration
* `configuration` - The JSON formatted Security Configuration
* `creationDate` - Date the Security Configuration was created

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EMR Security Configurations using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EmrSecurityConfiguration } from "./.gen/providers/aws/emr-security-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EmrSecurityConfiguration.generateConfigForImport(
      this,
      "sc",
      "example-sc-name"
    );
  }
}

```

Using `terraform import`, import EMR Security Configurations using the `name`. For example:

```console
% terraform import aws_emr_security_configuration.sc example-sc-name
```

<!-- cache-key: cdktf-0.20.8 input-b64a1c2b9d100ab236186e61b15ae97f07452528ddea572b121afa7cc189e40f -->