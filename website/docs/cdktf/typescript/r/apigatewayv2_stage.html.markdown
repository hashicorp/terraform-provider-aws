---
subcategory: "API Gateway V2"
layout: "aws"
page_title: "AWS: aws_apigatewayv2_stage"
description: |-
  Manages an Amazon API Gateway Version 2 stage.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_apigatewayv2_stage

Manages an Amazon API Gateway Version 2 stage.
More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).

## Example Usage

### Basic

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Apigatewayv2Stage } from "./.gen/providers/aws/apigatewayv2-stage";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Apigatewayv2Stage(this, "example", {
      apiId: Token.asString(awsApigatewayv2ApiExample.id),
      name: "example-stage",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `apiId` - (Required) API identifier.
* `name` - (Required) Name of the stage. Must be between 1 and 128 characters in length.

The following arguments are optional:

* `accessLogSettings` - (Optional) Settings for logging access in this stage.
Use the [`aws_api_gateway_account`](/docs/providers/aws/r/api_gateway_account.html) resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
* `autoDeploy` - (Optional) Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
* `clientCertificateId` - (Optional) Identifier of a client certificate for the stage. Use the [`aws_api_gateway_client_certificate`](/docs/providers/aws/r/api_gateway_client_certificate.html) resource to configure a client certificate.
Supported only for WebSocket APIs.
* `defaultRouteSettings` - (Optional) Default route settings for the stage.
* `deploymentId` - (Optional) Deployment identifier of the stage. Use the [`aws_apigatewayv2_deployment`](/docs/providers/aws/r/apigatewayv2_deployment.html) resource to configure a deployment.
* `description` - (Optional) Description for the stage. Must be less than or equal to 1024 characters in length.
* `routeSettings` - (Optional) Route settings for the stage.
* `stageVariables` - (Optional) Map that defines the stage variables for the stage.
* `tags` - (Optional) Map of tags to assign to the stage. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### access_log_settings

* `destinationArn` - (Required) ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
* `format` - (Required) Single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data. Refer to log settings for [HTTP](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging-variables.html) or [Websocket](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-logging.html).

### default_route_settings

* `dataTraceEnabled` - (Optional) Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
Defaults to `false`. Supported only for WebSocket APIs.
* `detailedMetricsEnabled` - (Optional) Whether detailed metrics are enabled for the default route. Defaults to `false`.
* `loggingLevel` - (Optional) Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration.
* `throttlingBurstLimit` - (Optional) Throttling burst limit for the default route.
* `throttlingRateLimit` - (Optional) Throttling rate limit for the default route.

### route_settings

* `routeKey` - (Required) Route key.
* `dataTraceEnabled` - (Optional) Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
Defaults to `false`. Supported only for WebSocket APIs.
* `detailedMetricsEnabled` - (Optional) Whether detailed metrics are enabled for the route. Defaults to `false`.
* `loggingLevel` - (Optional) Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration.
* `throttlingBurstLimit` - (Optional) Throttling burst limit for the route.
* `throttlingRateLimit` - (Optional) Throttling rate limit for the route.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Stage identifier.
* `arn` - ARN of the stage.
* `executionArn` - ARN prefix to be used in an [`aws_lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `sourceArn` attribute.
For WebSocket APIs this attribute can additionally be used in an [`aws_iam_policy`](/docs/providers/aws/r/iam_policy.html) to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).
See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.
* `invokeUrl` - URL to invoke the API pointing to the stage,
  e.g., `wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage`, or `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/`
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_apigatewayv2_stage` using the API identifier and stage name. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Apigatewayv2Stage } from "./.gen/providers/aws/apigatewayv2-stage";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Apigatewayv2Stage.generateConfigForImport(
      this,
      "example",
      "aabbccddee/example-stage"
    );
  }
}

```

Using `terraform import`, import `aws_apigatewayv2_stage` using the API identifier and stage name. For example:

```console
% terraform import aws_apigatewayv2_stage.example aabbccddee/example-stage
```

-> **Note:** The API Gateway managed stage created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.

<!-- cache-key: cdktf-0.20.8 input-c7cc2d4235ed06a055a36c6327f99044a8a10f0f104b25ba18451743f15b5497 -->