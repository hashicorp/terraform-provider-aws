---
subcategory: "CloudFront"
layout: "aws"
page_title: "AWS: aws_cloudfront_field_level_encryption_profile"
description: |-
  Provides a CloudFront Field-level Encryption Profile resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudfront_field_level_encryption_profile

Provides a CloudFront Field-level Encryption Profile resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontFieldLevelEncryptionProfile } from "./.gen/providers/aws/cloudfront-field-level-encryption-profile";
import { CloudfrontPublicKey } from "./.gen/providers/aws/cloudfront-public-key";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new CloudfrontPublicKey(this, "example", {
      comment: "test public key",
      encodedKey: Token.asString(Fn.file("public_key.pem")),
      name: "test_key",
    });
    new CloudfrontFieldLevelEncryptionProfile(this, "test", {
      comment: "test comment",
      encryptionEntities: {
        items: [
          {
            fieldPatterns: {
              items: ["DateOfBirth"],
            },
            providerId: "test provider",
            publicKeyId: example.id,
          },
        ],
      },
      name: "test profile",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the Field Level Encryption Profile.
* `comment` - (Optional) An optional comment about the Field Level Encryption Profile.
* `encryptionEntities` - (Required) The [encryption entities](#encryption-entities) config block for field-level encryption profiles that contains an attribute `items` which includes the encryption key and field pattern specifications.

### Encryption Entities

* `publicKeyId` - (Required) The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.
* `providerId` - (Required) The provider associated with the public key being used for encryption.
* `fieldPatterns` - (Required) Object that contains an attribute `items` that contains the list of field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `callerReference` - Internal value used by CloudFront to allow future updates to the Field Level Encryption Profile.
* `etag` - The current version of the Field Level Encryption Profile. For example: `E2QWRUHAPOMQZL`.
* `id` - The identifier for the Field Level Encryption Profile. For example: `K3D5EWEUDCCXON`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cloudfront Field Level Encryption Profile using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontFieldLevelEncryptionProfile } from "./.gen/providers/aws/cloudfront-field-level-encryption-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudfrontFieldLevelEncryptionProfile.generateConfigForImport(
      this,
      "profile",
      "K3D5EWEUDCCXON"
    );
  }
}

```

Using `terraform import`, import Cloudfront Field Level Encryption Profile using the `id`. For example:

```console
% terraform import aws_cloudfront_field_level_encryption_profile.profile K3D5EWEUDCCXON
```

<!-- cache-key: cdktf-0.20.8 input-70b6337b5220a74802bcb7be93e79696a90a0f0a1a7870e9703063485f2517fe -->