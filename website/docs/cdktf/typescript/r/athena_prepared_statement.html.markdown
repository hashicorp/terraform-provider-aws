---
subcategory: "Athena"
layout: "aws"
page_title: "AWS: aws_athena_prepared_statement"
description: |-
  Terraform resource for managing an AWS Athena Prepared Statement.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_athena_prepared_statement

Terraform resource for managing an Athena Prepared Statement.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AthenaDatabase } from "./.gen/providers/aws/athena-database";
import { AthenaPreparedStatement } from "./.gen/providers/aws/athena-prepared-statement";
import { AthenaWorkgroup } from "./.gen/providers/aws/athena-workgroup";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new AthenaWorkgroup(this, "test", {
      name: "tf-test",
    });
    const awsS3BucketTest = new S3Bucket(this, "test_1", {
      bucket: "tf-test",
      forceDestroy: true,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketTest.overrideLogicalId("test");
    const awsAthenaDatabaseTest = new AthenaDatabase(this, "test_2", {
      bucket: Token.asString(awsS3BucketTest.bucket),
      name: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAthenaDatabaseTest.overrideLogicalId("test");
    const awsAthenaPreparedStatementTest = new AthenaPreparedStatement(
      this,
      "test_3",
      {
        name: "tf_test",
        queryStatement:
          "SELECT * FROM ${" + awsAthenaDatabaseTest.name + "} WHERE x = ?",
        workgroup: test.name,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAthenaPreparedStatementTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `name` - (Required) The name of the prepared statement. Maximum length of 256.
* `workgroup` - (Required) The name of the workgroup to which the prepared statement belongs.
* `queryStatement` - (Required) The query string for the prepared statement.
* `description` - (Optional) Brief explanation of prepared statement. Maximum length of 1024.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the prepared statement

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `180m`)
* `delete` - (Default `90m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Athena Prepared Statement using the `WORKGROUP-NAME/STATEMENT-NAME`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AthenaPreparedStatement } from "./.gen/providers/aws/athena-prepared-statement";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AthenaPreparedStatement.generateConfigForImport(
      this,
      "example",
      "12345abcde/example"
    );
  }
}

```

Using `terraform import`, import Athena Prepared Statement using the `WORKGROUP-NAME/STATEMENT-NAME`. For example:

```console
% terraform import aws_athena_prepared_statement.example 12345abcde/example 
```

<!-- cache-key: cdktf-0.20.8 input-a8ebfad972a5d4f66549bec6fba9e395d8d77edc3c40429b47501598dbe9a621 -->