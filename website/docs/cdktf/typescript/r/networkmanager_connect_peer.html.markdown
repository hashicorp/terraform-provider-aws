---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_connect_peer"
description: |-
  Terraform resource for managing an AWS Network Manager Connect Peer.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_connect_peer

Terraform resource for managing an AWS Network Manager Connect Peer.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerConnectAttachment } from "./.gen/providers/aws/networkmanager-connect-attachment";
import { NetworkmanagerConnectPeer } from "./.gen/providers/aws/networkmanager-connect-peer";
import { NetworkmanagerVpcAttachment } from "./.gen/providers/aws/networkmanager-vpc-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkmanagerVpcAttachment(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      subnetArns: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "arn"])),
      vpcArn: Token.asString(awsVpcExample.arn),
    });
    const awsNetworkmanagerConnectAttachmentExample =
      new NetworkmanagerConnectAttachment(this, "example_1", {
        coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
        edgeLocation: example.edgeLocation,
        options: {
          protocol: "GRE",
        },
        transportAttachmentId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectAttachmentExample.overrideLogicalId("example");
    const awsNetworkmanagerConnectPeerExample = new NetworkmanagerConnectPeer(
      this,
      "example_2",
      {
        bgpOptions: {
          peerAsn: 65000,
        },
        connectAttachmentId: Token.asString(
          awsNetworkmanagerConnectAttachmentExample.id
        ),
        insideCidrBlocks: ["172.16.0.0/16"],
        peerAddress: "127.0.0.1",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectPeerExample.overrideLogicalId("example");
  }
}

```

### Usage with attachment accepter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerAttachmentAccepter } from "./.gen/providers/aws/networkmanager-attachment-accepter";
import { NetworkmanagerConnectAttachment } from "./.gen/providers/aws/networkmanager-connect-attachment";
import { NetworkmanagerConnectPeer } from "./.gen/providers/aws/networkmanager-connect-peer";
import { NetworkmanagerVpcAttachment } from "./.gen/providers/aws/networkmanager-vpc-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkmanagerVpcAttachment(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      subnetArns: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "arn"])),
      vpcArn: Token.asString(awsVpcExample.arn),
    });
    const awsNetworkmanagerAttachmentAccepterExample =
      new NetworkmanagerAttachmentAccepter(this, "example_1", {
        attachmentId: example.id,
        attachmentType: example.attachmentType,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerAttachmentAccepterExample.overrideLogicalId("example");
    const awsNetworkmanagerConnectAttachmentExample =
      new NetworkmanagerConnectAttachment(this, "example_2", {
        coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
        dependsOn: ["aws_networkmanager_attachment_accepter.test"],
        edgeLocation: example.edgeLocation,
        options: {
          protocol: "GRE",
        },
        transportAttachmentId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectAttachmentExample.overrideLogicalId("example");
    const awsNetworkmanagerConnectPeerExample = new NetworkmanagerConnectPeer(
      this,
      "example_3",
      {
        bgpOptions: {
          peerAsn: 65500,
        },
        connectAttachmentId: Token.asString(
          awsNetworkmanagerConnectAttachmentExample.id
        ),
        dependsOn: ["aws_networkmanager_attachment_accepter.example2"],
        insideCidrBlocks: ["172.16.0.0/16"],
        peerAddress: "127.0.0.1",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectPeerExample.overrideLogicalId("example");
    new NetworkmanagerAttachmentAccepter(this, "example2", {
      attachmentId: Token.asString(
        awsNetworkmanagerConnectAttachmentExample.id
      ),
      attachmentType: Token.asString(
        awsNetworkmanagerConnectAttachmentExample.attachmentType
      ),
    });
  }
}

```

### Usage with a Tunnel-less Connect attachment

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerConnectAttachment } from "./.gen/providers/aws/networkmanager-connect-attachment";
import { NetworkmanagerConnectPeer } from "./.gen/providers/aws/networkmanager-connect-peer";
import { NetworkmanagerVpcAttachment } from "./.gen/providers/aws/networkmanager-vpc-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkmanagerVpcAttachment(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      subnetArns: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "arn"])),
      vpcArn: Token.asString(awsVpcExample.arn),
    });
    const awsNetworkmanagerConnectAttachmentExample =
      new NetworkmanagerConnectAttachment(this, "example_1", {
        coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
        edgeLocation: example.edgeLocation,
        options: {
          protocol: "NO_ENCAP",
        },
        transportAttachmentId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectAttachmentExample.overrideLogicalId("example");
    const awsNetworkmanagerConnectPeerExample = new NetworkmanagerConnectPeer(
      this,
      "example_2",
      {
        bgpOptions: {
          peerAsn: 65000,
        },
        connectAttachmentId: Token.asString(
          awsNetworkmanagerConnectAttachmentExample.id
        ),
        peerAddress: "127.0.0.1",
        subnetArn: test2.arn,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectPeerExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

- `connectAttachmentId` - (Required) The ID of the connection attachment.
- `peerAddress` - (Required) The Connect peer address.

The following arguments are optional:

- `bgpOptions` (Optional) The Connect peer BGP options.
- `coreNetworkAddress` (Optional) A Connect peer core network address.
- `insideCidrBlocks` - (Optional) The inside IP addresses used for BGP peering. Required when the Connect attachment protocol is `GRE`. See [`aws_networkmanager_connect_attachment`](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_connect_attachment) for details.
- `subnetArn` - (Optional) The subnet ARN for the Connect peer. Required when the Connect attachment protocol is `NO_ENCAP`. See [`aws_networkmanager_connect_attachment`](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkmanager_connect_attachment) for details.
- `tags` - (Optional) Key-value tags for the attachment. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

- `arn` - The ARN of the attachment.
- `configuration` - The configuration of the Connect peer.
- `coreNetworkId` - The ID of a core network.
- `edgeLocation` - The Region where the peer is located.
- `id` - The ID of the Connect peer.
- `state` - The state of the Connect peer.
- `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_connect_peer` using the connect peer ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerConnectPeer } from "./.gen/providers/aws/networkmanager-connect-peer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkmanagerConnectPeer.generateConfigForImport(
      this,
      "example",
      "connect-peer-061f3e96275db1acc"
    );
  }
}

```

Using `terraform import`, import `aws_networkmanager_connect_peer` using the connect peer ID. For example:

```console
% terraform import aws_networkmanager_connect_peer.example connect-peer-061f3e96275db1acc
```

<!-- cache-key: cdktf-0.20.8 input-ec74ede0e81e05f595528ad0d5a9c80d5b7a47fb03fab2645cc88c41ef90f845 -->