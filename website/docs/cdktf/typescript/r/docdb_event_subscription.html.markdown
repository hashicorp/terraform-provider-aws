---
subcategory: "DocumentDB"
layout: "aws"
page_title: "AWS: aws_docdb_event_subscription"
description: |-
  Provides a DocumentDB event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_docdb_event_subscription

Provides a DocumentDB event subscription resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DocdbCluster } from "./.gen/providers/aws/docdb-cluster";
import { DocdbEventSubscription } from "./.gen/providers/aws/docdb-event-subscription";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DocdbCluster(this, "example", {
      availabilityZones: [
        Token.asString(Fn.lookupNested(available.names, ["0"])),
        Token.asString(Fn.lookupNested(available.names, ["1"])),
        Token.asString(Fn.lookupNested(available.names, ["2"])),
      ],
      clusterIdentifier: "example",
      masterPassword: "mustbeeightcharaters",
      masterUsername: "foo",
      skipFinalSnapshot: true,
    });
    const awsSnsTopicExample = new SnsTopic(this, "example_1", {
      name: "example-events",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSnsTopicExample.overrideLogicalId("example");
    const awsDocdbEventSubscriptionExample = new DocdbEventSubscription(
      this,
      "example_2",
      {
        enabled: true,
        eventCategories: ["creation", "failure"],
        name: "example",
        snsTopicArn: Token.asString(awsSnsTopicExample.arn),
        sourceIds: [example.id],
        sourceType: "db-cluster",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDocdbEventSubscriptionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional) The name of the DocumentDB event subscription. By default generated by Terraform.
* `namePrefix` - (Optional) The name of the DocumentDB event subscription. Conflicts with `name`.
* `snsTopic` - (Required) The SNS topic to send events to.
* `sourceIds` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
* `sourceType` - (Optional) The type of source that will be generating the events. Valid options are `db-instance`, `db-cluster`, `db-parameter-group`, `db-security-group`,` db-cluster-snapshot`. If not set, all sources will be subscribed to.
* `eventCategories` - (Optional) A list of event categories for a SourceType that you want to subscribe to. See https://docs.aws.amazon.com/documentdb/latest/developerguide/API_Event.html or run `aws docdb describe-event-categories`.
* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to true.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the DocumentDB event notification subscription
* `arn` - The Amazon Resource Name of the DocumentDB event notification subscription
* `customerAwsId` - The AWS customer account associated with the DocumentDB event notification subscription
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `40m`)
- `delete` - (Default `40m`)
- `update` - (Default `40m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DocumentDB Event Subscriptions using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DocdbEventSubscription } from "./.gen/providers/aws/docdb-event-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DocdbEventSubscription.generateConfigForImport(
      this,
      "example",
      "event-sub"
    );
  }
}

```

Using `terraform import`, import DocumentDB Event Subscriptions using the `name`. For example:

```console
% terraform import aws_docdb_event_subscription.example event-sub
```

<!-- cache-key: cdktf-0.20.8 input-01289746062c0ecfee11e0fdbb6b08b84b9bb7709018031af990b6ef46d1dc7b -->