---
subcategory: "Organizations"
layout: "aws"
page_title: "AWS: aws_organizations_policy_attachment"
description: |-
  Provides a resource to attach an AWS Organizations policy to an organization account, root, or unit.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_organizations_policy_attachment

Provides a resource to attach an AWS Organizations policy to an organization account, root, or unit.

## Example Usage

### Organization Account

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OrganizationsPolicyAttachment } from "./.gen/providers/aws/organizations-policy-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OrganizationsPolicyAttachment(this, "account", {
      policyId: example.id,
      targetId: "123456789012",
    });
  }
}

```

### Organization Root

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OrganizationsPolicyAttachment } from "./.gen/providers/aws/organizations-policy-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OrganizationsPolicyAttachment(this, "root", {
      policyId: example.id,
      targetId: Token.asString(
        Fn.lookupNested(awsOrganizationsOrganizationExample.roots, ["0", "id"])
      ),
    });
  }
}

```

### Organization Unit

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OrganizationsPolicyAttachment } from "./.gen/providers/aws/organizations-policy-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OrganizationsPolicyAttachment(this, "unit", {
      policyId: example.id,
      targetId: Token.asString(awsOrganizationsOrganizationalUnitExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `policyId` - (Required) The unique identifier (ID) of the policy that you want to attach to the target.
* `targetId` - (Required) The unique identifier (ID) of the root, organizational unit, or account number that you want to attach the policy to.
* `skipDestroy` - (Optional) If set to `true`, destroy will **not** detach the policy and instead just remove the resource from state. This can be useful in situations where the attachment must be preserved to meet the AWS minimum requirement of 1 attached policy.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute. For example:

```terraform
import {
  to = aws_organizations_policy_attachment.example
  identity = {
    policy_id = "p-12345678"
    target_id = "123456789012"
  }
}

resource "aws_organizations_policy_attachment" "example" {
  ### Configuration omitted for brevity ###
}
```

### Identity Schema

#### Required

* `policyId` (String) Organizations policy ID.
* `targetId` (String) Organizations target ID (account, OU, or root).

#### Optional

* `accountId` (String) AWS Account where this resource is managed.

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_organizations_policy_attachment` using the target ID and policy ID. For example:

With an account target:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OrganizationsPolicyAttachment } from "./.gen/providers/aws/organizations-policy-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OrganizationsPolicyAttachment.generateConfigForImport(
      this,
      "example",
      "123456789012:p-12345678"
    );
  }
}

```

Using `terraform import`, import `aws_organizations_policy_attachment` using the target ID and policy ID. For example:

With an account target:

```console
% terraform import aws_organizations_policy_attachment.example 123456789012:p-12345678
```

<!-- cache-key: cdktf-0.20.8 input-366ec2a94c057a4a005e912cb7f42bfdac408f87e13e228c54092db9711fd973 -->