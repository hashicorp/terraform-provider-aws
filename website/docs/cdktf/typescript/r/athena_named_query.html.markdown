---
subcategory: "Athena"
layout: "aws"
page_title: "AWS: aws_athena_named_query"
description: |-
  Provides an Athena Named Query resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_athena_named_query

Provides an Athena Named Query resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AthenaDatabase } from "./.gen/providers/aws/athena-database";
import { AthenaNamedQuery } from "./.gen/providers/aws/athena-named-query";
import { AthenaWorkgroup } from "./.gen/providers/aws/athena-workgroup";
import { KmsKey } from "./.gen/providers/aws/kms-key";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new KmsKey(this, "test", {
      deletionWindowInDays: 7,
      description: "Athena KMS Key",
    });
    const hoge = new S3Bucket(this, "hoge", {
      bucket: "tf-test",
    });
    const awsAthenaDatabaseHoge = new AthenaDatabase(this, "hoge_2", {
      bucket: hoge.id,
      name: "users",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAthenaDatabaseHoge.overrideLogicalId("hoge");
    const awsAthenaWorkgroupTest = new AthenaWorkgroup(this, "test_3", {
      configuration: {
        resultConfiguration: {
          encryptionConfiguration: {
            encryptionOption: "SSE_KMS",
            kmsKeyArn: test.arn,
          },
        },
      },
      name: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAthenaWorkgroupTest.overrideLogicalId("test");
    new AthenaNamedQuery(this, "foo", {
      database: Token.asString(awsAthenaDatabaseHoge.name),
      name: "bar",
      query: "SELECT * FROM ${" + awsAthenaDatabaseHoge.name + "} limit 10;",
      workgroup: Token.asString(awsAthenaWorkgroupTest.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `name` - (Required) Plain language name for the query. Maximum length of 128.
* `workgroup` - (Optional) Workgroup to which the query belongs. Defaults to `primary`
* `database` - (Required) Database to which the query belongs.
* `query` - (Required) Text of the query itself. In other words, all query statements. Maximum length of 262144.
* `description` - (Optional) Brief explanation of the query. Maximum length of 1024.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique ID of the query.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Athena Named Query using the query ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AthenaNamedQuery } from "./.gen/providers/aws/athena-named-query";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AthenaNamedQuery.generateConfigForImport(this, "example", "0123456789");
  }
}

```

Using `terraform import`, import Athena Named Query using the query ID. For example:

```console
% terraform import aws_athena_named_query.example 0123456789
```

<!-- cache-key: cdktf-0.20.8 input-d782b7210fe016f6804546b60ef7fd7c536563862fd34a2d52ea05e31dd8a8a0 -->