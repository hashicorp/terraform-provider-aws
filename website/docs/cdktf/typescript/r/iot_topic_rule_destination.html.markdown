---
subcategory: "IoT Core"
layout: "aws"
page_title: "AWS: aws_iot_topic_rule_destination"
description: |-
    Creates and manages an AWS IoT topic rule destination
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iot_topic_rule_destination

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IotTopicRuleDestination } from "./.gen/providers/aws/iot-topic-rule-destination";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new IotTopicRuleDestination(this, "example", {
      vpcConfiguration: {
        roleArn: Token.asString(awsIamRoleExample.arn),
        securityGroups: [Token.asString(awsSecurityGroupExample.id)],
        subnetIds: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "id"])),
        vpcId: Token.asString(awsVpcExample.id),
      },
    });
  }
}

```

## Argument Reference

* `enabled` - (Optional) Whether or not to enable the destination. Default: `true`.
* `vpcConfiguration` - (Required) Configuration of the virtual private cloud (VPC) connection. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/vpc-rule-action.html).

The `vpcConfiguration` object takes the following arguments:

* `roleArn` - (Required) The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).
* `securityGroups` - (Optional) The security groups of the VPC destination.
* `subnetIds` - (Required) The subnet IDs of the VPC destination.
* `vpcId` - (Required) The ID of the VPC.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the topic rule destination

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IoT topic rule destinations using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IotTopicRuleDestination } from "./.gen/providers/aws/iot-topic-rule-destination";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    IotTopicRuleDestination.generateConfigForImport(
      this,
      "example",
      "arn:aws:iot:us-west-2:123456789012:ruledestination/vpc/2ce781c8-68a6-4c52-9c62-63fe489ecc60"
    );
  }
}

```

Using `terraform import`, import IoT topic rule destinations using the `arn`. For example:

```console
% terraform import aws_iot_topic_rule_destination.example arn:aws:iot:us-west-2:123456789012:ruledestination/vpc/2ce781c8-68a6-4c52-9c62-63fe489ecc60
```

<!-- cache-key: cdktf-0.20.8 input-84135101ecf33d388c99e663b26ee9c967e1ad73d124159690f4b098fc269b2c -->