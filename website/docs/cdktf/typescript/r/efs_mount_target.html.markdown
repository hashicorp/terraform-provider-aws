---
subcategory: "EFS (Elastic File System)"
layout: "aws"
page_title: "AWS: aws_efs_mount_target"
description: |-
  Provides an Elastic File System (EFS) mount target.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_efs_mount_target

Provides an Elastic File System (EFS) mount target.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EfsMountTarget } from "./.gen/providers/aws/efs-mount-target";
import { Subnet } from "./.gen/providers/aws/subnet";
import { Vpc } from "./.gen/providers/aws/vpc";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const foo = new Vpc(this, "foo", {
      cidrBlock: "10.0.0.0/16",
    });
    const alpha = new Subnet(this, "alpha", {
      availabilityZone: "us-west-2a",
      cidrBlock: "10.0.1.0/24",
      vpcId: foo.id,
    });
    const awsEfsMountTargetAlpha = new EfsMountTarget(this, "alpha_2", {
      fileSystemId: Token.asString(awsEfsFileSystemFoo.id),
      subnetId: alpha.id,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEfsMountTargetAlpha.overrideLogicalId("alpha");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `fileSystemId` - (Required) The ID of the file system for which the mount target is intended.
* `subnetId` - (Required) The ID of the subnet to add the mount target in.
* `ipAddress` - (Optional) The address (within the address range of the specified subnet) at
which the file system may be mounted via the mount target.
* `ipAddressType` - (Optional) IP address type for the mount target. Valid values are `IPV4_ONLY` (only IPv4 addresses), `IPV6_ONLY` (only IPv6 addresses), and `DUAL_STACK` (dual-stack, both IPv4 and IPv6 addresses). Defaults to `IPV4_ONLY`.
* `ipv6Address` - (Optional) IPv6 address to use. Valid only when `ipAddressType` is set to `IPV6_ONLY` or `DUAL_STACK`.
* `securityGroups` - (Optional) A list of up to 5 VPC security group IDs (that must
be for the same VPC as subnet specified) in effect for the mount target.

## Attribute Reference

~> **Note:** The `dnsName` and `mountTargetDnsName` attributes are only useful if the mount target is in a VPC that has
support for DNS hostnames enabled. See [Using DNS with Your VPC](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-dns.html)
and [VPC resource](/docs/providers/aws/r/vpc.html#enable_dns_hostnames) in Terraform for more information.

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the mount target.
* `dnsName` - The DNS name for the EFS file system.
* `mountTargetDnsName` - The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
* `fileSystemArn` - Amazon Resource Name of the file system.
* `networkInterfaceId` - The ID of the network interface that Amazon EFS created when it created the mount target.
* `availabilityZoneName` - The name of the Availability Zone (AZ) that the mount target resides in.
* `availabilityZoneId` - The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.
* `ownerId` - AWS account ID that owns the resource.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `30m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the EFS mount targets using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EfsMountTarget } from "./.gen/providers/aws/efs-mount-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EfsMountTarget.generateConfigForImport(this, "alpha", "fsmt-52a643fb");
  }
}

```

Using `terraform import`, import the EFS mount targets using the `id`. For example:

```console
% terraform import aws_efs_mount_target.alpha fsmt-52a643fb
```

<!-- cache-key: cdktf-0.20.8 input-5715e887a0b57e70fd411f2c182808af50844584a6ab52ea2a5207d49580ec01 -->