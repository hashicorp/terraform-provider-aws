---
subcategory: "API Gateway"
layout: "aws"
page_title: "AWS: aws_api_gateway_rest_api_policy"
description: |-
  Provides an API Gateway REST API Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_api_gateway_rest_api_policy

Provides an API Gateway REST API Policy.

-> **Note:** Amazon API Gateway Version 1 resources are used for creating and deploying REST APIs. To create and deploy WebSocket and HTTP APIs, use Amazon API Gateway Version 2 [resources](/docs/providers/aws/r/apigatewayv2_api.html).

## Example Usage

### Basic

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayRestApi } from "./.gen/providers/aws/api-gateway-rest-api";
import { ApiGatewayRestApiPolicy } from "./.gen/providers/aws/api-gateway-rest-api-policy";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new ApiGatewayRestApi(this, "test", {
      name: "example-rest-api",
    });
    const dataAwsIamPolicyDocumentTest = new DataAwsIamPolicyDocument(
      this,
      "test_1",
      {
        statement: [
          {
            actions: ["execute-api:Invoke"],
            condition: [
              {
                test: "IpAddress",
                values: ["123.123.123.123/32"],
                variable: "aws:SourceIp",
              },
            ],
            effect: "Allow",
            principals: [
              {
                identifiers: ["*"],
                type: "AWS",
              },
            ],
            resources: [test.executionArn],
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsIamPolicyDocumentTest.overrideLogicalId("test");
    const awsApiGatewayRestApiPolicyTest = new ApiGatewayRestApiPolicy(
      this,
      "test_2",
      {
        policy: Token.asString(dataAwsIamPolicyDocumentTest.json),
        restApiId: test.id,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApiGatewayRestApiPolicyTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `restApiId` - (Required) ID of the REST API.
* `policy` - (Required) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the REST API

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_api_gateway_rest_api_policy` using the REST API ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayRestApiPolicy } from "./.gen/providers/aws/api-gateway-rest-api-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ApiGatewayRestApiPolicy.generateConfigForImport(
      this,
      "example",
      "12345abcde"
    );
  }
}

```

Using `terraform import`, import `aws_api_gateway_rest_api_policy` using the REST API ID. For example:

```console
% terraform import aws_api_gateway_rest_api_policy.example 12345abcde
```

<!-- cache-key: cdktf-0.20.8 input-a578ab2cbd9dbd4f544af9402983cad6a4047d176dace00d2077faadb4d78cfa -->