---
subcategory: "SES (Simple Email)"
layout: "aws"
page_title: "AWS: aws_ses_identity_policy"
description: |-
  Manages a SES Identity Policy
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ses_identity_policy

Manages a SES Identity Policy. More information about SES Sending Authorization Policies can be found in the [SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { SesDomainIdentity } from "./.gen/providers/aws/ses-domain-identity";
import { SesIdentityPolicy } from "./.gen/providers/aws/ses-identity-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SesDomainIdentity(this, "example", {
      domain: "example.com",
    });
    const dataAwsIamPolicyDocumentExample = new DataAwsIamPolicyDocument(
      this,
      "example_1",
      {
        statement: [
          {
            actions: ["SES:SendEmail", "SES:SendRawEmail"],
            principals: [
              {
                identifiers: ["*"],
                type: "AWS",
              },
            ],
            resources: [example.arn],
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsIamPolicyDocumentExample.overrideLogicalId("example");
    const awsSesIdentityPolicyExample = new SesIdentityPolicy(
      this,
      "example_2",
      {
        identity: example.arn,
        name: "example",
        policy: Token.asString(dataAwsIamPolicyDocumentExample.json),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSesIdentityPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `identity` - (Required) Name or Amazon Resource Name (ARN) of the SES Identity.
* `name` - (Required) Name of the policy.
* `policy` - (Required) JSON string of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SES Identity Policies using the identity and policy name, separated by a pipe character (`|`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SesIdentityPolicy } from "./.gen/providers/aws/ses-identity-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SesIdentityPolicy.generateConfigForImport(
      this,
      "example",
      "example.com|example"
    );
  }
}

```

Using `terraform import`, import SES Identity Policies using the identity and policy name, separated by a pipe character (`|`). For example:

```console
% terraform import aws_ses_identity_policy.example 'example.com|example'
```

<!-- cache-key: cdktf-0.20.8 input-2c45ba1c268b42067effb76b3698082d64f075923127efb622a58e4e81a1ba1a -->