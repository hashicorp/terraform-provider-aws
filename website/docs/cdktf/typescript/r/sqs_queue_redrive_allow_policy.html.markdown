---
subcategory: "SQS (Simple Queue)"
layout: "aws"
page_title: "AWS: aws_sqs_queue_redrive_allow_policy"
description: |-
  Provides a SQS Queue Redrive Allow Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sqs_queue_redrive_allow_policy

Provides a SQS Queue Redrive Allow Policy resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
import { SqsQueueRedriveAllowPolicy } from "./.gen/providers/aws/sqs-queue-redrive-allow-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SqsQueue(this, "example", {
      name: "examplequeue",
    });
    const src = new SqsQueue(this, "src", {
      name: "srcqueue",
      redrivePolicy: Token.asString(
        Fn.jsonencode({
          deadLetterTargetArn: example.arn,
          maxReceiveCount: 4,
        })
      ),
    });
    const awsSqsQueueRedriveAllowPolicyExample = new SqsQueueRedriveAllowPolicy(
      this,
      "example_2",
      {
        queueUrl: example.id,
        redriveAllowPolicy: Token.asString(
          Fn.jsonencode({
            redrivePermission: "byQueue",
            sourceQueueArns: [src.arn],
          })
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSqsQueueRedriveAllowPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `queueUrl` - (Required) The URL of the SQS Queue to which to attach the policy
* `redriveAllowPolicy` - (Required) The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SQS Queue Redrive Allow Policies using the queue URL. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueueRedriveAllowPolicy } from "./.gen/providers/aws/sqs-queue-redrive-allow-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SqsQueueRedriveAllowPolicy.generateConfigForImport(
      this,
      "test",
      "https://queue.amazonaws.com/123456789012/myqueue"
    );
  }
}

```

Using `terraform import`, import SQS Queue Redrive Allow Policies using the queue URL. For example:

```console
% terraform import aws_sqs_queue_redrive_allow_policy.test https://queue.amazonaws.com/123456789012/myqueue
```

<!-- cache-key: cdktf-0.20.8 input-c5be1a5078e220078fefdbcc536fdb85df83115dfe2ff78c1cc8aee9fadc3fee -->