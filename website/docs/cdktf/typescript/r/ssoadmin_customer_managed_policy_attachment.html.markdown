---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_customer_managed_policy_attachment"
description: |-
  Manages a customer managed policy for a Single Sign-On (SSO) Permission Set
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_customer_managed_policy_attachment

Provides a customer managed policy attachment for a Single Sign-On (SSO) Permission Set resource

~> **NOTE:** Creating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsSsoadminInstances } from "./.gen/providers/aws/data-aws-ssoadmin-instances";
import { IamPolicy } from "./.gen/providers/aws/iam-policy";
import { SsoadminCustomerManagedPolicyAttachment } from "./.gen/providers/aws/ssoadmin-customer-managed-policy-attachment";
import { SsoadminPermissionSet } from "./.gen/providers/aws/ssoadmin-permission-set";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new IamPolicy(this, "example", {
      description: "My test policy",
      name: "TestPolicy",
      policy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: ["ec2:Describe*"],
              Effect: "Allow",
              Resource: "*",
            },
          ],
          Version: "2012-10-17",
        })
      ),
    });
    const dataAwsSsoadminInstancesExample = new DataAwsSsoadminInstances(
      this,
      "example_1",
      {}
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsSsoadminInstancesExample.overrideLogicalId("example");
    const awsSsoadminPermissionSetExample = new SsoadminPermissionSet(
      this,
      "example_2",
      {
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(dataAwsSsoadminInstancesExample.arns), [
            "0",
          ])
        ),
        name: "Example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionSetExample.overrideLogicalId("example");
    const awsSsoadminCustomerManagedPolicyAttachmentExample =
      new SsoadminCustomerManagedPolicyAttachment(this, "example_3", {
        customerManagedPolicyReference: {
          name: example.name,
          path: "/",
        },
        instanceArn: Token.asString(
          awsSsoadminPermissionSetExample.instanceArn
        ),
        permissionSetArn: Token.asString(awsSsoadminPermissionSetExample.arn),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminCustomerManagedPolicyAttachmentExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `instanceArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
* `permissionSetArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.
* `customerManagedPolicyReference` - (Required, Forces new resource) Specifies the name and path of a customer managed policy. See below.

### Customer Managed Policy Reference

The `customerManagedPolicyReference` config block describes a customer managed IAM policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your specified permission set.

* `name` - (Required, Forces new resource) Name of the customer managed IAM Policy to be attached.
* `path` - (Optional, Forces new resource) The path to the IAM policy to be attached. The default is `/`. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-friendly-names) for more information.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Policy Name, Policy Path, Permission Set Amazon Resource Name (ARN), and SSO Instance ARN, each separated by a comma (`,`).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Managed Policy Attachments using the `name`, `path`, `permissionSetArn`, and `instanceArn` separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsoadminCustomerManagedPolicyAttachment } from "./.gen/providers/aws/ssoadmin-customer-managed-policy-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsoadminCustomerManagedPolicyAttachment.generateConfigForImport(
      this,
      "example",
      "TestPolicy,/,arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72"
    );
  }
}

```

Using `terraform import`, import SSO Managed Policy Attachments using the `name`, `path`, `permissionSetArn`, and `instanceArn` separated by a comma (`,`). For example:

```console
% terraform import aws_ssoadmin_customer_managed_policy_attachment.example TestPolicy,/,arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72
```

<!-- cache-key: cdktf-0.20.8 input-a04c10d6fcfe1554e5e21b7e379b1eef18d14ec57155c17e159d69d18e318c3e -->