---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_vpc_connection"
description: |-
  Terraform resource for managing an AWS QuickSight VPC Connection.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_vpc_connection

Terraform resource for managing an AWS QuickSight VPC Connection.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IamRole } from "./.gen/providers/aws/iam-role";
import { QuicksightVpcConnection } from "./.gen/providers/aws/quicksight-vpc-connection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const vpcConnectionRole = new IamRole(this, "vpc_connection_role", {
      assumeRolePolicy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: "sts:AssumeRole",
              Effect: "Allow",
              Principal: {
                Service: "quicksight.amazonaws.com",
              },
            },
          ],
          Version: "2012-10-17",
        })
      ),
      inlinePolicy: [
        {
          name: "QuickSightVPCConnectionRolePolicy",
          policy: Token.asString(
            Fn.jsonencode({
              Statement: [
                {
                  Action: [
                    "ec2:CreateNetworkInterface",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeSecurityGroups",
                  ],
                  Effect: "Allow",
                  Resource: ["*"],
                },
              ],
              Version: "2012-10-17",
            })
          ),
        },
      ],
    });
    new QuicksightVpcConnection(this, "example", {
      name: "Example Connection",
      roleArn: vpcConnectionRole.arn,
      securityGroupIds: ["sg-00000000000000000"],
      subnetIds: ["subnet-00000000000000000", "subnet-00000000000000001"],
      vpcConnectionId: "example-connection-id",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `vpcConnectionId` - (Required) The ID of the VPC connection.
* `name` - (Required) The display name for the VPC connection.
* `roleArn` - (Required) The IAM role to associate with the VPC connection.
* `securityGroupIds` - (Required) A list of security group IDs for the VPC connection.
* `subnetIds` - (Required) A list of subnet IDs for the VPC connection.

The following arguments are optional:

* `awsAccountId` - (Optional) AWS account ID.
* `dnsResolvers` - (Optional) A list of IP addresses of DNS resolver endpoints for the VPC connection.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the VPC connection.
* `availabilityStatus` - The availability status of the VPC connection. Valid values are `AVAILABLE`, `UNAVAILABLE` or `PARTIALLY_AVAILABLE`.
* `id` - A comma-delimited string joining AWS account ID and VPC connection ID.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import QuickSight VPC connection using the AWS account ID and VPC connection ID separated by commas (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightVpcConnection } from "./.gen/providers/aws/quicksight-vpc-connection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    QuicksightVpcConnection.generateConfigForImport(
      this,
      "example",
      "123456789012,example"
    );
  }
}

```

Using `terraform import`, import QuickSight VPC connection using the AWS account ID and VPC connection ID separated by commas (`,`). For example:

```console
% terraform import aws_quicksight_vpc_connection.example 123456789012,example
```

<!-- cache-key: cdktf-0.20.8 input-1a701376d2bcc1e947dddba8bc678a08ec6fbb9c8fee2196563da6dc0a40c77f -->