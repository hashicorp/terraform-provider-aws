---
subcategory: "Resource Groups"
layout: "aws"
page_title: "AWS: aws_resourcegroups_resource"
description: |-
  Terraform resource for managing an AWS Resource Groups Resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_resourcegroups_resource

Terraform resource for managing an AWS Resource Groups Resource.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2Host } from "./.gen/providers/aws/ec2-host";
import { ResourcegroupsGroup } from "./.gen/providers/aws/resourcegroups-group";
import { ResourcegroupsResource } from "./.gen/providers/aws/resourcegroups-resource";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Ec2Host(this, "example", {
      autoPlacement: "on",
      availabilityZone: "us-east-1a",
      hostRecovery: "off",
      instanceFamily: "t3",
    });
    const awsResourcegroupsGroupExample = new ResourcegroupsGroup(
      this,
      "example_1",
      {
        name: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsResourcegroupsGroupExample.overrideLogicalId("example");
    const awsResourcegroupsResourceExample = new ResourcegroupsResource(
      this,
      "example_2",
      {
        groupArn: Token.asString(awsResourcegroupsGroupExample.arn),
        resourceArn: example.arn,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsResourcegroupsResourceExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `groupArn` - (Required) Name or ARN of the resource group to add resources to.
* `resourceArn` - (Required) ARN of the resource to be added to the group.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - A comma-delimited string combining `groupArn` and `resourceArn`.
* `resourceType` - The resource type of a resource, such as `AWS::EC2::Instance`.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import an AWS Resource Groups Resource using `groupArn` and `resourceArn`, separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ResourcegroupsResource } from "./.gen/providers/aws/resourcegroups-resource";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ResourcegroupsResource.generateConfigForImport(
      this,
      "example",
      "arn:aws:resource-groups:us-west-2:012345678901:group/example,arn:aws:lambda:us-west-2:012345678901:function:example"
    );
  }
}

```

Using `terraform import`, import an AWS Resource Groups Resource using `groupArn` and `resourceArn`, separated by a comma (`,`). For example:

```console
% terraform import aws_resourcegroups_resource.example arn:aws:resource-groups:us-west-2:012345678901:group/example,arn:aws:lambda:us-west-2:012345678901:function:example
```

<!-- cache-key: cdktf-0.20.8 input-2bf07b21b51607b2097c2f017d5888e7424cafdc56578b34ef3be16f0fd4fc77 -->