---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_identity_provider"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Identity Provider.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_identity_provider

Terraform resource for managing an AWS WorkSpaces Web Identity Provider.

## Example Usage

### Basic Usage with SAML

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebIdentityProvider } from "./.gen/providers/aws/workspacesweb-identity-provider";
import { WorkspaceswebPortal } from "./.gen/providers/aws/workspacesweb-portal";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new WorkspaceswebPortal(this, "example", {
      displayName: "example",
    });
    const awsWorkspaceswebIdentityProviderExample =
      new WorkspaceswebIdentityProvider(this, "example_1", {
        identityProviderDetails: {
          MetadataURL: "https://example.com/metadata",
        },
        identityProviderName: "example-saml",
        identityProviderType: "SAML",
        portalArn: example.portalArn,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebIdentityProviderExample.overrideLogicalId("example");
  }
}

```

### OIDC Identity Provider

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebIdentityProvider } from "./.gen/providers/aws/workspacesweb-identity-provider";
import { WorkspaceswebPortal } from "./.gen/providers/aws/workspacesweb-portal";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new WorkspaceswebPortal(this, "test", {
      displayName: "test",
    });
    const awsWorkspaceswebIdentityProviderTest =
      new WorkspaceswebIdentityProvider(this, "test_1", {
        identityProviderDetails: {
          attributes_request_method: "POST",
          authorize_scopes: "openid, email",
          client_id: "test-client-id",
          client_secret: "test-client-secret",
          oidc_issuer: "https://accounts.google.com",
        },
        identityProviderName: "test-updated",
        identityProviderType: "OIDC",
        portalArn: test.portalArn,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebIdentityProviderTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are required:

* `identityProviderDetails` - (Required) Identity provider details. The following list describes the provider detail keys for each identity provider type:
    * For Google and Login with Amazon:
        * `clientId`
        * `clientSecret`
        * `authorize_scopes`
    * For Facebook:
        * `clientId`
        * `clientSecret`
        * `authorize_scopes`
        * `apiVersion`
    * For Sign in with Apple:
        * `clientId`
        * `teamId`
        * `keyId`
        * `privateKey`
        * `authorize_scopes`
    * For OIDC providers:
        * `clientId`
        * `clientSecret`
        * `attributes_request_method`
        * `oidc_issuer`
        * `authorize_scopes`
        * `authorize_url` if not available from discovery URL specified by `oidc_issuer` key
        * `tokenUrl` if not available from discovery URL specified by `oidc_issuer` key
        * `attributes_url` if not available from discovery URL specified by `oidc_issuer` key
        * `jwksUri` if not available from discovery URL specified by `oidc_issuer` key
    * For SAML providers:
        * `MetadataFile` OR `MetadataURL`
        * `IDPSignout` (boolean) optional
        * `IDPInit` (boolean) optional
        * `RequestSigningAlgorithm` (string) optional - Only accepts rsa-sha256
        * `EncryptedResponses` (boolean) optional
* `identityProviderName` - (Required) Identity provider name.
* `identityProviderType` - (Required) Identity provider type. Valid values: `SAML`, `Facebook`, `Google`, `LoginWithAmazon`, `SignInWithApple`, `OIDC`.
* `portalArn` - (Required) ARN of the web portal. Forces replacement if changed.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `identityProviderArn` - ARN of the identity provider.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Identity Provider using the `identityProviderArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebIdentityProvider } from "./.gen/providers/aws/workspacesweb-identity-provider";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebIdentityProvider.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:identityprovider/abcdef12345678/12345678-1234-1234-1234-123456789012"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web Identity Provider using the `identityProviderArn`. For example:

```console
% terraform import aws_workspacesweb_identity_provider.example arn:aws:workspaces-web:us-west-2:123456789012:identityprovider/abcdef12345678/12345678-1234-1234-1234-123456789012
```

<!-- cache-key: cdktf-0.20.8 input-70dc4260e3c340240c6649b1edb7f7569176a2447db5c271ba7ea1fb5f9ac0c3 -->