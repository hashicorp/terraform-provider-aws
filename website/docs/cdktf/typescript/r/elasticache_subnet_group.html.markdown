---
subcategory: "ElastiCache"
layout: "aws"
page_title: "AWS: aws_elasticache_subnet_group"
description: |-
  Provides an ElastiCache Subnet Group resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_elasticache_subnet_group

Provides an ElastiCache Subnet Group resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ElasticacheSubnetGroup } from "./.gen/providers/aws/elasticache-subnet-group";
import { Subnet } from "./.gen/providers/aws/subnet";
import { Vpc } from "./.gen/providers/aws/vpc";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const foo = new Vpc(this, "foo", {
      cidrBlock: "10.0.0.0/16",
      tags: {
        Name: "tf-test",
      },
    });
    const awsSubnetFoo = new Subnet(this, "foo_1", {
      availabilityZone: "us-west-2a",
      cidrBlock: "10.0.0.0/24",
      tags: {
        Name: "tf-test",
      },
      vpcId: foo.id,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSubnetFoo.overrideLogicalId("foo");
    new ElasticacheSubnetGroup(this, "bar", {
      name: "tf-test-cache-subnet",
      subnetIds: [Token.asString(awsSubnetFoo.id)],
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` – (Required) Name for the cache subnet group. ElastiCache converts this name to lowercase.
* `description` – (Optional) Description for the cache subnet group. Defaults to "Managed by Terraform".
* `subnetIds` – (Required) List of VPC Subnet IDs for the cache subnet group
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpcId` - The Amazon Virtual Private Cloud identifier (VPC ID) of the cache subnet group.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ElastiCache Subnet Groups using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ElasticacheSubnetGroup } from "./.gen/providers/aws/elasticache-subnet-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ElasticacheSubnetGroup.generateConfigForImport(
      this,
      "bar",
      "tf-test-cache-subnet"
    );
  }
}

```

Using `terraform import`, import ElastiCache Subnet Groups using the `name`. For example:

```console
% terraform import aws_elasticache_subnet_group.bar tf-test-cache-subnet
```

<!-- cache-key: cdktf-0.20.8 input-ee752771376a04c8e2e6013e24fd99a2238163ed656cac17fe58b010c87938ca -->