---
subcategory: "SSM Contacts"
layout: "aws"
page_title: "AWS: aws_ssmcontacts_rotation"
description: |-
  Provides a Terraform resource for managing a Contacts Rotation in AWS Systems Manager Incident Manager.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssmcontacts_rotation

Provides a Terraform resource for managing a Contacts Rotation in AWS Systems Manager Incident Manager.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsRotation } from "./.gen/providers/aws/ssmcontacts-rotation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SsmcontactsRotation(this, "example", {
      contactIds: [Token.asString(awsSsmcontactsContactExample.arn)],
      dependsOn: [awsSsmincidentsReplicationSetExample],
      name: "rotation",
      recurrence: [
        {
          dailySettings: [
            {
              hourOfDay: 9,
              minuteOfHour: 0,
            },
          ],
          numberOfOnCalls: 1,
          recurrenceMultiplier: 1,
        },
      ],
      timeZoneId: "Australia/Sydney",
    });
  }
}

```

### Usage with Weekly Settings and Shift Coverages Fields

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsRotation } from "./.gen/providers/aws/ssmcontacts-rotation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SsmcontactsRotation(this, "example", {
      contactIds: [Token.asString(awsSsmcontactsContactExample.arn)],
      dependsOn: [awsSsmincidentsReplicationSetExample],
      name: "rotation",
      recurrence: [
        {
          numberOfOnCalls: 1,
          recurrenceMultiplier: 1,
          shiftCoverages: [
            {
              coverageTimes: [
                {
                  end: [
                    {
                      hourOfDay: 23,
                      minuteOfHour: 0,
                    },
                  ],
                  start: [
                    {
                      hourOfDay: 1,
                      minuteOfHour: 0,
                    },
                  ],
                },
              ],
              mapBlockKey: "MON",
            },
          ],
          weeklySettings: [
            {
              dayOfWeek: "WED",
              handOffTime: [
                {
                  hourOfDay: 4,
                  minuteOfHour: 25,
                },
              ],
            },
            {
              dayOfWeek: "FRI",
              handOffTime: [
                {
                  hourOfDay: 15,
                  minuteOfHour: 57,
                },
              ],
            },
          ],
        },
      ],
      startTime: "2023-07-20T02:21:49+00:00",
      tags: {
        key1: "tag1",
        key2: "tag2",
      },
      timeZoneId: "Australia/Sydney",
    });
  }
}

```

### Usage with Monthly Settings Fields

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsRotation } from "./.gen/providers/aws/ssmcontacts-rotation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SsmcontactsRotation(this, "example", {
      contactIds: [Token.asString(awsSsmcontactsContactExample.arn)],
      dependsOn: [awsSsmincidentsReplicationSetExample],
      name: "rotation",
      recurrence: [
        {
          monthlySettings: [
            {
              dayOfMonth: 20,
              handOffTime: [
                {
                  hourOfDay: 8,
                  minuteOfHour: 0,
                },
              ],
            },
            {
              dayOfMonth: 13,
              handOffTime: [
                {
                  hourOfDay: 12,
                  minuteOfHour: 34,
                },
              ],
            },
          ],
          numberOfOnCalls: 1,
          recurrenceMultiplier: 1,
        },
      ],
      timeZoneId: "Australia/Sydney",
    });
  }
}

```

## Argument Reference

~> **NOTE:** A rotation implicitly depends on a replication set. If you configured your replication set in Terraform, we recommend you add it to the `dependsOn` argument for the Terraform Contact Resource.

The following arguments are required:

* `contactIds` - (Required) Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
* `name` - (Required) The name for the rotation.
* `timeZoneId` - (Required) The time zone to base the rotationâ€™s activity on in Internet Assigned Numbers Authority (IANA) format.
* `recurrence` - (Required) Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `dailySettings`, `monthlySettings`, or `weeklySettings` must be populated. See [Recurrence](#recurrence) for more details.

The following arguments are optional:

* `startTime` - (Optional) The date and time, in RFC 3339 format, that the rotation goes into effect.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of the rotation.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

### Recurrence

* `numberOfOnCalls` - (Required) The number of contacts, or shift team members designated to be on call concurrently during a shift.
* `recurrenceMultiplier` - (Required) The number of days, weeks, or months a single rotation lasts.
* `daly_settings` - (Optional) Information about on-call rotations that recur daily. Composed of a list of times, in 24-hour format, for when daily on-call shift rotations begin. See [Daily Settings](#daily-settings) for more details.
* `monthlySettings` - (Optional) Information about on-call rotations that recur monthly. See [Monthly Settings](#monthly-settings) for more details.
* `weeklySettings` - (Optional) Information about on-call rotations that recur weekly. See [Weekly Settings](#weekly-settings) for more details.
* `shiftCoverages` - (Optional) Information about the days of the week that the on-call rotation coverage includes. See [Shift Coverages](#shift-coverages) for more details.

### Daily Settings

* `hourOfDay` - (Required) The hour of the day.
* `minuteOfHour` - (Required) The minutes of the hour.

### Monthly Settings

* `dayOfMonth` - (Required) The day of the month when monthly recurring on-call rotations begin.
* `handOffTime` - (Required) The hand off time. See [Hand Off Time](#hand-off-time) for more details.

### Weekly Settings

* `dayOfWeek` - (Required) The day of the week when weekly recurring on-call shift rotations begins.
* `handOffTime` - (Required) The hand off time. See [Hand Off Time](#hand-off-time) for more details.

### Hand Off Time

* `hourOfDay` - (Required) The hour of the day.
* `minuteOfHour` - (Required) The minutes of the hour.

### Shift Coverages

* `coverageTimes` - (Required) Information about when an on-call shift begins and ends. See [Coverage Times](#coverage-times) for more details.
* `dayOfWeek` - (Required) The day of the week when the shift coverage occurs.

### Coverage Times

* `start` - (Required) The start time of the on-call shift. See [Hand Off Time](#hand-off-time) for more details.
* `end` - (Required) The end time of the on-call shift. See [Hand Off Time](#hand-off-time) for more details.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSMContacts Rotation using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsRotation } from "./.gen/providers/aws/ssmcontacts-rotation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsmcontactsRotation.generateConfigForImport(
      this,
      "example",
      "arn:aws:ssm-contacts:us-east-1:012345678910:rotation/example"
    );
  }
}

```

Using `terraform import`, import CodeGuru Profiler Profiling Group using the `arn`. For example:

```console
% terraform import aws_ssmcontacts_rotation.example arn:aws:ssm-contacts:us-east-1:012345678910:rotation/example
```

<!-- cache-key: cdktf-0.20.8 input-7d1ce08106ca5a606920f9f95d80d05f4f5697a18f454ea743a0ba03973284d4 -->