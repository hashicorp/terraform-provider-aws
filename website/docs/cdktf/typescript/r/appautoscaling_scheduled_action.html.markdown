---
subcategory: "Application Auto Scaling"
layout: "aws"
page_title: "AWS: aws_appautoscaling_scheduled_action"
description: |-
  Provides an Application AutoScaling ScheduledAction resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appautoscaling_scheduled_action

Provides an Application AutoScaling ScheduledAction resource.

## Example Usage

### DynamoDB Table Autoscaling

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingScheduledAction } from "./.gen/providers/aws/appautoscaling-scheduled-action";
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const dynamodb = new AppautoscalingTarget(this, "dynamodb", {
      maxCapacity: 100,
      minCapacity: 5,
      resourceId: "table/tableName",
      scalableDimension: "dynamodb:table:ReadCapacityUnits",
      serviceNamespace: "dynamodb",
    });
    const awsAppautoscalingScheduledActionDynamodb =
      new AppautoscalingScheduledAction(this, "dynamodb_1", {
        name: "dynamodb",
        resourceId: dynamodb.resourceId,
        scalableDimension: dynamodb.scalableDimension,
        scalableTargetAction: {
          maxCapacity: Token.asString(200),
          minCapacity: Token.asString(1),
        },
        schedule: "at(2006-01-02T15:04:05)",
        serviceNamespace: dynamodb.serviceNamespace,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppautoscalingScheduledActionDynamodb.overrideLogicalId("dynamodb");
  }
}

```

### ECS Service Autoscaling

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppautoscalingScheduledAction } from "./.gen/providers/aws/appautoscaling-scheduled-action";
import { AppautoscalingTarget } from "./.gen/providers/aws/appautoscaling-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const ecs = new AppautoscalingTarget(this, "ecs", {
      maxCapacity: 4,
      minCapacity: 1,
      resourceId: "service/clusterName/serviceName",
      scalableDimension: "ecs:service:DesiredCount",
      serviceNamespace: "ecs",
    });
    const awsAppautoscalingScheduledActionEcs =
      new AppautoscalingScheduledAction(this, "ecs_1", {
        name: "ecs",
        resourceId: ecs.resourceId,
        scalableDimension: ecs.scalableDimension,
        scalableTargetAction: {
          maxCapacity: Token.asString(10),
          minCapacity: Token.asString(1),
        },
        schedule: "at(2006-01-02T15:04:05)",
        serviceNamespace: ecs.serviceNamespace,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppautoscalingScheduledActionEcs.overrideLogicalId("ecs");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name of the scheduled action.
* `serviceNamespace` - (Required) Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
* `resourceId` - (Required) Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
* `scalableDimension` - (Required) Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
* `scalableTargetAction` - (Required) New minimum and maximum capacity. You can set both values or just one. See [below](#scalable-target-action-arguments)
* `schedule` - (Required) Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
* `startTime` - (Optional) Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
* `endTime` - (Optional) Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
* `timezone` - (Optional) Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `startTime` and `endTime`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.

### Scalable Target Action Arguments

* `maxCapacity` - (Optional) Maximum capacity. At least one of `maxCapacity` or `minCapacity` must be set.
* `minCapacity` - (Optional) Minimum capacity. At least one of `minCapacity` or `maxCapacity` must be set.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the scheduled action.

<!-- cache-key: cdktf-0.20.8 input-2340bae330ec995b135b58fdb2388300b4f924ab8525d2c122eed0efb9dccbdd -->