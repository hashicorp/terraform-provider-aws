---
subcategory: "X-Ray"
layout: "aws"
page_title: "AWS: aws_xray_group"
description: |-
    Creates and manages an AWS XRay Group.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_xray_group

Creates and manages an AWS XRay Group.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { XrayGroup } from "./.gen/providers/aws/xray-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new XrayGroup(this, "example", {
      filterExpression: "responsetime > 5",
      groupName: "example",
      insightsConfiguration: {
        insightsEnabled: true,
        notificationsEnabled: true,
      },
    });
  }
}

```

## Argument Reference

* `groupName` - (Required) The name of the group.
* `filterExpression` - (Required) The filter expression defining criteria by which to group traces. more info can be found in official [docs](https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html).
* `insightsConfiguration` - (Optional) Configuration options for enabling insights.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Nested fields

#### `insightsConfiguration`

* `insightsEnabled` - (Required) Specifies whether insights are enabled.
* `notificationsEnabled` - (Optional) Specifies whether insight notifications are enabled.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ARN of the Group.
* `arn` - The ARN of the Group.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import XRay Groups using the ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { XrayGroup } from "./.gen/providers/aws/xray-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    XrayGroup.generateConfigForImport(
      this,
      "example",
      "arn:aws:xray:us-west-2:1234567890:group/example-group/TNGX7SW5U6QY36T4ZMOUA3HVLBYCZTWDIOOXY3CJAXTHSS3YCWUA"
    );
  }
}

```

Using `terraform import`, import XRay Groups using the ARN. For example:

```console
% terraform import aws_xray_group.example arn:aws:xray:us-west-2:1234567890:group/example-group/TNGX7SW5U6QY36T4ZMOUA3HVLBYCZTWDIOOXY3CJAXTHSS3YCWUA
```

<!-- cache-key: cdktf-0.20.8 input-9e9af30b9adec288e781cee25a67533fbf3d979628ed12ff8336468434aab2be -->