---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_lb"
description: |-
  Manages a Lightsail Load Balancer.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_lb

Manages a Lightsail load balancer resource.

Use this resource to distribute incoming traffic across multiple Lightsail instances to improve application availability and performance.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailLb } from "./.gen/providers/aws/lightsail-lb";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new LightsailLb(this, "example", {
      healthCheckPath: "/",
      instancePort: 80,
      name: "example-load-balancer",
      tags: {
        foo: "bar",
      },
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `instancePort` - (Required) Instance port the load balancer will connect to.
* `name` - (Required) Name of the Lightsail load balancer.

The following arguments are optional:

* `healthCheckPath` - (Optional) Health check path of the load balancer. Default value `/`.
* `ipAddressType` - (Optional) IP address type of the load balancer. Valid values: `dualstack`, `ipv4`. Default value `dualstack`.
* `tags` - (Optional) Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Lightsail load balancer.
* `createdAt` - Timestamp when the load balancer was created.
* `dnsName` - DNS name of the load balancer.
* `id` - Name used for this load balancer (matches `name`).
* `protocol` - Protocol of the load balancer.
* `publicPorts` - Public ports of the load balancer.
* `supportCode` - Support code for the load balancer. Include this code in your email to support when you have questions about a load balancer in Lightsail. This code enables our support team to look up your Lightsail information more easily.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_lb` using the name attribute. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailLb } from "./.gen/providers/aws/lightsail-lb";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LightsailLb.generateConfigForImport(
      this,
      "example",
      "example-load-balancer"
    );
  }
}

```

Using `terraform import`, import `aws_lightsail_lb` using the name attribute. For example:

```console
% terraform import aws_lightsail_lb.example example-load-balancer
```

<!-- cache-key: cdktf-0.20.8 input-393f6f8d721bd0eb2a8316849c28703688b01f3cbee2adb3a88bc8715a54d7b2 -->