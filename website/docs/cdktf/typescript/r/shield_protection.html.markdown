---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_protection"
description: |-
  Enables AWS Shield Advanced for a specific AWS resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_protection

Enables AWS Shield Advanced for a specific AWS resource.
The resource can be an Amazon CloudFront distribution, Elastic Load Balancing load balancer, AWS Global Accelerator accelerator, Elastic IP Address, or an Amazon Route 53 hosted zone.

## Example Usage

### Create protection

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAvailabilityZones } from "./.gen/providers/aws/data-aws-availability-zones";
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { Eip } from "./.gen/providers/aws/eip";
import { ShieldProtection } from "./.gen/providers/aws/shield-protection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Eip(this, "example", {
      domain: "vpc",
    });
    new DataAwsAvailabilityZones(this, "available", {});
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_3", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    const awsShieldProtectionExample = new ShieldProtection(this, "example_4", {
      name: "example",
      resourceArn:
        "arn:aws:ec2:${" +
        dataAwsRegionCurrent.name +
        "}:${" +
        current.accountId +
        "}:eip-allocation/${" +
        example.id +
        "}",
      tags: {
        Environment: "Dev",
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProtectionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) A friendly name for the Protection you are creating.
* `resourceArn` - (Required) The ARN (Amazon Resource Name) of the resource to be protected.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The unique identifier (ID) for the Protection object that is created.
* `arn` - The ARN of the Protection.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield protection resources using specifying their ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ShieldProtection } from "./.gen/providers/aws/shield-protection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ShieldProtection.generateConfigForImport(
      this,
      "example",
      "ff9592dc-22f3-4e88-afa1-7b29fde9669a"
    );
  }
}

```

Using `terraform import`, import Shield protection resources using specifying their ID. For example:

```console
% terraform import aws_shield_protection.example ff9592dc-22f3-4e88-afa1-7b29fde9669a
```

<!-- cache-key: cdktf-0.20.8 input-35847768aaaa80ceec4dd0e0320b0024c8b87792dc136354d8b49f64094399b6 -->