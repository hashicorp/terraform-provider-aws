---
subcategory: "FSx"
layout: "aws"
page_title: "AWS: aws_fsx_openzfs_file_system"
description: |-
  Manages an Amazon FSx for OpenZFS file system.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_fsx_openzfs_file_system

Manages an Amazon FSx for OpenZFS file system.
See the [FSx OpenZFS User Guide](https://docs.aws.amazon.com/fsx/latest/OpenZFSGuide/what-is-fsx.html) for more information.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FsxOpenzfsFileSystem } from "./.gen/providers/aws/fsx-openzfs-file-system";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new FsxOpenzfsFileSystem(this, "test", {
      deploymentType: "SINGLE_AZ_1",
      storageCapacity: 64,
      subnetIds: [test1.id],
      throughputCapacity: 64,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `deploymentType` - (Required) The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.
* `storageCapacity` - (Required) The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.
* `subnetIds` - (Required) A list of IDs for the subnets that the file system will be accessible from.
* `throughputCapacity` - (Required) Throughput (MB/s) of the file system. Valid values depend on `deploymentType`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.

The following arguments are optional:

* `automaticBackupRetentionDays` - (Optional) The number of days to retain automatic backups. Setting this to 0 disables automatic backups. You can retain automatic backups for a maximum of 90 days.
* `backupId` - (Optional) The ID of the source backup to create the filesystem from.
* `copyTagsToBackups` - (Optional) A boolean flag indicating whether tags for the file system should be copied to backups. The default value is false.
* `copyTagsToVolumes` - (Optional) A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
* `dailyAutomaticBackupStartTime` - (Optional) A recurring daily time, in the format HH:MM. HH is the zero-padded hour of the day (0-23), and MM is the zero-padded minute of the hour. For example, 05:00 specifies 5 AM daily. Requires `automaticBackupRetentionDays` to be set.
* `deleteOptions` - (Optional) List of delete options, which at present supports only one value that specifies whether to delete all child volumes and snapshots when the file system is deleted. Valid values: `DELETE_CHILD_VOLUMES_AND_SNAPSHOTS`.
* `diskIopsConfiguration` - (Optional) The SSD IOPS configuration for the Amazon FSx for OpenZFS file system. See [`diskIopsConfiguration` Block](#disk_iops_configuration-block) for details.
* `endpointIpAddressRange` - (Optional) (Multi-AZ only) Specifies the IP address range in which the endpoints to access your file system will be created.
* `finalBackupTags` - (Optional) A map of tags to apply to the file system's final backup.
* `kmsKeyId` - (Optional) ARN for the KMS Key to encrypt the file system at rest, Defaults to an AWS managed KMS Key.
* `preferredSubnetId` - (Optional) (Multi-AZ only) Required when `deploymentType` is set to `MULTI_AZ_1`. This specifies the subnet in which you want the preferred file server to be located.
* `rootVolumeConfiguration` - (Optional) The configuration for the root volume of the file system. All other volumes are children or the root volume. See [`rootVolumeConfiguration` Block](#root_volume_configuration-block) for details.
* `routeTableIds` - (Optional) (Multi-AZ only) Specifies the route tables in which Amazon FSx creates the rules for routing traffic to the correct file server. You should specify all virtual private cloud (VPC) route tables associated with the subnets in which your clients are located. By default, Amazon FSx selects your VPC's default route table.
* `securityGroupIds` - (Optional) A list of IDs for the security groups that apply to the specified network interfaces created for file system access. These security groups will apply to all network interfaces.
* `skipFinalBackup` - (Optional) When enabled, will skip the default final backup taken when the file system is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
* `storageType` - (Optional) The filesystem storage type. Only `SSD` is supported.
* `tags` - (Optional) A map of tags to assign to the file system. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `weeklyMaintenanceStartTime` - (Optional) The preferred start time (in `d:HH:MM` format) to perform weekly maintenance, in the UTC time zone.

### `diskIopsConfiguration` Block

The `diskIopsConfiguration` configuration block supports the following arguments:

* `iops` - (Optional) The total number of SSD IOPS provisioned for the file system.
* `mode` - (Optional) Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.

### `rootVolumeConfiguration` Block

The `rootVolumeConfiguration` configuration block supports the following arguments:

* `copyTagsToSnapshots` - (Optional) A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
* `dataCompressionType` - (Optional) Method used to compress the data on the volume. Valid values are `LZ4`, `NONE` or `ZSTD`. Child volumes that don't specify compression option will inherit from parent volume. This option on file system applies to the root volume.
* `nfsExports` - (Optional) NFS export configuration for the root volume. Exactly 1 item. See [`nfsExports` Block](#nfs_exports-block) for details.
* `readOnly` - (Optional) specifies whether the volume is read-only. Default is false.
* `recordSizeKib` - (Optional) Specifies the record size of an OpenZFS root volume, in kibibytes (KiB). Valid values are `4`, `8`, `16`, `32`, `64`, `128`, `256`, `512`, or `1024` KiB. The default is `128` KiB.
* `userAndGroupQuotas` - (Optional) Specify how much storage users or groups can use on the volume. Maximum of 100 items. See [`userAndGroupQuotas` Block](#user_and_group_quotas-block) for details.

### `nfsExports` Block

The `nfsExports` configuration block supports the following arguments:

* `clientConfigurations` - (Required) A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See [`clientConfigurations` Block](#client_configurations-block) for details.

### `clientConfigurations` Block

The `clientConfigurations` configuration block supports the following arguments:

* `clients` - (Required) A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
* `options` - (Required)  The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.

### `userAndGroupQuotas` Block

The `userAndGroupQuotas` configuration block supports the following arguments:

* `id` - (Required) The ID of the user or group. Valid values between `0` and `2147483647`
* `storageCapacityQuotaGib` - (Required) The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
* `type` - (Required) A value that specifies whether the quota applies to a user or group. Valid values are `USER` or `GROUP`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name of the file system.
* `dnsName` - DNS name for the file system, e.g., `fs-12345678.fsx.us-west-2.amazonaws.com`
* `endpointIpAddress` - IP address of the endpoint that is used to access data or to manage the file system.
* `id` - Identifier of the file system, e.g., `fs-12345678`
* `networkInterfaceIds` - Set of Elastic Network Interface identifiers from which the file system is accessible The first network interface returned is the primary network interface.
* `ownerId` - AWS account identifier that created the file system.
* `rootVolumeId` - Identifier of the root volume, e.g., `fsvol-12345678`
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `vpcId` - Identifier of the Virtual Private Cloud for the file system.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `60m`)
* `delete` - (Default `60m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import FSx File Systems using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FsxOpenzfsFileSystem } from "./.gen/providers/aws/fsx-openzfs-file-system";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    FsxOpenzfsFileSystem.generateConfigForImport(
      this,
      "example",
      "fs-543ab12b1ca672f33"
    );
  }
}

```

Using `terraform import`, import FSx File Systems using the `id`. For example:

```console
% terraform import aws_fsx_openzfs_file_system.example fs-543ab12b1ca672f33
```

Certain resource arguments, like `securityGroupIds`, do not have a FSx API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use [`ignore_changes`](https://www.terraform.io/docs/configuration/meta-arguments/lifecycle.html#ignore_changes) to hide the difference. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FsxOpenzfsFileSystem } from "./.gen/providers/aws/fsx-openzfs-file-system";
interface MyConfig {
  deploymentType: any;
  subnetIds: any;
  throughputCapacity: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new FsxOpenzfsFileSystem(this, "example", {
      lifecycle: {
        ignoreChanges: [securityGroupIds],
      },
      securityGroupIds: [Token.asString(awsSecurityGroupExample.id)],
      deploymentType: config.deploymentType,
      subnetIds: config.subnetIds,
      throughputCapacity: config.throughputCapacity,
    });
  }
}

```

<!-- cache-key: cdktf-0.20.1 input-ead07c5a51409d6865de56af2f23af356f99f1ccc00dcccfb4cee601285b9122 -->