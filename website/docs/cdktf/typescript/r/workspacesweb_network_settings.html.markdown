---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_network_settings"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Network Settings.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_network_settings

Terraform resource for managing an AWS WorkSpaces Web Network Settings resource. Once associated with a web portal, network settings define how streaming instances will connect with your specified VPC.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformCount, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityGroup } from "./.gen/providers/aws/security-group";
import { Subnet } from "./.gen/providers/aws/subnet";
import { Vpc } from "./.gen/providers/aws/vpc";
import { WorkspaceswebNetworkSettings } from "./.gen/providers/aws/workspacesweb-network-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Vpc(this, "example", {
      cidrBlock: "10.0.0.0/16",
    });
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const example1Count = TerraformCount.of(Token.asNumber("2"));
    new SecurityGroup(this, "example1", {
      name: "example-sg-${" + example1Count.index + "}$",
      vpcId: example.id,
      count: example1Count,
    });
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const exampleCount = TerraformCount.of(Token.asNumber("2"));
    const awsSubnetExample = new Subnet(this, "example_2", {
      availabilityZone: Token.asString(
        Fn.lookupNested(available.names, [exampleCount.index])
      ),
      cidrBlock: Token.asString(
        Fn.cidrsubnet(example.cidrBlock, 8, Token.asNumber(exampleCount.index))
      ),
      vpcId: example.id,
      count: exampleCount,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSubnetExample.overrideLogicalId("example");
    const awsWorkspaceswebNetworkSettingsExample =
      new WorkspaceswebNetworkSettings(this, "example_3", {
        securityGroupIds: [
          Token.asString(Fn.lookupNested(awsSecurityGroupExample, ["0", "id"])),
          Token.asString(Fn.lookupNested(awsSecurityGroupExample, ["1", "id"])),
        ],
        subnetIds: [
          Token.asString(Fn.lookupNested(awsSubnetExample, ["0", "id"])),
          Token.asString(Fn.lookupNested(awsSubnetExample, ["1", "id"])),
        ],
        vpcId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebNetworkSettingsExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `securityGroupIds` - (Required) One or more security groups used to control access from streaming instances to your VPC.
* `subnetIds` - (Required) The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two subnet ids must be specified.
* `vpcId` - (Required) The VPC that streaming instances will connect to.

The following arguments are optional:

* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `associatedPortalArns` - List of web portal ARNs associated with the network settings.
* `networkSettingsArn` - ARN of the network settings resource.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Network Settings using the `networkSettingsArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebNetworkSettings } from "./.gen/providers/aws/workspacesweb-network-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebNetworkSettings.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:networksettings/abcdef12345"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web Network Settings using the `networkSettingsArn`. For example:

```console
% terraform import aws_workspacesweb_network_settings.example arn:aws:workspacesweb:us-west-2:123456789012:networksettings/abcdef12345
```

<!-- cache-key: cdktf-0.20.8 input-f34201254f015c64f35b468f7a12a2731bb17a8feadf5d88d3387c8c834396a2 -->