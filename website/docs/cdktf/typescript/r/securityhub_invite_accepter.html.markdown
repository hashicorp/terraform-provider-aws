---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_invite_accepter"
description: |-
  Accepts a Security Hub invitation.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_securityhub_invite_accepter

-> **Note:** AWS accounts can only be associated with a single Security Hub master account. Destroying this resource will disassociate the member account from the master account.

Accepts a Security Hub invitation.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAccount } from "./.gen/providers/aws/securityhub-account";
import { SecurityhubInviteAccepter } from "./.gen/providers/aws/securityhub-invite-accepter";
import { SecurityhubMember } from "./.gen/providers/aws/securityhub-member";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SecurityhubAccount(this, "example", {});
    const invitee = new SecurityhubAccount(this, "invitee", {
      provider: "aws.invitee",
    });
    const awsSecurityhubMemberExample = new SecurityhubMember(
      this,
      "example_2",
      {
        accountId: "123456789012",
        email: "example@example.com",
        invite: true,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityhubMemberExample.overrideLogicalId("example");
    const awsSecurityhubInviteAccepterInvitee = new SecurityhubInviteAccepter(
      this,
      "invitee_3",
      {
        dependsOn: [invitee],
        masterId: Token.asString(awsSecurityhubMemberExample.masterId),
        provider: "aws.invitee",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityhubInviteAccepterInvitee.overrideLogicalId("invitee");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `masterId` - (Required) The account ID of the master Security Hub account whose invitation you're accepting.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `invitationId` - The ID of the invitation.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Security Hub invite acceptance using the account ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubInviteAccepter } from "./.gen/providers/aws/securityhub-invite-accepter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SecurityhubInviteAccepter.generateConfigForImport(
      this,
      "example",
      "123456789012"
    );
  }
}

```

Using `terraform import`, import Security Hub invite acceptance using the account ID. For example:

```console
% terraform import aws_securityhub_invite_accepter.example 123456789012
```

<!-- cache-key: cdktf-0.20.8 input-47799ffb1b46661d89c8c190f8ee1ae51146d3c40022d01eb9ce32bcbbe707ae -->