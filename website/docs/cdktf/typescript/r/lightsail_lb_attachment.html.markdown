---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_lb_attachment"
description: |-
  Attaches a Lightsail Instance to a Lightsail Load Balancer
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_lb_attachment

Attaches a Lightsail Instance to a Lightsail Load Balancer.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAvailabilityZones } from "./.gen/providers/aws/data-aws-availability-zones";
import { LightsailInstance } from "./.gen/providers/aws/lightsail-instance";
import { LightsailLb } from "./.gen/providers/aws/lightsail-lb";
import { LightsailLbAttachment } from "./.gen/providers/aws/lightsail-lb-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new LightsailLb(this, "test", {
      healthCheckPath: "/",
      instancePort: Token.asNumber("80"),
      name: "test-load-balancer",
      tags: {
        foo: "bar",
      },
    });
    const available = new DataAwsAvailabilityZones(this, "available", {
      filter: [
        {
          name: "opt-in-status",
          values: ["opt-in-not-required"],
        },
      ],
      state: "available",
    });
    const awsLightsailInstanceTest = new LightsailInstance(this, "test_2", {
      availabilityZone: Token.asString(Fn.lookupNested(available.names, ["0"])),
      blueprintId: "amazon_linux_2",
      bundleId: "nano_3_0",
      name: "test-instance",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailInstanceTest.overrideLogicalId("test");
    const awsLightsailLbAttachmentTest = new LightsailLbAttachment(
      this,
      "test_3",
      {
        instanceName: Token.asString(awsLightsailInstanceTest.name),
        lbName: test.name,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailLbAttachmentTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `lbName` - (Required) The name of the Lightsail load balancer.
* `instanceName` - (Required) The name of the instance to attach to the load balancer.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - A combination of attributes to create a unique id: `lbName`,`instanceName`

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_lightsail_lb_attachment` using the name attribute. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailLbAttachment } from "./.gen/providers/aws/lightsail-lb-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LightsailLbAttachment.generateConfigForImport(
      this,
      "test",
      "example-load-balancer,example-instance"
    );
  }
}

```

Using `terraform import`, import `aws_lightsail_lb_attachment` using the name attribute. For example:

```console
% terraform import aws_lightsail_lb_attachment.test example-load-balancer,example-instance
```

<!-- cache-key: cdktf-0.20.1 input-d7f55c172f805ac505cedcf63850df8db630bc587a21a031b9908cb01167fd47 -->