---
subcategory: "AppStream 2.0"
layout: "aws"
page_title: "AWS: aws_appstream_fleet_stack_association"
description: |-
  Manages an AppStream Fleet Stack association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appstream_fleet_stack_association

Manages an AppStream Fleet Stack association.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppstreamFleet } from "./.gen/providers/aws/appstream-fleet";
import { AppstreamFleetStackAssociation } from "./.gen/providers/aws/appstream-fleet-stack-association";
import { AppstreamStack } from "./.gen/providers/aws/appstream-stack";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new AppstreamFleet(this, "example", {
      computeCapacity: {
        desiredInstances: 1,
      },
      imageName: "Amazon-AppStream2-Sample-Image-03-11-2023",
      instanceType: "stream.standard.small",
      name: "NAME",
    });
    const awsAppstreamStackExample = new AppstreamStack(this, "example_1", {
      name: "STACK NAME",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppstreamStackExample.overrideLogicalId("example");
    const awsAppstreamFleetStackAssociationExample =
      new AppstreamFleetStackAssociation(this, "example_2", {
        fleetName: example.name,
        stackName: Token.asString(awsAppstreamStackExample.name),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppstreamFleetStackAssociationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `fleetName` - (Required) Name of the fleet.
* `stackName` (Required) Name of the stack.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique ID of the appstream stack fleet association, composed of the `fleetName` and `stackName` separated by a slash (`/`).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppStream Stack Fleet Association using the `fleetName` and `stackName` separated by a slash (`/`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppstreamFleetStackAssociation } from "./.gen/providers/aws/appstream-fleet-stack-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AppstreamFleetStackAssociation.generateConfigForImport(
      this,
      "example",
      "fleetName/stackName"
    );
  }
}

```

Using `terraform import`, import AppStream Stack Fleet Association using the `fleetName` and `stackName` separated by a slash (`/`). For example:

```console
% terraform import aws_appstream_fleet_stack_association.example fleetName/stackName
```

<!-- cache-key: cdktf-0.20.8 input-d02e772e58ab8d188d62ad200741c9e10f12ac34ac4daa8c08f2dbd2bfc87b0a -->