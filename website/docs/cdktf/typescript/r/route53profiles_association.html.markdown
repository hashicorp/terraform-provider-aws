---
subcategory: "Route 53 Profiles"
layout: "aws"
page_title: "AWS: aws_route53profiles_association"
description: |-
  Terraform resource for managing an AWS Route 53 Profiles Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53profiles_association

Terraform resource for managing an AWS Route 53 Profiles Association.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route53ProfilesAssociation } from "./.gen/providers/aws/route53-profiles-association";
import { Route53ProfilesProfile } from "./.gen/providers/aws/route53-profiles-profile";
import { Vpc } from "./.gen/providers/aws/vpc";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Route53ProfilesProfile(this, "example", {
      name: "example",
    });
    const awsVpcExample = new Vpc(this, "example_1", {
      cidr: "10.0.0.0/16",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpcExample.overrideLogicalId("example");
    const awsRoute53ProfilesAssociationExample = new Route53ProfilesAssociation(
      this,
      "example_2",
      {
        name: "example",
        profileId: example.id,
        resourceId: Token.asString(awsVpcExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRoute53ProfilesAssociationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the Profile Association.

* `profileId` - (Required) ID of the profile associated with the VPC.

* `resourceId` - (Required) Resource ID of the VPC the profile to be associated with.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the Profile Association.
* `name` - Name of the Profile Association.
* `status` - Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
* `statusMessage` - Status message of the Profile Association.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Route 53 Profiles Association using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route53ProfilesAssociation } from "./.gen/providers/aws/route53-profiles-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Route53ProfilesAssociation.generateConfigForImport(
      this,
      "example",
      "rpa-id-12345678"
    );
  }
}

```

Using `terraform import`, import Route 53 Profiles Association using the `example_id_arg`. For example:

```console
% terraform import aws_route53profiles_association.example rpa-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-f2b872b51f3f958e88cf1b21c5204b283c792e646bb77e742d49c4e80e2139bf -->