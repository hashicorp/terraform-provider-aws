---
subcategory: "API Gateway V2"
layout: "aws"
page_title: "AWS: aws_apigatewayv2_route"
description: |-
  Manages an Amazon API Gateway Version 2 route.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_apigatewayv2_route

Manages an Amazon API Gateway Version 2 route.
More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html) for [WebSocket](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-develop-routes.html) and [HTTP](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-routes.html) APIs.

## Example Usage

### Basic

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Apigatewayv2Api } from "./.gen/providers/aws/apigatewayv2-api";
import { Apigatewayv2Route } from "./.gen/providers/aws/apigatewayv2-route";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Apigatewayv2Api(this, "example", {
      name: "example-websocket-api",
      protocolType: "WEBSOCKET",
      routeSelectionExpression: "$request.body.action",
    });
    const awsApigatewayv2RouteExample = new Apigatewayv2Route(
      this,
      "example_1",
      {
        apiId: example.id,
        routeKey: "$default",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApigatewayv2RouteExample.overrideLogicalId("example");
  }
}

```

### HTTP Proxy Integration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Apigatewayv2Api } from "./.gen/providers/aws/apigatewayv2-api";
import { Apigatewayv2Integration } from "./.gen/providers/aws/apigatewayv2-integration";
import { Apigatewayv2Route } from "./.gen/providers/aws/apigatewayv2-route";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Apigatewayv2Api(this, "example", {
      name: "example-http-api",
      protocolType: "HTTP",
    });
    const awsApigatewayv2IntegrationExample = new Apigatewayv2Integration(
      this,
      "example_1",
      {
        apiId: example.id,
        integrationMethod: "ANY",
        integrationType: "HTTP_PROXY",
        integrationUri: "https://example.com/{proxy}",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApigatewayv2IntegrationExample.overrideLogicalId("example");
    const awsApigatewayv2RouteExample = new Apigatewayv2Route(
      this,
      "example_2",
      {
        apiId: example.id,
        routeKey: "ANY /example/{proxy+}",
        target: "integrations/${" + awsApigatewayv2IntegrationExample.id + "}",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsApigatewayv2RouteExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `apiId` - (Required) API identifier.
* `routeKey` - (Required) Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
* `apiKeyRequired` - (Optional) Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
* `authorizationScopes` - (Optional) Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
* `authorizationType` - (Optional) Authorization type for the route.
For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
Defaults to `NONE`.
* `authorizerId` - (Optional) Identifier of the [`aws_apigatewayv2_authorizer`](apigatewayv2_authorizer.html) resource to be associated with this route.
* `modelSelectionExpression` - (Optional) The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
* `operationName` - (Optional) Operation name for the route. Must be between 1 and 64 characters in length.
* `requestModels` - (Optional) Request models for the route. Supported only for WebSocket APIs.
* `requestParameter` - (Optional) Request parameters for the route. Supported only for WebSocket APIs.
* `routeResponseSelectionExpression` - (Optional) The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
* `target` - (Optional) Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an [`aws_apigatewayv2_integration`](apigatewayv2_integration.html) resource.

The `requestParameter` object supports the following:

* `requestParameterKey` - (Required) Request parameter key. This is a [request data mapping parameter](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-data-mapping.html#websocket-mapping-request-parameters).
* `required` - (Required) Boolean whether or not the parameter is required.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Route identifier.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_apigatewayv2_route` using the API identifier and route identifier. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Apigatewayv2Route } from "./.gen/providers/aws/apigatewayv2-route";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Apigatewayv2Route.generateConfigForImport(
      this,
      "example",
      "aabbccddee/1122334"
    );
  }
}

```

Using `terraform import`, import `aws_apigatewayv2_route` using the API identifier and route identifier. For example:

```console
% terraform import aws_apigatewayv2_route.example aabbccddee/1122334
```

-> **Note:** The API Gateway managed route created as part of [_quick_create_](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-basic-concept.html#apigateway-definition-quick-create) cannot be imported.

<!-- cache-key: cdktf-0.20.8 input-b9d6c42d850f8d41e68e09883583bfd0059174ab6d5527af47ec51f177c33a41 -->