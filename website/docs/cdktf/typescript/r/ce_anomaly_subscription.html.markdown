---
subcategory: "CE (Cost Explorer)"
layout: "aws"
page_title: "AWS: aws_ce_anomaly_subscription"
description: |-
  Provides a CE Cost Anomaly Subscription
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ce_anomaly_subscription

Provides a CE Anomaly Subscription.

## Example Usage

### Basic Example

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalyMonitor } from "./.gen/providers/aws/ce-anomaly-monitor";
import { CeAnomalySubscription } from "./.gen/providers/aws/ce-anomaly-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new CeAnomalyMonitor(this, "test", {
      monitorDimension: "SERVICE",
      monitorType: "DIMENSIONAL",
      name: "AWSServiceMonitor",
    });
    const awsCeAnomalySubscriptionTest = new CeAnomalySubscription(
      this,
      "test_1",
      {
        frequency: "DAILY",
        monitorArnList: [test.arn],
        name: "DAILYSUBSCRIPTION",
        subscriber: [
          {
            address: "abc@example.com",
            type: "EMAIL",
          },
        ],
        thresholdExpression: {
          dimension: {
            key: "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
            matchOptions: ["GREATER_THAN_OR_EQUAL"],
            values: ["100"],
          },
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCeAnomalySubscriptionTest.overrideLogicalId("test");
  }
}

```

### Threshold Expression Example

#### Using a Percentage Threshold

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalySubscription } from "./.gen/providers/aws/ce-anomaly-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CeAnomalySubscription(this, "test", {
      frequency: "DAILY",
      monitorArnList: [Token.asString(awsCeAnomalyMonitorTest.arn)],
      name: "AWSServiceMonitor",
      subscriber: [
        {
          address: "abc@example.com",
          type: "EMAIL",
        },
      ],
      thresholdExpression: {
        dimension: {
          key: "ANOMALY_TOTAL_IMPACT_PERCENTAGE",
          matchOptions: ["GREATER_THAN_OR_EQUAL"],
          values: ["100"],
        },
      },
    });
  }
}

```

#### Using an `and` Expression

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalySubscription } from "./.gen/providers/aws/ce-anomaly-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CeAnomalySubscription(this, "test", {
      frequency: "DAILY",
      monitorArnList: [Token.asString(awsCeAnomalyMonitorTest.arn)],
      name: "AWSServiceMonitor",
      subscriber: [
        {
          address: "abc@example.com",
          type: "EMAIL",
        },
      ],
      thresholdExpression: {
        and: [
          {
            dimension: {
              key: "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
              matchOptions: ["GREATER_THAN_OR_EQUAL"],
              values: ["100"],
            },
          },
          {
            dimension: {
              key: "ANOMALY_TOTAL_IMPACT_PERCENTAGE",
              matchOptions: ["GREATER_THAN_OR_EQUAL"],
              values: ["50"],
            },
          },
        ],
      },
    });
  }
}

```

### SNS Example

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalyMonitor } from "./.gen/providers/aws/ce-anomaly-monitor";
import { CeAnomalySubscription } from "./.gen/providers/aws/ce-anomaly-subscription";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
import { SnsTopicPolicy } from "./.gen/providers/aws/sns-topic-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const anomalyMonitor = new CeAnomalyMonitor(this, "anomaly_monitor", {
      monitorDimension: "SERVICE",
      monitorType: "DIMENSIONAL",
      name: "AWSServiceMonitor",
    });
    const costAnomalyUpdates = new SnsTopic(this, "cost_anomaly_updates", {
      name: "CostAnomalyUpdates",
    });
    const snsTopicPolicy = new DataAwsIamPolicyDocument(
      this,
      "sns_topic_policy",
      {
        policyId: "__default_policy_ID",
        statement: [
          {
            actions: ["SNS:Publish"],
            effect: "Allow",
            principals: [
              {
                identifiers: ["costalerts.amazonaws.com"],
                type: "Service",
              },
            ],
            resources: [costAnomalyUpdates.arn],
            sid: "AWSAnomalyDetectionSNSPublishingPermissions",
          },
          {
            actions: [
              "SNS:Subscribe",
              "SNS:SetTopicAttributes",
              "SNS:RemovePermission",
              "SNS:Receive",
              "SNS:Publish",
              "SNS:ListSubscriptionsByTopic",
              "SNS:GetTopicAttributes",
              "SNS:DeleteTopic",
              "SNS:AddPermission",
            ],
            condition: [
              {
                test: "StringEquals",
                values: [accountId.stringValue],
                variable: "AWS:SourceOwner",
              },
            ],
            effect: "Allow",
            principals: [
              {
                identifiers: ["*"],
                type: "AWS",
              },
            ],
            resources: [costAnomalyUpdates.arn],
            sid: "__default_statement_ID",
          },
        ],
      }
    );
    const defaultVar = new SnsTopicPolicy(this, "default", {
      arn: costAnomalyUpdates.arn,
      policy: Token.asString(snsTopicPolicy.json),
    });
    new CeAnomalySubscription(this, "realtime_subscription", {
      dependsOn: [defaultVar],
      frequency: "IMMEDIATE",
      monitorArnList: [anomalyMonitor.arn],
      name: "RealtimeAnomalySubscription",
      subscriber: [
        {
          address: costAnomalyUpdates.arn,
          type: "SNS",
        },
      ],
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `accountId` - (Optional) The unique identifier for the AWS account in which the anomaly subscription ought to be created.
* `frequency` - (Required) The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.
* `monitorArnList` - (Required) A list of cost anomaly monitors.
* `name` - (Required) The name for the subscription.
* `subscriber` - (Required) A subscriber configuration. Multiple subscribers can be defined.
    * `type` - (Required) The type of subscription. Valid Values: `SNS` | `EMAIL`.
    * `address` - (Required) The address of the subscriber. If type is `SNS`, this will be the arn of the sns topic. If type is `EMAIL`, this will be the destination email address.
* `thresholdExpression` - (Optional) An Expression object used to specify the anomalies that you want to generate alerts for. See [Threshold Expression](#threshold-expression).
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Threshold Expression

* `and` - (Optional) Return results that match both [Dimension](#dimension) objects.
* `costCategory` - (Optional) Configuration block for the filter that's based on  values. See [Cost Category](#cost-category) below.
* `dimension` - (Optional) Configuration block for the specific [Dimension](#dimension) to use for.
* `not` - (Optional) Return results that match both [Dimension](#dimension) object.
* `or` - (Optional) Return results that match both [Dimension](#dimension) object.
* `tags` - (Optional) Configuration block for the specific Tag to use for. See [Tags](#tags) below.

### Cost Category

* `key` - (Optional) Unique name of the Cost Category.
* `matchOptions` - (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
* `values` - (Optional) Specific value of the Cost Category.

### Dimension

* `key` - (Optional) Unique name of the Cost Category.
* `matchOptions` - (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
* `values` - (Optional) Specific value of the Cost Category.

### Tags

* `key` - (Optional) Key for the tag.
* `matchOptions` - (Optional) Match options that you can use to filter your results. MatchOptions is only applicable for actions related to cost category. The default values for MatchOptions is `EQUALS` and `CASE_SENSITIVE`. Valid values are: `EQUALS`,  `ABSENT`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CASE_SENSITIVE`, `CASE_INSENSITIVE`.
* `values` - (Optional) Specific value of the Cost Category.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the anomaly subscription.
* `id` - Unique ID of the anomaly subscription. Same as `arn`.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_ce_anomaly_subscription` using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalySubscription } from "./.gen/providers/aws/ce-anomaly-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CeAnomalySubscription.generateConfigForImport(
      this,
      "example",
      "AnomalySubscriptionARN"
    );
  }
}

```

Using `terraform import`, import `aws_ce_anomaly_subscription` using the `id`. For example:

```console
% terraform import aws_ce_anomaly_subscription.example AnomalySubscriptionARN
```

<!-- cache-key: cdktf-0.20.1 input-2104ba4f8073cdd07506ce63a6f6f442efb8b20273edbd90f98ba5dd9cbef5cf -->