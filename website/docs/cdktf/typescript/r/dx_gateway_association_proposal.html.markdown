---
subcategory: "Direct Connect"
layout: "aws"
page_title: "AWS: aws_dx_gateway_association_proposal"
description: |-
  Manages a Direct Connect Gateway Association Proposal.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dx_gateway_association_proposal

Manages a Direct Connect Gateway Association Proposal, typically for enabling cross-account associations. For single account associations, see the [`aws_dx_gateway_association` resource](/docs/providers/aws/r/dx_gateway_association.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DxGatewayAssociationProposal } from "./.gen/providers/aws/dx-gateway-association-proposal";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DxGatewayAssociationProposal(this, "example", {
      associatedGatewayId: Token.asString(awsVpnGatewayExample.id),
      dxGatewayId: Token.asString(awsDxGatewayExample.id),
      dxGatewayOwnerAccountId: Token.asString(
        awsDxGatewayExample.ownerAccountId
      ),
    });
  }
}

```

A full example of how to create a VPN Gateway in one AWS account, create a Direct Connect Gateway in a second AWS account, and associate the VPN Gateway with the Direct Connect Gateway via the `aws_dx_gateway_association_proposal` and `aws_dx_gateway_association` resources can be found in [the `./examples/dx-gateway-cross-account-vgw-association` directory within the Github Repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/dx-gateway-cross-account-vgw-association).

## Argument Reference

This resource supports the following arguments:

* `associatedGatewayId` - (Required) The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
* `dxGatewayId` - (Required) Direct Connect Gateway identifier.
* `dxGatewayOwnerAccountId` - (Required) AWS Account identifier of the Direct Connect Gateway's owner.
* `allowedPrefixes` - (Optional) VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Direct Connect Gateway Association Proposal identifier.
* `associatedGatewayOwnerAccountId` - The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
* `associatedGatewayType` - The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Direct Connect Gateway Association Proposals using either a proposal ID or proposal ID, Direct Connect Gateway ID and associated gateway ID separated by `/`. For example:

Using a proposal ID:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DxGatewayAssociationProposal } from "./.gen/providers/aws/dx-gateway-association-proposal";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DxGatewayAssociationProposal.generateConfigForImport(
      this,
      "example",
      "ac90e981-b718-4364-872d-65478c84fafe"
    );
  }
}

```

Using a proposal ID, Direct Connect Gateway ID and associated gateway ID separated by `/`:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DxGatewayAssociationProposal } from "./.gen/providers/aws/dx-gateway-association-proposal";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DxGatewayAssociationProposal.generateConfigForImport(
      this,
      "example",
      "ac90e981-b718-4364-872d-65478c84fafe/abcd1234-dcba-5678-be23-cdef9876ab45/vgw-12345678"
    );
  }
}

```

**With `terraform import`**, import Direct Connect Gateway Association Proposals using either a proposal ID or proposal ID, Direct Connect Gateway ID and associated gateway ID separated by `/`. For example:

Using a proposal ID:

```console
% terraform import aws_dx_gateway_association_proposal.example ac90e981-b718-4364-872d-65478c84fafe
```

Using a proposal ID, Direct Connect Gateway ID and associated gateway ID separated by `/`:

```console
% terraform import aws_dx_gateway_association_proposal.example ac90e981-b718-4364-872d-65478c84fafe/abcd1234-dcba-5678-be23-cdef9876ab45/vgw-12345678
```

The latter case is useful when a previous proposal has been accepted and deleted by AWS.
The `aws_dx_gateway_association_proposal` resource will then represent a pseudo-proposal for the same Direct Connect Gateway and associated gateway. If no previous proposal is available, use a tool like [`uuidgen`](http://manpages.ubuntu.com/manpages/bionic/man1/uuidgen.1.html) to generate a new random pseudo-proposal ID.

<!-- cache-key: cdktf-0.20.8 input-4c6dba02a31331ff74f6b982064aff401065a96d07736b20f32eb5d034a7822f -->