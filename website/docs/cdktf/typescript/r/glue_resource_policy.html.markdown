---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_resource_policy"
description: |-
  Provides a resource to configure the aws glue resource policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glue_resource_policy

Provides a Glue resource policy. Only one can exist per region.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { DataAwsPartition } from "./.gen/providers/aws/data-aws-partition";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { GlueResourcePolicy } from "./.gen/providers/aws/glue-resource-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new DataAwsPartition(this, "current_1", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_2", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    const glueExamplePolicy = new DataAwsIamPolicyDocument(
      this,
      "glue-example-policy",
      {
        statement: [
          {
            actions: ["glue:CreateTable"],
            principals: [
              {
                identifiers: ["*"],
                type: "AWS",
              },
            ],
            resources: [
              "arn:${" +
                dataAwsPartitionCurrent.partition +
                "}:glue:${" +
                dataAwsRegionCurrent.name +
                "}:${" +
                current.accountId +
                "}:*",
            ],
          },
        ],
      }
    );
    new GlueResourcePolicy(this, "example", {
      policy: Token.asString(glueExamplePolicy.json),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `policy` â€“ (Required) The policy to be applied to the aws glue data catalog.
* `enableHybrid` - (Optional) Indicates that you are using both methods to grant cross-account. Valid values are `TRUE` and `FALSE`. Note the terraform will not perform drift detetction on this field as its not return on read.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue Resource Policy using the account ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueResourcePolicy } from "./.gen/providers/aws/glue-resource-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GlueResourcePolicy.generateConfigForImport(this, "test", "12356789012");
  }
}

```

Using `terraform import`, import Glue Resource Policy using the account ID. For example:

```console
% terraform import aws_glue_resource_policy.Test 12356789012
```

<!-- cache-key: cdktf-0.20.8 input-505ce1c4e38c338e6ee96c4f345643e93eb421593db3b74a6669f3f253de8617 -->