---
subcategory: "Redshift Data"
layout: "aws"
page_title: "AWS: aws_redshiftdata_statement"
description: |-
  Provides a Redshift Data Statement execution resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshiftdata_statement

Executes a Redshift Data Statement.

## Example Usage

### cluster_identifier

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftdataStatement } from "./.gen/providers/aws/redshiftdata-statement";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftdataStatement(this, "example", {
      clusterIdentifier: Token.asString(
        awsRedshiftClusterExample.clusterIdentifier
      ),
      database: Token.asString(awsRedshiftClusterExample.databaseName),
      dbUser: Token.asString(awsRedshiftClusterExample.masterUsername),
      sql: "CREATE GROUP group_name;",
    });
  }
}

```

### workgroup_name

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftdataStatement } from "./.gen/providers/aws/redshiftdata-statement";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftdataStatement(this, "example", {
      database: "dev",
      sql: "CREATE GROUP group_name;",
      workgroupName: Token.asString(
        awsRedshiftserverlessWorkgroupExample.workgroupName
      ),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `database` - (Required) The name of the database.
* `sql` - (Required) The SQL statement text to run.

The following arguments are optional:

* `clusterIdentifier` - (Optional) The cluster identifier. This parameter is required when connecting to a cluster and authenticating using either Secrets Manager or temporary credentials.
* `dbUser` - (Optional) The database user name.
* `secretArn` - (Optional) The name or ARN of the secret that enables access to the database.
* `statementName` - (Optional) The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
* `withEvent` - (Optional) A value that indicates whether to send an event to the Amazon EventBridge event bus after the SQL statement runs.
* `workgroupName` - (Optional) The serverless workgroup name. This parameter is required when connecting to a serverless workgroup and authenticating using either Secrets Manager or temporary credentials.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Redshift Data Statement ID.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Data Statements using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftdataStatement } from "./.gen/providers/aws/redshiftdata-statement";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftdataStatement.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import Redshift Data Statements using the `id`. For example:

```console
% terraform import aws_redshiftdata_statement.example example
```

<!-- cache-key: cdktf-0.20.8 input-890483d136320a7936958ee447618d785135e348982c003fa40f68a3e28cefbc -->