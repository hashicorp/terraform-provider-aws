---
subcategory: "EC2 (Elastic Compute Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_serial_console_access"
description: |-
  Manages whether serial console access is enabled for your AWS account in the current AWS region.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_serial_console_access

Provides a resource to manage whether serial console access is enabled for your AWS account in the current AWS region.

~> **NOTE:** Removing this Terraform resource disables serial console access.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2SerialConsoleAccess } from "./.gen/providers/aws/ec2-serial-console-access";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Ec2SerialConsoleAccess(this, "example", {
      enabled: true,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `enabled` - (Optional) Whether or not serial console access is enabled. Valid values are `true` or `false`. Defaults to `true`.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import serial console access state. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2SerialConsoleAccess } from "./.gen/providers/aws/ec2-serial-console-access";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2SerialConsoleAccess.generateConfigForImport(this, "example", "default");
  }
}

```

Using `terraform import`, import serial console access state. For example:

```console
% terraform import aws_ec2_serial_console_access.example default
```

<!-- cache-key: cdktf-0.20.8 input-a8751aa6eb0a3b96c3378b69be9c857d11be1b4723fc3142c82967475affbbbc -->