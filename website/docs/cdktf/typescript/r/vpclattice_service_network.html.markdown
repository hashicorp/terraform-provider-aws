---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_service_network"
description: |-
  Terraform resource for managing an AWS VPC Lattice Service Network.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_service_network

Terraform resource for managing an AWS VPC Lattice Service Network.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeServiceNetwork } from "./.gen/providers/aws/vpclattice-service-network";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpclatticeServiceNetwork(this, "example", {
      authType: "AWS_IAM",
      name: "example",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the service network

The following arguments are optional:

* `authType` - (Optional) Type of IAM policy. Either `NONE` or `AWS_IAM`.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Service Network.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Service Network using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeServiceNetwork } from "./.gen/providers/aws/vpclattice-service-network";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpclatticeServiceNetwork.generateConfigForImport(
      this,
      "example",
      "sn-0158f91c1e3358dba"
    );
  }
}

```

Using `terraform import`, import VPC Lattice Service Network using the `id`. For example:

```console
% terraform import aws_vpclattice_service_network.example sn-0158f91c1e3358dba
```

<!-- cache-key: cdktf-0.20.8 input-bd399060a3ff40174d174d00151279d434802a5189dee061f444da739500f832 -->