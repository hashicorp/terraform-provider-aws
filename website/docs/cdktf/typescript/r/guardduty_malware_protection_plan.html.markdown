---
subcategory: "GuardDuty"
layout: "aws"
page_title: "AWS: aws_guardduty_malware_protection_plan"
description: |-
  Provides a resource to manage a GuardDuty Malware Protection Plan
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_guardduty_malware_protection_plan

Provides a resource to manage a GuardDuty malware protection plan.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GuarddutyMalwareProtectionPlan } from "./.gen/providers/aws/guardduty-malware-protection-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GuarddutyMalwareProtectionPlan(this, "example", {
      actions: [
        {
          tagging: [
            {
              status: "ENABLED",
            },
          ],
        },
      ],
      protectedResource: [
        {
          s3Bucket: [
            {
              bucketName: Token.asString(awsS3BucketExample.id),
              objectPrefixes: ["example1", "example2"],
            },
          ],
        },
      ],
      role: Token.asString(awsIamRoleExample.arn),
      tags: {
        Name: "example",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `actions` - (Optional) Information about whether the tags will be added to the S3 object after scanning. See [`actions`](#actions-argument-reference) below.
* `protectedResource` - (Required) Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See [`protectedResource`](#protected_resource-argument-reference) below.
* `role` - (Required) The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `actions` argument reference

* `tagging` - (Required) Indicates whether the scanned S3 object will have tags about the scan result. See [`tagging`](#tagging-argument-reference) below.

#### `tagging` argument reference

* `status` - (Required) Indicates whether or not the tags will added. Valid values are `DISABLED` and `ENABLED`. Defaults to `DISABLED`

### `protectedResource` argument reference

* `s3Bucket` - (Required) Information about the protected S3 bucket resource. See [`s3Bucket`](#s3_bucket-argument-reference) below.

#### `s3Bucket` argument reference

* `bucketName` - (Required, Forces new resource) Name of the S3 bucket.
* `objectPrefixes` - (Optional) The list of object prefixes that specify the S3 objects that will be scanned.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the GuardDuty malware protection plan
* `createdAt` - The timestamp when the Malware Protection plan resource was created.
* `id` - The ID of the GuardDuty malware protection plan
* `status` - The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GuardDuty malware protection plans using their IDs. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GuarddutyMalwareProtectionPlan } from "./.gen/providers/aws/guardduty-malware-protection-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GuarddutyMalwareProtectionPlan.generateConfigForImport(
      this,
      "example",
      "1234567890abcdef0123"
    );
  }
}

```

Using `terraform import`, import GuardDuty malware protection plans using their IDs. For example:

```console
% terraform import aws_guardduty_malware_protection_plan.example 1234567890abcdef0123
```

<!-- cache-key: cdktf-0.20.1 input-cad105f0c059f34a9ba8c4931447898fcd71c2f636f34ed6a45684dc24498911 -->