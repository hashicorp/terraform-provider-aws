---
subcategory: "OpenSearch Serverless"
layout: "aws"
page_title: "AWS: aws_opensearchserverless_collection"
description: |-
  Terraform resource for managing an AWS OpenSearch Collection.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearchserverless_collection

Terraform resource for managing an AWS OpenSearch Serverless Collection.

~> **NOTE:** An `aws_opensearchserverless_collection` cannot be created without having an applicable [encryption security policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/opensearchserverless_security_policy). Use the [`dependsOn`](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) meta-argument to define this dependency.

~> **NOTE:** An `aws_opensearchserverless_collection` is not accessible without configuring an applicable [network security policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/opensearchserverless_security_policy). Data cannot be accessed without configuring an applicable [data access policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/opensearchserverless_access_policy).

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchserverlessCollection } from "./.gen/providers/aws/opensearchserverless-collection";
import { OpensearchserverlessSecurityPolicy } from "./.gen/providers/aws/opensearchserverless-security-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new OpensearchserverlessSecurityPolicy(this, "example", {
      name: "example",
      policy: Token.asString(
        Fn.jsonencode({
          AWSOwnedKey: true,
          Rules: [
            {
              Resource: ["collection/example"],
              ResourceType: "collection",
            },
          ],
        })
      ),
      type: "encryption",
    });
    const awsOpensearchserverlessCollectionExample =
      new OpensearchserverlessCollection(this, "example_1", {
        dependsOn: [example],
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsOpensearchserverlessCollectionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the collection.

The following arguments are optional:

* `description` - (Optional) Description of the collection.
* `standbyReplicas` - (Optional) Indicates whether standby replicas should be used for a collection. One of `ENABLED` or `DISABLED`. Defaults to `ENABLED`.
* `tags` - (Optional) A map of tags to assign to the collection. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `type` - (Optional) Type of collection. One of `SEARCH`, `TIMESERIES`, or `VECTORSEARCH`. Defaults to `TIMESERIES`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the collection.
* `collectionEndpoint` - Collection-specific endpoint used to submit index, search, and data upload requests to an OpenSearch Serverless collection.
* `dashboardEndpoint` - Collection-specific endpoint used to access OpenSearch Dashboards.
* `kmsKeyArn` - The ARN of the Amazon Web Services KMS key used to encrypt the collection.
* `id` - Unique identifier for the collection.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `20m`)
- `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearchServerless Collection using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchserverlessCollection } from "./.gen/providers/aws/opensearchserverless-collection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OpensearchserverlessCollection.generateConfigForImport(
      this,
      "example",
      "example"
    );
  }
}

```

Using `terraform import`, import OpenSearchServerless Collection using the `id`. For example:

```console
% terraform import aws_opensearchserverless_collection.example example
```

<!-- cache-key: cdktf-0.20.8 input-bbd8832845290d485daf33e5853dfc639ffbd2597086ab9e0dd010a45fc52c34 -->