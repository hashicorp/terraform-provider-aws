---
subcategory: "DataSync"
layout: "aws"
page_title: "AWS: aws_datasync_location_s3"
description: |-
  Manages an AWS DataSync S3 Location
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_datasync_location_s3

Manages an S3 Location within AWS DataSync.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DatasyncLocationS3 } from "./.gen/providers/aws/datasync-location-s3";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DatasyncLocationS3(this, "example", {
      s3BucketArn: Token.asString(awsS3BucketExample.arn),
      s3Config: {
        bucketAccessRoleArn: Token.asString(awsIamRoleExample.arn),
      },
      subdirectory: "/example/prefix",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `agentArns` - (Optional) A list of DataSync Agent ARNs with which this location will be associated.
* `s3BucketArn` - (Required) Amazon Resource Name (ARN) of the S3 Bucket.
* `s3Config` - (Required) Configuration block containing information for connecting to S3.
* `s3StorageClass` - (Optional) The Amazon S3 storage class that you want to store your files in when this location is used as a task destination. [Valid values](https://docs.aws.amazon.com/datasync/latest/userguide/create-s3-location.html#using-storage-classes)  
* `subdirectory` - (Required) Prefix to perform actions as source or destination.
* `tags` - (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### s3_config Argument Reference

The `s3Config` configuration block supports the following arguments:

* `bucketAccessRoleArn` - (Required) ARN of the IAM Role used to connect to the S3 Bucket.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Amazon Resource Name (ARN) of the DataSync Location.
* `arn` - Amazon Resource Name (ARN) of the DataSync Location.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_datasync_location_s3` using the DataSync Task Amazon Resource Name (ARN). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DatasyncLocationS3 } from "./.gen/providers/aws/datasync-location-s3";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DatasyncLocationS3.generateConfigForImport(
      this,
      "example",
      "arn:aws:datasync:us-east-1:123456789012:location/loc-12345678901234567"
    );
  }
}

```

Using `terraform import`, import `aws_datasync_location_s3` using the DataSync Task Amazon Resource Name (ARN). For example:

```console
% terraform import aws_datasync_location_s3.example arn:aws:datasync:us-east-1:123456789012:location/loc-12345678901234567
```

<!-- cache-key: cdktf-0.20.8 input-667c050457c227762c7f8b9400f09ce49e704686c477993bb241f2426bbb2497 -->