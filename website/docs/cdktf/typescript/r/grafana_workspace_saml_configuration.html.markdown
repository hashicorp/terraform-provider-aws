---
subcategory: "Managed Grafana"
layout: "aws"
page_title: "AWS: aws_grafana_workspace_saml_configuration"
description: |-
  Provides an Amazon Managed Grafana workspace SAML configuration resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_grafana_workspace_saml_configuration

Provides an Amazon Managed Grafana workspace SAML configuration resource.

## Example Usage

### Basic configuration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GrafanaWorkspace } from "./.gen/providers/aws/grafana-workspace";
import { GrafanaWorkspaceSamlConfiguration } from "./.gen/providers/aws/grafana-workspace-saml-configuration";
import { IamRole } from "./.gen/providers/aws/iam-role";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const assume = new IamRole(this, "assume", {
      assumeRolePolicy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: "sts:AssumeRole",
              Effect: "Allow",
              Principal: {
                Service: "grafana.amazonaws.com",
              },
              Sid: "",
            },
          ],
          Version: "2012-10-17",
        })
      ),
      name: "grafana-assume",
    });
    const example = new GrafanaWorkspace(this, "example", {
      accountAccessType: "CURRENT_ACCOUNT",
      authenticationProviders: ["SAML"],
      permissionType: "SERVICE_MANAGED",
      roleArn: assume.arn,
    });
    const awsGrafanaWorkspaceSamlConfigurationExample =
      new GrafanaWorkspaceSamlConfiguration(this, "example_2", {
        editorRoleValues: ["editor"],
        idpMetadataUrl: "https://my_idp_metadata.url",
        workspaceId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsGrafanaWorkspaceSamlConfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `editorRoleValues` - (Required) The editor role values.
* `workspaceId` - (Required) The workspace id.

The following arguments are optional:

* `adminRoleValues` - (Optional) The admin role values.
* `allowedOrganizations` - (Optional) The allowed organizations.
* `emailAssertion` - (Optional) The email assertion.
* `groupsAssertion` - (Optional) The groups assertion.
* `idpMetadataUrl` - (Optional) The IDP Metadata URL. Note that either `idpMetadataUrl` or `idpMetadataXml` (but not both) must be specified.
* `idpMetadataXml` - (Optional) The IDP Metadata XML. Note that either `idpMetadataUrl` or `idpMetadataXml` (but not both) must be specified.
* `loginAssertion` - (Optional) The login assertion.
* `loginValidityDuration` - (Optional) The login validity duration.
* `nameAssertion` - (Optional) The name assertion.
* `orgAssertion` - (Optional) The org assertion.
* `roleAssertion` - (Optional) The role assertion.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `status` - The status of the SAML configuration.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Grafana Workspace SAML configuration using the workspace's `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GrafanaWorkspaceSamlConfiguration } from "./.gen/providers/aws/grafana-workspace-saml-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GrafanaWorkspaceSamlConfiguration.generateConfigForImport(
      this,
      "example",
      "g-2054c75a02"
    );
  }
}

```

Using `terraform import`, import Grafana Workspace SAML configuration using the workspace's `id`. For example:

```console
% terraform import aws_grafana_workspace_saml_configuration.example g-2054c75a02
```

<!-- cache-key: cdktf-0.20.8 input-8e2fc0417f74c403628b82a9ce17055a1086f9bba22d87c4e859c5d48f99d2cb -->