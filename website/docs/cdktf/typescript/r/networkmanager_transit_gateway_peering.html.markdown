---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_transit_gateway_peering"
description: |-
  Manages a Network Manager transit gateway peering connection.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_transit_gateway_peering

Manages a Network Manager transit gateway peering connection. Creates a peering connection between an AWS Cloud WAN core network and an AWS Transit Gateway.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerTransitGatewayPeering } from "./.gen/providers/aws/networkmanager-transit-gateway-peering";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new NetworkmanagerTransitGatewayPeering(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      transitGatewayArn: Token.asString(awsEc2TransitGatewayExample.arn),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `coreNetworkId` - (Required) ID of a core network.
* `transitGatewayArn` - (Required) ARN of the transit gateway for the peering request.

The following arguments are optional:

* `tags` - (Optional) Key-value tags for the peering. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Peering ARN.
* `coreNetworkArn` - ARN of the core network.
* `edgeLocation` - Edge location for the peer.
* `id` - Peering ID.
* `ownerAccountId` - ID of the account owner.
* `peeringType` - Type of peering. This will be `TRANSIT_GATEWAY`.
* `resourceArn` - Resource ARN of the peer.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `transitGatewayPeeringAttachmentId` - ID of the transit gateway peering attachment.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_transit_gateway_peering` using the peering ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerTransitGatewayPeering } from "./.gen/providers/aws/networkmanager-transit-gateway-peering";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkmanagerTransitGatewayPeering.generateConfigForImport(
      this,
      "example",
      "peering-444555aaabbb11223"
    );
  }
}

```

Using `terraform import`, import `aws_networkmanager_transit_gateway_peering` using the peering ID. For example:

```console
% terraform import aws_networkmanager_transit_gateway_peering.example peering-444555aaabbb11223
```

<!-- cache-key: cdktf-0.20.8 input-5d328a617581b03e7038485d8d90fa9f8d0a7017dea14dd79e2a5b154f7ebb84 -->