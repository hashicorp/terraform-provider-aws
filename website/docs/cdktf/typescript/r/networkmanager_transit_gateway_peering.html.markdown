---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_transit_gateway_peering"
description: |-
  Creates a peering connection between an AWS Cloud WAN core network and an AWS Transit Gateway.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_transit_gateway_peering

Creates a peering connection between an AWS Cloud WAN core network and an AWS Transit Gateway.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerTransitGatewayPeering } from "./.gen/providers/aws/networkmanager-transit-gateway-peering";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new NetworkmanagerTransitGatewayPeering(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      transitGatewayArn: Token.asString(awsEc2TransitGatewayExample.arn),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `coreNetworkId` - (Required) The ID of a core network.
* `tags` - (Optional) Key-value tags for the peering. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `transitGatewayArn` - (Required) The ARN of the transit gateway for the peering request.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Peering Amazon Resource Name (ARN).
* `coreNetworkArn` - The ARN of the core network.
* `edgeLocation` - The edge location for the peer.
* `id` - Peering ID.
* `ownerAccountId` - The ID of the account owner.
* `peeringType` - The type of peering. This will be `TRANSIT_GATEWAY`.
* `resourceArn` - The resource ARN of the peer.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `transitGatewayPeeringAttachmentId` - The ID of the transit gateway peering attachment.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_transit_gateway_peering` using the peering ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerTransitGatewayPeering } from "./.gen/providers/aws/networkmanager-transit-gateway-peering";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkmanagerTransitGatewayPeering.generateConfigForImport(
      this,
      "example",
      "peering-444555aaabbb11223"
    );
  }
}

```

Using `terraform import`, import `aws_networkmanager_transit_gateway_peering` using the peering ID. For example:

```console
% terraform import aws_networkmanager_transit_gateway_peering.example peering-444555aaabbb11223
```

<!-- cache-key: cdktf-0.20.8 input-850761bfb6bc5f1c587cc31180329d6f710f011b3f0be9c3b8ba3055502f296f -->