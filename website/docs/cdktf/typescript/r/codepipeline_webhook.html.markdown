---
subcategory: "CodePipeline"
layout: "aws"
page_title: "AWS: aws_codepipeline_webhook"
description: |-
  Provides a CodePipeline Webhook
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codepipeline_webhook

Provides a CodePipeline Webhook.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Codepipeline } from "./.gen/providers/aws/codepipeline";
import { CodepipelineWebhook } from "./.gen/providers/aws/codepipeline-webhook";
import { RepositoryWebhook } from "./.gen/providers/github/repository-webhook";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: github.
    For a more precise conversion please use the --provider flag in convert.*/
    const webhookSecret = "super-secret";
    const bar = new Codepipeline(this, "bar", {
      artifactStore: [
        {
          encryptionKey: {
            id: Token.asString(s3Kmskey.arn),
            type: "KMS",
          },
          location: Token.asString(awsS3BucketBar.bucket),
          type: "S3",
        },
      ],
      name: "tf-test-pipeline",
      roleArn: Token.asString(awsIamRoleBar.arn),
      stage: [
        {
          action: [
            {
              category: "Source",
              configuration: {
                Branch: "master",
                Owner: "my-organization",
                Repo: "test",
              },
              name: "Source",
              outputArtifacts: ["test"],
              owner: "ThirdParty",
              provider: "GitHub",
              version: "1",
            },
          ],
          name: "Source",
        },
        {
          action: [
            {
              category: "Build",
              configuration: {
                ProjectName: "test",
              },
              inputArtifacts: ["test"],
              name: "Build",
              owner: "AWS",
              provider: "CodeBuild",
              version: "1",
            },
          ],
          name: "Build",
        },
      ],
    });
    const awsCodepipelineWebhookBar = new CodepipelineWebhook(this, "bar_1", {
      authentication: "GITHUB_HMAC",
      authenticationConfiguration: {
        secretToken: webhookSecret,
      },
      filter: [
        {
          jsonPath: "$.ref",
          matchEquals: "refs/heads/{Branch}",
        },
      ],
      name: "test-webhook-github-bar",
      targetAction: "Source",
      targetPipeline: bar.name,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCodepipelineWebhookBar.overrideLogicalId("bar");
    const githubRepositoryWebhookBar = new RepositoryWebhook(this, "bar_2", {
      configuration: [
        {
          content_type: "json",
          insecure_ssl: true,
          secret: webhookSecret,
          url: awsCodepipelineWebhookBar.url,
        },
      ],
      events: ["push"],
      name: "web",
      repository: repo.name,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    githubRepositoryWebhookBar.overrideLogicalId("bar");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the webhook.
* `authentication` - (Required) The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.
* `authenticationConfiguration` - (Optional) An `auth` block. Required for `IP` and `GITHUB_HMAC`. Auth blocks are documented below.
* `filter` (Required) One or more `filter` blocks. Filter blocks are documented below.
* `targetAction` - (Required) The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.
* `targetPipeline` - (Required) The name of the pipeline.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

An `authenticationConfiguration` block supports the following arguments:

* `secretToken` - (Optional) The shared secret for the GitHub repository webhook. Set this as `secret` in your `github_repository_webhook`'s `configuration` block. Required for `GITHUB_HMAC`.
* `allowedIpRange` - (Optional) A valid CIDR block for `IP` filtering. Required for `IP`.

A `filter` block supports the following arguments:

* `jsonPath` - (Required) The [JSON path](https://github.com/json-path/JsonPath) to filter on.
* `matchEquals` - (Required) The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The CodePipeline webhook's ARN.
* `id` - The CodePipeline webhook's ARN.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `url` - The CodePipeline webhook's URL. POST events to this endpoint to trigger the target.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodePipeline Webhooks using their ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodepipelineWebhook } from "./.gen/providers/aws/codepipeline-webhook";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CodepipelineWebhook.generateConfigForImport(
      this,
      "example",
      "arn:aws:codepipeline:us-west-2:123456789012:webhook:example"
    );
  }
}

```

Using `terraform import`, import CodePipeline Webhooks using their ARN. For example:

```console
% terraform import aws_codepipeline_webhook.example arn:aws:codepipeline:us-west-2:123456789012:webhook:example
```

<!-- cache-key: cdktf-0.20.8 input-12eddb2b0e3d8862aa33cfaab94c4516ce51690b35cba10b34567326ccde28ed -->