---
subcategory: "SSM (Systems Manager)"
layout: "aws"
page_title: "AWS: aws_ssm_resource_data_sync"
description: |-
  Provides a SSM resource data sync.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssm_resource_data_sync

Provides a SSM resource data sync.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketPolicy } from "./.gen/providers/aws/s3-bucket-policy";
import { SsmResourceDataSync } from "./.gen/providers/aws/ssm-resource-data-sync";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const hoge = new S3Bucket(this, "hoge", {
      bucket: "tf-test-bucket-1234",
    });
    new SsmResourceDataSync(this, "foo", {
      name: "foo",
      s3Destination: {
        bucketName: hoge.bucket,
        region: hoge.region,
      },
    });
    const dataAwsIamPolicyDocumentHoge = new DataAwsIamPolicyDocument(
      this,
      "hoge_2",
      {
        statement: [
          {
            actions: ["s3:GetBucketAcl"],
            effect: "Allow",
            principals: [
              {
                identifiers: ["ssm.amazonaws.com"],
                type: "Service",
              },
            ],
            resources: ["arn:aws:s3:::tf-test-bucket-1234"],
            sid: "SSMBucketPermissionsCheck",
          },
          {
            actions: ["s3:PutObject"],
            condition: [
              {
                test: "StringEquals",
                values: ["bucket-owner-full-control"],
                variable: "s3:x-amz-acl",
              },
            ],
            effect: "Allow",
            principals: [
              {
                identifiers: ["ssm.amazonaws.com"],
                type: "Service",
              },
            ],
            resources: ["arn:aws:s3:::tf-test-bucket-1234/*"],
            sid: "SSMBucketDelivery",
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsIamPolicyDocumentHoge.overrideLogicalId("hoge");
    const awsS3BucketPolicyHoge = new S3BucketPolicy(this, "hoge_3", {
      bucket: hoge.id,
      policy: Token.asString(dataAwsIamPolicyDocumentHoge.json),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketPolicyHoge.overrideLogicalId("hoge");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name for the configuration.
* `s3Destination` - (Required) Amazon S3 configuration details for the sync.

## s3_destination

`s3Destination` supports the following:

* `bucketName` - (Required) Name of S3 bucket where the aggregated data is stored.
* `region` - (Required) Region with the bucket targeted by the Resource Data Sync.
* `kmsKeyArn` - (Optional) ARN of an encryption key for a destination in Amazon S3.
* `prefix` - (Optional) Prefix for the bucket.
* `syncFormat` - (Optional) A supported sync format. Only JsonSerDe is currently supported. Defaults to JsonSerDe.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSM resource data sync using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmResourceDataSync } from "./.gen/providers/aws/ssm-resource-data-sync";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsmResourceDataSync.generateConfigForImport(
      this,
      "example",
      "example-name"
    );
  }
}

```

Using `terraform import`, import SSM resource data sync using the `name`. For example:

```console
% terraform import aws_ssm_resource_data_sync.example example-name
```

<!-- cache-key: cdktf-0.20.8 input-1ca6cbc4ead65662883453fcaa95a776d79c46af9c730c2c622c39264e48c38b -->