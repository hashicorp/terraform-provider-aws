---
subcategory: "Route 53 Profiles"
layout: "aws"
page_title: "AWS: aws_route53profiles_profile"
description: |-
  Terraform resource for managing an AWS Route 53 Profile.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_route53profiles_profile

Terraform resource for managing an AWS Route 53 Profile.

## Example Usage

### Empty Profile

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route53ProfilesProfile } from "./.gen/providers/aws/route53-profiles-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Route53ProfilesProfile(this, "example", {
      name: "example",
      tags: {
        Environment: "dev",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name of the Profile.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Profile.
* `id` - ID of the Profile.
* `name` - Name of the Profile.
* `shareStatus` - Share status of the Profile.
* `status` - Status of the Profile.
* `statusMessage` - Status message of the Profile.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `read` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Route 53 Profiles Profile using the `example_id_arg`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route53ProfilesProfile } from "./.gen/providers/aws/route53-profiles-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Route53ProfilesProfile.generateConfigForImport(
      this,
      "example",
      "rp-12345678"
    );
  }
}

```

Using `terraform import`, import Route 53 Profiles Profile using the `example`. For example:

```console
% terraform import aws_route53profiles_profile.example rp-12345678
```

<!-- cache-key: cdktf-0.20.8 input-8838144139a6c5b486c44af13268b924b7c793fc903587bb92d8be4213ffa27b -->