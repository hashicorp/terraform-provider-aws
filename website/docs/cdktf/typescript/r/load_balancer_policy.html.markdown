---
subcategory: "ELB Classic"
layout: "aws"
page_title: "AWS: aws_load_balancer_policy"
description: |-
  Provides a load balancer policy, which can be attached to an ELB listener or backend server.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_load_balancer_policy

Provides a load balancer policy, which can be attached to an ELB listener or backend server.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Elb } from "./.gen/providers/aws/elb";
import { LoadBalancerBackendServerPolicy } from "./.gen/providers/aws/load-balancer-backend-server-policy";
import { LoadBalancerListenerPolicy } from "./.gen/providers/aws/load-balancer-listener-policy";
import { LoadBalancerPolicy } from "./.gen/providers/aws/load-balancer-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const wuTang = new Elb(this, "wu-tang", {
      availabilityZones: ["us-east-1a"],
      listener: [
        {
          instancePort: 443,
          instanceProtocol: "http",
          lbPort: 443,
          lbProtocol: "https",
          sslCertificateId:
            "arn:aws:iam::000000000000:server-certificate/wu-tang.net",
        },
      ],
      name: "wu-tang",
      tags: {
        Name: "wu-tang",
      },
    });
    new LoadBalancerPolicy(this, "wu-tang-ca-pubkey-policy", {
      loadBalancerName: wuTang.name,
      policyAttribute: [
        {
          name: "PublicKey",
          value: Token.asString(Fn.file("wu-tang-pubkey")),
        },
      ],
      policyName: "wu-tang-ca-pubkey-policy",
      policyTypeName: "PublicKeyPolicyType",
    });
    const wuTangRootCaBackendAuthPolicy = new LoadBalancerPolicy(
      this,
      "wu-tang-root-ca-backend-auth-policy",
      {
        loadBalancerName: wuTang.name,
        policyAttribute: [
          {
            name: "PublicKeyPolicyName",
            value: wuTangRootCaPubkeyPolicy.policyName,
          },
        ],
        policyName: "wu-tang-root-ca-backend-auth-policy",
        policyTypeName: "BackendServerAuthenticationPolicyType",
      }
    );
    const wuTangSsl = new LoadBalancerPolicy(this, "wu-tang-ssl", {
      loadBalancerName: wuTang.name,
      policyAttribute: [
        {
          name: "ECDHE-ECDSA-AES128-GCM-SHA256",
          value: "true",
        },
        {
          name: "Protocol-TLSv1.2",
          value: "true",
        },
      ],
      policyName: "wu-tang-ssl",
      policyTypeName: "SSLNegotiationPolicyType",
    });
    new LoadBalancerPolicy(this, "wu-tang-ssl-tls-1-1", {
      loadBalancerName: wuTang.name,
      policyAttribute: [
        {
          name: "Reference-Security-Policy",
          value: "ELBSecurityPolicy-TLS-1-1-2017-01",
        },
      ],
      policyName: "wu-tang-ssl",
      policyTypeName: "SSLNegotiationPolicyType",
    });
    new LoadBalancerBackendServerPolicy(
      this,
      "wu-tang-backend-auth-policies-443",
      {
        instancePort: 443,
        loadBalancerName: wuTang.name,
        policyNames: [wuTangRootCaBackendAuthPolicy.policyName],
      }
    );
    new LoadBalancerListenerPolicy(this, "wu-tang-listener-policies-443", {
      loadBalancerName: wuTang.name,
      loadBalancerPort: 443,
      policyNames: [wuTangSsl.policyName],
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `loadBalancerName` - (Required) The load balancer on which the policy is defined.
* `policyName` - (Required) The name of the load balancer policy.
* `policyTypeName` - (Required) The policy type.
* `policyAttribute` - (Optional) Policy attribute to apply to the policy.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the policy.
* `policyName` - The name of the stickiness policy.
* `policyTypeName` - The policy type of the policy.
* `loadBalancerName` - The load balancer on which the policy is defined.

<!-- cache-key: cdktf-0.20.8 input-1301aff03d8fcf31fd6731593f13d990b69c6ade1c5268a81e1297356d9df74a -->