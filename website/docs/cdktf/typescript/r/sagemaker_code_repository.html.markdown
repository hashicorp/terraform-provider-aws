---
subcategory: "SageMaker"
layout: "aws"
page_title: "AWS: aws_sagemaker_code_repository"
description: |-
  Provides a SageMaker Code Repository resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_code_repository

Provides a SageMaker Code Repository resource.

## Example Usage

### Basic usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerCodeRepository } from "./.gen/providers/aws/sagemaker-code-repository";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerCodeRepository(this, "example", {
      codeRepositoryName: "example",
      gitConfig: {
        repositoryUrl:
          "https://github.com/hashicorp/terraform-provider-aws.git",
      },
    });
  }
}

```

### Example with Secret

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerCodeRepository } from "./.gen/providers/aws/sagemaker-code-repository";
import { SecretsmanagerSecret } from "./.gen/providers/aws/secretsmanager-secret";
import { SecretsmanagerSecretVersion } from "./.gen/providers/aws/secretsmanager-secret-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SecretsmanagerSecret(this, "example", {
      name: "example",
    });
    const awsSecretsmanagerSecretVersionExample =
      new SecretsmanagerSecretVersion(this, "example_1", {
        secretId: example.id,
        secretString: Token.asString(
          Fn.jsonencode({
            password: "example",
            username: "example",
          })
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecretsmanagerSecretVersionExample.overrideLogicalId("example");
    const awsSagemakerCodeRepositoryExample = new SagemakerCodeRepository(
      this,
      "example_2",
      {
        codeRepositoryName: "example",
        dependsOn: [awsSecretsmanagerSecretVersionExample],
        gitConfig: {
          repositoryUrl:
            "https://github.com/hashicorp/terraform-provider-aws.git",
          secretArn: example.arn,
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSagemakerCodeRepositoryExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `codeRepositoryName` - (Required) The name of the Code Repository (must be unique).
* `gitConfig` - (Required) Specifies details about the repository. see [Git Config](#git-config) details below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Git Config

* `repositoryUrl` - (Required) The URL where the Git repository is located.
* `branch` - (Optional) The default branch for the Git repository.
* `secretArn` - (Optional) The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the credentials used to access the git repository. The secret must have a staging label of AWSCURRENT and must be in the following format: `{"username": UserName, "password": Password}`

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Code Repository.
* `arn` - The Amazon Resource Name (ARN) assigned by AWS to this Code Repository.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker Code Repositories using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerCodeRepository } from "./.gen/providers/aws/sagemaker-code-repository";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SagemakerCodeRepository.generateConfigForImport(
      this,
      "testCodeRepository",
      "my-code-repo"
    );
  }
}

```

Using `terraform import`, import SageMaker Code Repositories using the `name`. For example:

```console
% terraform import aws_sagemaker_code_repository.test_code_repository my-code-repo
```

<!-- cache-key: cdktf-0.20.8 input-f41c8a9771692edb44a7045ff9315ec42a11e03a25966ecdac6ca144a79c5a90 -->