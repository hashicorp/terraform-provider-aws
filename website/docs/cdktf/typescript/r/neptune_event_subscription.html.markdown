---
subcategory: "Neptune"
layout: "aws"
page_title: "AWS: aws_neptune_event_subscription"
description: |-
  Provides a Neptune event subscription resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_neptune_event_subscription

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NeptuneCluster } from "./.gen/providers/aws/neptune-cluster";
import { NeptuneClusterInstance } from "./.gen/providers/aws/neptune-cluster-instance";
import { NeptuneEventSubscription } from "./.gen/providers/aws/neptune-event-subscription";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const defaultVar = new NeptuneCluster(this, "default", {
      applyImmediately: Token.asBoolean("true"),
      backupRetentionPeriod: 5,
      clusterIdentifier: "neptune-cluster-demo",
      engine: "neptune",
      iamDatabaseAuthenticationEnabled: Token.asBoolean("true"),
      preferredBackupWindow: "07:00-09:00",
      skipFinalSnapshot: true,
    });
    const example = new NeptuneClusterInstance(this, "example", {
      applyImmediately: Token.asBoolean("true"),
      clusterIdentifier: defaultVar.id,
      engine: "neptune",
      instanceClass: "db.r4.large",
    });
    const awsSnsTopicDefault = new SnsTopic(this, "default_2", {
      name: "neptune-events",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSnsTopicDefault.overrideLogicalId("default");
    const awsNeptuneEventSubscriptionDefault = new NeptuneEventSubscription(
      this,
      "default_3",
      {
        eventCategories: [
          "maintenance",
          "availability",
          "creation",
          "backup",
          "restoration",
          "recovery",
          "deletion",
          "failover",
          "failure",
          "notification",
          "configuration change",
          "read replica",
        ],
        name: "neptune-event-sub",
        snsTopicArn: Token.asString(awsSnsTopicDefault.arn),
        sourceIds: [example.id],
        sourceType: "db-instance",
        tags: {
          env: "test",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNeptuneEventSubscriptionDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `enabled` - (Optional) A boolean flag to enable/disable the subscription. Defaults to true.
* `eventCategories` - (Optional) A list of event categories for a `sourceType` that you want to subscribe to. Run `aws neptune describe-event-categories` to find all the event categories.
* `name` - (Optional) The name of the Neptune event subscription. By default generated by Terraform.
* `namePrefix` - (Optional) The name of the Neptune event subscription. Conflicts with `name`.
* `snsTopicArn` - (Required) The ARN of the SNS topic to send events to.
* `sourceIds` - (Optional) A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `sourceType` must also be specified.
* `sourceType` - (Optional) The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster` or `db-cluster-snapshot`. If not set, all sources will be subscribed to.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Neptune event notification subscription.
* `arn` - The Amazon Resource Name of the Neptune event notification subscription.
* `customerAwsId` - The AWS customer account associated with the Neptune event notification subscription.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `40m`)
- `delete` - (Default `40m`)
- `update` - (Default `40m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_neptune_event_subscription` using the event subscription name. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NeptuneEventSubscription } from "./.gen/providers/aws/neptune-event-subscription";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NeptuneEventSubscription.generateConfigForImport(
      this,
      "example",
      "my-event-subscription"
    );
  }
}

```

Using `terraform import`, import `aws_neptune_event_subscription` using the event subscription name. For example:

```console
% terraform import aws_neptune_event_subscription.example my-event-subscription
```

<!-- cache-key: cdktf-0.20.8 input-e328d5c2f0ddd8aeab59e5a796150d1bafdd5b04018dd038f0bce4cd0cb07a04 -->