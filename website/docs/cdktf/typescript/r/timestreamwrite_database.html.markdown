---
subcategory: "Timestream Write"
layout: "aws"
page_title: "AWS: aws_timestreamwrite_database"
description: |-
  Provides a Timestream database resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_timestreamwrite_database

Provides a Timestream database resource.

## Example Usage

### Basic usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { TimestreamwriteDatabase } from "./.gen/providers/aws/timestreamwrite-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new TimestreamwriteDatabase(this, "example", {
      databaseName: "database-example",
    });
  }
}

```

### Full usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { TimestreamwriteDatabase } from "./.gen/providers/aws/timestreamwrite-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new TimestreamwriteDatabase(this, "example", {
      databaseName: "database-example",
      kmsKeyId: Token.asString(awsKmsKeyExample.arn),
      tags: {
        Name: "value",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `databaseName` â€“ (Required) The name of the Timestream database. Minimum length of 3. Maximum length of 64.
* `kmsKeyId` - (Optional) The ARN (not Alias ARN) of the KMS key to be used to encrypt the data stored in the database. If the KMS key is not specified, the database will be encrypted with a Timestream managed KMS key located in your account. Refer to [AWS managed KMS keys](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk) for more info.
* `tags` - (Optional) Map of tags to assign to this resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Timestream database.
* `arn` - The ARN that uniquely identifies this database.
* `kmsKeyId` - The ARN of the KMS key used to encrypt the data stored in the database.
* `tableCount` - The total number of tables found within the Timestream database.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Timestream databases using the `databaseName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { TimestreamwriteDatabase } from "./.gen/providers/aws/timestreamwrite-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    TimestreamwriteDatabase.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import Timestream databases using the `databaseName`. For example:

```console
% terraform import aws_timestreamwrite_database.example example
```

<!-- cache-key: cdktf-0.20.8 input-f9e466cc597e77e2955216c4193bd02e93e398df89c5fb4b6c43b2048b014651 -->