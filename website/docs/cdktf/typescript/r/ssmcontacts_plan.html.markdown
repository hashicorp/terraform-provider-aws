---
subcategory: "SSM Contacts"
layout: "aws"
page_title: "AWS: aws_ssmcontacts_plan"
description: |-
  Terraform resource for managing an AWS SSM Contact Plan.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssmcontacts_plan

Terraform resource for managing an AWS SSM Contact Plan.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SsmcontactsPlan(this, "example", {
      contactId:
        "arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
      stage: [
        {
          durationInMinutes: 1,
        },
      ],
    });
  }
}

```

### Usage with SSM Contact

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsContact } from "./.gen/providers/aws/ssmcontacts-contact";
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const contact = new SsmcontactsContact(this, "contact", {
      alias: "alias",
      type: "PERSONAL",
    });
    new SsmcontactsPlan(this, "plan", {
      contactId: contact.arn,
      stage: [
        {
          durationInMinutes: 1,
        },
      ],
    });
  }
}

```

### Usage With All Fields

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsContact } from "./.gen/providers/aws/ssmcontacts-contact";
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const contactOne = new SsmcontactsContact(this, "contact_one", {
      alias: "alias",
      type: "PERSONAL",
    });
    const contactTwo = new SsmcontactsContact(this, "contact_two", {
      alias: "alias",
      type: "PERSONAL",
    });
    const escalationPlan = new SsmcontactsContact(this, "escalation_plan", {
      alias: "escalation-plan-alias",
      type: "ESCALATION",
    });
    new SsmcontactsPlan(this, "test", {
      contactId: escalationPlan.arn,
      stage: [
        {
          durationInMinutes: 0,
          target: [
            {
              contactTargetInfo: {
                contactId: contactOne.arn,
                isEssential: false,
              },
            },
            {
              contactTargetInfo: {
                contactId: contactTwo.arn,
                isEssential: true,
              },
            },
            {
              channelTargetInfo: {
                contactChannelId: channel.arn,
                retryIntervalInMinutes: 2,
              },
            },
          ],
        },
      ],
    });
  }
}

```

## Argument Reference

The following arguments are required:

- `contactId` - (Required) The Amazon Resource Name (ARN) of the contact or escalation plan.
- `stage` - (Required) One or more configuration blocks for specifying a list of stages that the escalation plan or engagement plan uses to engage contacts and contact methods. See [Stage](#stage) below for more details.

### Stage

A stage specifies a set amount of time that an escalation plan or engagement plan engages the specified contacts or contact methods.

The `stage` block supports the following:

- `durationInMinutes` - (Required) The time to wait until beginning the next stage. The duration can only be set to 0 if a target is specified.
- `target` - (Required) One or more configuration blocks for specifying the contacts or contact methods that the escalation plan or engagement plan is engaging. See [Target](#target) below for more details.

### Target

A target specifies the contact or contact channel that's being engaged.

The `target` block supports the following:

- `channelTargetInfo` - (Optional) A configuration block for specifying information about the contact channel that Incident Manager engages. See [Channel Target Info](#channel-target-info) for more details.
- `contactTargetInfo` - (Optional) A configuration block for specifying information about the contact that Incident Manager engages. See [Contact Target Info](#contact-target-info) for more details.

### Channel Target Info

Channel target info specifies information about the contact channel that Incident Manager uses to engage the contact.

The `channelTargetInfo` block supports the following:

- `contactChannelId` - (Required) The Amazon Resource Name (ARN) of the contact channel.
- `retryIntervalInMinutes` - (Optional) The number of minutes to wait before retrying to send engagement if the engagement initially failed.

### Contact Target Info

Contact target info specifies the contact that Incident Manager is engaging during an incident.

The `contactTargetInfo` block supports the following:

- `contactId` - (Optional) The Amazon Resource Name (ARN) of the contact.
- `isEssential` - (Optional) A Boolean value determining if the contact's acknowledgement stops the progress of stages in the plan.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSM Contact Plan using the Contact ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsmcontactsPlan } from "./.gen/providers/aws/ssmcontacts-plan";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsmcontactsPlan.generateConfigForImport(this, "example", "{ARNValue}");
  }
}

```

Using `terraform import`, import SSM Contact Plan using the Contact ARN. For example:

```console
% terraform import aws_ssmcontacts_plan.example {ARNValue}
```

<!-- cache-key: cdktf-0.20.8 input-ebafc47434cea7da059f684803495b00c4efdbcf05a67a147647049af89fafc1 -->