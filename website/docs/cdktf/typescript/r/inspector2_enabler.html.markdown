---
subcategory: "Inspector"
layout: "aws"
page_title: "AWS: aws_inspector2_enabler"
description: |-
  Terraform resource for enabling Amazon Inspector resource scans.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_inspector2_enabler

Terraform resource for enabling Amazon Inspector resource scans.

This resource must be created in the Organization's Administrator Account.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Inspector2Enabler } from "./.gen/providers/aws/inspector2-enabler";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Inspector2Enabler(this, "example", {
      accountIds: ["123456789012"],
      resourceTypes: ["EC2"],
    });
  }
}

```

### For the Calling Account

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { Inspector2Enabler } from "./.gen/providers/aws/inspector2-enabler";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    new Inspector2Enabler(this, "test", {
      accountIds: [Token.asString(current.accountId)],
      resourceTypes: ["ECR", "EC2"],
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `accountIds` - (Required) Set of account IDs.
  Can contain one of: the Organization's Administrator Account, or one or more Member Accounts.
* `resourceTypes` - (Required) Type of resources to scan.
  Valid values are `EC2`, `ECR`, `LAMBDA`, `LAMBDA_CODE` and `CODE_REPOSITORY`.
  At least one item is required.

## Attribute Reference

This resource exports no additional attributes.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Inspector Enabler using `accountIds` and `region_types` formatted as `[account_id1]:[account_id2]:...-[resource_type1]:[resource_type2]:...`, where `accountIds` are sorted in ascending order and `resourceTypes` are sorted in alphabetical order. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Inspector2Enabler } from "./.gen/providers/aws/inspector2-enabler";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Inspector2Enabler.generateConfigForImport(
      this,
      "example",
      "123456789012:234567890123-EC2:ECR"
    );
  }
}

```

Using `terraform import`, import Inspector Enabler using using `accountIds` and `region_types` formatted as `[account_id1]:[account_id2]:...-[resource_type1]:[resource_type2]:...`, where `accountIds` are sorted in ascending order and `resourceTypes` are sorted in alphabetical order. For example:

```console
% terraform import aws_inspector2_enabler.example 123456789012:234567890123-EC2:ECR
```

<!-- cache-key: cdktf-0.20.8 input-58b2d0ee740d7c60a69e639f29c8e93a039c89aa5f64b93ea080215c2c7a6165 -->