---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_db_instance_automated_backups_replication"
description: |-
  Enables replication of automated backups to a different AWS Region.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_db_instance_automated_backups_replication

Manage cross-region replication of automated backups to a different AWS Region. Documentation for cross-region automated backup replication can be found at:

* [Replicating automated backups to another AWS Region](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html)

-> **Note:** This resource has to be created in the destination region.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DbInstanceAutomatedBackupsReplication } from "./.gen/providers/aws/db-instance-automated-backups-replication";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DbInstanceAutomatedBackupsReplication(this, "default", {
      retentionPeriod: 14,
      sourceDbInstanceArn: "arn:aws:rds:us-west-2:123456789012:db:mydatabase",
    });
  }
}

```

## Encrypting the automated backup with KMS

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DbInstanceAutomatedBackupsReplication } from "./.gen/providers/aws/db-instance-automated-backups-replication";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DbInstanceAutomatedBackupsReplication(this, "default", {
      kmsKeyId:
        "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012",
      sourceDbInstanceArn: "arn:aws:rds:us-west-2:123456789012:db:mydatabase",
    });
  }
}

```

## Example including a RDS DB instance

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DbInstance } from "./.gen/providers/aws/db-instance";
import { DbInstanceAutomatedBackupsReplication } from "./.gen/providers/aws/db-instance-automated-backups-replication";
import { KmsKey } from "./.gen/providers/aws/kms-key";
import { AwsProvider } from "./.gen/providers/aws/provider";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AwsProvider(this, "aws", {
      region: "us-east-1",
    });
    const replica = new AwsProvider(this, "aws_1", {
      alias: "replica",
      region: "us-west-2",
    });
    const defaultVar = new DbInstance(this, "default", {
      allocatedStorage: 10,
      backupRetentionPeriod: 7,
      dbName: "mydb",
      engine: "postgres",
      engineVersion: "13.4",
      identifier: "mydb",
      instanceClass: "db.t3.micro",
      password: "mustbeeightcharacters",
      skipFinalSnapshot: true,
      storageEncrypted: true,
      username: "masterusername",
    });
    const awsKmsKeyDefault = new KmsKey(this, "default_3", {
      description: "Encryption key for automated backups",
      provider: replica,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsKmsKeyDefault.overrideLogicalId("default");
    const awsDbInstanceAutomatedBackupsReplicationDefault =
      new DbInstanceAutomatedBackupsReplication(this, "default_4", {
        kmsKeyId: Token.asString(awsKmsKeyDefault.arn),
        provider: replica,
        sourceDbInstanceArn: defaultVar.arn,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDbInstanceAutomatedBackupsReplicationDefault.overrideLogicalId(
      "default"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `kmsKeyId` - (Optional, Forces new resource) The AWS KMS key identifier for encryption of the replicated automated backups. The KMS key ID is the Amazon Resource Name (ARN) for the KMS encryption key in the destination AWS Region, for example, `arn:aws:kms:us-east-1:123456789012:key/AKIAIOSFODNN7EXAMPLE`.
* `preSignedUrl` - (Optional, Forces new resource) A URL that contains a [Signature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) signed request for the [`StartDBInstanceAutomatedBackupsReplication`](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_StartDBInstanceAutomatedBackupsReplication.html) action to be called in the AWS Region of the source DB instance.
* `retentionPeriod` - (Optional, Forces new resource) The retention period for the replicated automated backups, defaults to `7`.
* `sourceDbInstanceArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the source DB instance for the replicated automated backups, for example, `arn:aws:rds:us-west-2:123456789012:db:mydatabase`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Name (ARN) of the replicated automated backups.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `75m`)
- `delete` - (Default `75m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RDS instance automated backups replication using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DbInstanceAutomatedBackupsReplication } from "./.gen/providers/aws/db-instance-automated-backups-replication";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DbInstanceAutomatedBackupsReplication.generateConfigForImport(
      this,
      "default",
      "arn:aws:rds:us-east-1:123456789012:auto-backup:ab-faaa2mgdj1vmp4xflr7yhsrmtbtob7ltrzzz2my"
    );
  }
}

```

Using `terraform import`, import RDS instance automated backups replication using the `arn`. For example:

```console
% terraform import aws_db_instance_automated_backups_replication.default arn:aws:rds:us-east-1:123456789012:auto-backup:ab-faaa2mgdj1vmp4xflr7yhsrmtbtob7ltrzzz2my
```

<!-- cache-key: cdktf-0.20.8 input-a1a4df51ceeb0b407d09f3cecea4189146c75a1f96880f39dc75e22abd29cc11 -->