---
subcategory: "SSO Admin"
layout: "aws"
page_title: "AWS: aws_ssoadmin_managed_policy_attachment"
description: |-
  Manages an IAM managed policy for a Single Sign-On (SSO) Permission Set
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ssoadmin_managed_policy_attachment

Provides an IAM managed policy for a Single Sign-On (SSO) Permission Set resource

~> **NOTE:** Creating this resource will automatically [Provision the Permission Set](https://docs.aws.amazon.com/singlesignon/latest/APIReference/API_ProvisionPermissionSet.html) to apply the corresponding updates to all assigned accounts.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsSsoadminInstances } from "./.gen/providers/aws/data-aws-ssoadmin-instances";
import { SsoadminManagedPolicyAttachment } from "./.gen/providers/aws/ssoadmin-managed-policy-attachment";
import { SsoadminPermissionSet } from "./.gen/providers/aws/ssoadmin-permission-set";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsSsoadminInstances(this, "example", {});
    const awsSsoadminPermissionSetExample = new SsoadminPermissionSet(
      this,
      "example_1",
      {
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(example.arns), ["0"])
        ),
        name: "Example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionSetExample.overrideLogicalId("example");
    const awsSsoadminManagedPolicyAttachmentExample =
      new SsoadminManagedPolicyAttachment(this, "example_2", {
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(example.arns), ["0"])
        ),
        managedPolicyArn: "arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup",
        permissionSetArn: Token.asString(awsSsoadminPermissionSetExample.arn),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminManagedPolicyAttachmentExample.overrideLogicalId("example");
  }
}

```

### With Account Assignment

~> Because destruction of a managed policy attachment resource also re-provisions the associated permission set to all accounts, explicitly indicating the dependency with the account assignment resource via the [`dependsOn` meta argument](https://developer.hashicorp.com/terraform/language/meta-arguments/depends_on) is necessary to ensure proper deletion order when these resources are used together.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsSsoadminInstances } from "./.gen/providers/aws/data-aws-ssoadmin-instances";
import { IdentitystoreGroup } from "./.gen/providers/aws/identitystore-group";
import { SsoadminAccountAssignment } from "./.gen/providers/aws/ssoadmin-account-assignment";
import { SsoadminManagedPolicyAttachment } from "./.gen/providers/aws/ssoadmin-managed-policy-attachment";
import { SsoadminPermissionSet } from "./.gen/providers/aws/ssoadmin-permission-set";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsSsoadminInstances(this, "example", {});
    const awsIdentitystoreGroupExample = new IdentitystoreGroup(
      this,
      "example_1",
      {
        description: "Admin Group",
        displayName: "Admin",
        identityStoreId: Token.asString(
          Fn.lookupNested(Fn.tolist(example.identityStoreIds), ["0"])
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIdentitystoreGroupExample.overrideLogicalId("example");
    const awsSsoadminPermissionSetExample = new SsoadminPermissionSet(
      this,
      "example_2",
      {
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(example.arns), ["0"])
        ),
        name: "Example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminPermissionSetExample.overrideLogicalId("example");
    new SsoadminAccountAssignment(this, "account_assignment", {
      instanceArn: Token.asString(
        Fn.lookupNested(Fn.tolist(example.arns), ["0"])
      ),
      permissionSetArn: Token.asString(awsSsoadminPermissionSetExample.arn),
      principalId: Token.asString(awsIdentitystoreGroupExample.groupId),
      principalType: "GROUP",
      targetId: "123456789012",
      targetType: "AWS_ACCOUNT",
    });
    const awsSsoadminManagedPolicyAttachmentExample =
      new SsoadminManagedPolicyAttachment(this, "example_4", {
        dependsOn: [awsSsoadminAccountAssignmentExample],
        instanceArn: Token.asString(
          Fn.lookupNested(Fn.tolist(example.arns), ["0"])
        ),
        managedPolicyArn: "arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup",
        permissionSetArn: Token.asString(awsSsoadminPermissionSetExample.arn),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSsoadminManagedPolicyAttachmentExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `instanceArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the SSO Instance under which the operation will be executed.
* `managedPolicyArn` - (Required, Forces new resource) The IAM managed policy Amazon Resource Name (ARN) to be attached to the Permission Set.
* `permissionSetArn` - (Required, Forces new resource) The Amazon Resource Name (ARN) of the Permission Set.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Names (ARNs) of the Managed Policy, Permission Set, and SSO Instance, separated by a comma (`,`).
* `managedPolicyName` - The name of the IAM Managed Policy.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SSO Managed Policy Attachments using the `managedPolicyArn`, `permissionSetArn`, and `instanceArn` separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SsoadminManagedPolicyAttachment } from "./.gen/providers/aws/ssoadmin-managed-policy-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SsoadminManagedPolicyAttachment.generateConfigForImport(
      this,
      "example",
      "arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup,arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72"
    );
  }
}

```

Using `terraform import`, import SSO Managed Policy Attachments using the `managedPolicyArn`, `permissionSetArn`, and `instanceArn` separated by a comma (`,`). For example:

```console
% terraform import aws_ssoadmin_managed_policy_attachment.example arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup,arn:aws:sso:::permissionSet/ssoins-2938j0x8920sbj72/ps-80383020jr9302rk,arn:aws:sso:::instance/ssoins-2938j0x8920sbj72
```

<!-- cache-key: cdktf-0.20.1 input-73fefc01b46b4cf4489868580522a20327e26c603ae4140b5374affcfb50ca7b -->