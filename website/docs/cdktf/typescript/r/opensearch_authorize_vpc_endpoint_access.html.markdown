---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_authorize_vpc_endpoint_access"
description: |-
  Terraform resource for managing an AWS OpenSearch Authorize Vpc Endpoint Access.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_authorize_vpc_endpoint_access

Terraform resource for managing an AWS OpenSearch Authorize Vpc Endpoint Access.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { OpensearchAuthorizeVpcEndpointAccess } from "./.gen/providers/aws/opensearch-authorize-vpc-endpoint-access";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    new OpensearchAuthorizeVpcEndpointAccess(this, "test", {
      account: Token.asString(current.accountId),
      domainName: Token.asString(awsOpensearchDomainTest.domainName),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `account` - (Required) AWS account ID to grant access to.
* `domainName` - (Required) Name of OpenSearch Service domain to provide access to.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `authorizedPrincipal` - Information about the Amazon Web Services account or service that was provided access to the domain. See [authorized principal](#authorized_principal) attribute for further details.

### authorized_principal

* `principal` - IAM principal that is allowed to access to the domain.
* `principalType` - Type of principal.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearch Authorize Vpc Endpoint Access using the `example_id_arg`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchAuthorizeVpcEndpointAccess } from "./.gen/providers/aws/opensearch-authorize-vpc-endpoint-access";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OpensearchAuthorizeVpcEndpointAccess.generateConfigForImport(
      this,
      "example",
      "authorize_vpc_endpoint_access-id-12345678"
    );
  }
}

```

Using `terraform import`, import OpenSearch Authorize Vpc Endpoint Access using the `example_id_arg`. For example:

```console
% terraform import aws_opensearch_authorize_vpc_endpoint_access.example authorize_vpc_endpoint_access-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-0cc45a3309fd497f327a2d764e2b3e2fc5c8773148a5ade7022149c28dbcba61 -->