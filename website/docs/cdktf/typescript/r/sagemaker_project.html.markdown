---
subcategory: "SageMaker AI"
layout: "aws"
page_title: "AWS: aws_sagemaker_project"
description: |-
  Provides a SageMaker AI Project resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_project

Provides a SageMaker AI Project resource.

 -> Note: If you are trying to use SageMaker AI projects with SageMaker AI studio you will need to add a tag with the key `sagemaker:studio-visibility` with value `true`. For more on requirements to use projects and permission needed see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-projects-templates-custom.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerProject } from "./.gen/providers/aws/sagemaker-project";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerProject(this, "example", {
      projectName: "example",
      serviceCatalogProvisioningDetails: {
        productId: Token.asString(awsServicecatalogProductExample.id),
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `projectName` - (Required) The name of the Project.
* `projectDescription` - (Optional) A description for the project.
* `serviceCatalogProvisioningDetails` - (Required) The product ID and provisioning artifact ID to provision a service catalog. See [Service Catalog Provisioning Details](#service-catalog-provisioning-details) below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Service Catalog Provisioning Details

* `pathId` - (Optional) The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path.
* `productId` - (Required) The ID of the product to provision.
* `provisioningArtifactId` - (Optional) The ID of the provisioning artifact.
* `provisioningParameter` - (Optional) A list of key value pairs that you specify when you provision a product. See [Provisioning Parameter](#provisioning-parameter) below.

#### Provisioning Parameter

* `key` - (Required) The key that identifies a provisioning parameter.
* `value` - (Optional) The value of the provisioning parameter.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) assigned by AWS to this Project.
* `id` - The name of the Project.
* `projectId` - The ID of the project.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker AI Projects using the `projectName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerProject } from "./.gen/providers/aws/sagemaker-project";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SagemakerProject.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import SageMaker AI Projects using the `projectName`. For example:

```console
% terraform import aws_sagemaker_project.example example
```

<!-- cache-key: cdktf-0.20.8 input-e337c3ee506eba3a6cace19d404209baa5681994d4a31b7d2c41b896c1e7e612 -->