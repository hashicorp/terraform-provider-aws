---
subcategory: "ECR (Elastic Container Registry)"
layout: "aws"
page_title: "AWS: aws_ecr_pull_through_cache_rule"
description: |-
  Provides an Elastic Container Registry Pull Through Cache Rule.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ecr_pull_through_cache_rule

Provides an Elastic Container Registry Pull Through Cache Rule.

More information about pull through cache rules, including the set of supported
upstream repositories, see [Using pull through cache rules](https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcrPullThroughCacheRule } from "./.gen/providers/aws/ecr-pull-through-cache-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new EcrPullThroughCacheRule(this, "example", {
      credentialArn:
        "arn:aws:secretsmanager:us-east-1:123456789:secret:ecr-pullthroughcache/ecrpublic",
      ecrRepositoryPrefix: "ecr-public",
      upstreamRegistryUrl: "public.ecr.aws",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `credentialArn` - (Optional) ARN of the Secret which will be used to authenticate against the registry.
* `ecrRepositoryPrefix` - (Required, Forces new resource) The repository name prefix to use when caching images from the source registry.
* `upstreamRegistryUrl` - (Required, Forces new resource) The registry URL of the upstream public registry to use as the source.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `registryId` - The registry ID where the repository was created.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a pull-through cache rule using the `ecrRepositoryPrefix`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcrPullThroughCacheRule } from "./.gen/providers/aws/ecr-pull-through-cache-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EcrPullThroughCacheRule.generateConfigForImport(
      this,
      "example",
      "ecr-public"
    );
  }
}

```

Using `terraform import`, import a pull-through cache rule using the `ecrRepositoryPrefix`. For example:

```console
% terraform import aws_ecr_pull_through_cache_rule.example ecr-public
```

<!-- cache-key: cdktf-0.20.8 input-77d631b6c1d1bb98f7a86171d386d0798201bb4f64ec08a93c7983727ec7dec9 -->