---
subcategory: "IVS (Interactive Video)"
layout: "aws"
page_title: "AWS: aws_ivs_channel"
description: |-
  Terraform resource for managing an AWS IVS (Interactive Video) Channel.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ivs_channel

Terraform resource for managing an AWS IVS (Interactive Video) Channel.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IvsChannel } from "./.gen/providers/aws/ivs-channel";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new IvsChannel(this, "example", {
      name: "channel-1",
    });
  }
}

```

## Argument Reference

The following arguments are optional:

* `authorized` - (Optional) If `true`, channel is private (enabled for playback authorization).
* `latencyMode` - (Optional) Channel latency mode. Valid values: `NORMAL`, `LOW`.
* `name` - (Optional) Channel name.
* `recordingConfigurationArn` - (Optional) Recording configuration ARN.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `type` - (Optional) Channel type, which determines the allowable resolution and bitrate. Valid values: `STANDARD`, `BASIC`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Channel.
* `ingestEndpoint` - Channel ingest endpoint, part of the definition of an ingest server, used when setting up streaming software.
* `playbackUrl` - Channel playback URL.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IVS (Interactive Video) Channel using the ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IvsChannel } from "./.gen/providers/aws/ivs-channel";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    IvsChannel.generateConfigForImport(
      this,
      "example",
      "arn:aws:ivs:us-west-2:326937407773:channel/0Y1lcs4U7jk5"
    );
  }
}

```

Using `terraform import`, import IVS (Interactive Video) Channel using the ARN. For example:

```console
% terraform import aws_ivs_channel.example arn:aws:ivs:us-west-2:326937407773:channel/0Y1lcs4U7jk5
```

<!-- cache-key: cdktf-0.20.8 input-027eff160d9ed7f8a55e22eabe213339e7ec60ef328ae2f09043ed6203e4c8ab -->