---
subcategory: "DMS (Database Migration)"
layout: "aws"
page_title: "AWS: aws_dms_certificate"
description: |-
  Provides a DMS (Data Migration Service) certificate resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dms_certificate

Provides a DMS (Data Migration Service) certificate resource. DMS certificates can be created, deleted, and imported.

~> **Note:** All arguments including the PEM encoded certificate will be stored in the raw state as plain-text.
[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DmsCertificate } from "./.gen/providers/aws/dms-certificate";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DmsCertificate(this, "test", {
      certificateId: "test-dms-certificate-tf",
      certificatePem: "...",
      tags: {
        Name: "test",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `certificateId` - (Required) The certificate identifier.

    - Must contain from 1 to 255 alphanumeric characters and hyphens.

* `certificatePem` - (Optional) The contents of the .pem X.509 certificate file for the certificate. Either `certificatePem` or `certificateWallet` must be set.
* `certificateWallet` - (Optional) The contents of the Oracle Wallet certificate for use with SSL, provided as a base64-encoded String. Either `certificatePem` or `certificateWallet` must be set.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `certificateArn` - The Amazon Resource Name (ARN) for the certificate.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import certificates using the `certificateId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DmsCertificate } from "./.gen/providers/aws/dms-certificate";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DmsCertificate.generateConfigForImport(
      this,
      "test",
      "test-dms-certificate-tf"
    );
  }
}

```

Using `terraform import`, import certificates using the `certificateId`. For example:

```console
% terraform import aws_dms_certificate.test test-dms-certificate-tf
```

<!-- cache-key: cdktf-0.20.8 input-43c2ddd8bdacc0b322a9d01379d67b520abc0514fee6ac2b769064b1afbc324d -->