---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_endpoint_authorization"
description: |-
  Provides a Redshift Endpoint Authorization resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_endpoint_authorization

Creates a new Amazon Redshift endpoint authorization.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftEndpointAuthorization } from "./.gen/providers/aws/redshift-endpoint-authorization";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftEndpointAuthorization(this, "example", {
      account: "01234567910",
      clusterIdentifier: Token.asString(
        awsRedshiftClusterExample.clusterIdentifier
      ),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `account` - (Required) The Amazon Web Services account ID to grant access to.
* `clusterIdentifier` - (Required) The cluster identifier of the cluster to grant access to.
* `forceDelete` - (Optional) Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted. Default value is `false`.
* `vpcIds` - (Optional) The virtual private cloud (VPC) identifiers to grant access to. If none are specified all VPCs in shared account are allowed.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `allowedAllVpcs` - Indicates whether all VPCs in the grantee account are allowed access to the cluster.
* `id` - The identifier of the Redshift Endpoint Authorization, `account`, and `clusterIdentifier` separated by a colon (`:`).
* `endpointCount` - The number of Redshift-managed VPC endpoints created for the authorization.
* `grantee` - The Amazon Web Services account ID of the grantee of the cluster.
* `grantor` - The Amazon Web Services account ID of the cluster owner.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift endpoint authorization using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftEndpointAuthorization } from "./.gen/providers/aws/redshift-endpoint-authorization";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftEndpointAuthorization.generateConfigForImport(
      this,
      "example",
      "01234567910:cluster-example-id"
    );
  }
}

```

Using `terraform import`, import Redshift endpoint authorization using the `id`. For example:

```console
% terraform import aws_redshift_endpoint_authorization.example 01234567910:cluster-example-id
```

<!-- cache-key: cdktf-0.20.8 input-b9e5ce4e1f7abe40dbf21f61540bacd5f31c67c081dc3bdd6f2ce8318ce44e5e -->