---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_destination_policy"
description: |-
  Provides a CloudWatch Logs destination policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_destination_policy

Provides a CloudWatch Logs destination policy resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogDestination } from "./.gen/providers/aws/cloudwatch-log-destination";
import { CloudwatchLogDestinationPolicy } from "./.gen/providers/aws/cloudwatch-log-destination-policy";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const testDestination = new CloudwatchLogDestination(
      this,
      "test_destination",
      {
        name: "test_destination",
        roleArn: iamForCloudwatch.arn,
        targetArn: kinesisForCloudwatch.arn,
      }
    );
    const testDestinationPolicy = new DataAwsIamPolicyDocument(
      this,
      "test_destination_policy",
      {
        statement: [
          {
            actions: ["logs:PutSubscriptionFilter"],
            effect: "Allow",
            principals: [
              {
                identifiers: ["123456789012"],
                type: "AWS",
              },
            ],
            resources: [testDestination.arn],
          },
        ],
      }
    );
    const awsCloudwatchLogDestinationPolicyTestDestinationPolicy =
      new CloudwatchLogDestinationPolicy(this, "test_destination_policy_2", {
        accessPolicy: Token.asString(testDestinationPolicy.json),
        destinationName: testDestination.name,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogDestinationPolicyTestDestinationPolicy.overrideLogicalId(
      "test_destination_policy"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `destinationName` - (Required) A name for the subscription filter
* `accessPolicy` - (Required) The policy document. This is a JSON formatted string.
* `forceUpdate` - (Optional) Specify true if you are updating an existing destination policy to grant permission to an organization ID instead of granting permission to individual AWS accounts.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch Logs destination policies using the `destinationName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogDestinationPolicy } from "./.gen/providers/aws/cloudwatch-log-destination-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudwatchLogDestinationPolicy.generateConfigForImport(
      this,
      "testDestinationPolicy",
      "test_destination"
    );
  }
}

```

Using `terraform import`, import CloudWatch Logs destination policies using the `destinationName`. For example:

```console
% terraform import aws_cloudwatch_log_destination_policy.test_destination_policy test_destination
```

<!-- cache-key: cdktf-0.20.8 input-e9a8dea320a37c932bb21790e7e8761e42c974c856dc567a8154f492a8252914 -->