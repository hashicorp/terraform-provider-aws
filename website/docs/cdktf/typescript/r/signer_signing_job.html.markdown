---
subcategory: "Signer"
layout: "aws"
page_title: "AWS: aws_signer_signing_job"
description: |-
  Creates a Signer Signing Job.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_signer_signing_job

Creates a Signer Signing Job.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SignerSigningJob } from "./.gen/providers/aws/signer-signing-job";
import { SignerSigningProfile } from "./.gen/providers/aws/signer-signing-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const testSp = new SignerSigningProfile(this, "test_sp", {
      platformId: "AWSLambda-SHA384-ECDSA",
    });
    new SignerSigningJob(this, "build_signing_job", {
      destination: {
        s3: {
          bucket: "s3-bucket-name",
          prefix: "signed/",
        },
      },
      ignoreSigningJobFailure: true,
      profileName: testSp.name,
      source: {
        s3: {
          bucket: "s3-bucket-name",
          key: "object-to-be-signed.zip",
          version: "jADjFYYYEXAMPLETszPjOmCMFDzd9dN1",
        },
      },
    });
  }
}

```

## Argument Reference

* `profileName` - (Required) The name of the profile to initiate the signing operation.
* `source` - (Required) The S3 bucket that contains the object to sign. See [Source](#source) below for details.
* `destination` - (Required) The S3 bucket in which to save your signed object. See [Destination](#destination) below for details.
* `ignoreSigningJobFailure` - (Optional) Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.

### Source

The source configuration block supports the following arguments:

* `s3` - (Required) A configuration block describing the S3 Source object: See [S3 Source](#s3-source) below for details.

### S3 Source

The configuration block supports the following arguments:

* `bucket` - (Required) Name of the S3 bucket.
* `key` - (Required) Key name of the object that contains your unsigned code.
* `version` - (Required) Version of your source image in your version enabled S3 bucket.

### Destination

The destination configuration block supports the following arguments:

* `s3` - (Required) A configuration block describing the S3 Destination object: See [S3 Destination](#s3-destination) below for details.

### S3 Destination

The configuration block supports the following arguments:

* `bucket` - (Required) Name of the S3 bucket.
* `prefix` - (Optional) An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `completedAt` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
* `createdAt` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
* `jobId` - The ID of the signing job on output.
* `jobInvoker` - The IAM entity that initiated the signing job.
* `jobOwner` - The AWS account ID of the job owner.
* `platformDisplayName` - A human-readable name for the signing platform associated with the signing job.
* `platformId` - The platform to which your signed code image will be distributed.
* `profileVersion` - The version of the signing profile used to initiate the signing job.
* `requestedBy` - The IAM principal that requested the signing job.
* `revocationRecord` - A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
* `signatureExpiresAt` - The time when the signature of a signing job expires.
* `signedObject` - Name of the S3 bucket where the signed code image is saved by code signing.
* `status` - Status of the signing job.
* `statusReason` - String value that contains the status reason.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Signer signing jobs using the `jobId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SignerSigningJob } from "./.gen/providers/aws/signer-signing-job";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SignerSigningJob.generateConfigForImport(
      this,
      "testSignerSigningJob",
      "9ed7e5c3-b8d4-4da0-8459-44e0b068f7ee"
    );
  }
}

```

Using `terraform import`, import Signer signing jobs using the `jobId`. For example:

```console
% terraform import aws_signer_signing_job.test_signer_signing_job 9ed7e5c3-b8d4-4da0-8459-44e0b068f7ee
```

<!-- cache-key: cdktf-0.20.8 input-c1b438ff5be624709d7988f68eee2a0f8bb3759d4c25af0f1c443c2548e0904f -->