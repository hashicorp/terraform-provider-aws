---
subcategory: "Resource Groups"
layout: "aws"
page_title: "AWS: aws_resourcegroups_group"
description: |-
  Provides a Resource Group.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_resourcegroups_group

Provides a Resource Group.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ResourcegroupsGroup } from "./.gen/providers/aws/resourcegroups-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ResourcegroupsGroup(this, "test", {
      name: "test-group",
      resourceQuery: {
        query:
          '{\n  "ResourceTypeFilters": [\n    "AWS::EC2::Instance"\n  ],\n  "TagFilters": [\n    {\n      "Key": "Stage",\n      "Values": ["Test"]\n    }\n  ]\n}\n\n',
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The resource group's name. A resource group name can have a maximum of 127 characters, including letters, numbers, hyphens, dots, and underscores. The name cannot start with `AWS` or `aws`.
* `configuration` - (Optional) A configuration associates the resource group with an AWS service and specifies how the service can interact with the resources in the group. See below for details.
* `description` - (Optional) A description of the resource group.
* `resourceQuery` - (Required) A `resourceQuery` block. Resource queries are documented below.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

The `resourceQuery` block supports the following arguments:

* `query` - (Required) The resource query as a JSON string.
* `type` - (Required) The type of the resource query. Defaults to `TAG_FILTERS_1_0`.

The `configuration` block supports the following arguments:

* `type` - (Required) Specifies the type of group configuration item.
* `parameters` - (Optional) A collection of parameters for this group configuration item. See below for details.

The `parameters` block supports the following arguments:

* `name` - (Required) The name of the group configuration parameter.
* `values` - (Optional) The value or values to be used for the specified parameter.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN assigned by AWS for this resource group.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import resource groups using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ResourcegroupsGroup } from "./.gen/providers/aws/resourcegroups-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ResourcegroupsGroup.generateConfigForImport(
      this,
      "foo",
      "resource-group-name"
    );
  }
}

```

Using `terraform import`, import resource groups using the `name`. For example:

```console
% terraform import aws_resourcegroups_group.foo resource-group-name
```

<!-- cache-key: cdktf-0.20.8 input-ffd6b1c7348fc0bfb39edb3c57aaf4b3dc4b1a11fa63096a13a4a4883d2ab21d -->