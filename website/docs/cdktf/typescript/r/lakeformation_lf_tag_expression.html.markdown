---
subcategory: "Lake Formation"
layout: "aws"
page_title: "AWS: aws_lakeformation_lf_tag_expression"
description: |-
  Terraform resource for managing an AWS Lake Formation LF Tag Expression.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lakeformation_lf_tag_expression

Terraform resource for managing an AWS Lake Formation LF Tag Expression.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LakeformationLfTagExpression } from "./.gen/providers/aws/";
import { LakeformationLfTag } from "./.gen/providers/aws/lakeformation-lf-tag";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new LakeformationLfTag(this, "example", {
      key: "example",
      values: ["value"],
    });
    const awsLakeformationLfTagExpressionExample =
      new LakeformationLfTagExpression(this, "example_1", {
        expression: [
          {
            tag_key: example.key,
            tag_values: example.values,
          },
        ],
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLakeformationLfTagExpressionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the LF-Tag Expression.
* `expression` - (Required) A list of LF-Tag conditions (key-value pairs). See [expression](#expression) for more details.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `catalogId` - (Optional) ID of the Data Catalog. Defaults to the account ID if not specified.
* `description` - (Optional) Description of the LF-Tag Expression.

### expression

* `tagKey` - (Required) The key-name for the LF-Tag.
* `tagValues` - (Required) A list of possible values for the LF-Tag

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lake Formation LF Tag Expression using the `name,catalog_id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LakeformationLfTagExpression } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    LakeformationLfTagExpression.generateConfigForImport(
      this,
      "example",
      "example-tag-expression,123456789012"
    );
  }
}

```

Using `terraform import`, import Lake Formation LF Tag Expression using the `name,catalog_id`. For example:

```console
% terraform import aws_lakeformation_lf_tag_expression.example example-tag-expression,123456789012
```

<!-- cache-key: cdktf-0.20.8 input-b5fbc59f2713dabfef05651a124229fb697fbf5a828e8329dcce167bcb764fb9 -->