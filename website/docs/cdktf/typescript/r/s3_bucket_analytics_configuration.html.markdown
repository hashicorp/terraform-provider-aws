---
subcategory: "S3 (Simple Storage)"
layout: "aws"
page_title: "AWS: aws_s3_bucket_analytics_configuration"
description: |-
  Provides a S3 bucket analytics configuration resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3_bucket_analytics_configuration

Provides a S3 bucket [analytics configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/analytics-storage-class.html) resource.

-> This resource cannot be used with S3 directory buckets.

## Example Usage

### Add analytics configuration for entire S3 bucket and export results to a second S3 bucket

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketAnalyticsConfiguration } from "./.gen/providers/aws/s3-bucket-analytics-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const analytics = new S3Bucket(this, "analytics", {
      bucket: "analytics-destination",
    });
    const example = new S3Bucket(this, "example", {
      bucket: "example",
    });
    new S3BucketAnalyticsConfiguration(this, "example-entire-bucket", {
      bucket: example.id,
      name: "EntireBucket",
      storageClassAnalysis: {
        dataExport: {
          destination: {
            s3BucketDestination: {
              bucketArn: analytics.arn,
            },
          },
        },
      },
    });
  }
}

```

### Add analytics configuration with S3 object filter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketAnalyticsConfiguration } from "./.gen/providers/aws/s3-bucket-analytics-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucket: "example",
    });
    new S3BucketAnalyticsConfiguration(this, "example-filtered", {
      bucket: example.id,
      filter: {
        prefix: "documents/",
        tags: {
          class: "blue",
          priority: "high",
        },
      },
      name: "ImportantBlueDocuments",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `bucket` - (Required) Name of the bucket this analytics configuration is associated with.
* `name` - (Required) Unique identifier of the analytics configuration for the bucket.
* `filter` - (Optional) Object filtering that accepts a prefix, tags, or a logical AND of prefix and tags (documented below).
* `storageClassAnalysis` - (Optional) Configuration for the analytics data export (documented below).

The `filter` configuration supports the following:

* `prefix` - (Optional) Object prefix for filtering.
* `tags` - (Optional) Set of object tags for filtering.

The `storageClassAnalysis` configuration supports the following:

* `dataExport` - (Required) Data export configuration (documented below).

The `dataExport` configuration supports the following:

* `outputSchemaVersion` - (Optional) Schema version of exported analytics data. Allowed values: `V_1`. Default value: `V_1`.
* `destination` - (Required) Specifies the destination for the exported analytics data (documented below).

The `destination` configuration supports the following:

* `s3BucketDestination` - (Required) Analytics data export currently only supports an S3 bucket destination (documented below).

The `s3BucketDestination` configuration supports the following:

* `bucketArn` - (Required) ARN of the destination bucket.
* `bucketAccountId` - (Optional) Account ID that owns the destination bucket.
* `format` - (Optional) Output format of exported analytics data. Allowed values: `CSV`. Default value: `CSV`.
* `prefix` - (Optional) Prefix to append to exported analytics data.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 bucket analytics configurations using `bucket:analytics`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3BucketAnalyticsConfiguration } from "./.gen/providers/aws/s3-bucket-analytics-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3BucketAnalyticsConfiguration.generateConfigForImport(
      this,
      "myBucketEntireBucket",
      "my-bucket:EntireBucket"
    );
  }
}

```

Using `terraform import`, import S3 bucket analytics configurations using `bucket:analytics`. For example:

```console
% terraform import aws_s3_bucket_analytics_configuration.my-bucket-entire-bucket my-bucket:EntireBucket
```

<!-- cache-key: cdktf-0.20.8 input-ac9272d084b98ae18a21c15ccd5706b2f6fd6234153ee5a0769b2eaad3cad4f6 -->