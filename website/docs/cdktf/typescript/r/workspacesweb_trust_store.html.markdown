---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_trust_store"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Trust Store.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_trust_store

Terraform resource for managing an AWS WorkSpaces Web Trust Store.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebTrustStore } from "./.gen/providers/aws/workspacesweb-trust-store";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebTrustStore(this, "example", {
      certificate: [
        {
          body: Token.asString(Fn.file("certificate.pem")),
        },
      ],
    });
  }
}

```

### Multiple Certificates

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebTrustStore } from "./.gen/providers/aws/workspacesweb-trust-store";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebTrustStore(this, "example", {
      certificate: [
        {
          body: Token.asString(Fn.file("certificate1.pem")),
        },
        {
          body: Token.asString(Fn.file("certificate2.pem")),
        },
      ],
      tags: {
        Name: "example-trust-store",
      },
    });
  }
}

```

## Argument Reference

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `certificate` - (Optional) Set of certificates to include in the trust store. See [Certificate](#certificate) below.
* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Certificate

* `body` - (Required) Certificate body in PEM format.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `associatedPortalArns` - List of ARNs of the web portals associated with the trust store.
* `trustStoreArn` - ARN of the trust store.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

The `certificate` block exports the following additional attributes:

* `issuer` - Certificate issuer.
* `notValidAfter` - Date and time when the certificate expires in RFC3339 format.
* `notValidBefore` - Date and time when the certificate becomes valid in RFC3339 format.
* `subject` - Certificate subject.
* `thumbprint` - Certificate thumbprint.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Trust Store using the `trustStoreArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebTrustStore } from "./.gen/providers/aws/workspacesweb-trust-store";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebTrustStore.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:trustStore/trust_store-id-12345678"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web Trust Store using the `trustStoreArn`. For example:

```console
% terraform import aws_workspacesweb_trust_store.example arn:aws:workspaces-web:us-west-2:123456789012:trustStore/trust_store-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-0bf9dd0f4f3d1106238836b224cbda1502b3bd1367c558875027f4ee1a86f127 -->