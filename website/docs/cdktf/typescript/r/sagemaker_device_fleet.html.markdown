---
subcategory: "SageMaker"
layout: "aws"
page_title: "AWS: aws_sagemaker_device_fleet"
description: |-
  Provides a SageMaker Device Fleet resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_device_fleet

Provides a SageMaker Device Fleet resource.

## Example Usage

### Basic usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerDeviceFleet } from "./.gen/providers/aws/sagemaker-device-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerDeviceFleet(this, "example", {
      deviceFleetName: "example",
      outputConfig: {
        s3OutputLocation: "s3://${" + awsS3BucketExample.bucket + "}/prefix/",
      },
      roleArn: test.arn,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `deviceFleetName` - (Required) The name of the Device Fleet (must be unique).
* `roleArn` - (Required) The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).
* `outputConfig` - (Required) Specifies details about the repository. see [Output Config](#output-config) details below.
* `description` - (Optional) A description of the fleet.
* `enableIotRoleAlias` - (Optional) Whether to create an AWS IoT Role Alias during device fleet creation. The name of the role alias generated will match this pattern: "SageMakerEdge-{DeviceFleetName}".
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Output Config

* `s3OutputLocation` - (Required) The Amazon Simple Storage (S3) bucker URI.
* `kmsKeyId` - (Optional) The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt data on the storage volume after compilation job. If you don't provide a KMS key ID, Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Device Fleet.
* `arn` - The Amazon Resource Name (ARN) assigned by AWS to this Device Fleet.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker Device Fleets using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerDeviceFleet } from "./.gen/providers/aws/sagemaker-device-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SagemakerDeviceFleet.generateConfigForImport(this, "example", "my-fleet");
  }
}

```

Using `terraform import`, import SageMaker Device Fleets using the `name`. For example:

```console
% terraform import aws_sagemaker_device_fleet.example my-fleet
```

<!-- cache-key: cdktf-0.20.8 input-02fc3724649faa5d99b8102304ae3dbcf8bf2eccc9a7bae5038774ad140d380e -->