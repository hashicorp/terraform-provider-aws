---
subcategory: "FinSpace"
layout: "aws"
page_title: "AWS: aws_finspace_kx_database"
description: |-
  Terraform resource for managing an AWS FinSpace Kx Database.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_finspace_kx_database

Terraform resource for managing an AWS FinSpace Kx Database.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FinspaceKxDatabase } from "./.gen/providers/aws/finspace-kx-database";
import { FinspaceKxEnvironment } from "./.gen/providers/aws/finspace-kx-environment";
import { KmsKey } from "./.gen/providers/aws/kms-key";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new KmsKey(this, "example", {
      deletionWindowInDays: 7,
      description: "Example KMS Key",
    });
    const awsFinspaceKxEnvironmentExample = new FinspaceKxEnvironment(
      this,
      "example_1",
      {
        kmsKeyId: example.arn,
        name: "my-tf-kx-environment",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsFinspaceKxEnvironmentExample.overrideLogicalId("example");
    const awsFinspaceKxDatabaseExample = new FinspaceKxDatabase(
      this,
      "example_2",
      {
        description: "Example database description",
        environmentId: Token.asString(awsFinspaceKxEnvironmentExample.id),
        name: "my-tf-kx-database",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsFinspaceKxDatabaseExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `environmentId` - (Required) Unique identifier for the KX environment.
* `name` - (Required) Name of the KX database.

The following arguments are optional:

* `description` - (Optional) Description of the KX database.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) identifier of the KX database.
* `createdTimestamp` - Timestamp at which the databse is created in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
* `id` - A comma-delimited string joining environment ID and database name.
* `lastModifiedTimestamp` - Last timestamp at which the database was updated in FinSpace. Value determined as epoch time in seconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import an AWS FinSpace Kx Database using the `id` (environment ID and database name, comma-delimited). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FinspaceKxDatabase } from "./.gen/providers/aws/finspace-kx-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    FinspaceKxDatabase.generateConfigForImport(
      this,
      "example",
      "n3ceo7wqxoxcti5tujqwzs,my-tf-kx-database"
    );
  }
}

```

Using `terraform import`, import an AWS FinSpace Kx Database using the `id` (environment ID and database name, comma-delimited). For example:

```console
% terraform import aws_finspace_kx_database.example n3ceo7wqxoxcti5tujqwzs,my-tf-kx-database
```

<!-- cache-key: cdktf-0.20.8 input-d4510cf871c3b574384323c384811db1afe4695931c813e1e9e6fb86b9433a73 -->