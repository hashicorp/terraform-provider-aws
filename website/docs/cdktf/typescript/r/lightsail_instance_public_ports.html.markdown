---
subcategory: "Lightsail"
layout: "aws"
page_title: "AWS: aws_lightsail_instance_public_ports"
description: |-
  Provides an Lightsail Instance
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lightsail_instance_public_ports

Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol.

-> See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail) for more information.

~> **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones in Amazon Lightsail"](https://lightsail.aws.amazon.com/ls/docs/overview/article/understanding-regions-and-availability-zones-in-amazon-lightsail) for more details.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { LightsailInstance } from "./.gen/providers/aws/lightsail-instance";
import { LightsailInstancePublicPorts } from "./.gen/providers/aws/lightsail-instance-public-ports";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new LightsailInstance(this, "test", {
      availabilityZone: Token.asString(Fn.lookupNested(available.names, ["0"])),
      blueprintId: "amazon_linux_2",
      bundleId: "nano_3_0",
      name: "yak_sail",
    });
    const awsLightsailInstancePublicPortsTest =
      new LightsailInstancePublicPorts(this, "test_1", {
        instanceName: test.name,
        portInfo: [
          {
            fromPort: 80,
            protocol: "tcp",
            toPort: 80,
          },
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsLightsailInstancePublicPortsTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are required:

* `instanceName` - (Required) Name of the Lightsail Instance.
* `portInfo` - (Required) Configuration block with port information. AWS closes all currently open ports that are not included in the `portInfo`. Detailed below.

### port_info

The following arguments are required:

* `fromPort` - (Required) First port in a range of open ports on an instance.
* `protocol` - (Required) IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
* `toPort` - (Required) Last port in a range of open ports on an instance.

The following arguments are optional:

* `cidrs` - (Optional) Set of CIDR blocks.
* `cidrListAliases` - (Optional) Set of CIDR aliases that define access for a preconfigured range of IP addresses.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the resource.

<!-- cache-key: cdktf-0.20.1 input-dce599696ef2f93bfa8cafe79f5be851558b96bc97c2a9206fac2f0d24cb07d7 -->