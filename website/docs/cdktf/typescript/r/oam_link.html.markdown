---
subcategory: "CloudWatch Observability Access Manager"
layout: "aws"
page_title: "AWS: aws_oam_link"
description: |-
  Terraform resource for managing an AWS CloudWatch Observability Access Manager Link.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_oam_link

Terraform resource for managing an AWS CloudWatch Observability Access Manager Link.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OamLink } from "./.gen/providers/aws/oam-link";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OamLink(this, "example", {
      labelTemplate: "$AccountName",
      resourceTypes: ["AWS::CloudWatch::Metric"],
      sinkIdentifier: test.id,
      tags: {
        Env: "prod",
      },
    });
  }
}

```

### Log Group Filtering

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OamLink } from "./.gen/providers/aws/oam-link";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OamLink(this, "example", {
      labelTemplate: "$AccountName",
      linkConfiguration: {
        logGroupConfiguration: {
          filter:
            "LogGroupName LIKE 'aws/lambda/%' OR LogGroupName LIKE 'AWSLogs%'",
        },
      },
      resourceTypes: ["AWS::Logs::LogGroup"],
      sinkIdentifier: test.id,
    });
  }
}

```

### Metric Filtering

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OamLink } from "./.gen/providers/aws/oam-link";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OamLink(this, "example", {
      labelTemplate: "$AccountName",
      linkConfiguration: {
        metricConfiguration: {
          filter: "Namespace IN ('AWS/EC2', 'AWS/ELB', 'AWS/S3')",
        },
      },
      resourceTypes: ["AWS::CloudWatch::Metric"],
      sinkIdentifier: test.id,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `labelTemplate` - (Required) Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
* `resourceTypes` - (Required) Types of data that the source account shares with the monitoring account.
* `sinkIdentifier` - (Required) Identifier of the sink to use to create this link.

The following arguments are optional:

* `linkConfiguration` - (Optional) Configuration for creating filters that specify that only some metric namespaces or log groups are to be shared from the source account to the monitoring account. See [`linkConfiguration` Block](#link_configuration-block) for details.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `linkConfiguration` Block

The `linkConfiguration` configuration block supports the following arguments:

* `logGroupConfiguration` - (Optional) Configuration for filtering which log groups are to send log events from the source account to the monitoring account. See [`logGroupConfiguration` Block](#log_group_configuration-block) for details.
* `metricConfiguration` - (Optional) Configuration for filtering which metric namespaces are to be shared from the source account to the monitoring account. See [`metricConfiguration` Block](#metric_configuration-block) for details.

### `logGroupConfiguration` Block

The `logGroupConfiguration` configuration block supports the following arguments:

* `filter` - (Required) Filter string that specifies which log groups are to share their log events with the monitoring account. See [LogGroupConfiguration](https://docs.aws.amazon.com/OAM/latest/APIReference/API_LogGroupConfiguration.html) for details.

### `metricConfiguration` Block

The `metricConfiguration` configuration block supports the following arguments:

* `filter` - (Required) Filter string that specifies  which metrics are to be shared with the monitoring account. See [MetricConfiguration](https://docs.aws.amazon.com/OAM/latest/APIReference/API_MetricConfiguration.html) for details.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the link.
* `id` - ARN of the link.
* `label` - Label that is assigned to this link.
* `linkId` - ID string that AWS generated as part of the link ARN.
* `sinkArn` - ARN of the sink that is used for this link.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `1m`)
* `update` - (Default `1m`)
* `delete` - (Default `1m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch Observability Access Manager Link using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OamLink } from "./.gen/providers/aws/oam-link";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OamLink.generateConfigForImport(
      this,
      "example",
      "arn:aws:oam:us-west-2:123456789012:link/link-id"
    );
  }
}

```

Using `terraform import`, import CloudWatch Observability Access Manager Link using the `arn`. For example:

```console
% terraform import aws_oam_link.example arn:aws:oam:us-west-2:123456789012:link/link-id
```

<!-- cache-key: cdktf-0.20.1 input-28fa5b043aa7266b9585a1363822c4ef6e13576f18d0d7d60800126ef856a79d -->