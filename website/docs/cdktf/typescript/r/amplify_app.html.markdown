---
subcategory: "Amplify"
layout: "aws"
page_title: "AWS: aws_amplify_app"
description: |-
  Provides an Amplify App resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_amplify_app

Provides an Amplify App resource, a fullstack serverless app hosted on the [AWS Amplify Console](https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html).

~> **Note:** When you create/update an Amplify App from Terraform, you may end up with the error "BadRequestException: You should at least provide one valid token" because of authentication issues. See the section "Repository with Tokens" below.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmplifyApp(this, "example", {
      buildSpec:
        "version: 0.1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - yarn install\n    build:\n      commands:\n        - yarn run build\n  artifacts:\n    baseDirectory: build\n    files:\n      - '**/*'\n  cache:\n    paths:\n      - node_modules/**/*\n\n",
      customRule: [
        {
          source: "/<*>",
          status: "404",
          target: "/index.html",
        },
      ],
      environmentVariables: {
        ENV: "test",
      },
      name: "example",
      repository: "https://github.com/example/app",
    });
  }
}

```

### Repository with Tokens

If you create a new Amplify App with the `repository` argument, you also need to set `oauthToken` or `accessToken` for authentication. For GitHub, get a [personal access token](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line) and set `accessToken` as follows:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmplifyApp(this, "example", {
      accessToken: "...",
      name: "example",
      repository: "https://github.com/example/app",
    });
  }
}

```

You can omit `accessToken` if you import an existing Amplify App created by the Amplify Console (using OAuth for authentication).

### Auto Branch Creation

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmplifyApp(this, "example", {
      autoBranchCreationConfig: {
        enableAutoBuild: true,
      },
      autoBranchCreationPatterns: ["*", "*/**"],
      enableAutoBranchCreation: true,
      name: "example",
    });
  }
}

```

### Basic Authorization

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmplifyApp(this, "example", {
      basicAuthCredentials: Token.asString(
        Fn.base64encode("username1:password1")
      ),
      enableBasicAuth: true,
      name: "example",
    });
  }
}

```

### Rewrites and Redirects

```terraform
resource "aws_amplify_app" "example" {
  name = "example"

  # Reverse Proxy Rewrite for API requests
  # https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html#reverse-proxy-rewrite
  custom_rule {
    source = "/api/<*>"
    status = "200"
    target = "https://api.example.com/api/<*>"
  }

  # Redirects for Single Page Web Apps (SPA)
  # https://docs.aws.amazon.com/amplify/latest/userguide/redirects.html#redirects-for-single-page-web-apps-spa
  custom_rule {
    source = "</^[^.]+$|\\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>"
    status = "200"
    target = "/index.html"
  }
}
```

### Custom Image

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmplifyApp(this, "example", {
      environmentVariables: {
        _CUSTOM_IMAGE: "node:16",
      },
      name: "example",
    });
  }
}

```

### Custom Headers

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmplifyApp(this, "example", {
      customHeaders:
        "customHeaders:\n  - pattern: '**'\n    headers:\n      - key: 'Strict-Transport-Security'\n        value: 'max-age=31536000; includeSubDomains'\n      - key: 'X-Frame-Options'\n        value: 'SAMEORIGIN'\n      - key: 'X-XSS-Protection'\n        value: '1; mode=block'\n      - key: 'X-Content-Type-Options'\n        value: 'nosniff'\n      - key: 'Content-Security-Policy'\n        value: \"default-src 'self'\"\n\n",
      name: "example",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name for an Amplify app.
* `accessToken` - (Optional) Personal access token for a third-party source control system for an Amplify app. This token must have write access to the relevant repo to create a webhook and a read-only deploy key for the Amplify project. The token is not stored, so after applying this attribute can be removed and the setup token deleted.
* `autoBranchCreationConfig` - (Optional) Automated branch creation configuration for an Amplify app. An `autoBranchCreationConfig` block is documented below.
* `autoBranchCreationPatterns` - (Optional) Automated branch creation glob patterns for an Amplify app.
* `basicAuthCredentials` - (Optional) Credentials for basic authorization for an Amplify app.
* `buildSpec` - (Optional) The [build specification](https://docs.aws.amazon.com/amplify/latest/userguide/build-settings.html) (build spec) for an Amplify app.
* `customHeaders` - (Optional) The [custom HTTP headers](https://docs.aws.amazon.com/amplify/latest/userguide/custom-headers.html) for an Amplify app.
* `customRule` - (Optional) Custom rewrite and redirect rules for an Amplify app. A `customRule` block is documented below.
* `description` - (Optional) Description for an Amplify app.
* `enableAutoBranchCreation` - (Optional) Enables automated branch creation for an Amplify app.
* `enableBasicAuth` - (Optional) Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
* `enableBranchAutoBuild` - (Optional) Enables auto-building of branches for the Amplify App.
* `enableBranchAutoDeletion` - (Optional) Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
* `environmentVariables` - (Optional) Environment variables map for an Amplify app.
* `iamServiceRoleArn` - (Optional) AWS Identity and Access Management (IAM) service role for an Amplify app.
* `oauthToken` - (Optional) OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key. The OAuth token is not stored.
* `platform` - (Optional) Platform or framework for an Amplify app. Valid values: `WEB`, `WEB_COMPUTE`. Default value: `WEB`.
* `repository` - (Optional) Repository for an Amplify app.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

An `autoBranchCreationConfig` block supports the following arguments:

* `basicAuthCredentials` - (Optional) Basic authorization credentials for the autocreated branch.
* `buildSpec` - (Optional) Build specification (build spec) for the autocreated branch.
* `enableAutoBuild` - (Optional) Enables auto building for the autocreated branch.
* `enableBasicAuth` - (Optional) Enables basic authorization for the autocreated branch.
* `enablePerformanceMode` - (Optional) Enables performance mode for the branch.
* `enablePullRequestPreview` - (Optional) Enables pull request previews for the autocreated branch.
* `environmentVariables` - (Optional) Environment variables for the autocreated branch.
* `framework` - (Optional) Framework for the autocreated branch.
* `pullRequestEnvironmentName` - (Optional) Amplify environment name for the pull request.
* `stage` - (Optional) Describes the current stage for the autocreated branch. Valid values: `PRODUCTION`, `BETA`, `DEVELOPMENT`, `EXPERIMENTAL`, `PULL_REQUEST`.

A `customRule` block supports the following arguments:

* `condition` - (Optional) Condition for a URL rewrite or redirect rule, such as a country code.
* `source` - (Required) Source pattern for a URL rewrite or redirect rule.
* `status` - (Optional) Status code for a URL rewrite or redirect rule. Valid values: `200`, `301`, `302`, `404`, `404-200`.
* `target` - (Required) Target pattern for a URL rewrite or redirect rule.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Amplify app.
* `defaultDomain` - Default domain for the Amplify app.
* `id` - Unique ID of the Amplify app.
* `productionBranch` - Describes the information about a production branch for an Amplify app. A `productionBranch` block is documented below.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

A `productionBranch` block supports the following attributes:

* `branchName` - Branch name for the production branch.
* `last_deploy_time` - Last deploy time of the production branch.
* `status` - Status of the production branch.
* `thumbnail_url` - Thumbnail URL for the production branch.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Amplify App using Amplify App ID (appId). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmplifyApp } from "./.gen/providers/aws/amplify-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AmplifyApp.generateConfigForImport(this, "example", "d2ypk4k47z8u6");
  }
}

```

Using `terraform import`, import Amplify App using Amplify App ID (appId). For example:

```console
% terraform import aws_amplify_app.example d2ypk4k47z8u6
```

App ID can be obtained from App ARN (e.g., `arn:aws:amplify:us-east-1:12345678:apps/d2ypk4k47z8u6`).

<!-- cache-key: cdktf-0.20.1 input-d7ee79d01f5e2f26ebf8925269494af0843648275257f3560646ceda6935e583 -->