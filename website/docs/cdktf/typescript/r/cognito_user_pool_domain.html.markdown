---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_user_pool_domain"
description: |-
  Provides a Cognito User Pool Domain resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cognito_user_pool_domain

Provides a Cognito User Pool Domain resource.

## Example Usage

### Amazon Cognito domain

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CognitoUserPool } from "./.gen/providers/aws/cognito-user-pool";
import { CognitoUserPoolDomain } from "./.gen/providers/aws/cognito-user-pool-domain";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new CognitoUserPool(this, "example", {
      name: "example-pool",
    });
    new CognitoUserPoolDomain(this, "main", {
      domain: "example-domain",
      userPoolId: example.id,
    });
  }
}

```

### Custom Cognito domain

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CognitoUserPool } from "./.gen/providers/aws/cognito-user-pool";
import { CognitoUserPoolDomain } from "./.gen/providers/aws/cognito-user-pool-domain";
import { DataAwsRoute53Zone } from "./.gen/providers/aws/data-aws-route53-zone";
import { Route53Record } from "./.gen/providers/aws/route53-record";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new CognitoUserPool(this, "example", {
      name: "example-pool",
    });
    const main = new CognitoUserPoolDomain(this, "main", {
      certificateArn: cert.arn,
      domain: "auth.example.com",
      userPoolId: example.id,
    });
    const dataAwsRoute53ZoneExample = new DataAwsRoute53Zone(
      this,
      "example_2",
      {
        name: "example.com",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRoute53ZoneExample.overrideLogicalId("example");
    new Route53Record(this, "auth-cognito-A", {
      alias: {
        evaluateTargetHealth: false,
        name: main.cloudfrontDistribution,
        zoneId: main.cloudfrontDistributionZoneId,
      },
      name: main.domain,
      type: "A",
      zoneId: Token.asString(dataAwsRoute53ZoneExample.zoneId),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `domain` - (Required) For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.
* `userPoolId` - (Required) The user pool ID.
* `certificateArn` - (Optional) The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `awsAccountId` - The AWS account ID for the user pool owner.
* `cloudfrontDistribution` - The Amazon CloudFront endpoint (e.g. `dpp0gtxikpq3y.cloudfront.net`) that you use as the target of the alias that you set up with your Domain Name Service (DNS) provider.
* `cloudfrontDistributionArn` - The URL of the CloudFront distribution. This is required to generate the ALIAS `aws_route53_record`
* `cloudfrontDistributionZoneId` - The Route 53 hosted zone ID of the CloudFront distribution.
* `s3Bucket` - The S3 bucket where the static files for this domain are stored.
* `version` - The app version.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cognito User Pool Domains using the `domain`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CognitoUserPoolDomain } from "./.gen/providers/aws/cognito-user-pool-domain";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CognitoUserPoolDomain.generateConfigForImport(
      this,
      "main",
      "auth.example.org"
    );
  }
}

```

Using `terraform import`, import Cognito User Pool Domains using the `domain`. For example:

```console
% terraform import aws_cognito_user_pool_domain.main auth.example.org
```

<!-- cache-key: cdktf-0.20.8 input-daa2779d8867f347bab96c76ae17fcad9c9350846b68b324043fe7920b7f9666 -->