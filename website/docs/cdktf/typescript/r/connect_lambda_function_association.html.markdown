---
subcategory: "Connect"
layout: "aws"
page_title: "AWS: aws_connect_lambda_function_association"
description: |-
  Provides details about a specific Connect Lambda Function Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_connect_lambda_function_association

Provides an Amazon Connect Lambda Function Association. For more information see
[Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html) and [Invoke AWS Lambda functions](https://docs.aws.amazon.com/connect/latest/adminguide/connect-lambda-functions.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ConnectLambdaFunctionAssociation } from "./.gen/providers/aws/connect-lambda-function-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ConnectLambdaFunctionAssociation(this, "example", {
      functionArn: Token.asString(awsLambdaFunctionExample.arn),
      instanceId: Token.asString(awsConnectInstanceExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `functionArn` - (Required) Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.
* `instanceId` - (Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Connect instance ID and Lambda Function ARN separated by a comma (`,`).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_connect_lambda_function_association` using the `instanceId` and `functionArn` separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ConnectLambdaFunctionAssociation } from "./.gen/providers/aws/connect-lambda-function-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ConnectLambdaFunctionAssociation.generateConfigForImport(
      this,
      "example",
      "aaaaaaaa-bbbb-cccc-dddd-111111111111,arn:aws:lambda:us-west-2:123456789123:function:example"
    );
  }
}

```

Using `terraform import`, import `aws_connect_lambda_function_association` using the `instanceId` and `functionArn` separated by a comma (`,`). For example:

```console
% terraform import aws_connect_lambda_function_association.example aaaaaaaa-bbbb-cccc-dddd-111111111111,arn:aws:lambda:us-west-2:123456789123:function:example
```

<!-- cache-key: cdktf-0.20.8 input-0dc6354187f80cf8f051974afaaff4271402269b69f61f468fc0147b5f4d0bfa -->