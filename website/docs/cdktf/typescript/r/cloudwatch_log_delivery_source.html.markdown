---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_delivery_source"
description: |-
  Terraform resource for managing an AWS CloudWatch Logs Delivery Source.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_delivery_source

Terraform resource for managing an AWS CloudWatch Logs Delivery Source.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogDeliverySource } from "./.gen/providers/aws/cloudwatch-log-delivery-source";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CloudwatchLogDeliverySource(this, "example", {
      logType: "APPLICATION_LOGS",
      name: "example",
      resourceArn: Token.asString(awsBedrockagentKnowledgeBaseExample.arn),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `logType` - (Required) The type of log that the source is sending. For Amazon Bedrock, the valid value is `APPLICATION_LOGS`. For Amazon CodeWhisperer, the valid value is `EVENT_LOGS`. For IAM Identity Center, the valid value is `ERROR_LOGS`. For Amazon WorkMail, the valid values are `ACCESS_CONTROL_LOGS`, `AUTHENTICATION_LOGS`, `WORKMAIL_AVAILABILITY_PROVIDER_LOGS`, and `WORKMAIL_MAILBOX_ACCESS_LOGS`.
* `name` - (Required) The name for this delivery source.
* `resourceArn` - (Required) The ARN of the AWS resource that is generating and sending logs.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of the delivery source.
* `service` - The AWS service that is sending logs.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch Logs Delivery Source using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogDeliverySource } from "./.gen/providers/aws/cloudwatch-log-delivery-source";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudwatchLogDeliverySource.generateConfigForImport(
      this,
      "example",
      "example"
    );
  }
}

```

Using `terraform import`, import CloudWatch Logs Delivery Source using the `name`. For example:

```console
% terraform import aws_cloudwatch_log_delivery_source.example example
```

<!-- cache-key: cdktf-0.20.8 input-6d5093e924d6e5763d58ce8797dee5417d7ce811c6160358f7fe048c5366688b -->