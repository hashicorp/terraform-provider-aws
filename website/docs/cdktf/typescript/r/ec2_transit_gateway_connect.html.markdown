---
subcategory: "Transit Gateway"
layout: "aws"
page_title: "AWS: aws_ec2_transit_gateway_connect"
description: |-
  Manages an EC2 Transit Gateway Connect
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_transit_gateway_connect

Manages an EC2 Transit Gateway Connect.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TransitGatewayConnect } from "./.gen/providers/aws/ec2-transit-gateway-connect";
import { Ec2TransitGatewayVpcAttachment } from "./.gen/providers/aws/ec2-transit-gateway-vpc-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Ec2TransitGatewayVpcAttachment(this, "example", {
      subnetIds: [Token.asString(awsSubnetExample.id)],
      transitGatewayId: Token.asString(awsEc2TransitGatewayExample.id),
      vpcId: Token.asString(awsVpcExample.id),
    });
    new Ec2TransitGatewayConnect(this, "attachment", {
      transitGatewayId: Token.asString(awsEc2TransitGatewayExample.id),
      transportAttachmentId: example.id,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `protocol` - (Optional) The tunnel protocol. Valid values: `gre`. Default is `gre`.
* `tags` - (Optional) Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `transitGatewayDefaultRouteTableAssociation` - (Optional) Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
* `transitGatewayDefaultRouteTablePropagation` - (Optional) Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
* `transitGatewayId` - (Required) Identifier of EC2 Transit Gateway.
* `transportAttachmentId` - (Required) The underlaying VPC attachment

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - EC2 Transit Gateway Attachment identifier
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `update` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_ec2_transit_gateway_connect` using the EC2 Transit Gateway Connect identifier. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TransitGatewayConnect } from "./.gen/providers/aws/ec2-transit-gateway-connect";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2TransitGatewayConnect.generateConfigForImport(
      this,
      "example",
      "tgw-attach-12345678"
    );
  }
}

```

Using `terraform import`, import `aws_ec2_transit_gateway_connect` using the EC2 Transit Gateway Connect identifier. For example:

```console
% terraform import aws_ec2_transit_gateway_connect.example tgw-attach-12345678
```

<!-- cache-key: cdktf-0.20.8 input-3587ce9a543683c2a7be3dfe58f86b578cf760c76595adf37a9f30c13a13e9b9 -->