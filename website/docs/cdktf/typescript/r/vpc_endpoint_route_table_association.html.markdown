---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_endpoint_route_table_association"
description: |-
  Manages a VPC Endpoint Route Table Association
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_endpoint_route_table_association

Manages a VPC Endpoint Route Table Association

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointRouteTableAssociation } from "./.gen/providers/aws/vpc-endpoint-route-table-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpcEndpointRouteTableAssociation(this, "example", {
      routeTableId: Token.asString(awsRouteTableExample.id),
      vpcEndpointId: Token.asString(awsVpcEndpointExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `routeTableId` - (Required) Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
* `vpcEndpointId` - (Required) Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - A hash of the EC2 Route Table and VPC Endpoint identifiers.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoint Route Table Associations using `vpcEndpointId` together with `routeTableId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointRouteTableAssociation } from "./.gen/providers/aws/vpc-endpoint-route-table-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcEndpointRouteTableAssociation.generateConfigForImport(
      this,
      "example",
      "vpce-aaaaaaaa/rtb-bbbbbbbb"
    );
  }
}

```

Using `terraform import`, import VPC Endpoint Route Table Associations using `vpcEndpointId` together with `routeTableId`. For example:

```console
% terraform import aws_vpc_endpoint_route_table_association.example vpce-aaaaaaaa/rtb-bbbbbbbb
```

<!-- cache-key: cdktf-0.20.8 input-642bffdb6fac82c79353d54280251de2b233ae4e54c6477e8500b23989e28b95 -->