---
subcategory: "Transit Gateway"
layout: "aws"
page_title: "AWS: aws_ec2_transit_gateway_connect_peer"
description: |-
  Manages an EC2 Transit Gateway Connect Peer
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_transit_gateway_connect_peer

Manages an EC2 Transit Gateway Connect Peer.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TransitGatewayConnect } from "./.gen/providers/aws/ec2-transit-gateway-connect";
import { Ec2TransitGatewayConnectPeer } from "./.gen/providers/aws/ec2-transit-gateway-connect-peer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Ec2TransitGatewayConnect(this, "example", {
      transitGatewayId: Token.asString(awsEc2TransitGatewayExample.id),
      transportAttachmentId: Token.asString(
        awsEc2TransitGatewayVpcAttachmentExample.id
      ),
    });
    const awsEc2TransitGatewayConnectPeerExample =
      new Ec2TransitGatewayConnectPeer(this, "example_1", {
        insideCidrBlocks: ["169.254.100.0/29"],
        peerAddress: "10.1.2.3",
        transitGatewayAttachmentId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEc2TransitGatewayConnectPeerExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `bgpAsn` - (Optional) The BGP ASN number assigned customer device. If not provided, it will use the same BGP ASN as is associated with Transit Gateway.
* `insideCidrBlocks` - (Required) The CIDR block that will be used for addressing within the tunnel. It must contain exactly one IPv4 CIDR block and up to one IPv6 CIDR block. The IPv4 CIDR block must be /29 size and must be within 169.254.0.0/16 range, with exception of: 169.254.0.0/29, 169.254.1.0/29, 169.254.2.0/29, 169.254.3.0/29, 169.254.4.0/29, 169.254.5.0/29, 169.254.169.248/29. The IPv6 CIDR block must be /125 size and must be within fd00::/8. The first IP from each CIDR block is assigned for customer gateway, the second and third is for Transit Gateway (An example: from range 169.254.100.0/29, .1 is assigned to customer gateway and .2 and .3 are assigned to Transit Gateway)
* `peerAddress` - (Required) The IP addressed assigned to customer device, which will be used as tunnel endpoint. It can be IPv4 or IPv6 address, but must be the same address family as `transitGatewayAddress`
* `tags` - (Optional) Key-value tags for the EC2 Transit Gateway Connect Peer. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `transitGatewayAddress` - (Optional) The IP address assigned to Transit Gateway, which will be used as tunnel endpoint. This address must be from associated Transit Gateway CIDR block. The address must be from the same address family as `peerAddress`. If not set explicitly, it will be selected from associated Transit Gateway CIDR blocks
* `transitGatewayAttachmentId` - (Required) The Transit Gateway Connect

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - EC2 Transit Gateway Connect Peer identifier
* `arn` - EC2 Transit Gateway Connect Peer ARN
* `bgpPeerAddress` - The IP address assigned to customer device, which is used as BGP IP address.
* `bgpTransitGatewayAddresses` - The IP addresses assigned to Transit Gateway, which are used as BGP IP addresses.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `10m`)
- `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_ec2_transit_gateway_connect_peer` using the EC2 Transit Gateway Connect Peer identifier. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TransitGatewayConnectPeer } from "./.gen/providers/aws/ec2-transit-gateway-connect-peer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2TransitGatewayConnectPeer.generateConfigForImport(
      this,
      "example",
      "tgw-connect-peer-12345678"
    );
  }
}

```

Using `terraform import`, import `aws_ec2_transit_gateway_connect_peer` using the EC2 Transit Gateway Connect Peer identifier. For example:

```console
% terraform import aws_ec2_transit_gateway_connect_peer.example tgw-connect-peer-12345678
```

<!-- cache-key: cdktf-0.20.8 input-d6fe2e495100d4a7884cb0832674c4c28b10dc1276e47184967c743d1b05aec4 -->