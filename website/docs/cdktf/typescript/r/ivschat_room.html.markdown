---
subcategory: "IVS (Interactive Video) Chat"
layout: "aws"
page_title: "AWS: aws_ivschat_room"
description: |-
  Terraform resource for managing an AWS IVS (Interactive Video) Chat Room.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ivschat_room

Terraform resource for managing an AWS IVS (Interactive Video) Chat Room.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IvschatRoom } from "./.gen/providers/aws/ivschat-room";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new IvschatRoom(this, "example", {
      name: "tf-room",
    });
  }
}

```

## Usage with Logging Configuration to S3 Bucket

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IvschatLoggingConfiguration } from "./.gen/providers/aws/ivschat-logging-configuration";
import { IvschatRoom } from "./.gen/providers/aws/ivschat-room";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucketPrefix: "tf-ivschat-logging-bucket-",
      forceDestroy: true,
    });
    const awsIvschatLoggingConfigurationExample =
      new IvschatLoggingConfiguration(this, "example_1", {
        destinationConfiguration: {
          s3: {
            bucketName: example.id,
          },
        },
        lifecycle: {
          createBeforeDestroy: true,
        },
        name: "tf-ivschat-loggingconfiguration",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIvschatLoggingConfigurationExample.overrideLogicalId("example");
    const awsIvschatRoomExample = new IvschatRoom(this, "example_2", {
      loggingConfigurationIdentifiers: [
        Token.asString(awsIvschatLoggingConfigurationExample.arn),
      ],
      name: "tf-ivschat-room",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIvschatRoomExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are optional:

* `loggingConfigurationIdentifiers` - (Optional) List of Logging Configuration
  ARNs to attach to the room.
* `maximumMessageLength` - (Optional) Maximum number of characters in a single
  message. Messages are expected to be UTF-8 encoded and this limit applies
  specifically to rune/code-point count, not number of bytes.
* `maximumMessageRatePerSecond` - (Optional) Maximum number of messages per
  second that can be sent to the room (by all clients).
* `messageReviewHandler` - (Optional) Configuration information for optional
  review of messages.
    * `fallbackResult` - (Optional) The fallback behavior (whether the message
    is allowed or denied) if the handler does not return a valid response,
    encounters an error, or times out. Valid values: `ALLOW`, `DENY`.
    * `uri` - (Optional) ARN of the lambda message review handler function.
* `name` - (Optional) Room name.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Room.
* `id` - Room ID
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IVS (Interactive Video) Chat Room using the ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IvschatRoom } from "./.gen/providers/aws/ivschat-room";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    IvschatRoom.generateConfigForImport(
      this,
      "example",
      "arn:aws:ivschat:us-west-2:326937407773:room/GoXEXyB4VwHb"
    );
  }
}

```

Using `terraform import`, import IVS (Interactive Video) Chat Room using the ARN. For example:

```console
% terraform import aws_ivschat_room.example arn:aws:ivschat:us-west-2:326937407773:room/GoXEXyB4VwHb
```

<!-- cache-key: cdktf-0.20.8 input-3fca5b37b7d82ff4310bf108852e9d4ce3f8757446324b2c39d6248a58f1f8e6 -->