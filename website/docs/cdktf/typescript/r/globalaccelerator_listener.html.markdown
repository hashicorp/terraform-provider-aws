---
subcategory: "Global Accelerator"
layout: "aws"
page_title: "AWS: aws_globalaccelerator_listener"
description: |-
  Provides a Global Accelerator listener.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_globalaccelerator_listener

Provides a Global Accelerator listener.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlobalacceleratorAccelerator } from "./.gen/providers/aws/globalaccelerator-accelerator";
import { GlobalacceleratorListener } from "./.gen/providers/aws/globalaccelerator-listener";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new GlobalacceleratorAccelerator(this, "example", {
      attributes: {
        flowLogsEnabled: true,
        flowLogsS3Bucket: "example-bucket",
        flowLogsS3Prefix: "flow-logs/",
      },
      enabled: true,
      ipAddressType: "IPV4",
      name: "Example",
    });
    const awsGlobalacceleratorListenerExample = new GlobalacceleratorListener(
      this,
      "example_1",
      {
        acceleratorArn: example.id,
        clientAffinity: "SOURCE_IP",
        portRange: [
          {
            fromPort: 80,
            toPort: 80,
          },
        ],
        protocol: "TCP",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsGlobalacceleratorListenerExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `acceleratorArn` - (Required) The Amazon Resource Name (ARN) of your accelerator.
* `clientAffinity` - (Optional) Direct all requests from a user to the same endpoint. Valid values are `NONE`, `SOURCE_IP`. Default: `NONE`. If `NONE`, Global Accelerator uses the "five-tuple" properties of source IP address, source port, destination IP address, destination port, and protocol to select the hash value. If `SOURCE_IP`, Global Accelerator uses the "two-tuple" properties of source (client) IP address and destination IP address to select the hash value.
* `protocol` - (Optional) The protocol for the connections from clients to the accelerator. Valid values are `TCP`, `UDP`.
* `portRange` - (Optional) The list of port ranges for the connections from clients to the accelerator. Fields documented below.

`portRange` supports the following arguments:

* `fromPort` - (Optional) The first port in the range of ports, inclusive.
* `toPort` - (Optional) The last port in the range of ports, inclusive.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Name (ARN) of the listener.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Global Accelerator listeners using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlobalacceleratorListener } from "./.gen/providers/aws/globalaccelerator-listener";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GlobalacceleratorListener.generateConfigForImport(
      this,
      "example",
      "arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxxx"
    );
  }
}

```

Using `terraform import`, import Global Accelerator listeners using the `id`. For example:

```console
% terraform import aws_globalaccelerator_listener.example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/listener/xxxxxxxx
```

<!-- cache-key: cdktf-0.20.8 input-916b1c351e05097e7ddc260e23377eafd367b2e2e899550a7d4798b0d81ab853 -->