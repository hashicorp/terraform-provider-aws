---
subcategory: "Chime"
layout: "aws"
page_title: "AWS: aws_chime_voice_connector_streaming"
description: |-
    The streaming configuration associated with an Amazon Chime Voice Connector. Specifies whether media streaming is enabled for sending to Amazon Kinesis, and shows the retention period for the Amazon Kinesis data, in hours.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_chime_voice_connector_streaming

Adds a streaming configuration for the specified Amazon Chime Voice Connector. The streaming configuration specifies whether media streaming is enabled for sending to Amazon Kinesis.
It also sets the retention period, in hours, for the Amazon Kinesis data.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ChimeVoiceConnector } from "./.gen/providers/aws/chime-voice-connector";
import { ChimeVoiceConnectorStreaming } from "./.gen/providers/aws/chime-voice-connector-streaming";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const defaultVar = new ChimeVoiceConnector(this, "default", {
      name: "vc-name-test",
      requireEncryption: true,
    });
    const awsChimeVoiceConnectorStreamingDefault =
      new ChimeVoiceConnectorStreaming(this, "default_1", {
        dataRetention: 7,
        disabled: false,
        streamingNotificationTargets: ["SQS"],
        voiceConnectorId: defaultVar.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsChimeVoiceConnectorStreamingDefault.overrideLogicalId("default");
  }
}

```

### Example Usage With Media Insights

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ChimeVoiceConnector } from "./.gen/providers/aws/chime-voice-connector";
import { ChimeVoiceConnectorStreaming } from "./.gen/providers/aws/chime-voice-connector-streaming";
import { ChimesdkmediapipelinesMediaInsightsPipelineConfiguration } from "./.gen/providers/aws/chimesdkmediapipelines-media-insights-pipeline-configuration";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { IamRole } from "./.gen/providers/aws/iam-role";
import { KinesisStream } from "./.gen/providers/aws/kinesis-stream";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const defaultVar = new ChimeVoiceConnector(this, "default", {
      name: "vc-name-test",
      requireEncryption: true,
    });
    const example = new KinesisStream(this, "example", {
      name: "ExampleStream",
      shardCount: 2,
    });
    const assumeRole = new DataAwsIamPolicyDocument(this, "assume_role", {
      statement: [
        {
          actions: ["sts:AssumeRole"],
          effect: "Allow",
          principals: [
            {
              identifiers: ["mediapipelines.chime.amazonaws.com"],
              type: "Service",
            },
          ],
        },
      ],
    });
    const awsIamRoleExample = new IamRole(this, "example_3", {
      assumeRolePolicy: Token.asString(assumeRole.json),
      name: "ExampleResourceAccessRole",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIamRoleExample.overrideLogicalId("example");
    const awsChimesdkmediapipelinesMediaInsightsPipelineConfigurationExample =
      new ChimesdkmediapipelinesMediaInsightsPipelineConfiguration(
        this,
        "example_4",
        {
          elements: [
            {
              amazonTranscribeCallAnalyticsProcessorConfiguration: {
                languageCode: "en-US",
              },
              type: "AmazonTranscribeCallAnalyticsProcessor",
            },
            {
              kinesisDataStreamSinkConfiguration: {
                insightsTarget: example.arn,
              },
              type: "KinesisDataStreamSink",
            },
          ],
          name: "ExampleConfig",
          resourceAccessRoleArn: Token.asString(awsIamRoleExample.arn),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsChimesdkmediapipelinesMediaInsightsPipelineConfigurationExample.overrideLogicalId(
      "example"
    );
    const awsChimeVoiceConnectorStreamingDefault =
      new ChimeVoiceConnectorStreaming(this, "default_5", {
        dataRetention: 7,
        disabled: false,
        mediaInsightsConfiguration: {
          configurationArn: Token.asString(
            awsChimesdkmediapipelinesMediaInsightsPipelineConfigurationExample.arn
          ),
          disabled: false,
        },
        streamingNotificationTargets: ["SQS"],
        voiceConnectorId: defaultVar.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsChimeVoiceConnectorStreamingDefault.overrideLogicalId("default");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `voiceConnectorId` - (Required) The Amazon Chime Voice Connector ID.
* `dataRetention`  - (Required) The retention period, in hours, for the Amazon Kinesis data.
* `disabled` - (Optional) When true, media streaming to Amazon Kinesis is turned off. Default: `false`
* `streamingNotificationTargets` - (Optional) The streaming notification targets. Valid Values: `EventBridge | SNS | SQS`
* `mediaInsightsConfiguration` - (Optional) The media insights configuration. See [`mediaInsightsConfiguration`](#media_insights_configuration).

### media_insights_configuration

* `disabled` - (Optional) When `true`, the media insights configuration is not enabled. Defaults to `false`.
* `configurationArn` - (Optional) The media insights configuration that will be invoked by the Voice Connector.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Chime Voice Connector ID.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Chime Voice Connector Streaming using the `voiceConnectorId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ChimeVoiceConnectorStreaming } from "./.gen/providers/aws/chime-voice-connector-streaming";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ChimeVoiceConnectorStreaming.generateConfigForImport(
      this,
      "default",
      "abcdef1ghij2klmno3pqr4"
    );
  }
}

```

Using `terraform import`, import Chime Voice Connector Streaming using the `voiceConnectorId`. For example:

```console
% terraform import aws_chime_voice_connector_streaming.default abcdef1ghij2klmno3pqr4
```

<!-- cache-key: cdktf-0.20.8 input-1d6eaf10d1870a1e8fdf049fb6ca121f258d5ffdbe4eae79fe564f39d16ce4f8 -->