---
subcategory: "EC2 (Elastic Compute Cloud)"
layout: "aws"
page_title: "AWS: aws_ami_launch_permission"
description: |-
  Adds a launch permission to an Amazon Machine Image (AMI).
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ami_launch_permission

Adds a launch permission to an Amazon Machine Image (AMI).

## Example Usage

### AWS Account ID

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmiLaunchPermission } from "./.gen/providers/aws/ami-launch-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmiLaunchPermission(this, "example", {
      accountId: "123456789012",
      imageId: "ami-12345678",
    });
  }
}

```

### Public Access

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmiLaunchPermission } from "./.gen/providers/aws/ami-launch-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AmiLaunchPermission(this, "example", {
      group: "all",
      imageId: "ami-12345678",
    });
  }
}

```

### Organization Access

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmiLaunchPermission } from "./.gen/providers/aws/ami-launch-permission";
import { DataAwsOrganizationsOrganization } from "./.gen/providers/aws/data-aws-organizations-organization";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsOrganizationsOrganization(this, "current", {});
    new AmiLaunchPermission(this, "example", {
      imageId: "ami-12345678",
      organizationArn: Token.asString(current.arn),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `accountId` - (Optional) AWS account ID for the launch permission.
* `group` - (Optional) Name of the group for the launch permission. Valid values: `"all"`.
* `imageId` - (Required) ID of the AMI.
* `organizationArn` - (Optional) ARN of an organization for the launch permission.
* `organizationalUnitArn` - (Optional) ARN of an organizational unit for the launch permission.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Launch permission ID.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AMI Launch Permissions using `[ACCOUNT-ID|GROUP-NAME|ORGANIZATION-ARN|ORGANIZATIONAL-UNIT-ARN]/IMAGE-ID`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AmiLaunchPermission } from "./.gen/providers/aws/ami-launch-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AmiLaunchPermission.generateConfigForImport(
      this,
      "example",
      "123456789012/ami-12345678"
    );
  }
}

```

Using `terraform import`, import AMI Launch Permissions using `[ACCOUNT-ID|GROUP-NAME|ORGANIZATION-ARN|ORGANIZATIONAL-UNIT-ARN]/IMAGE-ID`. For example:

```console
% terraform import aws_ami_launch_permission.example 123456789012/ami-12345678
```

<!-- cache-key: cdktf-0.20.8 input-a0902093918e0a418db9b2fc23c95e8777db95ce86c83b3b547f718d788c6648 -->