---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_resource_policy"
description: |-
  Provides a resource to manage a CloudWatch log resource policy
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_resource_policy

Provides a resource to manage a CloudWatch log resource policy.

## Example Usage

### Elasticsearch Log Publishing

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogResourcePolicy } from "./.gen/providers/aws/cloudwatch-log-resource-policy";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const elasticsearchLogPublishingPolicy = new DataAwsIamPolicyDocument(
      this,
      "elasticsearch-log-publishing-policy",
      {
        statement: [
          {
            actions: [
              "logs:CreateLogStream",
              "logs:PutLogEvents",
              "logs:PutLogEventsBatch",
            ],
            principals: [
              {
                identifiers: ["es.amazonaws.com"],
                type: "Service",
              },
            ],
            resources: ["arn:aws:logs:*"],
          },
        ],
      }
    );
    const awsCloudwatchLogResourcePolicyElasticsearchLogPublishingPolicy =
      new CloudwatchLogResourcePolicy(
        this,
        "elasticsearch-log-publishing-policy_1",
        {
          policyDocument: Token.asString(elasticsearchLogPublishingPolicy.json),
          policyName: "elasticsearch-log-publishing-policy",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogResourcePolicyElasticsearchLogPublishingPolicy.overrideLogicalId(
      "elasticsearch-log-publishing-policy"
    );
  }
}

```

### Route53 Query Logging

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogResourcePolicy } from "./.gen/providers/aws/cloudwatch-log-resource-policy";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const route53QueryLoggingPolicy = new DataAwsIamPolicyDocument(
      this,
      "route53-query-logging-policy",
      {
        statement: [
          {
            actions: ["logs:CreateLogStream", "logs:PutLogEvents"],
            principals: [
              {
                identifiers: ["route53.amazonaws.com"],
                type: "Service",
              },
            ],
            resources: ["arn:aws:logs:*:*:log-group:/aws/route53/*"],
          },
        ],
      }
    );
    const awsCloudwatchLogResourcePolicyRoute53QueryLoggingPolicy =
      new CloudwatchLogResourcePolicy(this, "route53-query-logging-policy_1", {
        policyDocument: Token.asString(route53QueryLoggingPolicy.json),
        policyName: "route53-query-logging-policy",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogResourcePolicyRoute53QueryLoggingPolicy.overrideLogicalId(
      "route53-query-logging-policy"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `policyDocument` - (Required) Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.
* `policyName` - (Required) Name of the resource policy.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the CloudWatch log resource policy

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudWatch log resource policies using the policy name. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogResourcePolicy } from "./.gen/providers/aws/cloudwatch-log-resource-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudwatchLogResourcePolicy.generateConfigForImport(
      this,
      "myPolicy",
      "MyPolicy"
    );
  }
}

```

Using `terraform import`, import CloudWatch log resource policies using the policy name. For example:

```console
% terraform import aws_cloudwatch_log_resource_policy.MyPolicy MyPolicy
```

<!-- cache-key: cdktf-0.20.8 input-e10ada71512fa142d53597fd2949e853332001f8f918abaf19a3f490a6fae621 -->