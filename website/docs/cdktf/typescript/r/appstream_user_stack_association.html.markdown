---
subcategory: "AppStream 2.0"
layout: "aws"
page_title: "AWS: aws_appstream_user_stack_association"
description: |-
  Manages an AppStream User Stack association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appstream_user_stack_association

Manages an AppStream User Stack association.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppstreamStack } from "./.gen/providers/aws/appstream-stack";
import { AppstreamUser } from "./.gen/providers/aws/appstream-user";
import { AppstreamUserStackAssociation } from "./.gen/providers/aws/appstream-user-stack-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new AppstreamStack(this, "test", {
      name: "STACK NAME",
    });
    const awsAppstreamUserTest = new AppstreamUser(this, "test_1", {
      authenticationType: "USERPOOL",
      userName: "EMAIL",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppstreamUserTest.overrideLogicalId("test");
    const awsAppstreamUserStackAssociationTest =
      new AppstreamUserStackAssociation(this, "test_2", {
        authenticationType: Token.asString(
          awsAppstreamUserTest.authenticationType
        ),
        stackName: test.name,
        userName: Token.asString(awsAppstreamUserTest.userName),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAppstreamUserStackAssociationTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are required:

* `authenticationType` - (Required) Authentication type for the user.
* `stackName` (Required) Name of the stack that is associated with the user.
* `userName` (Required) Email address of the user who is associated with the stack.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `sendEmailNotification` - (Optional) Whether a welcome email is sent to a user after the user is created in the user pool.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique ID of the appstream User Stack association.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppStream User Stack Association using the `userName`, `authenticationType`, and `stackName`, separated by a slash (`/`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppstreamUserStackAssociation } from "./.gen/providers/aws/appstream-user-stack-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AppstreamUserStackAssociation.generateConfigForImport(
      this,
      "example",
      "userName/auhtenticationType/stackName"
    );
  }
}

```

Using `terraform import`, import AppStream User Stack Association using the `userName`, `authenticationType`, and `stackName`, separated by a slash (`/`). For example:

```console
% terraform import aws_appstream_user_stack_association.example userName/auhtenticationType/stackName
```

<!-- cache-key: cdktf-0.20.8 input-5c09fa2ab069ec17693b12585ca2a841eb905c2c9a458adaba3a9a4a97026df1 -->