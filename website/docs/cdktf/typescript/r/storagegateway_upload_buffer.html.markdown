---
subcategory: "Storage Gateway"
layout: "aws"
page_title: "AWS: aws_storagegateway_upload_buffer"
description: |-
  Manages an AWS Storage Gateway upload buffer
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_storagegateway_upload_buffer

Manages an AWS Storage Gateway upload buffer.

~> **NOTE:** The Storage Gateway API provides no method to remove an upload buffer disk. Destroying this Terraform resource does not perform any Storage Gateway actions.

## Example Usage

### Cached and VTL Gateway Type

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsStoragegatewayLocalDisk } from "./.gen/providers/aws/data-aws-storagegateway-local-disk";
import { StoragegatewayUploadBuffer } from "./.gen/providers/aws/storagegateway-upload-buffer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new DataAwsStoragegatewayLocalDisk(this, "test", {
      diskNode: Token.asString(awsVolumeAttachmentTest.deviceName),
      gatewayArn: Token.asString(awsStoragegatewayGatewayTest.arn),
    });
    const awsStoragegatewayUploadBufferTest = new StoragegatewayUploadBuffer(
      this,
      "test_1",
      {
        diskPath: Token.asString(test.diskPath),
        gatewayArn: Token.asString(awsStoragegatewayGatewayTest.arn),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsStoragegatewayUploadBufferTest.overrideLogicalId("test");
  }
}

```

### Stored Gateway Type

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsStoragegatewayLocalDisk } from "./.gen/providers/aws/data-aws-storagegateway-local-disk";
import { StoragegatewayUploadBuffer } from "./.gen/providers/aws/storagegateway-upload-buffer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new StoragegatewayUploadBuffer(this, "example", {
      diskId: Token.asString(dataAwsStoragegatewayLocalDiskExample.id),
      gatewayArn: Token.asString(awsStoragegatewayGatewayExample.arn),
    });
    new DataAwsStoragegatewayLocalDisk(this, "test", {
      diskNode: Token.asString(awsVolumeAttachmentTest.deviceName),
      gatewayArn: Token.asString(awsStoragegatewayGatewayTest.arn),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `diskId` - (Optional) Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.
* `diskPath` - (Optional) Local disk path. For example, `/dev/nvme1n1`.
* `gatewayArn` - (Required) The Amazon Resource Name (ARN) of the gateway.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Combined gateway Amazon Resource Name (ARN) and local disk identifier.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_storagegateway_upload_buffer` using the gateway Amazon Resource Name (ARN) and local disk identifier separated with a colon (`:`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { StoragegatewayUploadBuffer } from "./.gen/providers/aws/storagegateway-upload-buffer";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    StoragegatewayUploadBuffer.generateConfigForImport(
      this,
      "example",
      "arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678:pci-0000:03:00.0-scsi-0:0:0:0"
    );
  }
}

```

Using `terraform import`, import `aws_storagegateway_upload_buffer` using the gateway Amazon Resource Name (ARN) and local disk identifier separated with a colon (`:`). For example:

```console
% terraform import aws_storagegateway_upload_buffer.example arn:aws:storagegateway:us-east-1:123456789012:gateway/sgw-12345678:pci-0000:03:00.0-scsi-0:0:0:0
```

<!-- cache-key: cdktf-0.20.8 input-b0af0afe875976ec7840026599cb6afae2ba25fa1e765fc7e2c96e4eaea75db7 -->