---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_customer_gateway_association"
description: |-
  Associates a customer gateway with a device and optionally, with a link.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_customer_gateway_association

Associates a customer gateway with a device and optionally, with a link.
If you specify a link, it must be associated with the specified device.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CustomerGateway } from "./.gen/providers/aws/customer-gateway";
import { Ec2TransitGateway } from "./.gen/providers/aws/ec2-transit-gateway";
import { NetworkmanagerCustomerGatewayAssociation } from "./.gen/providers/aws/networkmanager-customer-gateway-association";
import { NetworkmanagerDevice } from "./.gen/providers/aws/networkmanager-device";
import { NetworkmanagerGlobalNetwork } from "./.gen/providers/aws/networkmanager-global-network";
import { NetworkmanagerSite } from "./.gen/providers/aws/networkmanager-site";
import { NetworkmanagerTransitGatewayRegistration } from "./.gen/providers/aws/networkmanager-transit-gateway-registration";
import { VpnConnection } from "./.gen/providers/aws/vpn-connection";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new CustomerGateway(this, "example", {
      bgpAsn: Token.asString(65000),
      ipAddress: "172.83.124.10",
      type: "ipsec.1",
    });
    const awsEc2TransitGatewayExample = new Ec2TransitGateway(
      this,
      "example_1",
      {}
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEc2TransitGatewayExample.overrideLogicalId("example");
    const awsNetworkmanagerGlobalNetworkExample =
      new NetworkmanagerGlobalNetwork(this, "example_2", {
        description: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerGlobalNetworkExample.overrideLogicalId("example");
    const awsNetworkmanagerSiteExample = new NetworkmanagerSite(
      this,
      "example_3",
      {
        globalNetworkId: Token.asString(
          awsNetworkmanagerGlobalNetworkExample.id
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerSiteExample.overrideLogicalId("example");
    const awsVpnConnectionExample = new VpnConnection(this, "example_4", {
      customerGatewayId: example.id,
      staticRoutesOnly: true,
      transitGatewayId: Token.asString(awsEc2TransitGatewayExample.id),
      type: example.type,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpnConnectionExample.overrideLogicalId("example");
    const awsNetworkmanagerDeviceExample = new NetworkmanagerDevice(
      this,
      "example_5",
      {
        globalNetworkId: Token.asString(
          awsNetworkmanagerGlobalNetworkExample.id
        ),
        siteId: Token.asString(awsNetworkmanagerSiteExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerDeviceExample.overrideLogicalId("example");
    const awsNetworkmanagerTransitGatewayRegistrationExample =
      new NetworkmanagerTransitGatewayRegistration(this, "example_6", {
        dependsOn: [awsVpnConnectionExample],
        globalNetworkId: Token.asString(
          awsNetworkmanagerGlobalNetworkExample.id
        ),
        transitGatewayArn: Token.asString(awsEc2TransitGatewayExample.arn),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerTransitGatewayRegistrationExample.overrideLogicalId(
      "example"
    );
    const awsNetworkmanagerCustomerGatewayAssociationExample =
      new NetworkmanagerCustomerGatewayAssociation(this, "example_7", {
        customerGatewayArn: example.arn,
        dependsOn: [awsNetworkmanagerTransitGatewayRegistrationExample],
        deviceId: Token.asString(awsNetworkmanagerDeviceExample.id),
        globalNetworkId: Token.asString(
          awsNetworkmanagerGlobalNetworkExample.id
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerCustomerGatewayAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `customerGatewayArn` - (Required) The Amazon Resource Name (ARN) of the customer gateway.
* `deviceId` - (Required) The ID of the device.
* `globalNetworkId` - (Required) The ID of the global network.
* `linkId` - (Optional) The ID of the link.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_customer_gateway_association` using the global network ID and customer gateway ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerCustomerGatewayAssociation } from "./.gen/providers/aws/networkmanager-customer-gateway-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkmanagerCustomerGatewayAssociation.generateConfigForImport(
      this,
      "example",
      "global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:customer-gateway/cgw-123abc05e04123abc"
    );
  }
}

```

Using `terraform import`, import `aws_networkmanager_customer_gateway_association` using the global network ID and customer gateway ARN. For example:

```console
% terraform import aws_networkmanager_customer_gateway_association.example global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:customer-gateway/cgw-123abc05e04123abc
```

<!-- cache-key: cdktf-0.20.8 input-cd1a421b3c65ae404d64a476a24edb9bade1479a58410f9962263fcdb24c17e1 -->