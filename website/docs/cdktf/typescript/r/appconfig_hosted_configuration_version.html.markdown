---
subcategory: "AppConfig"
layout: "aws"
page_title: "AWS: aws_appconfig_hosted_configuration_version"
description: |-
  Provides an AppConfig Hosted Configuration Version resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_appconfig_hosted_configuration_version

Provides an AppConfig Hosted Configuration Version resource.

## Example Usage

### Freeform

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppconfigHostedConfigurationVersion } from "./.gen/providers/aws/appconfig-hosted-configuration-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppconfigHostedConfigurationVersion(this, "example", {
      applicationId: Token.asString(awsAppconfigApplicationExample.id),
      configurationProfileId: Token.asString(
        awsAppconfigConfigurationProfileExample.configurationProfileId
      ),
      content: Token.asString(
        Fn.jsonencode({
          foo: "bar",
          fruit: ["apple", "pear", "orange"],
          isThingEnabled: true,
        })
      ),
      contentType: "application/json",
      description: "Example Freeform Hosted Configuration Version",
    });
  }
}

```

### Feature Flags

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppconfigHostedConfigurationVersion } from "./.gen/providers/aws/appconfig-hosted-configuration-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AppconfigHostedConfigurationVersion(this, "example", {
      applicationId: Token.asString(awsAppconfigApplicationExample.id),
      configurationProfileId: Token.asString(
        awsAppconfigConfigurationProfileExample.configurationProfileId
      ),
      content: Token.asString(
        Fn.jsonencode({
          flags: {
            bar: {
              attributes: {
                someAttribute: {
                  constraints: {
                    required: true,
                    type: "string",
                  },
                },
                someOtherAttribute: {
                  constraints: {
                    required: true,
                    type: "number",
                  },
                },
              },
              name: "bar",
            },
            foo: {
              _deprecation: {
                status: "planned",
              },
              name: "foo",
            },
          },
          values: {
            bar: {
              enabled: "true",
              someAttribute: "Hello World",
              someOtherAttribute: 123,
            },
            foo: {
              enabled: "true",
            },
          },
          version: "1",
        })
      ),
      contentType: "application/json",
      description: "Example Feature Flag Configuration Version",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `applicationId` - (Required, Forces new resource) Application ID.
* `configurationProfileId` - (Required, Forces new resource) Configuration profile ID.
* `content` - (Required, Forces new resource) Content of the configuration or the configuration data.
* `contentType` - (Required, Forces new resource) Standard MIME type describing the format of the configuration content. For more information, see [Content-Type](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17).
* `description` - (Optional, Forces new resource) Description of the configuration.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the AppConfig  hosted configuration version.
* `id` - AppConfig application ID, configuration profile ID, and version number separated by a slash (`/`).
* `versionNumber` - Version number of the hosted configuration.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppConfig Hosted Configuration Versions using the application ID, configuration profile ID, and version number separated by a slash (`/`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AppconfigHostedConfigurationVersion } from "./.gen/providers/aws/appconfig-hosted-configuration-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    AppconfigHostedConfigurationVersion.generateConfigForImport(
      this,
      "example",
      "71abcde/11xxxxx/2"
    );
  }
}

```

Using `terraform import`, import AppConfig Hosted Configuration Versions using the application ID, configuration profile ID, and version number separated by a slash (`/`). For example:

```console
% terraform import aws_appconfig_hosted_configuration_version.example 71abcde/11xxxxx/2
```

<!-- cache-key: cdktf-0.20.8 input-a6ff65d582f450abdbc1195a62bdb811f1120a5973cdab88491b53812cadd935 -->