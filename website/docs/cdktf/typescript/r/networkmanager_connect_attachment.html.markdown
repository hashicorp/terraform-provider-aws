---
subcategory: "Network Manager"
layout: "aws"
page_title: "AWS: aws_networkmanager_connect_attachment"
description: |-
  Manages an AWS Network Manager Connect Attachment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmanager_connect_attachment

Manages an AWS Network Manager Connect Attachment.

Use this resource to create a Connect attachment in AWS Network Manager. Connect attachments enable you to connect your on-premises networks to your core network through a VPC or Transit Gateway attachment.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerConnectAttachment } from "./.gen/providers/aws/networkmanager-connect-attachment";
import { NetworkmanagerVpcAttachment } from "./.gen/providers/aws/networkmanager-vpc-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkmanagerVpcAttachment(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      subnetArns: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "arn"])),
      vpcArn: Token.asString(awsVpcExample.arn),
    });
    const awsNetworkmanagerConnectAttachmentExample =
      new NetworkmanagerConnectAttachment(this, "example_1", {
        coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
        edgeLocation: example.edgeLocation,
        options: {
          protocol: "GRE",
        },
        transportAttachmentId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectAttachmentExample.overrideLogicalId("example");
  }
}

```

### Usage with attachment accepter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerAttachmentAccepter } from "./.gen/providers/aws/networkmanager-attachment-accepter";
import { NetworkmanagerConnectAttachment } from "./.gen/providers/aws/networkmanager-connect-attachment";
import { NetworkmanagerVpcAttachment } from "./.gen/providers/aws/networkmanager-vpc-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkmanagerVpcAttachment(this, "example", {
      coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
      subnetArns: Token.asList(Fn.lookupNested(awsSubnetExample, ["*", "arn"])),
      vpcArn: Token.asString(awsVpcExample.arn),
    });
    const awsNetworkmanagerAttachmentAccepterExample =
      new NetworkmanagerAttachmentAccepter(this, "example_1", {
        attachmentId: example.id,
        attachmentType: example.attachmentType,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerAttachmentAccepterExample.overrideLogicalId("example");
    const awsNetworkmanagerConnectAttachmentExample =
      new NetworkmanagerConnectAttachment(this, "example_2", {
        coreNetworkId: Token.asString(awsccNetworkmanagerCoreNetworkExample.id),
        dependsOn: [awsNetworkmanagerAttachmentAccepterExample],
        edgeLocation: example.edgeLocation,
        options: {
          protocol: "GRE",
        },
        transportAttachmentId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmanagerConnectAttachmentExample.overrideLogicalId("example");
    new NetworkmanagerAttachmentAccepter(this, "example2", {
      attachmentId: Token.asString(
        awsNetworkmanagerConnectAttachmentExample.id
      ),
      attachmentType: Token.asString(
        awsNetworkmanagerConnectAttachmentExample.attachmentType
      ),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `coreNetworkId` - (Required) ID of a core network where you want to create the attachment.
* `edgeLocation` - (Required) Region where the edge is located.
* `options` - (Required) Options block. See [options](#options) for more information.
* `transportAttachmentId` - (Required) ID of the attachment between the two connections.

The following arguments are optional:

* `tags` - (Optional) Key-value tags for the attachment. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### options

* `protocol` - (Optional) Protocol used for the attachment connection. Valid values: `GRE`, `NO_ENCAP`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the attachment.
* `attachmentId` - ID of the attachment.
* `attachmentPolicyRuleNumber` - Policy rule number associated with the attachment.
* `attachmentType` - Type of attachment.
* `coreNetworkArn` - ARN of a core network.
* `ownerAccountId` - ID of the attachment account owner.
* `resourceArn` - Attachment resource ARN.
* `segmentName` - Name of the segment attachment.
* `state` - State of the attachment.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)
* `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmanager_connect_attachment` using the attachment ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmanagerConnectAttachment } from "./.gen/providers/aws/networkmanager-connect-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkmanagerConnectAttachment.generateConfigForImport(
      this,
      "example",
      "attachment-0f8fa60d2238d1bd8"
    );
  }
}

```

Using `terraform import`, import `aws_networkmanager_connect_attachment` using the attachment ID. For example:

```console
% terraform import aws_networkmanager_connect_attachment.example attachment-0f8fa60d2238d1bd8
```

<!-- cache-key: cdktf-0.20.8 input-4e8b4db8920cc93039fa6fbc1ee06c3e44a6ec3dd5a6578232f6f3f99c820a21 -->