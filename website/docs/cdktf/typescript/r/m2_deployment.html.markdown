---
subcategory: "Mainframe Modernization"
layout: "aws"
page_title: "AWS: aws_m2_deployment"
description: |-
  Terraform resource for managing an AWS Mainframe Modernization Deployment.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_m2_deployment

Terraform resource for managing an [AWS Mainframe Modernization Deployment.](https://docs.aws.amazon.com/m2/latest/userguide/applications-m2-deploy.html)

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { M2Deployment } from "./.gen/providers/aws/m2-deployment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new M2Deployment(this, "test", {
      applicationId: "34567890abcdef012345678012",
      applicationVersion: 1,
      environmentId: "01234567890abcdef012345678",
      start: true,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `environmentId` - (Required) Environment to deploy application to.
* `applicationId` - (Required) Application to deploy.
* `applicationVersion` - (Required) Version to application to deploy
* `start` - (Required) Start the application once deployed.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `60m`)
* `delete` - (Default `60m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Mainframe Modernization Deployment using the `APPLICATION-ID,DEPLOYMENT-ID`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { M2Deployment } from "./.gen/providers/aws/m2-deployment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    M2Deployment.generateConfigForImport(
      this,
      "example",
      "APPLICATION-ID,DEPLOYMENT-ID"
    );
  }
}

```

Using `terraform import`, import Mainframe Modernization Deployment using the `APPLICATION-ID,DEPLOYMENT-ID`. For example:

```console
% terraform import aws_m2_deployment.example APPLICATION-ID,DEPLOYMENT-ID
```

<!-- cache-key: cdktf-0.20.1 input-bc7c0d2b3405ad84269038bf63c97c6572f8171abace6b51f82bc18273fb46d7 -->