---
subcategory: "Managed Grafana"
layout: "aws"
page_title: "AWS: aws_grafana_role_association"
description: |-
  Provides an Amazon Managed Grafana workspace role association resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_grafana_role_association

Provides an Amazon Managed Grafana workspace role association resource.

## Example Usage

### Basic configuration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GrafanaRoleAssociation } from "./.gen/providers/aws/grafana-role-association";
import { GrafanaWorkspace } from "./.gen/providers/aws/grafana-workspace";
import { IamRole } from "./.gen/providers/aws/iam-role";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const assume = new IamRole(this, "assume", {
      assumeRolePolicy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: "sts:AssumeRole",
              Effect: "Allow",
              Principal: {
                Service: "grafana.amazonaws.com",
              },
              Sid: "",
            },
          ],
          Version: "2012-10-17",
        })
      ),
      name: "grafana-assume",
    });
    const example = new GrafanaWorkspace(this, "example", {
      accountAccessType: "CURRENT_ACCOUNT",
      authenticationProviders: ["SAML"],
      permissionType: "SERVICE_MANAGED",
      roleArn: assume.arn,
    });
    const awsGrafanaRoleAssociationExample = new GrafanaRoleAssociation(
      this,
      "example_2",
      {
        role: "ADMIN",
        userIds: ["USER_ID_1", "USER_ID_2"],
        workspaceId: example.id,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsGrafanaRoleAssociationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `role` - (Required) The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).
* `workspaceId` - (Required) The workspace id.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `groupIds` - (Optional) The AWS SSO group ids to be assigned the role given in `role`.
* `userIds` - (Optional) The AWS SSO user ids to be assigned the role given in `role`.

## Attribute Reference

This resource exports no additional attributes.

<!-- cache-key: cdktf-0.20.8 input-5b06e72283ef77bce79ee9c2b7225305957afdbf661d6044cd72e3aa2e896a75 -->