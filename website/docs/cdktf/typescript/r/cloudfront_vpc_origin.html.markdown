---
subcategory: "CloudFront"
layout: "aws"
page_title: "AWS: aws_cloudfront_vpc_origin"
description: |-
  Provides a CloudFront VPC Origin
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudfront_vpc_origin

Creates an Amazon CloudFront VPC origin.

For information about CloudFront VPC origins, see
[Amazon CloudFront Developer Guide - Restrict access with VPC origins][1].

## Example Usage

### Application Load Balancer

The following example below creates a CloudFront VPC origin for a Application Load Balancer.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontVpcOrigin } from "./.gen/providers/aws/cloudfront-vpc-origin";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CloudfrontVpcOrigin(this, "alb", {
      vpcOriginEndpointConfig: [
        {
          arn: thisVar.arn,
          httpPort: 8080,
          httpsPort: 8443,
          name: "Example VPC Origin",
          originProtocolPolicy: "https-only",
          originSslProtocols: [
            {
              items: ["TLSv1.2"],
              quantity: 1,
            },
          ],
        },
      ],
    });
  }
}

```

## Argument Reference

### Top Level Arguments

The following arguments are required:

* `vpcOriginEndpointConfig` (Required) - The VPC origin endpoint configuration.

The following arguments are optional:

* `tags` - (Optional) Key-value tags for the place index. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### VPC Origin Endpoint Config Arguments

* `arn` (Required) - The ARN of the CloudFront VPC origin endpoint configuration.
* `httpPort` (Required) - The HTTP port for the CloudFront VPC origin endpoint configuration.
* `httpsPort` (Required) - The HTTPS port for the CloudFront VPC origin endpoint configuration.
* `name` (Required) - The name of the CloudFront VPC origin endpoint configuration.
* `originProtocolPolicy` (Required) - The origin protocol policy for the CloudFront VPC origin endpoint configuration.
* `originSslProtocols` (Required) - A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The VPC origin ARN.
* `etag` - The current version of the origin.
* `id` - The VPC origin ID.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

[1]: https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-vpc-origins.html

## Import

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontVpcOrigin } from "./.gen/providers/aws/cloudfront-vpc-origin";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudfrontVpcOrigin.generateConfigForImport(
      this,
      "origin",
      "vo_JQEa410sssUFoY6wMkx69j"
    );
  }
}

```

Using `terraform import`, import Cloudfront VPC origins using the `id`. For example:

```console
% terraform import aws_cloudfront_vpc_origin vo_JQEa410sssUFoY6wMkx69j
```

<!-- cache-key: cdktf-0.20.8 input-187cf38c97ac211aea4b679f94d3c76f36282959a1becf8fe51ae560fd45e2b4 -->