---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_parameter_group"
description: |-
  Provides a Redshift Cluster parameter group resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_parameter_group

Provides a Redshift Cluster parameter group resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftParameterGroup } from "./.gen/providers/aws/redshift-parameter-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftParameterGroup(this, "bar", {
      family: "redshift-1.0",
      name: "parameter-group-test-terraform",
      parameter: [
        {
          name: "require_ssl",
          value: "true",
        },
        {
          name: "query_group",
          value: "example",
        },
        {
          name: "enable_user_activity_logging",
          value: "true",
        },
      ],
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the Redshift parameter group.
* `family` - (Required) The family of the Redshift parameter group.
* `description` - (Optional) The description of the Redshift parameter group. Defaults to "Managed by Terraform".
* `parameter` - (Optional) A list of Redshift parameters to apply.

Parameter blocks support the following:

* `name` - (Required) The name of the Redshift parameter.
* `value` - (Required) The value of the Redshift parameter.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

You can read more about the parameters that Redshift supports in the [documentation](http://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of parameter group
* `id` - The Redshift parameter group name.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift Parameter Groups using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftParameterGroup } from "./.gen/providers/aws/redshift-parameter-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftParameterGroup.generateConfigForImport(
      this,
      "paramgroup1",
      "parameter-group-test-terraform"
    );
  }
}

```

Using `terraform import`, import Redshift Parameter Groups using the `name`. For example:

```console
% terraform import aws_redshift_parameter_group.paramgroup1 parameter-group-test-terraform
```

<!-- cache-key: cdktf-0.20.8 input-8fbf52bda44476ea1fcc81df655088804c5cc233d70ed33ebca6dd6caf8a3a7a -->