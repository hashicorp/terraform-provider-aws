---
subcategory: "Oracle Database@AWS"
layout: "aws"
page_title: "AWS: aws_odb_cloud_exadata_infrastructure"
description: |-
  Terraform resource for managing exadata infrastructure resource for Oracle Database@AWS.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_odb_cloud_exadata_infrastructure

Terraform resource for managing exadata infrastructure resource in AWS for Oracle Database@AWS.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OdbCloudExadataInfrastructure } from "./.gen/providers/aws/odb-cloud-exadata-infrastructure";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new OdbCloudExadataInfrastructure(this, "example", {
      availabilityZoneId: "use1-az6",
      computeCount: 2,
      customerContactsToSendToOci: [
        {
          email: "abc@example.com",
        },
        {
          email: "def@example.com",
        },
      ],
      databaseServerType: "X11M",
      displayName: "my-exa-infra",
      maintenanceWindow: [
        {
          customActionTimeoutInMins: 16,
          daysOfWeek: [
            {
              name: "MONDAY",
            },
            {
              name: "TUESDAY",
            },
          ],
          hoursOfDay: [11, 16],
          isCustomActionTimeoutEnabled: true,
          leadTimeInWeeks: 3,
          months: [
            {
              name: "FEBRUARY",
            },
            {
              name: "MAY",
            },
            {
              name: "AUGUST",
            },
            {
              name: "NOVEMBER",
            },
          ],
          patchingMode: "ROLLING",
          preference: "CUSTOM_PREFERENCE",
          weeksOfMonth: [2, 4],
        },
      ],
      shape: "Exadata.X11M",
      storageCount: 3,
      storageServerType: "X11M-HC",
      tags: {
        env: "dev",
      },
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `displayName` - (Required) The user-friendly name for the Exadata infrastructure. Changing this will force terraform to create a new resource.
* `shape` - (Required) The model name of the Exadata infrastructure. Changing this will force terraform to create new resource.
* `storageCount` - (Required) The number of storage servers that are activated for the Exadata infrastructure. Changing this will force terraform to create new resource.
* `computeCount` - (Required) The number of compute instances that the Exadata infrastructure is located. Changing this will force terraform to create new resource.
* `availabilityZoneId` - (Required) The AZ ID of the AZ where the Exadata infrastructure is located. Changing this will force terraform to create new resource.

The following arguments are optional:

* `customerContactsToSendToOci` - (Optional) The email addresses of contacts to receive notification from Oracle about maintenance updates for the Exadata infrastructure. Changing this will force terraform to create new resource.
* `availabilityZone`: (Optional) The name of the Availability Zone (AZ) where the Exadata infrastructure is located. Changing this will force terraform to create new resource.
* `databaseServerType` - (Optional) The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation. This is a mandatory parameter for Exadata.X11M system shape. Changing this will force terraform to create new resource.
* `storageServerType` - (Optional) The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation. This is a mandatory parameter for Exadata.X11M system shape. Changing this will force terraform to create new resource.
* `tags` - (Optional) A map of tags to assign to the exadata infrastructure. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

### maintenance_window

* `customActionTimeoutInMins` - (Required) The custom action timeout in minutes for the maintenance window.
* `isCustomActionTimeoutEnabled` - (Required) ndicates whether custom action timeout is enabled for the maintenance window.
* `patchingMode` - (Required) The patching mode for the maintenance window.
* `preference` - (Required) The preference for the maintenance window scheduling.
* `daysOfWeek` - (Optional) The days of the week when maintenance can be performed.
* `hoursOfDay` - (Optional) The hours of the day when maintenance can be performed.
* `leadTimeInWeeks` - (Optional) The lead time in weeks before the maintenance window.
* `months` - (Optional) The months when maintenance can be performed.
* `weeksOfMonth` - (Optional) The weeks of the month when maintenance can be performed.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Unique identifier for the pipeline.
* `arn` - Amazon Resource Name (ARN) of the pipeline.
* `activatedStorageCount` - The number of storage servers requested for the Exadata infrastructure.
* `additionalStorageCount` - The number of storage servers requested for the Exadata infrastructure.
* `availableStorageSizeInGbs` - The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
* `cpuCount` - The total number of CPU cores that are allocated to the Exadata infrastructure.
* `dataStorageSizeInTbs` - The size of the Exadata infrastructure's data disk group, in terabytes (TB).
* `dbNodeStorageSizeInGbs` - The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
* `dbServerVersion` - The software version of the database servers (dom0) in the Exadata infrastructure.
* `lastMaintenanceRunId` - The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
* `maxCpuCount` -  The total number of CPU cores available on the Exadata infrastructure.
* `maxDataStorageInTbs` - The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
* `maxDbNodeStorageSizeInGbs` - The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
* `maxMemoryInGbs` - The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
* `monthlyDbServerVersion` - The monthly software version of the database servers in the Exadata infrastructure.
* `monthlyStorageServerVersion` - The monthly software version of the storage servers installed on the Exadata infrastructure.
* `nextMaintenanceRunId` - The OCID of the next maintenance run for the Exadata infrastructure.
* `ocid` - The OCID of the Exadata infrastructure.
* `ociResourceAnchorName` - The name of the OCI resource anchor for the Exadata infrastructure.
* `percentProgress` - The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
* `status` - The current status of the Exadata infrastructure.
* `statusReason` - Additional information about the status of the Exadata infrastructure.
* `storageServerVersion` - The software version of the storage servers on the Exadata infrastructure.
* `totalStorageSizeInGbs` - The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
* `createdAt` - The time when the Exadata infrastructure was created.
* `computeModel` - The OCI model compute model used when you create or clone an instance: ECPU or OCPU.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `24h`)
* `update` - (Default `24h`)
* `delete` - (Default `24h`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import OpenSearch Ingestion Pipeline using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OdbCloudExadataInfrastructure } from "./.gen/providers/aws/odb-cloud-exadata-infrastructure";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    OdbCloudExadataInfrastructure.generateConfigForImport(
      this,
      "example",
      "example"
    );
  }
}

```

Using `terraform import`, import Exadata Infrastructure using the `id`. For example:

```console
% terraform import aws_odb_cloud_exadata_infrastructure.example example
```

<!-- cache-key: cdktf-0.20.8 input-44003da9bdb4895662096ffe1ba8e19c58ea654f169f8b592b77f12a985de05a -->