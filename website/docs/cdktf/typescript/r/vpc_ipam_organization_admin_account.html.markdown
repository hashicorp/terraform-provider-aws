---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_organization_admin_account"
description: |-
  Enables the IPAM Service and promotes an account to delegated administrator for the service.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_ipam_organization_admin_account

Enables the IPAM Service and promotes a delegated administrator.

## Example Usage

Basic usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { AwsProvider } from "./.gen/providers/aws/provider";
import { VpcIpamOrganizationAdminAccount } from "./.gen/providers/aws/vpc-ipam-organization-admin-account";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const ipamDelegateAccount = new AwsProvider(this, "aws", {
      alias: "ipam_delegate_account",
    });
    const delegated = new DataAwsCallerIdentity(this, "delegated", {
      provider: ipamDelegateAccount,
    });
    new VpcIpamOrganizationAdminAccount(this, "example", {
      delegatedAdminAccountId: Token.asString(delegated.accountId),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `delegatedAdminAccountId` - (Required)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Organizations ARN for the delegate account.
* `id` - The Organizations member account ID that you want to enable as the IPAM account.
* `email` - The Organizations email for the delegate account.
* `name` - The Organizations name for the delegate account.
* `servicePrincipal` - The AWS service principal.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IPAMs using the delegate account `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcIpamOrganizationAdminAccount } from "./.gen/providers/aws/vpc-ipam-organization-admin-account";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcIpamOrganizationAdminAccount.generateConfigForImport(
      this,
      "example",
      "12345678901"
    );
  }
}

```

Using `terraform import`, import IPAMs using the delegate account `id`. For example:

```console
% terraform import aws_vpc_ipam_organization_admin_account.example 12345678901
```

<!-- cache-key: cdktf-0.20.8 input-756ca0efb94e8ad92deb19a5ce28731120d9b49f07ca56b39bba452b2ffecbdd -->