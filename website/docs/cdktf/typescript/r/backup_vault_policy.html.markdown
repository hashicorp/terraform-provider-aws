---
subcategory: "Backup"
layout: "aws"
page_title: "AWS: aws_backup_vault_policy"
description: |-
  Provides an AWS Backup vault policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_backup_vault_policy

Provides an AWS Backup vault policy resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BackupVault } from "./.gen/providers/aws/backup-vault";
import { BackupVaultPolicy } from "./.gen/providers/aws/backup-vault-policy";
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new BackupVault(this, "example", {
      name: "example",
    });
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsIamPolicyDocumentExample = new DataAwsIamPolicyDocument(
      this,
      "example_2",
      {
        statement: [
          {
            actions: [
              "backup:DescribeBackupVault",
              "backup:DeleteBackupVault",
              "backup:PutBackupVaultAccessPolicy",
              "backup:DeleteBackupVaultAccessPolicy",
              "backup:GetBackupVaultAccessPolicy",
              "backup:StartBackupJob",
              "backup:GetBackupVaultNotifications",
              "backup:PutBackupVaultNotifications",
            ],
            effect: "Allow",
            principals: [
              {
                identifiers: [Token.asString(current.accountId)],
                type: "AWS",
              },
            ],
            resources: [example.arn],
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsIamPolicyDocumentExample.overrideLogicalId("example");
    const awsBackupVaultPolicyExample = new BackupVaultPolicy(
      this,
      "example_3",
      {
        backupVaultName: example.name,
        policy: Token.asString(dataAwsIamPolicyDocumentExample.json),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsBackupVaultPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `backupVaultName` - (Required) Name of the backup vault to add policy for.
* `policy` - (Required) The backup vault access policy document in JSON format.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the vault.
* `backupVaultArn` - The ARN of the vault.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Backup vault policy using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BackupVaultPolicy } from "./.gen/providers/aws/backup-vault-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    BackupVaultPolicy.generateConfigForImport(this, "test", "TestVault");
  }
}

```

Using `terraform import`, import Backup vault policy using the `name`. For example:

```console
% terraform import aws_backup_vault_policy.test TestVault
```

<!-- cache-key: cdktf-0.20.8 input-0b065288a85561fd455d72eea69bce60772359b09166c1b9e8fb34e54083757b -->