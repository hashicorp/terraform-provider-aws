---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_traffic_mirror_target"
description: |-
  Provides a Traffic mirror target
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_traffic_mirror_target

Provides a Traffic mirror target.  
Read [limits and considerations](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-considerations.html) for traffic mirroring

## Example Usage

To create a basic traffic mirror session

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TrafficMirrorTarget } from "./.gen/providers/aws/ec2-traffic-mirror-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Ec2TrafficMirrorTarget(this, "eni", {
      description: "ENI target",
      networkInterfaceId: test.primaryNetworkInterfaceId,
    });
    new Ec2TrafficMirrorTarget(this, "gwlb", {
      description: "GWLB target",
      gatewayLoadBalancerEndpointId: example.id,
    });
    new Ec2TrafficMirrorTarget(this, "nlb", {
      description: "NLB target",
      networkLoadBalancerArn: lb.arn,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `description` - (Optional, Forces new) A description of the traffic mirror session.
* `networkInterfaceId` - (Optional, Forces new) The network interface ID that is associated with the target.
* `networkLoadBalancerArn` - (Optional, Forces new) The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
* `gatewayLoadBalancerEndpointId` - (Optional, Forces new) The VPC Endpoint Id of the Gateway Load Balancer that is associated with the target.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

**NOTE:** Either `networkInterfaceId` or `networkLoadBalancerArn` should be specified and both should not be specified together

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the Traffic Mirror target.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `arn` - The ARN of the traffic mirror target.
* `ownerId` - The ID of the AWS account that owns the traffic mirror target.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import traffic mirror targets using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TrafficMirrorTarget } from "./.gen/providers/aws/ec2-traffic-mirror-target";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2TrafficMirrorTarget.generateConfigForImport(
      this,
      "target",
      "tmt-0c13a005422b86606"
    );
  }
}

```

Using `terraform import`, import traffic mirror targets using the `id`. For example:

```console
% terraform import aws_ec2_traffic_mirror_target.target tmt-0c13a005422b86606
```

<!-- cache-key: cdktf-0.20.8 input-0dcea120206f78ae4bab492b768957fc04e77c30670fd1496757b5d3a63f1ae0 -->