---
subcategory: "S3 on Outposts"
layout: "aws"
page_title: "AWS: aws_s3outposts_endpoint"
description: |-
  Manages an S3 Outposts Endpoint.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3outposts_endpoint

Provides a resource to manage an S3 Outposts Endpoint.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3OutpostsEndpoint } from "./.gen/providers/aws/s3-outposts-endpoint";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new S3OutpostsEndpoint(this, "example", {
      outpostId: Token.asString(dataAwsOutpostsOutpostExample.id),
      securityGroupId: Token.asString(awsSecurityGroupExample.id),
      subnetId: Token.asString(awsSubnetExample.id),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `outpostId` - (Required) Identifier of the Outpost to contain this endpoint.
* `securityGroupId` - (Required) Identifier of the EC2 Security Group.
* `subnetId` - (Required) Identifier of the EC2 Subnet.
* `accessType` - (Optional) Type of access for the network connectivity. Valid values are `Private` or `CustomerOwnedIp`.
* `customerOwnedIpv4Pool` - (Optional) The ID of a Customer Owned IP Pool. For more on customer owned IP addresses see the [User Guide](https://docs.aws.amazon.com/outposts/latest/userguide/local-rack.html#local-gateway-subnet).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the endpoint.
* `cidrBlock` - VPC CIDR block of the endpoint.
* `creationTime` - UTC creation time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
* `id` - Amazon Resource Name (ARN) of the endpoint.
* `networkInterfaces` - Set of nested attributes for associated Elastic Network Interfaces (ENIs).
    * `networkInterfaceId` - Identifier of the Elastic Network Interface (ENI).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 Outposts Endpoints using Amazon Resource Name (ARN), EC2 Security Group identifier, and EC2 Subnet identifier, separated by commas (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3OutpostsEndpoint } from "./.gen/providers/aws/s3-outposts-endpoint";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3OutpostsEndpoint.generateConfigForImport(
      this,
      "example",
      "arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/endpoint/0123456789abcdef,sg-12345678,subnet-12345678"
    );
  }
}

```

Using `terraform import`, import S3 Outposts Endpoints using Amazon Resource Name (ARN), EC2 Security Group identifier, and EC2 Subnet identifier, separated by commas (`,`). For example:

```console
% terraform import aws_s3outposts_endpoint.example arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/endpoint/0123456789abcdef,sg-12345678,subnet-12345678
```

<!-- cache-key: cdktf-0.20.8 input-b93127d0ddadbf29aad3870a10cc0f25e4ba9456be004933e642fe9c8e38df8b -->