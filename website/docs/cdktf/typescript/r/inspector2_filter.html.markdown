---
subcategory: "Inspector"
layout: "aws"
page_title: "AWS: aws_inspector2_filter"
description: |-
  Terraform resource for managing an AWS Inspector Filter.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_inspector2_filter

Terraform resource for managing an AWS Inspector Filter.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Inspector2Filter } from "./.gen/providers/aws/inspector2-filter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Inspector2Filter(this, "example", {
      action: "NONE",
      filterCriteria: [
        {
          awsAccountId: [
            {
              comparison: "EQUALS",
              value: "111222333444",
            },
          ],
        },
      ],
      name: "test",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `action` - (Required) Action to be applied to the findings that maatch the filter. Possible values are `NONE` and `SUPPRESS`
* `name` - (Required) Name of the filter.
* `filterCriteria` - (Required) Details on the filter criteria. [Documented below](#filter-criteria).

The following arguments are optional:

* `description` - (Optional) Description
* `reason` - (Optional) Reason for creating the filter
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Filter.

### Filter Criteria

The `filterCriteria` configuration block supports the following attributes:

* `awsAccountId` - (Optional) The AWS account ID in which the finding was generated. [Documented below](#string-filter).
* `codeVulnerabilityDetectorName` - (Optional) The ID of the component. [Documented below](#string-filter).
* `codeVulnerabilityDetectorTags` - (Optional) The ID of the component. [Documented below](#string-filter).
* `codeVulnerabilityFilePath` - (Optional) The ID of the component. [Documented below](#string-filter).
* `componentId` - (Optional) The ID of the component. [Documented below](#string-filter).
* `componentType` - (Optional) The type of the component. [Documented below](#string-filter).
* `ec2InstanceImageId` - (Optional) The ID of the Amazon Machine Image (AMI). [Documented below](#string-filter).
* `ec2InstanceSubnetId` - (Optional) The ID of the subnet. [Documented below](#string-filter).
* `ec2InstanceVpcId` - (Optional) The ID of the VPC. [Documented below](#string-filter).
* `ecrImageArchitecture` - (Optional) The architecture of the ECR image. [Documented below](#string-filter).
* `ecrImageHash` - (Optional) The SHA256 hash of the ECR image. [Documented below](#string-filter).
* `ecrImagePushedAt` - (Optional) The date range when the image was pushed. [Documented below](#date-filter).
* `ecrImageRegistry` - (Optional) The registry of the ECR image. [Documented below](#string-filter).
* `ecrImageRepositoryName` - (Optional) The name of the ECR repository. [Documented below](#string-filter).
* `ecrImageTags` - (Optional) The tags associated with the ECR image. [Documented below](#string-filter).
* `epssScore` - (Optional) EPSS (Exploit Prediction Scoring System) Score of the finding. [Documented below](#number-filter).
* `exploitAvailable` - (Optional) Availability of exploits. [Documented below](#string-filter).
* `findingArn` - (Optional) The ARN of the finding. [Documented below](#string-filter).
* `findingStatus` - (Optional) The status of the finding. [Documented below](#string-filter).
* `findingType` - (Optional) The type of the finding. [Documented below](#string-filter).
* `fixAvailable` - (Optional) Availability of the fix. [Documented below](#string-filter).
* `firstObservedAt` - (Optional) When the finding was first observed. [Documented below](#date-filter).
* `inspectorScore` - (Optional) The Inspector score given to the finding. [Documented below](#number-filter).
* `lambdaFunctionExecutionRoleArn` - (Optional) Lambda execution role ARN. [Documented below](#string-filter).
* `lambdaFunctionLastModifiedAt` - (Optional) Last modified timestamp of the lambda function. [Documented below](#date-filter).
* `lambdaFunctionLayers` - (Optional) Lambda function layers. [Documented below](#string-filter).
* `lambdaFunctionName` - (Optional) Lambda function name. [Documented below](#string-filter).
* `lambdaFunctionRuntime` - (Optional) Lambda function runtime. [Documented below](#string-filter).
* `lastObservedAt` - (Optional) When the finding was last observed. [Documented below](#date-filter).
* `networkProtocol` - (Optional) The network protocol of the finding. [Documented below](#string-filter).
* `portRange` - (Optional) The port range of the finding. [Documented below](#port-range-filter).
* `relatedVulnerabilities` - (Optional) Related vulnerabilities. [Documented below](#string-filter).
* `resourceId` - (Optional) The ID of the resource. [Documented below](#string-filter).
* `resourceTags` - (Optional) The tags of the resource. [Documented below](#map-filter).
* `resourceType` - (Optional) The type of the resource. [Documented below](#string-filter).
* `severity` - (Optional) The severity of the finding. [Documented below](#string-filter).
* `title` - (Optional) The title of the finding. [Documented below](#string-filter).
* `updatedAt` - (Optional) When the finding was last updated. [Documented below](#date-filter).
* `vendorSeverity` - (Optional) The severity as reported by the vendor. [Documented below](#string-filter).
* `vulnerabilityId` - (Optional) The ID of the vulnerability. [Documented below](#string-filter).
* `vulnerabilitySource` - (Optional) The source of the vulnerability. [Documented below](#string-filter).
* `vulnerablePackages` - (Optional) Details about vulnerable packages. [Documented below](#package-filter).

### Package Filter

The vulnerable package filter configuration block supports the following arguments:

* `architecture` - (Optional) The architecture of the package. [Documented below](#string-filter).
* `epoch` - (Optional) The epoch of the package. [Documented below](#number-filter).
* `filePath` - (Optional) The name of the package. [Documented below](#string-filter).
* `name` - (Optional) The name of the package. [Documented below](#string-filter).
* `release` - (Optional) The release of the package. [Documented below](#string-filter).
* `sourceLambdaLayerArn` - (Optional) The ARN of the package's source lambda layer. [Documented below](#string-filter).
* `sourceLayerHash` - (Optional) The source layer hash of the package. [Documented below](#string-filter).
* `version` - (Optional) The version of the package. [Documented below](#string-filter).

### String Filter

The string filter configuration block supports the following arguments:

* `comparison` - (Required) The comparison operator. Valid values: `EQUALS`, `PREFIX`, `NOT_EQUALS`.
* `value` - (Required) The value to compare against.

### Number Filter

The number filter configuration block supports the following arguments:

* `lowerInclusive` - (Optional) Lower bound of the range, inclusive.
* `upperInclusive` - (Optional) Upper bound of the range, inclusive.

### Date Filter

The date filter configuration block supports the following arguments:

* `startInclusive` - (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
* `endInclusive` - (Optional) End of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.

### Map Filter

The map filter configuration block supports the following arguments:

* `comparison` - (Required) The comparison operator. Valid values: `EQUALS`.
* `key` - (Required) The key to filter on.
* `value` - (Required) The value to filter on.

### Port Range Filter

The port range filter configuration block supports the following arguments:

* `beginInclusive` - (Required) The beginning of the port range, inclusive.
* `endInclusive` - (Required) The end of the port range, inclusive.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Inspector Filter using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Inspector2Filter } from "./.gen/providers/aws/inspector2-filter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Inspector2Filter.generateConfigForImport(
      this,
      "example",
      "arn:aws:inspector2:us-east-1:111222333444:owner/111222333444/filter/abcdefgh12345678"
    );
  }
}

```

Using `terraform import`, import Inspector Filter using the `example_id_arg`. For example:

```console
% terraform import aws_inspector2_filter.example "arn:aws:inspector2:us-east-1:111222333444:owner/111222333444/filter/abcdefgh12345678"
```

<!-- cache-key: cdktf-0.20.8 input-d16187b3467414ed44b1e92f921749e94002269c71b6785de2b070618914b42e -->