---
subcategory: "ECS (Elastic Container)"
layout: "aws"
page_title: "AWS: aws_ecs_cluster_capacity_providers"
description: |-
  Provides an ECS cluster capacity providers resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ecs_cluster_capacity_providers

Manages the capacity providers of an ECS Cluster.

More information about capacity providers can be found in the [ECS User Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-capacity-providers.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcsCluster } from "./.gen/providers/aws/ecs-cluster";
import { EcsClusterCapacityProviders } from "./.gen/providers/aws/ecs-cluster-capacity-providers";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new EcsCluster(this, "example", {
      name: "my-cluster",
    });
    const awsEcsClusterCapacityProvidersExample =
      new EcsClusterCapacityProviders(this, "example_1", {
        capacityProviders: ["FARGATE"],
        clusterName: example.name,
        defaultCapacityProviderStrategy: [
          {
            base: 1,
            capacityProvider: "FARGATE",
            weight: 100,
          },
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEcsClusterCapacityProvidersExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `capacityProviders` - (Optional) Set of names of one or more capacity providers to associate with the cluster. Valid values also include `FARGATE` and `FARGATE_SPOT`.
* `clusterName` - (Required, Forces new resource) Name of the ECS cluster to manage capacity providers for.
* `defaultCapacityProviderStrategy` - (Optional) Set of capacity provider strategies to use by default for the cluster. Detailed below.

### default_capacity_provider_strategy Configuration Block

* `capacityProvider` - (Required) Name of the capacity provider.
* `weight` - (Optional) The relative percentage of the total number of launched tasks that should use the specified capacity provider. The `weight` value is taken into consideration after the `base` count of tasks has been satisfied. Defaults to `0`.
* `base` - (Optional) The number of tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to `0`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Same as `clusterName`.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECS cluster capacity providers using the `clusterName` attribute. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EcsClusterCapacityProviders } from "./.gen/providers/aws/ecs-cluster-capacity-providers";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EcsClusterCapacityProviders.generateConfigForImport(
      this,
      "example",
      "my-cluster"
    );
  }
}

```

Using `terraform import`, import ECS cluster capacity providers using the `clusterName` attribute. For example:

```console
% terraform import aws_ecs_cluster_capacity_providers.example my-cluster
```

<!-- cache-key: cdktf-0.20.8 input-07d58c0c07d75ffbdc73f076ed8b48e2079c33284e6a34a1e4cdf792f6d41841 -->