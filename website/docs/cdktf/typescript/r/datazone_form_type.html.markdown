---
subcategory: "DataZone"
layout: "aws"
page_title: "AWS: aws_datazone_form_type"
description: |-
  Terraform resource for managing an AWS DataZone Form Type.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_datazone_form_type

Terraform resource for managing an AWS DataZone Form Type.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DatazoneDomain } from "./.gen/providers/aws/datazone-domain";
import { DatazoneFormType } from "./.gen/providers/aws/datazone-form-type";
import { DatazoneProject } from "./.gen/providers/aws/datazone-project";
import { IamRole } from "./.gen/providers/aws/iam-role";
import { SecurityGroup } from "./.gen/providers/aws/security-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const domainExecutionRole = new IamRole(this, "domain_execution_role", {
      assumeRolePolicy: Token.asString(
        Fn.jsonencode({
          Statement: [
            {
              Action: ["sts:AssumeRole", "sts:TagSession"],
              Effect: "Allow",
              Principal: {
                Service: "datazone.amazonaws.com",
              },
            },
            {
              Action: ["sts:AssumeRole", "sts:TagSession"],
              Effect: "Allow",
              Principal: {
                Service: "cloudformation.amazonaws.com",
              },
            },
          ],
          Version: "2012-10-17",
        })
      ),
      inlinePolicy: [
        {
          name: "example name",
          policy: Token.asString(
            Fn.jsonencode({
              Statement: [
                {
                  Action: ["datazone:*", "ram:*", "sso:*", "kms:*"],
                  Effect: "Allow",
                  Resource: "*",
                },
              ],
              Version: "2012-10-17",
            })
          ),
        },
      ],
      name: "example name",
    });
    new SecurityGroup(this, "test", {
      name: "example name",
    });
    const awsDatazoneDomainTest = new DatazoneDomain(this, "test_2", {
      domainExecutionRole: domainExecutionRole.arn,
      name: "example name",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDatazoneDomainTest.overrideLogicalId("test");
    const awsDatazoneProjectTest = new DatazoneProject(this, "test_3", {
      description: "desc",
      domainIdentifier: Token.asString(awsDatazoneDomainTest.id),
      glossaryTerms: ["2N8w6XJCwZf"],
      name: "example name",
      skipDeletionCheck: true,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDatazoneProjectTest.overrideLogicalId("test");
    const awsDatazoneFormTypeTest = new DatazoneFormType(this, "test_4", {
      description: "desc",
      domainIdentifier: Token.asString(awsDatazoneDomainTest.id),
      model: [
        {
          smithy:
            "\tstructure SageMakerModelFormType {\n\t\t\t@required\n\t\t\t@amazon.datazone#searchable\n\t\t\tmodelName: String\n\n\t\t\t@required\n\t\t\tmodelArn: String\n\n\t\t\t@required\n\t\t\tcreationTime: String\n\t\t\t}\n\n",
        },
      ],
      name: "SageMakerModelFormType",
      owningProjectIdentifier: Token.asString(awsDatazoneProjectTest.id),
      status: "DISABLED",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsDatazoneFormTypeTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are required:

* `domainIdentifier` - (Required) Identifier of the domain.
* `name` - (Required) Name of the form type. Must be the name of the structure in smithy document.
* `owningProjectIdentifier` - (Required) Identifier of project that owns the form type. Must follow regex of ^[a-zA-Z0-9_-]{1,36}.
* `model` - (Required) Object of the model of the form type that contains the following attributes.
    * `smithy` - (Required) Smithy document that indicates the model of the API. Must be between the lengths 1 and 100,000 and be encoded as a smithy document.

The following arguments are optional:

* `description` - (Optional) Description of form type. Must have a length of between 1 and 2048 characters.
* `status` - (Optional) Status of form type. Must be "ENABLED" or "DISABLED" If status is set to "ENABLED" terraform cannot delete the resource until it is manually changed in the AWS console.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `createdAt` - Creation time of the Form Type.
* `createdBy` - Creator of the Form Type.
* `originDomainId` - Origin domain id of the Form Type.
* `originProjectId` - Origin project id of the Form Type.
* `owning_project_id` - Owning project id of the Form Type.
* `revision` - Revision of the Form Type.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DataZone Form Type using a comma separated value of DomainIdentifier,Name,Revision. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DatazoneFormType } from "./.gen/providers/aws/datazone-form-type";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DatazoneFormType.generateConfigForImport(
      this,
      "example",
      "domain_identifier,name,revision"
    );
  }
}

```

Using `terraform import`, import DataZone Form Type using a comma separated value of `domainIdentifier`,`name`,`revision`. For example:

```console
% terraform import aws_datazone_form_type.example domain_identifier,name,revision
```

<!-- cache-key: cdktf-0.20.1 input-c3a2e042d80bbd96635e77f1e4358067efee9896b85ead15bd6a7ce0f445304f -->