---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_partner"
description: |-
  Provides a Redshift Partner resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_redshift_partner

Creates a new Amazon Redshift Partner Integration.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftPartner } from "./.gen/providers/aws/redshift-partner";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RedshiftPartner(this, "example", {
      accountId: Token.asString(1234567910),
      clusterIdentifier: Token.asString(awsRedshiftClusterExample.id),
      databaseName: Token.asString(awsRedshiftClusterExample.databaseName),
      partnerName: "example",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `accountId` - (Required) The Amazon Web Services account ID that owns the cluster.
* `clusterIdentifier` - (Required) The cluster identifier of the cluster that receives data from the partner.
* `databaseName` - (Required) The name of the database that receives data from the partner.
* `partnerName` - (Required) The name of the partner that is authorized to send data.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The identifier of the Redshift partner, `accountId`, `clusterIdentifier`, `databaseName`, `partnerName` separated by a colon (`:`).
* `status` - (Optional) The partner integration status.
* `statusMessage` - (Optional) The status message provided by the partner.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Redshift usage limits using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RedshiftPartner } from "./.gen/providers/aws/redshift-partner";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RedshiftPartner.generateConfigForImport(
      this,
      "example",
      "01234567910:cluster-example-id:example:example"
    );
  }
}

```

Using `terraform import`, import Redshift usage limits using the `id`. For example:

```console
% terraform import aws_redshift_partner.example 01234567910:cluster-example-id:example:example
```

<!-- cache-key: cdktf-0.20.8 input-d4438832cfe9bd08e76f7dbce4113e2e512ea90f05f4a5914f89a70db35ad904 -->