---
subcategory: "DynamoDB Accelerator (DAX)"
layout: "aws"
page_title: "AWS: aws_dax_cluster"
description: |-
  Provides an DAX Cluster resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dax_cluster

Provides a DAX Cluster resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DaxCluster } from "./.gen/providers/aws/dax-cluster";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DaxCluster(this, "bar", {
      clusterName: "cluster-example",
      iamRoleArn: Token.asString(example.arn),
      nodeType: "dax.r4.large",
      replicationFactor: 1,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `clusterEndpointEncryptionType` – (Optional) The type of encryption the
cluster's endpoint should support. Valid values are: `NONE` and `TLS`.
Default value is `NONE`.

* `clusterName` – (Required) Group identifier. DAX converts this name to
lowercase

* `iamRoleArn` - (Required) A valid Amazon Resource Name (ARN) that identifies
an IAM role. At runtime, DAX will assume this role and use the role's
permissions to access DynamoDB on your behalf

* `nodeType` – (Required) The compute and memory capacity of the nodes. See
[Nodes][1] for supported node types

* `replicationFactor` – (Required) The number of nodes in the DAX cluster. A
replication factor of 1 will create a single-node cluster, without any read
replicas

* `availabilityZones` - (Optional) List of Availability Zones in which the
nodes will be created

* `description` – (Optional) Description for the cluster

* `notificationTopicArn` – (Optional) An Amazon Resource Name (ARN) of an
SNS topic to send DAX notifications to. Example:
`arn:aws:sns:us-east-1:012345678999:my_sns_topic`

* `parameterGroupName` – (Optional) Name of the parameter group to associate
with this DAX cluster

* `maintenanceWindow` – (Optional) Specifies the weekly time range for when
maintenance on the cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi`
(24H Clock UTC). The minimum maintenance window is a 60 minute period. Example:
`sun:05:00-sun:09:00`

* `securityGroupIds` – (Optional) One or more VPC security groups associated
with the cluster

* `serverSideEncryption` - (Optional) Encrypt at rest options

* `subnetGroupName` – (Optional) Name of the subnet group to be used for the
cluster

* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

The `serverSideEncryption` object supports the following:

* `enabled` - (Optional) Whether to enable encryption at rest. Defaults to `false`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the DAX cluster

* `nodes` - List of node objects including `id`, `address`, `port` and
`availabilityZone`. Referenceable e.g., as
`${aws_dax_cluster.test.nodes.0.address}`

* `configurationEndpoint` - The configuration endpoint for this DAX cluster,
consisting of a DNS name and a port number

* `clusterAddress` - The DNS name of the DAX cluster without the port appended

* `port` - The port used by the configuration endpoint

* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `45m`)
- `update` - (Default `45m`)
- `delete` - (Default `90m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DAX Clusters using the `clusterName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DaxCluster } from "./.gen/providers/aws/dax-cluster";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DaxCluster.generateConfigForImport(this, "myCluster", "my_cluster");
  }
}

```

Using `terraform import`, import DAX Clusters using the `clusterName`. For example:

```console
% terraform import aws_dax_cluster.my_cluster my_cluster
```

[1]: http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.concepts.cluster.html#DAX.concepts.nodes

<!-- cache-key: cdktf-0.20.8 input-4181166d95f7861d31bfe7d254c348dcceab5cb195724123d069730a8e82414d -->