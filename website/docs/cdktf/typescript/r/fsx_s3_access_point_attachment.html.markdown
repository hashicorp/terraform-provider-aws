---
subcategory: "FSx"
layout: "aws"
page_title: "AWS: aws_fsx_s3_access_point_attachment"
description: |-
  Manages an Amazon FSx S3 Access Point attachment.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_fsx_s3_access_point_attachment

Manages an Amazon FSx S3 Access Point attachment.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FsxS3AccessPointAttachment } from "./.gen/providers/aws/fsx-s3-access-point-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new FsxS3AccessPointAttachment(this, "example", {
      name: "example-attachment",
      openzfsConfiguration: [
        {
          fileSystemIdentity: [
            {
              posixUser: [
                {
                  gid: 1001,
                  uid: 1001,
                },
              ],
              type: "POSIX",
            },
          ],
          volumeId: Token.asString(awsFsxOpenzfsVolumeExample.id),
        },
      ],
      type: "OPENZFS",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the S3 access point.
* `openzfsConfiguration` - (Required) Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See [`openzfsConfiguration` Block](#openzfs_configuration-block) for details.
* `type` - (Required) Type of S3 access point. Valid values: `OpenZFS`.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `s3AccessPoint` - (Optional) S3 access point configuration. See [`s3AccessPoint` Block](#s3_access_point-block) for details.

### `openzfsConfiguration` Block

The `openzfsConfiguration` configuration block supports the following arguments:

* `fileSystemIdentity` - (Required) File system user identity to use for authorizing file read and write requests that are made using the S3 access point. See [`fileSystemIdentity` Block](#file_system_identity-block) for details.
* `volumeId` - (Required) ID of the FSx for OpenZFS volume to which the S3 access point is attached.

### `fileSystemIdentity` Block

The `fileSystemIdentity` configuration block supports the following arguments:

* `posixUser` - (Required) UID and GIDs of the file system POSIX user. See [`posixUser` Block](#posix_user-block) for details.
* `type` - (Required) FSx for OpenZFS user identity type. Valid values: `POSIX`.

### `posixUser` Block

The `posixUser` configuration block supports the following arguments:

* `gid` - (Required) GID of the file system user.
* `secondaryGids` - (Optional) List of secondary GIDs for the file system user..
* `uid` - (Required) UID of the file system user.

### `s3AccessPoint` Block

The `s3AccessPoint` configuration block supports the following arguments:

* `policy` - (Required) Access policy associated with the S3 access point configuration.
* `vpcConfiguration` - (Optional) Amazon S3 restricts access to the S3 access point to requests made from the specified VPC. See [`vpcConfiguration` Block](#vpc_configuration-block) for details.

### `vpcConfiguration` Block

The `vpcConfiguration` configuration block supports the following arguments:

* `vpcId` - (Required) VPC ID.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `s3AccessPointAlias` - S3 access point's alias.
* `s3AccessPointArn` - S3 access point's ARN.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `15m`)
* `delete` - (Default `15m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import FSx S3 Access Point attachments using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { FsxS3AccessPointAttachment } from "./.gen/providers/aws/fsx-s3-access-point-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    FsxS3AccessPointAttachment.generateConfigForImport(
      this,
      "example",
      "example-attachment"
    );
  }
}

```

Using `terraform import`, import FSx S3 Access Point attachments using the `name`. For example:

```console
% terraform import aws_fsx_s3_access_point_attachment.example example-attachment
```

<!-- cache-key: cdktf-0.20.8 input-f243a42de5ec7aaf955c8b211bf2426c84c9c3faf15210b9a77594969f717a2f -->