---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_traffic_mirror_filter"
description: |-
  Provides an Traffic mirror filter
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_traffic_mirror_filter

Provides an Traffic mirror filter.  
Read [limits and considerations](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-considerations.html) for traffic mirroring

## Example Usage

To create a basic traffic mirror filter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TrafficMirrorFilter } from "./.gen/providers/aws/ec2-traffic-mirror-filter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Ec2TrafficMirrorFilter(this, "foo", {
      description: "traffic mirror filter - terraform example",
      networkServices: ["amazon-dns"],
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `description` - (Optional, Forces new resource) A description of the filter.
* `networkServices` - (Optional) List of amazon network services that should be mirrored. Valid values: `amazon-dns`.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The ARN of the traffic mirror filter.
* `id` - The name of the filter.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import traffic mirror filter using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2TrafficMirrorFilter } from "./.gen/providers/aws/ec2-traffic-mirror-filter";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2TrafficMirrorFilter.generateConfigForImport(
      this,
      "foo",
      "tmf-0fbb93ddf38198f64"
    );
  }
}

```

Using `terraform import`, import traffic mirror filter using the `id`. For example:

```console
% terraform import aws_ec2_traffic_mirror_filter.foo tmf-0fbb93ddf38198f64
```

<!-- cache-key: cdktf-0.20.8 input-08ada8ec01a41a5d998f21a5946d9d4b579e2fe8c3ac968d45ecefd291cbd4c3 -->