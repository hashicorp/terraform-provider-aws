---
subcategory: "Security Hub"
layout: "aws"
page_title: "AWS: aws_securityhub_finding_aggregator"
description: |-
  Manages a Security Hub finding aggregator
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_securityhub_finding_aggregator

Manages a Security Hub finding aggregator. Security Hub needs to be enabled in a region in order for the aggregator to pull through findings.

## Example Usage

### All Regions Usage

The following example will enable the aggregator for every region.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAccount } from "./.gen/providers/aws/securityhub-account";
import { SecurityhubFindingAggregator } from "./.gen/providers/aws/securityhub-finding-aggregator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SecurityhubAccount(this, "example", {});
    const awsSecurityhubFindingAggregatorExample =
      new SecurityhubFindingAggregator(this, "example_1", {
        dependsOn: [example],
        linkingMode: "ALL_REGIONS",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityhubFindingAggregatorExample.overrideLogicalId("example");
  }
}

```

### All Regions Except Specified Regions Usage

The following example will enable the aggregator for every region except those specified in `specifiedRegions`.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAccount } from "./.gen/providers/aws/securityhub-account";
import { SecurityhubFindingAggregator } from "./.gen/providers/aws/securityhub-finding-aggregator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SecurityhubAccount(this, "example", {});
    const awsSecurityhubFindingAggregatorExample =
      new SecurityhubFindingAggregator(this, "example_1", {
        dependsOn: [example],
        linkingMode: "ALL_REGIONS_EXCEPT_SPECIFIED",
        specifiedRegions: ["eu-west-1", "eu-west-2"],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityhubFindingAggregatorExample.overrideLogicalId("example");
  }
}

```

### Specified Regions Usage

The following example will enable the aggregator for every region specified in `specifiedRegions`.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAccount } from "./.gen/providers/aws/securityhub-account";
import { SecurityhubFindingAggregator } from "./.gen/providers/aws/securityhub-finding-aggregator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SecurityhubAccount(this, "example", {});
    const awsSecurityhubFindingAggregatorExample =
      new SecurityhubFindingAggregator(this, "example_1", {
        dependsOn: [example],
        linkingMode: "SPECIFIED_REGIONS",
        specifiedRegions: ["eu-west-1", "eu-west-2"],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityhubFindingAggregatorExample.overrideLogicalId("example");
  }
}

```

### No Regions Usage

The following example will enable the aggregator but not link any AWS Regions to the home Region.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubAccount } from "./.gen/providers/aws/securityhub-account";
import { SecurityhubFindingAggregator } from "./.gen/providers/aws/securityhub-finding-aggregator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new SecurityhubAccount(this, "example", {});
    const awsSecurityhubFindingAggregatorExample =
      new SecurityhubFindingAggregator(this, "example_1", {
        dependsOn: [example],
        linkingMode: "NO_REGIONS",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityhubFindingAggregatorExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

- `linkingMode` - (Required) Indicates whether to aggregate findings from all of the available Regions or from a specified list. The options are `ALL_REGIONS`, `ALL_REGIONS_EXCEPT_SPECIFIED`, `SPECIFIED_REGIONS` or `NO_REGIONS`. When `ALL_REGIONS` or `ALL_REGIONS_EXCEPT_SPECIFIED` are used, Security Hub will automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.
- `specifiedRegions` - (Optional) List of regions to include or exclude (required if `linkingMode` is set to `ALL_REGIONS_EXCEPT_SPECIFIED` or `SPECIFIED_REGIONS`)

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

- `arn` - Amazon Resource Name (ARN) of the Security Hub finding aggregator.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import an existing Security Hub finding aggregator using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SecurityhubFindingAggregator } from "./.gen/providers/aws/securityhub-finding-aggregator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SecurityhubFindingAggregator.generateConfigForImport(
      this,
      "example",
      "arn:aws:securityhub:eu-west-1:123456789098:finding-aggregator/abcd1234-abcd-1234-1234-abcdef123456"
    );
  }
}

```

Using `terraform import`, import an existing Security Hub finding aggregator using the `arn`. For example:

```console
% terraform import aws_securityhub_finding_aggregator.example arn:aws:securityhub:eu-west-1:123456789098:finding-aggregator/abcd1234-abcd-1234-1234-abcdef123456
```

<!-- cache-key: cdktf-0.20.8 input-5356ed18c2b8c9e9fcee8da4d922219bb55142b52295ccd3dd597df8a1e7ed62 -->