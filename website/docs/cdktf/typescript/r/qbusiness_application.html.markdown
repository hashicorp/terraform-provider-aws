---
subcategory: "Amazon Q Business"
layout: "aws"
page_title: "AWS: aws_qbusiness_application"
description: |-
  Provides a Q Business Application resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_qbusiness_application

Provides a Q Business Application resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QbusinessApplication } from "./.gen/providers/aws/qbusiness-application";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new QbusinessApplication(this, "example", {
      attachmentsConfiguration: [
        {
          attachmentsControlMode: "ENABLED",
        },
      ],
      displayName: "example-app",
      iamServiceRoleArn: Token.asString(awsIamRoleExample.arn),
      identityCenterInstanceArn: Token.asString(
        Fn.lookupNested(Fn.tolist(dataAwsSsoadminInstancesExample.arns), ["0"])
      ),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `attachmentsConfiguration` - (Required) Information about whether file upload functionality is activated or deactivated for your end user. See [`attachmentsConfiguration`](#attachments_configuration) below.
* `displayName` - (Required) Name of the Amazon Q application.
* `iamServiceRoleArn` - (Required) ARN of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
* `identityCenterInstanceArn` - (Required) ARN of the IAM Identity Center instance you are either creating for — or connecting to — your Amazon Q Business application.

The following arguments are optional:

* `description` - (Optional) Description of the Amazon Q application.
* `encryptionConfiguration` - (Optional) Information about encryption configuration. See [`encryptionConfiguration`](#encryption_configuration) below.

### `attachmentsConfiguration`

* `attachmentsControlMode` - (Required) Status information about whether file upload functionality is activated or deactivated for your end user. Valid values are `ENABLED` and `DISABLED`.

### `encryptionConfiguration`

* `kmsKeyId` - (Required) Identifier of the AWS KMS key that is used to encrypt your data. Amazon Q doesn't support asymmetric keys.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `applicationId` - ID of the Q Business application.
* `arn` - ARN of the Q Business application.
* `identityCenterApplicationArn` - ARN of the AWS IAM Identity Center application attached to your Amazon Q Business application.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a Q Business Application using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QbusinessApplication } from "./.gen/providers/aws/qbusiness-application";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    QbusinessApplication.generateConfigForImport(
      this,
      "example",
      "id-12345678"
    );
  }
}

```

Using `terraform import`, import a Q Business Application using the `id`. For example:

```console
% terraform import aws_qbusiness_application.example id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-165b71e336e9c39bc4a3bbb86b2365bb50d2e4a303137d636336d2f301c2ffcd -->