---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_resource_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Resource Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_resource_policy

Terraform resource for managing an AWS VPC Lattice Resource Policy.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsPartition } from "./.gen/providers/aws/data-aws-partition";
import { VpclatticeResourcePolicy } from "./.gen/providers/aws/vpclattice-resource-policy";
import { VpclatticeServiceNetwork } from "./.gen/providers/aws/vpclattice-service-network";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new VpclatticeServiceNetwork(this, "example", {
      name: "example-vpclattice-service-network",
    });
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsPartitionCurrent = new DataAwsPartition(this, "current_2", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsPartitionCurrent.overrideLogicalId("current");
    const awsVpclatticeResourcePolicyExample = new VpclatticeResourcePolicy(
      this,
      "example_3",
      {
        policy: Token.asString(
          Fn.jsonencode({
            Statement: [
              {
                Action: [
                  "vpc-lattice:CreateServiceNetworkVpcAssociation",
                  "vpc-lattice:CreateServiceNetworkServiceAssociation",
                  "vpc-lattice:GetServiceNetwork",
                ],
                Effect: "Allow",
                Principal: {
                  AWS:
                    "arn:${" +
                    dataAwsPartitionCurrent.partition +
                    "}:iam::${" +
                    current.accountId +
                    "}:root",
                },
                Resource: example.arn,
                Sid: "test-pol-principals-6",
              },
            ],
            Version: "2012-10-17",
          })
        ),
        resourceArn: example.arn,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpclatticeResourcePolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `resourceArn` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) An IAM policy. The policy string in JSON must not contain newlines or blank lines.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Resource Policy using the `resourceArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeResourcePolicy } from "./.gen/providers/aws/vpclattice-resource-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpclatticeResourcePolicy.generateConfigForImport(
      this,
      "example",
      "rft-8012925589"
    );
  }
}

```

Using `terraform import`, import VPC Lattice Resource Policy using the `resourceArn`. For example:

```console
% terraform import aws_vpclattice_resource_policy.example rft-8012925589
```

<!-- cache-key: cdktf-0.20.8 input-c969eed7a7377f14bd03d1b92b78d4bf654be694271ee442b4563386ee2c88bd -->