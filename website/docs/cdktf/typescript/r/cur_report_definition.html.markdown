---
subcategory: "Cost and Usage Report"
layout: "aws"
page_title: "AWS: aws_cur_report_definition"
description: |-
  Provides a Cost and Usage Report Definition.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cur_report_definition

Manages Cost and Usage Report Definitions.

~> *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CurReportDefinition } from "./.gen/providers/aws/cur-report-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CurReportDefinition(this, "example_cur_report_definition", {
      additionalArtifacts: ["REDSHIFT", "QUICKSIGHT"],
      additionalSchemaElements: ["RESOURCES", "SPLIT_COST_ALLOCATION_DATA"],
      compression: "GZIP",
      format: "textORcsv",
      reportName: "example-cur-report-definition",
      s3Bucket: "example-bucket-name",
      s3Region: "us-east-1",
      timeUnit: "HOURLY",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `reportName` - (Required) Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters.
* `timeUnit` - (Required) The frequency on which report data are measured and displayed.  Valid values are: `DAILY`, `HOURLY`, `MONTHLY`.
* `format` - (Required) Format for report. Valid values are: `textORcsv`, `Parquet`. If `Parquet` is used, then Compression must also be `Parquet`.
* `compression` - (Required) Compression format for report. Valid values are: `GZIP`, `ZIP`, `Parquet`. If `Parquet` is used, then format must also be `Parquet`.
* `additionalSchemaElements` - (Required) A list of schema elements. Valid values are: `RESOURCES`, `SPLIT_COST_ALLOCATION_DATA`.
* `s3Bucket` - (Required) Name of the existing S3 bucket to hold generated reports.
* `s3Prefix` - (Optional) Report path prefix. Limited to 256 characters.
* `s3Region` - (Required) Region of the existing S3 bucket to hold generated reports.
* `additionalArtifacts` - (Required) A list of additional artifacts. Valid values are: `REDSHIFT`, `QUICKSIGHT`, `ATHENA`. When ATHENA exists within additional_artifacts, no other artifact type can be declared and report_versioning must be `OVERWRITE_REPORT`.
* `refreshClosedReports` - (Optional) Set to true to update your reports after they have been finalized if AWS detects charges related to previous months.
* `reportVersioning` - (Optional) Overwrite the previous version of each report or to deliver the report in addition to the previous versions. Valid values are: `CREATE_NEW_REPORT` and `OVERWRITE_REPORT`.
* `tags` - (Optional) Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) specifying the cur report.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Report Definitions using the `reportName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CurReportDefinition } from "./.gen/providers/aws/cur-report-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CurReportDefinition.generateConfigForImport(
      this,
      "exampleCurReportDefinition",
      "example-cur-report-definition"
    );
  }
}

```

Using `terraform import`, import Report Definitions using the `reportName`. For example:

```console
% terraform import aws_cur_report_definition.example_cur_report_definition example-cur-report-definition
```

<!-- cache-key: cdktf-0.20.1 input-fa8924e99b86f9384cb9b9234f6d564ca800826ccbe2a55d504b92db0ccfafef -->