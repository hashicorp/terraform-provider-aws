---
subcategory: "WorkSpaces"
layout: "aws"
page_title: "AWS: aws_workspaces_connection_alias"
description: |-
  Terraform resource for managing an AWS WorkSpaces Connection Alias.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspaces_connection_alias

Terraform resource for managing an AWS WorkSpaces Connection Alias.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspacesConnectionAlias } from "./.gen/providers/aws/workspaces-connection-alias";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspacesConnectionAlias(this, "example", {
      connectionString: "testdomain.test",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `connectionString` - (Required) The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
* `tags` â€“ (Optional) A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The identifier of the connection alias.
* `ownerAccountId` - The identifier of the Amazon Web Services account that owns the connection alias.
* `state` - The current state of the connection alias.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `180m`)
* `delete` - (Default `90m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Connection Alias using the connection alias ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspacesConnectionAlias } from "./.gen/providers/aws/workspaces-connection-alias";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspacesConnectionAlias.generateConfigForImport(
      this,
      "example",
      "rft-8012925589"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Connection Alias using the connection alias ID. For example:

```console
% terraform import aws_workspaces_connection_alias.example rft-8012925589
```

<!-- cache-key: cdktf-0.20.8 input-413fd75316cfeb359e07cefddd821d90ecf5ceabe738b42d92da1fd7d2704797 -->