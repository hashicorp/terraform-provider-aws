---
subcategory: "Service Quotas"
layout: "aws"
page_title: "AWS: aws_servicequotas_service_quota"
description: |-
  Manages an individual Service Quota
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_servicequotas_service_quota

Manages an individual Service Quota.

~> **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ServicequotasServiceQuota } from "./.gen/providers/aws/servicequotas-service-quota";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ServicequotasServiceQuota(this, "example", {
      quotaCode: "L-F678F1CE",
      serviceCode: "vpc",
      value: 75,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `quotaCode` - (Required) Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).
* `serviceCode` - (Required) Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
* `value` - (Required) Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `adjustable` - Whether the service quota can be increased.
* `arn` - Amazon Resource Name (ARN) of the service quota.
* `defaultValue` - Default value of the service quota.
* `id` - Service code and quota code, separated by a front slash (`/`)
* `quotaName` - Name of the quota.
* `serviceName` - Name of the service.
* `usageMetric` - Information about the measurement.
    * `metric_dimensions` - The metric dimensions.
        * `class`
        * `resource`
        * `service`
        * `type`
    * `metricName` - The name of the metric.
    * `metricNamespace` - The namespace of the metric.
    * `metric_statistic_recommendation` - The metric statistic that AWS recommend you use when determining quota usage.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_servicequotas_service_quota` using the service code and quota code, separated by a front slash (`/`). For example:

~> **NOTE:** This resource does not require explicit import and will assume management of an existing service quota on Terraform resource creation.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ServicequotasServiceQuota } from "./.gen/providers/aws/servicequotas-service-quota";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ServicequotasServiceQuota.generateConfigForImport(
      this,
      "example",
      "vpc/L-F678F1CE"
    );
  }
}

```

Using `terraform import`, import `aws_servicequotas_service_quota` using the service code and quota code, separated by a front slash (`/`). For example:

~> **NOTE:** This resource does not require explicit import and will assume management of an existing service quota on Terraform resource creation.

```console
% terraform import aws_servicequotas_service_quota.example vpc/L-F678F1CE
```

<!-- cache-key: cdktf-0.20.8 input-8925c6b8aa699116dcad422ba2332dd43139659327e20ceb1d3df872c9c113ea -->