---
subcategory: "Verified Access"
layout: "aws"
page_title: "AWS: aws_verifiedaccess_group"
description: |-
  Terraform resource for managing a Verified Access Group.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_verifiedaccess_group

Terraform resource for managing a Verified Access Group.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VerifiedaccessGroup } from "./.gen/providers/aws/verifiedaccess-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VerifiedaccessGroup(this, "example", {
      verifiedaccessInstanceId: Token.asString(
        awsVerifiedaccessInstanceExample.id
      ),
    });
  }
}

```

### Usage with KMS Key

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { KmsKey } from "./.gen/providers/aws/kms-key";
import { VerifiedaccessGroup } from "./.gen/providers/aws/verifiedaccess-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const testKey = new KmsKey(this, "test_key", {
      description: "KMS key for Verified Access Group test",
    });
    new VerifiedaccessGroup(this, "test", {
      sseConfiguration: {
        kmsKeyArn: testKey.arn,
      },
      verifiedaccessInstanceId: Token.asString(
        awsVerifiedaccessInstanceTrustProviderAttachmentTest.verifiedaccessInstanceId
      ),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `verifiedaccessInstanceId` - (Required) The id of the verified access instance this group is associated with.

The following arguments are optional:

* `description` - (Optional) Description of the verified access group.
* `policyDocument` - (Optional) The policy document that is associated with this resource.
* `sseConfiguration` - (Optional) Configuration block to use KMS keys for server-side encryption.
    * `customerManagedKeyEnabled` - (Optional) Boolean flag to indicate that the CMK should be used.
    * `kmsKeyArn` - (Optional) ARN of the KMS key to use.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `creationTime` - Timestamp when the access group was created.
* `deletionTime` - Timestamp when the access group was deleted.
* `lastUpdatedTime` - Timestamp when the access group was last updated.
* `owner` - AWS account number owning this resource.
* `verifiedaccessGroupArn` - ARN of this verified acess group.
* `verifiedaccessGroupId` - ID of this verified access group.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `60m`)
* `update` - (Default `180m`)
* `delete` - (Default `90m`)

<!-- cache-key: cdktf-0.20.8 input-758e23438ff4a07ded512df332a5c84f45d4f7cd61f8d3e0f6672a8111b8c5f0 -->