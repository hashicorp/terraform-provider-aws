---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_auth_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Auth Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_auth_policy

Terraform resource for managing an AWS VPC Lattice Auth Policy.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeAuthPolicy } from "./.gen/providers/aws/vpclattice-auth-policy";
import { VpclatticeService } from "./.gen/providers/aws/vpclattice-service";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new VpclatticeService(this, "example", {
      authType: "AWS_IAM",
      customDomainName: "example.com",
      name: "example-vpclattice-service",
    });
    const awsVpclatticeAuthPolicyExample = new VpclatticeAuthPolicy(
      this,
      "example_1",
      {
        policy: Token.asString(
          Fn.jsonencode({
            Statement: [
              {
                Action: "*",
                Condition: {
                  StringNotEqualsIgnoreCase: {
                    "aws:PrincipalType": "anonymous",
                  },
                },
                Effect: "Allow",
                Principal: "*",
                Resource: "*",
              },
            ],
            Version: "2012-10-17",
          })
        ),
        resourceIdentifier: example.arn,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpclatticeAuthPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `resourceIdentifier` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) The auth policy. The policy string in JSON must not contain newlines or blank lines.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - The auth policy. The policy string in JSON must not contain newlines or blank lines.
* `state` - The state of the auth policy. The auth policy is only active when the auth type is set to `AWS_IAM`. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the Auth type is `NONE`, then, any auth policy you provide will remain inactive.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Auth Policy using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeAuthPolicy } from "./.gen/providers/aws/vpclattice-auth-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpclatticeAuthPolicy.generateConfigForImport(
      this,
      "example",
      "abcd-12345678"
    );
  }
}

```

Using `terraform import`, import VPC Lattice Auth Policy using the `id`. For example:

```console
% terraform import aws_vpclattice_auth_policy.example abcd-12345678
```

<!-- cache-key: cdktf-0.20.8 input-bfefd578bb50996b82ce55ca4ba5163180bcda5a652c6847303282acbdb1d91d -->