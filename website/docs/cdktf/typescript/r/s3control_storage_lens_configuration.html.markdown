---
subcategory: "S3 Control"
layout: "aws"
page_title: "AWS: aws_s3control_storage_lens_configuration"
description: |-
  Provides a resource to manage an S3 Storage Lens configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3control_storage_lens_configuration

Provides a resource to manage an S3 Storage Lens configuration.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { S3ControlStorageLensConfiguration } from "./.gen/providers/aws/s3-control-storage-lens-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const current = new DataAwsCallerIdentity(this, "current", {});
    new S3ControlStorageLensConfiguration(this, "example", {
      configId: "example-1",
      storageLensConfiguration: {
        accountLevel: {
          activityMetrics: {
            enabled: true,
          },
          bucketLevel: {
            activityMetrics: {
              enabled: true,
            },
          },
        },
        dataExport: {
          cloudWatchMetrics: {
            enabled: true,
          },
          s3BucketDestination: {
            accountId: Token.asString(current.accountId),
            arn: target.arn,
            encryption: {
              sseS3: [{}],
            },
            format: "CSV",
            outputSchemaVersion: "V_1",
          },
        },
        enabled: true,
        exclude: {
          buckets: [b1.arn, b2.arn],
          regions: ["us-east-2"],
        },
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `accountId` - (Optional) The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the Terraform AWS provider.
* `configId` - (Required) The ID of the S3 Storage Lens configuration.
* `storageLensConfiguration` - (Required) The S3 Storage Lens configuration. See [Storage Lens Configuration](#storage-lens-configuration) below for more details.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Storage Lens Configuration

The `storageLensConfiguration` block supports the following:

* `accountLevel` (Required) The account-level configurations of the S3 Storage Lens configuration. See [Account Level](#account-level) below for more details.
* `awsOrg` (Optional) The Amazon Web Services organization for the S3 Storage Lens configuration. See [AWS Org](#aws-org) below for more details.
* `dataExport` (Optional) Properties of S3 Storage Lens metrics export including the destination, schema and format. See [Data Export](#data-export) below for more details.
* `enabled` (Required) Whether the S3 Storage Lens configuration is enabled.
* `exclude` (Optional) What is excluded in this configuration. Conflicts with `include`. See [Exclude](#exclude) below for more details.
* `include` (Optional) What is included in this configuration. Conflicts with `exclude`. See [Include](#include) below for more details.

### Account Level

The `accountLevel` block supports the following:

* `activityMetrics` (Optional) S3 Storage Lens activity metrics. See [Activity Metrics](#activity-metrics) below for more details.
* `advancedCostOptimizationMetrics` (Optional) Advanced cost-optimization metrics for S3 Storage Lens. See [Advanced Cost-Optimization Metrics](#advanced-cost-optimization-metrics) below for more details.
* `advancedDataProtectionMetrics` (Optional) Advanced data-protection metrics for S3 Storage Lens. See [Advanced Data-Protection Metrics](#advanced-data-protection-metrics) below for more details.
* `bucketLevel` (Required) S3 Storage Lens bucket-level configuration. See [Bucket Level](#bucket-level) below for more details.
* `detailedStatusCodeMetrics` (Optional) Detailed status code metrics for S3 Storage Lens. See [Detailed Status Code Metrics](#detailed-status-code-metrics) below for more details.

### Activity Metrics

The `activityMetrics` block supports the following:

* `enabled` (Optional) Whether the activity metrics are enabled.

### Advanced Cost-Optimization Metrics

The `advancedCostOptimizationMetrics` block supports the following:

* `enabled` (Optional) Whether advanced cost-optimization metrics are enabled.

### Advanced Data-Protection Metrics

The `advancedDataProtectionMetrics` block supports the following:

* `enabled` (Optional) Whether advanced data-protection metrics are enabled.

### Detailed Status Code Metrics

The `detailedStatusCodeMetrics` block supports the following:

* `enabled` (Optional) Whether detailed status code metrics are enabled.

### Bucket Level

The `bucketLevel` block supports the following:

* `activityMetrics` (Optional) S3 Storage Lens activity metrics. See [Activity Metrics](#activity-metrics) above for more details.
* `advancedCostOptimizationMetrics` (Optional) Advanced cost-optimization metrics for S3 Storage Lens. See [Advanced Cost-Optimization Metrics](#advanced-cost-optimization-metrics) above for more details.
* `advancedDataProtectionMetrics` (Optional) Advanced data-protection metrics for S3 Storage Lens. See [Advanced Data-Protection Metrics](#advanced-data-protection-metrics) above for more details.
* `detailedStatusCodeMetrics` (Optional) Detailed status code metrics for S3 Storage Lens. See [Detailed Status Code Metrics](#detailed-status-code-metrics) above for more details.
* `prefixLevel` (Optional) Prefix-level metrics for S3 Storage Lens. See [Prefix Level](#prefix-level) below for more details.

### Prefix Level

The `prefixLevel` block supports the following:

* `storageMetrics` (Required) Prefix-level storage metrics for S3 Storage Lens. See [Prefix Level Storage Metrics](#prefix-level-storage-metrics) below for more details.

### Prefix Level Storage Metrics

The `storageMetrics` block supports the following:

* `enabled` (Optional) Whether prefix-level storage metrics are enabled.
* `selectionCriteria` (Optional) Selection criteria. See [Selection Criteria](#selection-criteria) below for more details.

### Selection Criteria

The `selectionCriteria` block supports the following:

* `delimiter` (Optional) The delimiter of the selection criteria being used.
* `maxDepth` (Optional) The max depth of the selection criteria.
* `minStorageBytesPercentage` (Optional) The minimum number of storage bytes percentage whose metrics will be selected.

### AWS Org

The `awsOrg` block supports the following:

* `arn` (Required) The Amazon Resource Name (ARN) of the Amazon Web Services organization.

### Data Export

The `dataExport` block supports the following:

* `cloudWatchMetrics` (Optional) Amazon CloudWatch publishing for S3 Storage Lens metrics. See [Cloud Watch Metrics](#cloud-watch-metrics) below for more details.
* `s3BucketDestination` (Optional) The bucket where the S3 Storage Lens metrics export will be located. See [S3 Bucket Destination](#s3-bucket-destination) below for more details.

### Cloud Watch Metrics

The `cloudWatchMetrics` block supports the following:

* `enabled` (Required) Whether CloudWatch publishing for S3 Storage Lens metrics is enabled.

### S3 Bucket Destination

The `s3BucketDestination` block supports the following:

* `accountId` (Required) The account ID of the owner of the S3 Storage Lens metrics export bucket.
* `arn` (Required) The Amazon Resource Name (ARN) of the bucket.
* `encryption` (Optional) Encryption of the metrics exports in this bucket. See [Encryption](#encryption) below for more details.
* `format` (Required) The export format. Valid values: `CSV`, `Parquet`.
* `outputSchemaVersion` (Required) The schema version of the export file. Valid values: `V_1`.
* `prefix` (Optional) The prefix of the destination bucket where the metrics export will be delivered.

### Encryption

The `encryption` block supports the following:

* `sseKms` (Optional) SSE-KMS encryption. See [SSE KMS](#sse-kms) below for more details.
* `sseS3` (Optional) SSE-S3 encryption. An empty configuration block `{}` should be used.

### SSE KMS

The `sseKms` block supports the following:

* `keyId` (Required) KMS key ARN.

### Exclude

The `exclude` block supports the following:

* `buckets` (Optional) List of S3 bucket ARNs.
* `regions` (Optional) List of AWS Regions.

### Include

The `include` block supports the following:

* `buckets` (Optional) List of S3 bucket ARNs.
* `regions` (Optional) List of AWS Regions.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the S3 Storage Lens configuration.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 Storage Lens configurations using the `accountId` and `configId`, separated by a colon (`:`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlStorageLensConfiguration } from "./.gen/providers/aws/s3-control-storage-lens-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3ControlStorageLensConfiguration.generateConfigForImport(
      this,
      "example",
      "123456789012:example-1"
    );
  }
}

```

Using `terraform import`, import S3 Storage Lens configurations using the `accountId` and `configId`, separated by a colon (`:`). For example:

```console
% terraform import aws_s3control_storage_lens_configuration.example 123456789012:example-1
```

<!-- cache-key: cdktf-0.20.8 input-9a78e0cfb3d6a96dedf49697ad6a9c2449a751f987c0e874d9a0f885a390fd34 -->