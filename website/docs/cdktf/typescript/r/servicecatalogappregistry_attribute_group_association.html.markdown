---
subcategory: "Service Catalog AppRegistry"
layout: "aws"
page_title: "AWS: aws_servicecatalogappregistry_attribute_group_association"
description: |-
  Terraform resource for managing an AWS Service Catalog AppRegistry Attribute Group Association.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_servicecatalogappregistry_attribute_group_association

Terraform resource for managing an AWS Service Catalog AppRegistry Attribute Group Association.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ServicecatalogappregistryApplication } from "./.gen/providers/aws/servicecatalogappregistry-application";
import { ServicecatalogappregistryAttributeGroup } from "./.gen/providers/aws/servicecatalogappregistry-attribute-group";
import { ServicecatalogappregistryAttributeGroupAssociation } from "./.gen/providers/aws/servicecatalogappregistry-attribute-group-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new ServicecatalogappregistryApplication(this, "example", {
      name: "example-app",
    });
    const awsServicecatalogappregistryAttributeGroupExample =
      new ServicecatalogappregistryAttributeGroup(this, "example_1", {
        attributes: Token.asString(
          Fn.jsonencode({
            app: "exampleapp",
            group: "examplegroup",
          })
        ),
        description: "example description",
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsServicecatalogappregistryAttributeGroupExample.overrideLogicalId(
      "example"
    );
    const awsServicecatalogappregistryAttributeGroupAssociationExample =
      new ServicecatalogappregistryAttributeGroupAssociation(
        this,
        "example_2",
        {
          applicationId: example.id,
          attributeGroupId: Token.asString(
            awsServicecatalogappregistryAttributeGroupExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsServicecatalogappregistryAttributeGroupAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `applicationId` - (Required) ID of the application.
* `attributeGroupId` - (Required) ID of the attribute group to associate with the application.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Service Catalog AppRegistry Attribute Group Association using the `applicationId` and `attributeGroupId` arguments separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ServicecatalogappregistryAttributeGroupAssociation } from "./.gen/providers/aws/servicecatalogappregistry-attribute-group-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ServicecatalogappregistryAttributeGroupAssociation.generateConfigForImport(
      this,
      "example",
      "12456778723424sdffsdfsdq34,12234t3564dsfsdf34asff4ww3"
    );
  }
}

```

Using `terraform import`, import Service Catalog AppRegistry Attribute Group Association using `applicationId` and `attributeGroupId` arguments separated by a comma (`,`). For example:

```console
% terraform import aws_servicecatalogappregistry_attribute_group_association.example 12456778723424sdffsdfsdq34,12234t3564dsfsdf34asff4ww3
```

<!-- cache-key: cdktf-0.20.8 input-06b21c0fafbd7bd4fc99627a5d68eb7362e6728f63edd3b4282dc969311a3a8f -->