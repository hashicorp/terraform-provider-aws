---
subcategory: "CloudWatch Logs"
layout: "aws"
page_title: "AWS: aws_cloudwatch_log_data_protection_policy"
description: |-
  Provides a CloudWatch Log Data Protection Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudwatch_log_data_protection_policy

Provides a CloudWatch Log Data Protection Policy resource.

Read more about protecting sensitive user data in the [User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogDataProtectionPolicy } from "./.gen/providers/aws/cloudwatch-log-data-protection-policy";
import { CloudwatchLogGroup } from "./.gen/providers/aws/cloudwatch-log-group";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new CloudwatchLogGroup(this, "example", {
      name: "example",
    });
    const awsS3BucketExample = new S3Bucket(this, "example_1", {
      bucket: "example",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketExample.overrideLogicalId("example");
    const awsCloudwatchLogDataProtectionPolicyExample =
      new CloudwatchLogDataProtectionPolicy(this, "example_2", {
        logGroupName: example.name,
        policyDocument: Token.asString(
          Fn.jsonencode({
            Name: "Example",
            Statement: [
              {
                DataIdentifier: [
                  "arn:aws:dataprotection::aws:data-identifier/EmailAddress",
                ],
                Operation: {
                  Audit: {
                    FindingsDestination: {
                      S3: {
                        Bucket: awsS3BucketExample.bucket,
                      },
                    },
                  },
                },
                Sid: "Audit",
              },
              {
                DataIdentifier: [
                  "arn:aws:dataprotection::aws:data-identifier/EmailAddress",
                ],
                Operation: {
                  Deidentify: {
                    MaskConfig: {},
                  },
                },
                Sid: "Redact",
              },
            ],
            Version: "2021-06-01",
          })
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsCloudwatchLogDataProtectionPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `logGroupName` - (Required) The name of the log group under which the log stream is to be created.
* `policyDocument` - (Required) Specifies the data protection policy in JSON. Read more at [Data protection policy syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-start.html#mask-sensitive-log-data-policysyntax).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import this resource using the `logGroupName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudwatchLogDataProtectionPolicy } from "./.gen/providers/aws/cloudwatch-log-data-protection-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudwatchLogDataProtectionPolicy.generateConfigForImport(
      this,
      "example",
      "my-log-group"
    );
  }
}

```

Using `terraform import`, import this resource using the `logGroupName`. For example:

```console
% terraform import aws_cloudwatch_log_data_protection_policy.example my-log-group
```

<!-- cache-key: cdktf-0.20.8 input-5d0eb45bdebf63544029d216f663f1fa8e735ed48c73f741006440431b616666 -->