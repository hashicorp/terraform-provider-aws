---
subcategory: "Pinpoint"
layout: "aws"
page_title: "AWS: aws_pinpoint_app"
description: |-
  Provides a Pinpoint App resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_pinpoint_app

Provides a Pinpoint App resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { PinpointApp } from "./.gen/providers/aws/pinpoint-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new PinpointApp(this, "example", {
      limits: {
        maximumDuration: 600,
      },
      name: "test-app",
      quietTime: {
        end: "06:00",
        start: "00:00",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional) The application name. By default generated by Terraform
* `namePrefix` - (Optional) The name of the Pinpoint application. Conflicts with `name`
* `campaignHook` - (Optional) Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign
* `limits` - (Optional) The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own
* `quietTime` - (Optional) The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

`campaignHook` supports the following:

* `lambdaFunctionName` - (Optional) Lambda function name or ARN to be called for delivery. Conflicts with `webUrl`
* `mode` - (Required if `lambdaFunctionName` or `webUrl` are provided) What mode Lambda should be invoked in. Valid values for this parameter are `DELIVERY`, `FILTER`.  
* `webUrl` - (Optional) Web URL to call for hook. If the URL has authentication specified it will be added as authentication to the request. Conflicts with `lambdaFunctionName`

`limits` supports the following:

* `daily` - (Optional) The maximum number of messages that the campaign can send daily.
* `maximumDuration` - (Optional) The length of time (in seconds) that the campaign can run before it ends and message deliveries stop. This duration begins at the scheduled start time for the campaign. The minimum value is 60.
* `messagesPerSecond` - (Optional) The number of messages that the campaign can send per second. The minimum value is 50, and the maximum is 20000.
* `total` - (Optional) The maximum total number of messages that the campaign can send.

`quietTime` supports the following:

* `end` - (Optional) The default end time for quiet time in ISO 8601 format. Required if `start` is set
* `start` - (Optional) The default start time for quiet time in ISO 8601 format. Required if `end` is set

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `applicationId` - The Application ID of the Pinpoint App.
* `arn` - Amazon Resource Name (ARN) of the PinPoint Application
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Pinpoint App using the `application-id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { PinpointApp } from "./.gen/providers/aws/pinpoint-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    PinpointApp.generateConfigForImport(this, "name", "application-id");
  }
}

```

Using `terraform import`, import Pinpoint App using the `application-id`. For example:

```console
% terraform import aws_pinpoint_app.name application-id
```

<!-- cache-key: cdktf-0.20.8 input-69252b714649cc19bbfedeb89aa6fa806e2f32d0df2739664cb86bc692aacfc6 -->