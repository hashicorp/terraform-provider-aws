---
subcategory: "S3 Control"
layout: "aws"
page_title: "AWS: aws_s3control_bucket"
description: |-
  Manages an S3 Control Bucket.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3control_bucket

Provides a resource to manage an S3 Control Bucket.

-> This functionality is for managing [S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html). To manage S3 Buckets in an AWS Partition, see the [`aws_s3_bucket` resource](/docs/providers/aws/r/s3_bucket.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlBucket } from "./.gen/providers/aws/s3-control-bucket";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new S3ControlBucket(this, "example", {
      bucket: "example",
      outpostId: Token.asString(dataAwsOutpostsOutpostExample.id),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `bucket` - (Required) Name of the bucket.
* `outpostId` - (Required) Identifier of the Outpost to contain this bucket.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the bucket.
* `creationDate` - UTC creation date in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
* `id` - Amazon Resource Name (ARN) of the bucket.
* `publicAccessBlockEnabled` - Boolean whether Public Access Block is enabled.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 Control Buckets using Amazon Resource Name (ARN). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlBucket } from "./.gen/providers/aws/s3-control-bucket";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3ControlBucket.generateConfigForImport(
      this,
      "example",
      "arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/bucket/example"
    );
  }
}

```

Using `terraform import`, import S3 Control Buckets using Amazon Resource Name (ARN). For example:

```console
% terraform import aws_s3control_bucket.example arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/bucket/example
```

<!-- cache-key: cdktf-0.20.8 input-2e4677b75d6cbb099b0dd2b2385879475c02ebb3643475b93a119fd3833d7929 -->