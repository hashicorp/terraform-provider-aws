---
subcategory: "Bedrock"
layout: "aws"
page_title: "AWS: aws_bedrock_inference_profile"
description: |-
  Terraform resource for managing an AWS Bedrock Inference Profile.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_bedrock_inference_profile

Terraform resource for managing an AWS Bedrock Inference Profile.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BedrockInferenceProfile } from "./.gen/providers/aws/";
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new BedrockInferenceProfile(this, "example", {
      description: "Profile with tag for cost allocation tracking",
      model_source: [
        {
          copy_from:
            "arn:aws:bedrock:us-west-2::foundation-model/anthropic.claude-3-5-sonnet-20241022-v2:0",
        },
      ],
      name: "Claude Sonnet for Project 123",
      tags: {
        ProjectID: "123",
      },
    });
    new DataAwsCallerIdentity(this, "current", {});
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) The name of the inference profile.
* `model_source` - (Required) The source of the model this inference profile will track metrics and cost for. See [`model_source`](#model_source).

The following arguments are optional:

* `description` - (Optional) The description of the inference profile.
* `tags` - (Optional) Key-value mapping of resource tags for the inference profile.

### `model_source`

- `copy_from` - The Amazon Resource Name (ARN) of the model.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

- `arn` - The Amazon Resource Name (ARN) of the inference profile.
- `id` - The unique identifier of the inference profile.
- `name` - The unique identifier of the inference profile.
- `models` - A list of information about each model in the inference profile. See [`models`](#models).
- `status` - The status of the inference profile. `ACTIVE` means that the inference profile is available to use.
- `type` - The type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock. `APPLICATION` means that the inference profile is defined by the user.
- `createdAt` - The time at which the inference profile was created.
- `description` - The description of the inference profile.
- `updatedAt` - The time at which the inference profile was last updated.

### `models`

- `modelArn` - The Amazon Resource Name (ARN) of the model.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Bedrock Inference Profile using the `example_id_arg`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BedrockInferenceProfile } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    BedrockInferenceProfile.generateConfigForImport(
      this,
      "example",
      "inference_profile-id-12345678"
    );
  }
}

```

Using `terraform import`, import Bedrock Inference Profile using the `example_id_arg`. For example:

```console
% terraform import aws_bedrock_inference_profile.example inference_profile-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-084fb6258ed944d9d6dd914a35e4f8a71f24cb61e2217559fab1a1cc9a3c31d0 -->