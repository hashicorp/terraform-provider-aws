---
subcategory: "QuickSight"
layout: "aws"
page_title: "AWS: aws_quicksight_user_custom_permission"
description: |-
  Manages the custom permissions profile for a user.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_quicksight_user_custom_permission

Manages the custom permissions profile for a user.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightUserCustomPermission } from "./.gen/providers/aws/quicksight-user-custom-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new QuicksightUserCustomPermission(this, "example", {
      customPermissionsName: Token.asString(
        awsQuicksightCustomPermissionsExample.customPermissionsName
      ),
      userName: Token.asString(awsQuicksightUserExample.userName),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `customPermissionsName` - (Required, Forces new resource) Custom permissions profile name.
* `userName` - (Required, Forces new resource) Username of the user.

The following arguments are optional:

* `awsAccountId` - (Optional, Forces new resource) AWS account ID. Defaults to automatically determined account ID of the Terraform AWS provider.
* `namespace` - (Optional, Forces new resource) Namespace that the user belongs to. Defaults to `default`.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import QuickSight user custom permissions using a comma-delimited string combining the `awsAccountId`, `namespace` and `userName`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { QuicksightUserCustomPermission } from "./.gen/providers/aws/quicksight-user-custom-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    QuicksightUserCustomPermission.generateConfigForImport(
      this,
      "example",
      "012345678901,default,user1"
    );
  }
}

```

Using `terraform import`, import QuickSight user custom permissions using a comma-delimited string combining the `awsAccountId`, `namespace`, and `userName`. For example:

```console
% terraform import aws_quicksight_user_custom_permission.example 012345678901,default,user1
```

<!-- cache-key: cdktf-0.20.8 input-664600cc1aa6a94e6e049ff34b7e8f57a9b2fe8e56f7d84854a4bdd4d991a0f8 -->