---
subcategory: "CloudWatch Network Monitor"
layout: "aws"
page_title: "AWS: aws_networkmonitor_probe"
description: |-
  Terraform resource for managing an Amazon Network Monitor Probe.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkmonitor_probe

Terraform resource for managing an AWS Network Monitor Probe.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmonitorMonitor } from "./.gen/providers/aws/networkmonitor-monitor";
import { NetworkmonitorProbe } from "./.gen/providers/aws/networkmonitor-probe";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkmonitorMonitor(this, "example", {
      aggregationPeriod: 30,
      monitorName: "example",
    });
    const awsNetworkmonitorProbeExample = new NetworkmonitorProbe(
      this,
      "example_1",
      {
        destination: "127.0.0.1",
        destinationPort: 80,
        monitorName: example.monitorName,
        packetSize: 200,
        protocol: "TCP",
        sourceArn: Token.asString(awsSubnetExample.arn),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkmonitorProbeExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

- `destination` - (Required) The destination IP address. This must be either IPV4 or IPV6.
- `destinationPort` - (Optional) The port associated with the destination. This is required only if the protocol is TCP and must be a number between 1 and 65536.
- `monitorName` - (Required) The name of the monitor.
- `protocol` - (Required) The protocol used for the network traffic between the source and destination. This must be either TCP or ICMP.
- `sourceArn` - (Required) The ARN of the subnet.
- `packetSize` - (Optional) The size of the packets sent between the source and destination. This must be a number between 56 and 8500.

The following arguments are optional:

- `tags` - (Optional) Key-value tags for the monitor. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

- `arn` - The ARN of the attachment.
- `sourceArn` - The ARN of the subnet.
- `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_networkmonitor_probe` using the monitor name and probe id. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkmonitorProbe } from "./.gen/providers/aws/networkmonitor-probe";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkmonitorProbe.generateConfigForImport(
      this,
      "example",
      "monitor-7786087912324693644,probe-3qm8p693i4fi1h8lqylzkbp42e"
    );
  }
}

```

Using `terraform import`, import `aws_networkmonitor_probe` using the monitor name and probe id. For example:

```console
% terraform import aws_networkmonitor_probe.example monitor-7786087912324693644,probe-3qm8p693i4fi1h8lqylzkbp42e
```

<!-- cache-key: cdktf-0.20.1 input-f1987f8bcc0a9f89d283ec20e4f26b9478e6776ec3b4d64018f27777a5ef1ac8 -->