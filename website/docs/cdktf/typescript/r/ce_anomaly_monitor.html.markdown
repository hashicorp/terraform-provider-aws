---
subcategory: "CE (Cost Explorer)"
layout: "aws"
page_title: "AWS: aws_ce_anomaly_monitor"
description: |-
  Provides a CE Cost Anomaly Monitor
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ce_anomaly_monitor

Provides a CE Anomaly Monitor.

## Example Usage

There are two main types of a Cost Anomaly Monitor: `DIMENSIONAL` and `CUSTOM`.

### Dimensional Example

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalyMonitor } from "./.gen/providers/aws/ce-anomaly-monitor";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CeAnomalyMonitor(this, "service_monitor", {
      monitorDimension: "SERVICE",
      monitorType: "DIMENSIONAL",
      name: "AWSServiceMonitor",
    });
  }
}

```

### Custom Example

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalyMonitor } from "./.gen/providers/aws/ce-anomaly-monitor";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CeAnomalyMonitor(this, "test", {
      monitorSpecification: Token.asString(
        Fn.jsonencode({
          And: "null",
          CostCategories: "null",
          Dimensions: "null",
          Not: "null",
          Or: "null",
          Tags: {
            Key: "CostCenter",
            MatchOptions: "null",
            Values: ["10000"],
          },
        })
      ),
      monitorType: "CUSTOM",
      name: "AWSCustomAnomalyMonitor",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the monitor.
* `monitorType` - (Required) The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
* `monitorDimension` - (Required, if `monitorType` is `DIMENSIONAL`) The dimensions to evaluate. Valid values: `SERVICE`.
* `monitorSpecification` - (Required, if `monitorType` is `CUSTOM`) A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the anomaly monitor.
* `id` - Unique ID of the anomaly monitor. Same as `arn`.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_ce_anomaly_monitor` using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CeAnomalyMonitor } from "./.gen/providers/aws/ce-anomaly-monitor";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CeAnomalyMonitor.generateConfigForImport(
      this,
      "example",
      "costAnomalyMonitorARN"
    );
  }
}

```

Using `terraform import`, import `aws_ce_anomaly_monitor` using the `id`. For example:

```console
% terraform import aws_ce_anomaly_monitor.example costAnomalyMonitorARN
```

<!-- cache-key: cdktf-0.20.8 input-fba337b98c8a976fb0697ff231ad81e424f25bc592fd1ebfa9050a36521da4be -->