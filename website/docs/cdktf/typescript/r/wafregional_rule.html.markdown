---
subcategory: "WAF Classic Regional"
layout: "aws"
page_title: "AWS: aws_wafregional_rule"
description: |-
  Provides an AWS WAF Regional rule resource for use with ALB.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_wafregional_rule

Provides an WAF Regional Rule Resource for use with Application Load Balancer.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WafregionalIpset } from "./.gen/providers/aws/wafregional-ipset";
import { WafregionalRule } from "./.gen/providers/aws/wafregional-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const ipset = new WafregionalIpset(this, "ipset", {
      ipSetDescriptor: [
        {
          type: "IPV4",
          value: "192.0.7.0/24",
        },
      ],
      name: "tfIPSet",
    });
    new WafregionalRule(this, "wafrule", {
      metricName: "tfWAFRule",
      name: "tfWAFRule",
      predicate: [
        {
          dataId: ipset.id,
          negated: false,
          type: "IPMatch",
        },
      ],
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name or description of the rule.
* `metricName` - (Required) The name or description for the Amazon CloudWatch metric of this rule.
* `predicate` - (Optional) The objects to include in a rule (documented below).
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Nested Fields

### `predicate`

See the [WAF Documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_Predicate.html) for more information.

#### Arguments

* `type` - (Required) The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`
* `dataId` - (Required) The unique identifier of a predicate, such as the ID of a `ByteMatchSet` or `IPSet`.
* `negated` - (Required) Whether to use the settings or the negated settings that you specified in the objects.

## Remarks

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the WAF Regional Rule.
* `arn` - The ARN of the WAF Regional Rule.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WAF Regional Rule using the id. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WafregionalRule } from "./.gen/providers/aws/wafregional-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WafregionalRule.generateConfigForImport(
      this,
      "wafrule",
      "a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc"
    );
  }
}

```

Using `terraform import`, import WAF Regional Rule using the id. For example:

```console
% terraform import aws_wafregional_rule.wafrule a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc
```

<!-- cache-key: cdktf-0.20.8 input-a40cdd272300595e743e666f37c7f58fb8e82cbebd3677921ecf317be3ff42df -->