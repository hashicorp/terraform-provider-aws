---
subcategory: "Global Accelerator"
layout: "aws"
page_title: "AWS: aws_globalaccelerator_custom_routing_accelerator"
description: |-
  Provides a Global Accelerator custom routing accelerator.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_globalaccelerator_custom_routing_accelerator

Creates a Global Accelerator custom routing accelerator.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlobalacceleratorCustomRoutingAccelerator } from "./.gen/providers/aws/globalaccelerator-custom-routing-accelerator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GlobalacceleratorCustomRoutingAccelerator(this, "example", {
      attributes: {
        flowLogsEnabled: true,
        flowLogsS3Bucket: "example-bucket",
        flowLogsS3Prefix: "flow-logs/",
      },
      enabled: true,
      ipAddressType: "IPV4",
      ipAddresses: ["1.2.3.4"],
      name: "Example",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of a custom routing accelerator.
* `ipAddressType` - (Optional) The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
* `ipAddresses` - (Optional) The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
* `enabled` - (Optional) Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
* `attributes` - (Optional) The attributes of the accelerator. Fields documented below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

`attributes` supports the following arguments:

* `flowLogsEnabled` - (Optional) Indicates whether flow logs are enabled. Defaults to `false`. Valid values: `true`, `false`.
* `flowLogsS3Bucket` - (Optional) The name of the Amazon S3 bucket for the flow logs. Required if `flowLogsEnabled` is `true`.
* `flowLogsS3Prefix` - (Optional) The prefix for the location in the Amazon S3 bucket for the flow logs. Required if `flowLogsEnabled` is `true`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Name (ARN) of the custom accelerator.
* `dnsName` - The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
* `hostedZoneId` --  The Global Accelerator Route 53 zone ID that can be used to
  route an [Alias Resource Record Set][1] to the Global Accelerator. This attribute
  is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
* `ipSets` - IP address set associated with the accelerator.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

**ip_sets** exports the following attributes:

* `ipAddresses` - A list of IP addresses in the IP address set.
* `ipFamily` - The type of IP addresses included in this IP set.

[1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Global Accelerator custom routing accelerators using the `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlobalacceleratorCustomRoutingAccelerator } from "./.gen/providers/aws/globalaccelerator-custom-routing-accelerator";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GlobalacceleratorCustomRoutingAccelerator.generateConfigForImport(
      this,
      "example",
      "arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    );
  }
}

```

Using `terraform import`, import Global Accelerator custom routing accelerators using the `arn`. For example:

```console
% terraform import aws_globalaccelerator_custom_routing_accelerator.example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
```

<!-- cache-key: cdktf-0.20.8 input-765641ba0d03ea8679c57c2c3557a0495cf7d72f403588b6664a9e2b49f09bcd -->