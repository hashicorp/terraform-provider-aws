---
subcategory: "Chatbot"
layout: "aws"
page_title: "AWS: aws_chatbot_slack_channel_configuration"
description: |-
  Terraform resource for managing an AWS Chatbot Slack Channel Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_chatbot_slack_channel_configuration

Terraform resource for managing an AWS Chatbot Slack Channel Configuration.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ChatbotSlackChannelConfiguration } from "./.gen/providers/aws/chatbot-slack-channel-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ChatbotSlackChannelConfiguration(this, "test", {
      configurationName: "min-slaka-kanal",
      iamRoleArn: Token.asString(awsIamRoleTest.arn),
      slackChannelId: "C07EZ1ABC23",
      slackTeamId: "T07EA123LEP",
      tags: {
        Name: "min-slaka-kanal",
      },
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `configurationName` - (Required) Name of the Slack channel configuration.
* `iamRoleArn` - (Required) User-defined role that AWS Chatbot assumes. This is not the service-linked role.
* `slackChannelId` - (Required) ID of the Slack channel. For example, `C07EZ1ABC23`.
* `slackTeamId` - (Required) ID of the Slack workspace authorized with AWS Chatbot. For example, `T07EA123LEP`.

The following arguments are optional:

* `guardrailPolicyArns` - (Optional) List of IAM policy ARNs that are applied as channel guardrails. The AWS managed `AdministratorAccess` policy is applied by default if this is not set.
* `loggingLevel` - (Optional) Logging levels include `ERROR`, `INFO`, or `NONE`.
* `snsTopicArns` - (Optional) ARNs of the SNS topics that deliver notifications to AWS Chatbot.
* `tags` - (Optional) Map of tags assigned to the resource.
* `userAuthorizationRequired` - (Optional) Enables use of a user role requirement in your chat configuration.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `chatConfigurationArn` - ARN of the Slack channel configuration.
* `slackChannelName` - Name of the Slack channel.
* `slackTeamName` - Name of the Slack team.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `20m`)
* `update` - (Default `20m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Chatbot Slack Channel Configuration using the `chatConfigurationArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ChatbotSlackChannelConfiguration } from "./.gen/providers/aws/chatbot-slack-channel-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ChatbotSlackChannelConfiguration.generateConfigForImport(
      this,
      "example",
      "arn:aws:chatbot::012345678901:chat-configuration/slack-channel/min-slaka-kanal"
    );
  }
}

```

Using `terraform import`, import Chatbot Slack Channel Configuration using the `chatConfigurationArn`. For example:

```console
% terraform import aws_chatbot_slack_channel_configuration.example arn:aws:chatbot::012345678901:chat-configuration/slack-channel/min-slaka-kanal
```

<!-- cache-key: cdktf-0.20.1 input-d07ae7b961314cae21a6f83a4b9eccb7336518081785d4347a33144d3e3f04d9 -->