---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_network_settings_association"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Network Settings Association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_network_settings_association

Terraform resource for managing an AWS WorkSpaces Web Network Settings Association.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformCount, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAvailabilityZones } from "./.gen/providers/aws/data-aws-availability-zones";
import { SecurityGroup } from "./.gen/providers/aws/security-group";
import { Subnet } from "./.gen/providers/aws/subnet";
import { Vpc } from "./.gen/providers/aws/vpc";
import { WorkspaceswebNetworkSettings } from "./.gen/providers/aws/workspacesweb-network-settings";
import { WorkspaceswebNetworkSettingsAssociation } from "./.gen/providers/aws/workspacesweb-network-settings-association";
import { WorkspaceswebPortal } from "./.gen/providers/aws/workspacesweb-portal";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Vpc(this, "example", {
      cidrBlock: "10.0.0.0/16",
      tags: {
        Name: "example",
      },
    });
    const awsWorkspaceswebPortalExample = new WorkspaceswebPortal(
      this,
      "example_1",
      {
        displayName: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebPortalExample.overrideLogicalId("example");
    const available = new DataAwsAvailabilityZones(this, "available", {
      filter: [
        {
          name: "opt-in-status",
          values: ["opt-in-not-required"],
        },
      ],
      state: "available",
    });
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const exampleCount = TerraformCount.of(Token.asNumber("2"));
    const awsSecurityGroupExample = new SecurityGroup(this, "example_3", {
      name: "example-${" + exampleCount.index + "}",
      tags: {
        Name: "example",
      },
      vpcId: example.id,
      count: exampleCount,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSecurityGroupExample.overrideLogicalId("example");
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const awsSubnetExampleCount = TerraformCount.of(Token.asNumber("2"));
    const awsSubnetExample = new Subnet(this, "example_4", {
      availabilityZone: Token.asString(
        Fn.lookupNested(available.names, [awsSubnetExampleCount.index])
      ),
      cidrBlock: Token.asString(
        Fn.cidrsubnet(
          example.cidrBlock,
          8,
          Token.asNumber(awsSubnetExampleCount.index)
        )
      ),
      tags: {
        Name: "example",
      },
      vpcId: example.id,
      count: awsSubnetExampleCount,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSubnetExample.overrideLogicalId("example");
    const awsWorkspaceswebNetworkSettingsExample =
      new WorkspaceswebNetworkSettings(this, "example_5", {
        securityGroupIds: [
          Token.asString(Fn.lookupNested(awsSecurityGroupExample, ["0", "id"])),
          Token.asString(Fn.lookupNested(awsSecurityGroupExample, ["1", "id"])),
        ],
        subnetIds: [
          Token.asString(Fn.lookupNested(awsSubnetExample, ["0", "id"])),
          Token.asString(Fn.lookupNested(awsSubnetExample, ["1", "id"])),
        ],
        vpcId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebNetworkSettingsExample.overrideLogicalId("example");
    const awsWorkspaceswebNetworkSettingsAssociationExample =
      new WorkspaceswebNetworkSettingsAssociation(this, "example_6", {
        networkSettingsArn: Token.asString(
          awsWorkspaceswebNetworkSettingsExample.networkSettingsArn
        ),
        portalArn: Token.asString(awsWorkspaceswebPortalExample.portalArn),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebNetworkSettingsAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are required:

* `networkSettingsArn` - (Required) ARN of the network settings to associate with the portal. Forces replacement if changed.
* `portalArn` - (Required) ARN of the portal to associate with the network settings. Forces replacement if changed.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Network Settings Association using the `network_settings_arn,portal_arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebNetworkSettingsAssociation } from "./.gen/providers/aws/workspacesweb-network-settings-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebNetworkSettingsAssociation.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:networkSettings/network_settings-id-12345678,arn:aws:workspaces-web:us-west-2:123456789012:portal/portal-id-12345678"
    );
  }
}

```

<!-- cache-key: cdktf-0.20.8 input-c0abc142dc2706acec5f8522d7989a8ec41867d6a5aafb61e2bb0d352c75bd97 -->