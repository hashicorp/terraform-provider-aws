---
subcategory: "GameLift"
layout: "aws"
page_title: "AWS: aws_gamelift_build"
description: |-
  Provides a GameLift Build resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_gamelift_build

Provides an GameLift Build resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GameliftBuild } from "./.gen/providers/aws/gamelift-build";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GameliftBuild(this, "test", {
      name: "example-build",
      operatingSystem: "WINDOWS_2012",
      storageLocation: {
        bucket: Token.asString(awsS3BucketTest.id),
        key: Token.asString(awsS3ObjectTest.key),
        roleArn: Token.asString(awsIamRoleTest.arn),
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) Name of the build
* `operatingSystem` - (Required) Operating system that the game server binaries are built to run on. Valid values: `WINDOWS_2012`, `AMAZON_LINUX`, `AMAZON_LINUX_2`, `WINDOWS_2016`, `AMAZON_LINUX_2023`.
* `storageLocation` - (Required) Information indicating where your game build files are stored. See below.
* `version` - (Optional) Version that is associated with this build.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### Nested Fields

#### `storageLocation`

* `bucket` - (Required) Name of your S3 bucket.
* `key` - (Required) Name of the zip file containing your build files.
* `roleArn` - (Required) ARN of the access role that allows Amazon GameLift to access your S3 bucket.
* `objectVersion` - (Optional) A specific version of the file. If not set, the latest version of the file is retrieved.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - GameLift Build ID.
* `arn` - GameLift Build ARN.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import GameLift Builds using the ID. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GameliftBuild } from "./.gen/providers/aws/gamelift-build";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GameliftBuild.generateConfigForImport(this, "example", "<build-id>");
  }
}

```

Using `terraform import`, import GameLift Builds using the ID. For example:

```console
% terraform import aws_gamelift_build.example <build-id>
```

<!-- cache-key: cdktf-0.20.8 input-335047b4beeab94de2f256ae709556edb1ba7d68195b28a0ba7275b83b6af2dc -->