---
subcategory: "Network Firewall"
layout: "aws"
page_title: "AWS: aws_networkfirewall_firewall"
description: |-
  Provides an AWS Network Firewall Firewall resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_networkfirewall_firewall

Provides an AWS Network Firewall Firewall Resource

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkfirewallFirewall } from "./.gen/providers/aws/networkfirewall-firewall";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new NetworkfirewallFirewall(this, "example", {
      enabledAnalysisTypes: ["TLS_SNI", "HTTP_HOST"],
      firewallPolicyArn: Token.asString(
        awsNetworkfirewallFirewallPolicyExample.arn
      ),
      name: "example",
      subnetMapping: [
        {
          subnetId: Token.asString(awsSubnetExample.id),
        },
      ],
      tags: {
        Tag1: "Value1",
        Tag2: "Value2",
      },
      timeouts: [
        {
          create: "40m",
          delete: "1h",
          update: "50m",
        },
      ],
      vpcId: Token.asString(awsVpcExample.id),
    });
  }
}

```

### Transit Gateway Attached Firewall

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAvailabilityZones } from "./.gen/providers/aws/data-aws-availability-zones";
import { NetworkfirewallFirewall } from "./.gen/providers/aws/networkfirewall-firewall";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsAvailabilityZones(this, "example", {
      state: "available",
    });
    const awsNetworkfirewallFirewallExample = new NetworkfirewallFirewall(
      this,
      "example_1",
      {
        availabilityZoneMapping: [
          {
            availabilityZoneId: Token.asString(
              Fn.lookupNested(example.zoneIds, ["0"])
            ),
          },
          {
            availabilityZoneId: Token.asString(
              Fn.lookupNested(example.zoneIds, ["1"])
            ),
          },
        ],
        firewallPolicyArn: Token.asString(
          awsNetworkfirewallFirewallPolicyExample.arn
        ),
        name: "example",
        transitGatewayId: Token.asString(awsEc2TransitGatewayExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkfirewallFirewallExample.overrideLogicalId("example");
  }
}

```

### Transit Gateway Attached Firewall (Cross Account)

A full example of how to create a Transit Gateway in one AWS account, share it with a second AWS account, and create Network Firewall in the second account to the Transit Gateway via the `aws_networkfirewall_firewall` and [`aws_networkfirewall_network_firewall_transit_gateway_attachment_accepter`](/docs/providers/aws/r/networkfirewall_network_firewall_transit_gateway_attachment_accepter.html) resources can be found in [the `./examples/network-firewall-cross-account-transit-gateway` directory within the Github Repository](https://github.com/hashicorp/terraform-provider-aws/tree/main/examples/network-firewall-cross-account-transit-gateway)

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `availabilityZoneChangeProtection` - (Optional) A setting indicating whether the firewall is protected against changes to its Availability Zone configuration. When set to `true`, you must first disable this protection before adding or removing Availability Zones.
* `availabilityZoneMapping` - (Optional) Required when creating a transit gateway-attached firewall. Set of configuration blocks describing the avaiability availability where you want to create firewall endpoints for a transit gateway-attached firewall.
* `deleteProtection` - (Optional) A flag indicating whether the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. Defaults to `false`.
* `description` - (Optional) A friendly description of the firewall.
* `enabledAnalysisTypes` - (Optional) Set of types for which to collect analysis metrics. See [Reporting on network traffic in Network Firewall](https://docs.aws.amazon.com/network-firewall/latest/developerguide/reporting.html) for details on how to use the data. Valid values: `TLS_SNI`, `HTTP_HOST`. Defaults to `[]`.
* `encryptionConfiguration` - (Optional) KMS encryption configuration settings. See [Encryption Configuration](#encryption-configuration) below for details.
* `firewallPolicyArn` - (Required) The Amazon Resource Name (ARN) of the VPC Firewall policy.
* `firewallPolicyChangeProtection` - (Optional) A flag indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. Defaults to `false`.
* `name` - (Required, Forces new resource) A friendly name of the firewall.
* `subnetChangeProtection` - (Optional) A flag indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. Defaults to `false`.
* `subnetMapping` - (Optional) Required when creating a VPC attached firewall. Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See [Subnet Mapping](#subnet-mapping) below for details.
* `tags` - (Optional) Map of resource tags to associate with the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `transitGatewayId` - (Optional, Forces new resource). Required when creating a transit gateway-attached firewall. The unique identifier of the transit gateway to attach to this firewall. You can provide either a transit gateway from your account or one that has been shared with you through AWS Resource Access Manager
* `vpcId` - (Optional, Forces new resource)  Required when creating a VPC attached firewall. The unique identifier of the VPC where AWS Network Firewall should create the firewall.

### Availability Zone Mapping

The `availabilityZoneMapping` block supports the following arguments:

* `availabilityZoneId` - (Required)The ID of the Availability Zone where the firewall endpoint is located..

### Encryption Configuration

`encryptionConfiguration` settings for customer managed KMS keys. Remove this block to use the default AWS-managed KMS encryption (rather than setting `type` to `AWS_OWNED_KMS_KEY`).

* `keyId` - (Optional) The ID of the customer managed key. You can use any of the [key identifiers](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id) that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
* `type` - (Required) The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.

### Subnet Mapping

The `subnetMapping` block supports the following arguments:

* `ipAddressType` - (Optional) The subnet's IP address type. Valid values: `"DUALSTACK"`, `"IPV4"`.
* `subnetId` - (Required) The unique identifier for the subnet.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Name (ARN) that identifies the firewall.
* `arn` - The Amazon Resource Name (ARN) that identifies the firewall.
* `firewallStatus` - Nested list of information about the current status of the firewall.
    * `sync_states` - Set of subnets configured for use by the firewall.
        * `attachment` - Nested list describing the attachment status of the firewall's association with a single VPC subnet.
            * `endpointId` - The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
            * `subnetId` - The unique identifier of the subnet that you've specified to be used for a firewall endpoint.
        * `availabilityZone` - The Availability Zone where the subnet is configured.
    * `transit_gateway_attachment_sync_states` - Set of transit gateway configured for use by the firewall.
        * `attachmentId` - The unique identifier of the transit gateway attachment.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `transitGatewayOwnerAccountId` - The AWS account ID that owns the transit gateway.
* `updateToken` - A string token used when updating a firewall.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `60m`)
- `update` - (Default `60m`)
- `delete` - (Default `60m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Network Firewall Firewalls using their `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkfirewallFirewall } from "./.gen/providers/aws/networkfirewall-firewall";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkfirewallFirewall.generateConfigForImport(
      this,
      "example",
      "arn:aws:network-firewall:us-west-1:123456789012:firewall/example"
    );
  }
}

```

Using `terraform import`, import Network Firewall Firewalls using their `arn`. For example:

```console
% terraform import aws_networkfirewall_firewall.example arn:aws:network-firewall:us-west-1:123456789012:firewall/example
```

<!-- cache-key: cdktf-0.20.8 input-1977de78533317bd1d486b2d5970139dfeb9e5e470430937483bca83f21286ba -->