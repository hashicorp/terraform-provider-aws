---
subcategory: "Bedrock"
layout: "aws"
page_title: "AWS: aws_bedrock_model_invocation_logging_configuration"
description: |-
  Manages Bedrock model invocation logging configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_bedrock_model_invocation_logging_configuration

Manages Bedrock model invocation logging configuration.

~> Model invocation logging is configured per AWS region. To avoid overwriting settings, this resource should not be defined in multiple configurations.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BedrockModelInvocationLoggingConfiguration } from "./.gen/providers/aws/bedrock-model-invocation-logging-configuration";
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { S3BucketPolicy } from "./.gen/providers/aws/s3-bucket-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new S3Bucket(this, "example", {
      bucket: "example",
      forceDestroy: true,
      lifecycle: {
        ignoreChanges: ["creatorId", "creatorName"],
      },
    });
    const current = new DataAwsCallerIdentity(this, "current", {});
    const awsS3BucketPolicyExample = new S3BucketPolicy(this, "example_2", {
      bucket: example.bucket,
      policy:
        '{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Principal": {\n        "Service": "bedrock.amazonaws.com"\n      },\n      "Action": [\n        "s3:*"\n      ],\n      "Resource": [\n        "${' +
        example.arn +
        '}/*"\n      ],\n      "Condition": {\n        "StringEquals": {\n          "aws:SourceAccount": "${' +
        current.accountId +
        '}"\n        },\n        "ArnLike": {\n          "aws:SourceArn": "arn:aws:bedrock:us-east-1:${' +
        current.accountId +
        '}:*"\n        }\n      }\n    }\n  ]\n}\n\n',
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsS3BucketPolicyExample.overrideLogicalId("example");
    const awsBedrockModelInvocationLoggingConfigurationExample =
      new BedrockModelInvocationLoggingConfiguration(this, "example_3", {
        dependsOn: [awsS3BucketPolicyExample],
        loggingConfig: [
          {
            embeddingDataDeliveryEnabled: true,
            imageDataDeliveryEnabled: true,
            s3Config: [
              {
                bucketName: example.id,
                keyPrefix: "bedrock",
              },
            ],
            textDataDeliveryEnabled: true,
          },
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsBedrockModelInvocationLoggingConfigurationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `loggingConfig` - (Required) The logging configuration values to set.
    * `cloudwatchConfig` – (Optional) CloudWatch logging configuration.
        * `largeDataDeliveryS3Config` – (Optional) S3 configuration for delivering a large amount of data.
            * `bucketName` – (Required) S3 bucket name.
            * `keyPrefix` – (Optional) S3 prefix.
        * `logGroupName` – (Required) Log group name.
        * `roleArn` – (Optional) The role ARN.
    * `embeddingDataDeliveryEnabled` – (Optional) Set to include embeddings data in the log delivery.
    * `imageDataDeliveryEnabled` – (Optional) Set to include image data in the log delivery.
    * `s3Config` – (Optional) S3 configuration for storing log data.
        * `bucketName` – (Required) S3 bucket name.
        * `keyPrefix` – (Optional) S3 prefix.
    * `textDataDeliveryEnabled` – (Optional) Set to include text data in the log delivery.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - AWS Region in which logging is configured.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Bedrock Invocation Logging Configuration using the `id` set to the AWS Region. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BedrockModelInvocationLoggingConfiguration } from "./.gen/providers/aws/bedrock-model-invocation-logging-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    BedrockModelInvocationLoggingConfiguration.generateConfigForImport(
      this,
      "myConfig",
      "us-east-1"
    );
  }
}

```

Using `terraform import`, import Bedrock custom model using the `id` set to the AWS Region. For example:

```console
% terraform import aws_bedrock_model_invocation_logging_configuration.my_config us-east-1
```

<!-- cache-key: cdktf-0.20.1 input-133dcfe3fbb6e947216f40d4368e641199f134fa245d8476c232eb1f6c5b8f5a -->