---
subcategory: "Verified Permissions"
layout: "aws"
page_title: "AWS: aws_verifiedpermissions_policy_store"
description: |-
  This is a Terraform resource for managing an AWS Verified Permissions Policy Store.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_verifiedpermissions_policy_store

This is a Terraform resource for managing an AWS Verified Permissions Policy Store.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VerifiedpermissionsPolicyStore } from "./.gen/providers/aws/verifiedpermissions-policy-store";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VerifiedpermissionsPolicyStore(this, "example", {
      validationSettings: [
        {
          mode: "STRICT",
        },
      ],
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `validationSettings` - (Required) Validation settings for the policy store.
    * `mode` - (Required) The mode for the validation settings. Valid values: `OFF`, `STRICT`.

The following arguments are optional:

* `description` - (Optional) A description of the Policy Store.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `policyStoreId` - The ID of the Policy Store.
* `arn` - The ARN of the Policy Store.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Verified Permissions Policy Store using the `policyStoreId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VerifiedpermissionsPolicyStore } from "./.gen/providers/aws/verifiedpermissions-policy-store";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VerifiedpermissionsPolicyStore.generateConfigForImport(
      this,
      "example",
      "DxQg2j8xvXJQ1tQCYNWj9T"
    );
  }
}

```

Using `terraform import`, import Verified Permissions Policy Store using the `policyStoreId`. For example:

```console
 % terraform import aws_verifiedpermissions_policy_store.example DxQg2j8xvXJQ1tQCYNWj9T
```

<!-- cache-key: cdktf-0.20.8 input-541b1a0c6f2e8ec4f0ebd28b7273e1e53a8311370cf5bf35b187fcfaf171aac4 -->