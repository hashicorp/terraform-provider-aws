---
subcategory: "RDS (Relational Database)"
layout: "aws"
page_title: "AWS: aws_rds_instance_state"
description: |-
  Terraform resource for managing an AWS RDS (Relational Database) RDS Instance State.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_rds_instance_state

Terraform resource for managing an AWS RDS (Relational Database) RDS Instance State.

~> Destruction of this resource is a no-op and **will not** modify the instance state

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RdsInstanceState } from "./.gen/providers/aws/rds-instance-state";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new RdsInstanceState(this, "test", {
      identifier: Token.asString(awsDbInstanceTest.identifier),
      state: "available",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `identifier` - (Required) DB Instance Identifier
* `state` - (Required) Configured state of the DB Instance. Valid values are `available` and `stopped`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `identifier` - DB Instance Identifier

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RDS (Relational Database) RDS Instance State using the `example_id_arg`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RdsInstanceState } from "./.gen/providers/aws/rds-instance-state";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    RdsInstanceState.generateConfigForImport(
      this,
      "example",
      "db-L72FUFBZX2RRXT3HOJSIUQVOKE"
    );
  }
}

```

Using `terraform import`, import RDS (Relational Database) RDS Instance State using the `example_id_arg`. For example:

```console
% terraform import aws_rds_instance_state.example rds_instance_state-id-12345678
```

<!-- cache-key: cdktf-0.20.8 input-51f17dff08ff711e89c312f223fef82370a9f40f0eac7221405b62ef88410bdc -->