---
subcategory: "EBS (EC2)"
layout: "aws"
page_title: "AWS: aws_ebs_snapshot_block_public_access"
description: |-
  Manages EBS snapshot public access block configuration.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ebs_snapshot_block_public_access

Provides a resource to manage the state of the "Block public access for snapshots" setting on region level.

~> **NOTE:** Removing this Terraform resource disables blocking.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EbsSnapshotBlockPublicAccess } from "./.gen/providers/aws/ebs-snapshot-block-public-access";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new EbsSnapshotBlockPublicAccess(this, "example", {
      state: "block-all-sharing",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `state` - (Required) The mode in which to enable "Block public access for snapshots" for the region. Allowed values are `block-all-sharing`, `block-new-sharing`, `unblocked`.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the current state. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { EbsSnapshotBlockPublicAccess } from "./.gen/providers/aws/ebs-snapshot-block-public-access";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    EbsSnapshotBlockPublicAccess.generateConfigForImport(
      this,
      "example",
      "default"
    );
  }
}

```

Using `terraform import`, import the state. For example:

```console
% terraform import aws_ebs_snapshot_block_public_access.example default
```

<!-- cache-key: cdktf-0.20.8 input-3091c271e6e796cd7ab1e28d8099f15494e0d2efa5b27ce8f6bc37e000b03ec0 -->