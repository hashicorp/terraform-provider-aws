---
subcategory: "ELB Classic"
layout: "aws"
page_title: "AWS: aws_load_balancer_listener_policy"
description: |-
  Attaches a load balancer policy to an ELB Listener.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_load_balancer_listener_policy

Attaches a load balancer policy to an ELB Listener.

## Example Usage

### Custom Policy

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Elb } from "./.gen/providers/aws/elb";
import { LoadBalancerListenerPolicy } from "./.gen/providers/aws/load-balancer-listener-policy";
import { LoadBalancerPolicy } from "./.gen/providers/aws/load-balancer-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const wuTang = new Elb(this, "wu-tang", {
      availabilityZones: ["us-east-1a"],
      listener: [
        {
          instancePort: 443,
          instanceProtocol: "http",
          lbPort: 443,
          lbProtocol: "https",
          sslCertificateId:
            "arn:aws:iam::000000000000:server-certificate/wu-tang.net",
        },
      ],
      name: "wu-tang",
      tags: {
        Name: "wu-tang",
      },
    });
    const wuTangSsl = new LoadBalancerPolicy(this, "wu-tang-ssl", {
      loadBalancerName: wuTang.name,
      policyAttribute: [
        {
          name: "ECDHE-ECDSA-AES128-GCM-SHA256",
          value: "true",
        },
        {
          name: "Protocol-TLSv1.2",
          value: "true",
        },
      ],
      policyName: "wu-tang-ssl",
      policyTypeName: "SSLNegotiationPolicyType",
    });
    new LoadBalancerListenerPolicy(this, "wu-tang-listener-policies-443", {
      loadBalancerName: wuTang.name,
      loadBalancerPort: 443,
      policyNames: [wuTangSsl.policyName],
    });
  }
}

```

This example shows how to customize the TLS settings of an HTTPS listener.

### AWS Predefined Security Policy

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Elb } from "./.gen/providers/aws/elb";
import { LoadBalancerListenerPolicy } from "./.gen/providers/aws/load-balancer-listener-policy";
import { LoadBalancerPolicy } from "./.gen/providers/aws/load-balancer-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const wuTang = new Elb(this, "wu-tang", {
      availabilityZones: ["us-east-1a"],
      listener: [
        {
          instancePort: 443,
          instanceProtocol: "http",
          lbPort: 443,
          lbProtocol: "https",
          sslCertificateId:
            "arn:aws:iam::000000000000:server-certificate/wu-tang.net",
        },
      ],
      name: "wu-tang",
      tags: {
        Name: "wu-tang",
      },
    });
    const wuTangSslTls11 = new LoadBalancerPolicy(this, "wu-tang-ssl-tls-1-1", {
      loadBalancerName: wuTang.name,
      policyAttribute: [
        {
          name: "Reference-Security-Policy",
          value: "ELBSecurityPolicy-TLS-1-1-2017-01",
        },
      ],
      policyName: "wu-tang-ssl",
      policyTypeName: "SSLNegotiationPolicyType",
    });
    new LoadBalancerListenerPolicy(this, "wu-tang-listener-policies-443", {
      loadBalancerName: wuTang.name,
      loadBalancerPort: 443,
      policyNames: [wuTangSslTls11.policyName],
    });
  }
}

```

This example shows how to add a [Predefined Security Policy for ELBs](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-policy-table.html)

## Argument Reference

This resource supports the following arguments:

* `loadBalancerName` - (Required) The load balancer to attach the policy to.
* `loadBalancerPort` - (Required) The load balancer listener port to apply the policy to.
* `policyNames` - (Required) List of Policy Names to apply to the backend server.
* `triggers` - (Optional) Map of arbitrary keys and values that, when changed, will trigger an update. To force an update without changing these keys/values, use the [`terraform taint` command](https://www.terraform.io/docs/commands/taint.html).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the policy.
* `loadBalancerName` - The load balancer on which the policy is defined.
* `loadBalancerPort` - The load balancer listener port the policies are applied to

<!-- cache-key: cdktf-0.20.8 input-4c93426530ea960507c237ed921eb478f8510b255d175bf0f6382d0d0d11adbe -->