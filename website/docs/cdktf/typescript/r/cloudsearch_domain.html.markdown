---
subcategory: "CloudSearch"
layout: "aws"
page_title: "AWS: aws_cloudsearch_domain"
description: |-
  Provides an CloudSearch domain resource. 
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_cloudsearch_domain

Provides an CloudSearch domain resource.

Terraform waits for the domain to become `Active` when applying a configuration.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudsearchDomain } from "./.gen/providers/aws/cloudsearch-domain";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CloudsearchDomain(this, "example", {
      indexField: [
        {
          analysisScheme: "_en_default_",
          highlight: false,
          name: "headline",
          return: true,
          search: true,
          sort: true,
          type: "text",
        },
        {
          facet: true,
          name: "price",
          return: true,
          search: true,
          sort: true,
          sourceFields: "headline",
          type: "double",
        },
      ],
      name: "example-domain",
      scalingParameters: {
        desiredInstanceType: "search.medium",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `endpointOptions` - (Optional) Domain endpoint options. Documented below.
* `indexField` - (Optional) The index fields for documents added to the domain. Documented below.
* `multiAz` - (Optional) Whether or not to maintain extra instances for the domain in a second Availability Zone to ensure high availability.
* `name` - (Required) The name of the CloudSearch domain.
* `scalingParameters` - (Optional) Domain scaling parameters. Documented below.

### endpoint_options

This configuration block supports the following attributes:

* `enforceHttps` - (Optional) Enables or disables the requirement that all requests to the domain arrive over HTTPS.
* `tlsSecurityPolicy` - (Optional) The minimum required TLS version. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_DomainEndpointOptions.html) for valid values.

### scaling_parameters

This configuration block supports the following attributes:

* `desiredInstanceType` - (Optional) The instance type that you want to preconfigure for your domain. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/API_ScalingParameters.html) for valid values.
* `desiredPartitionCount` - (Optional) The number of partitions you want to preconfigure for your domain. Only valid when you select `search.2xlarge` as the instance type.
* `desiredReplicationCount` - (Optional) The number of replicas you want to preconfigure for each index partition.

### index_field

This configuration block supports the following attributes:

* `name` - (Required) A unique name for the field. Field names must begin with a letter and be at least 1 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
* `type` - (Required) The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
* `analysisScheme` - (Optional) The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
* `defaultValue` - (Optional) The default value for the field. This value is used when no value is specified for the field in the document data.
* `facet` - (Optional) You can get facet information by enabling this.
* `highlight` - (Optional) You can highlight information.
* `return` - (Optional) You can enable returning the value of all searchable fields.
* `search` - (Optional) You can set whether this index should be searchable or not.
* `sort` - (Optional) You can enable the property to be sortable.
* `sourceFields` - (Optional) A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The domain's ARN.
* `documentServiceEndpoint` - The service endpoint for updating documents in a search domain.
* `domainId` - An internally generated unique identifier for the domain.
* `searchServiceEndpoint` - The service endpoint for requesting search results from a search domain.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `20m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudSearch Domains using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudsearchDomain } from "./.gen/providers/aws/cloudsearch-domain";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CloudsearchDomain.generateConfigForImport(
      this,
      "example",
      "example-domain"
    );
  }
}

```

Using `terraform import`, import CloudSearch Domains using the `name`. For example:

```console
% terraform import aws_cloudsearch_domain.example example-domain
```

<!-- cache-key: cdktf-0.20.1 input-ceae2d1756852153a56b7559bc1249bcbdcd21cd8eb1c3b3095494c7547dd974 -->