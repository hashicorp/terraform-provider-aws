---
subcategory: "Shield"
layout: "aws"
page_title: "AWS: aws_shield_protection_group"
description: |-
  Creates a grouping of protected resources so they can be handled as a collective.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_shield_protection_group

Creates a grouping of protected resources so they can be handled as a collective.
This resource grouping improves the accuracy of detection and reduces false positives. For more information see
[Managing AWS Shield Advanced protection groups](https://docs.aws.amazon.com/waf/latest/developerguide/manage-protection-group.html)

## Example Usage

### Create protection group for all resources

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ShieldProtectionGroup } from "./.gen/providers/aws/shield-protection-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ShieldProtectionGroup(this, "example", {
      aggregation: "MAX",
      pattern: "ALL",
      protectionGroupId: "example",
    });
  }
}

```

### Create protection group for arbitrary number of resources

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCallerIdentity } from "./.gen/providers/aws/data-aws-caller-identity";
import { DataAwsRegion } from "./.gen/providers/aws/data-aws-region";
import { Eip } from "./.gen/providers/aws/eip";
import { ShieldProtection } from "./.gen/providers/aws/shield-protection";
import { ShieldProtectionGroup } from "./.gen/providers/aws/shield-protection-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Eip(this, "example", {
      domain: "vpc",
    });
    const current = new DataAwsCallerIdentity(this, "current", {});
    const dataAwsRegionCurrent = new DataAwsRegion(this, "current_2", {});
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsRegionCurrent.overrideLogicalId("current");
    const awsShieldProtectionExample = new ShieldProtection(this, "example_3", {
      name: "example",
      resourceArn:
        "arn:aws:ec2:${" +
        dataAwsRegionCurrent.name +
        "}:${" +
        current.accountId +
        "}:eip-allocation/${" +
        example.id +
        "}",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProtectionExample.overrideLogicalId("example");
    const awsShieldProtectionGroupExample = new ShieldProtectionGroup(
      this,
      "example_4",
      {
        aggregation: "MEAN",
        dependsOn: [awsShieldProtectionExample],
        members: [
          "arn:aws:ec2:${" +
            dataAwsRegionCurrent.name +
            "}:${" +
            current.accountId +
            "}:eip-allocation/${" +
            example.id +
            "}",
        ],
        pattern: "ARBITRARY",
        protectionGroupId: "example",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsShieldProtectionGroupExample.overrideLogicalId("example");
  }
}

```

### Create protection group for a type of resource

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ShieldProtectionGroup } from "./.gen/providers/aws/shield-protection-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ShieldProtectionGroup(this, "example", {
      aggregation: "SUM",
      pattern: "BY_RESOURCE_TYPE",
      protectionGroupId: "example",
      resourceType: "ELASTIC_IP_ALLOCATION",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `aggregation` - (Required) Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
* `members` - (Optional) The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
* `pattern` - (Required) The criteria to use to choose the protected resources for inclusion in the group.
* `protectionGroupId` - (Required) The name of the protection group.
* `resourceType` - (Optional) The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `protectionGroupArn` - The ARN (Amazon Resource Name) of the protection group.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Shield protection group resources using their protection group id. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ShieldProtectionGroup } from "./.gen/providers/aws/shield-protection-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ShieldProtectionGroup.generateConfigForImport(this, "example", "example");
  }
}

```

Using `terraform import`, import Shield protection group resources using their protection group id. For example:

```console
% terraform import aws_shield_protection_group.example example
```

<!-- cache-key: cdktf-0.20.8 input-9103f77296ecb9a47e4f678129df33c848d457b7cd5625270622bbbb051fbbf4 -->