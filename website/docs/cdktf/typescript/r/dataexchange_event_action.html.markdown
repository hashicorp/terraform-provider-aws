---
subcategory: "Data Exchange"
layout: "aws"
page_title: "AWS: aws_dataexchange_event_action"
description: |-
  Terraform resource for managing an AWS Data Exchange Event Action.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_dataexchange_event_action

Terraform resource for managing an AWS Data Exchange Event Action.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataexchangeEventAction } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataexchangeEventAction(this, "example", {
      action: [
        {
          export_revision_to_s3: [
            {
              encryption: [
                {
                  kms_key_arn: awsKmsKeyExample.arn,
                  type: "aws:kms",
                },
              ],
              revision_destination: [
                {
                  bucket: awsS3BucketExample.bucket,
                  key_pattern: "$${Revision.CreatedAt}/$${Asset.Name}",
                },
              ],
            },
          ],
        },
      ],
      event: [
        {
          revision_published: [
            {
              data_set_id: awsDataexchangeDataSetExample.id,
            },
          ],
        },
      ],
    });
  }
}

```

## Argument Reference

The following blocks are supported:

* `action` - (Required) Describes the action to take.
  Described in [`action` Configuration Block](#action-configuration-block) below.
* `event` - (Required) Describes the event that triggers the `action`.
  Described in [`event` Configuration Block](#event-configuration-block) below.

### action Configuration Block

* `export_revision_to_s3` - (Required) Configuration for an Export Revision to S3 action.
  Described in [`export_revision_to_s3` Configuration Block](#export_revision_to_s3-configuration-block)

### export_revision_to_s3 Configuration Block

* `encryption` - (Optional) Configures server-side encryption of the exported revision.
  Described in [`encryption` Configuration Block](#encryption-configuration-block) below.
* `revision_destination` - (Required) Configures the S3 destination of the exported revision.
  Described in [`revision_destination` Configuration Block](#revision_destination-configuration-block) below.

### encryption Configuration Block

* `type` - (Optional) Type of server-side encryption.
  Valid values are `aws:kms` or `aws:s3`.
* `kmsKeyArn` - (Optional) ARN of the KMS key used for encryption.

### revision_destination Configuration Block

* `bucket` - (Required) The S3 bucket where the revision will be exported.
* `key_pattern` - (Optional) Pattern for naming revisions in the S3 bucket.
  Defaults to `${Revision.CreatedAt}/${Asset.Name}`.

### event Configuration Block

* `revision_published` - (Required) Configuration for a Revision Published event.
  Described in [`revision_published` Configuration Block](#revision_published-configuration-block) below.

### revision_published Configuration Block

* `dataSetId` - (Required) The ID of the data set to monitor for revision publications.
  Changing this value will recreate the resource.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - Amazon Resource Name (ARN) of the event action.
* `createdAt` - Date and time when the resource was created.
* `id` - Unique identifier for the event action.
* `updatedAt` - Data and time when the resource was last updated.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Data Exchange Event Action using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataexchangeEventAction } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    DataexchangeEventAction.generateConfigForImport(
      this,
      "example",
      "example-event-action-id"
    );
  }
}

```

Using `terraform import`, import Data Exchange Event Action using the id. For example:

```console
% terraform import aws_dataexchange_event_action.example example-event-action-id
```

<!-- cache-key: cdktf-0.20.8 input-a6ad8980fb61e2df7bb4669749aad3280a71e5d93ac053466068bf1eccb3600f -->