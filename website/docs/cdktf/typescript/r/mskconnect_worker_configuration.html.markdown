---
subcategory: "Managed Streaming for Kafka Connect"
layout: "aws"
page_title: "AWS: aws_mskconnect_worker_configuration"
description: |-
  Provides an Amazon MSK Connect worker configuration resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_mskconnect_worker_configuration

Provides an Amazon MSK Connect Worker Configuration Resource.

## Example Usage

### Basic configuration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MskconnectWorkerConfiguration } from "./.gen/providers/aws/mskconnect-worker-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new MskconnectWorkerConfiguration(this, "example", {
      name: "example",
      propertiesFileContent:
        "key.converter=org.apache.kafka.connect.storage.StringConverter\nvalue.converter=org.apache.kafka.connect.storage.StringConverter\n\n",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required, Forces new resource) The name of the worker configuration.
* `propertiesFileContent` - (Required, Forces new resource) Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format.

The following arguments are optional:

* `description` - (Optional, Forces new resource) A summary description of the worker configuration.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - the Amazon Resource Name (ARN) of the worker configuration.
* `latestRevision` - an ID of the latest successfully created revision of the worker configuration.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `delete` - (Default `10m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MSK Connect Worker Configuration using the plugin's `arn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { MskconnectWorkerConfiguration } from "./.gen/providers/aws/mskconnect-worker-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    MskconnectWorkerConfiguration.generateConfigForImport(
      this,
      "example",
      "arn:aws:kafkaconnect:eu-central-1:123456789012:worker-configuration/example/8848493b-7fcc-478c-a646-4a52634e3378-4"
    );
  }
}

```

Using `terraform import`, import MSK Connect Worker Configuration using the plugin's `arn`. For example:

```console
% terraform import aws_mskconnect_worker_configuration.example 'arn:aws:kafkaconnect:eu-central-1:123456789012:worker-configuration/example/8848493b-7fcc-478c-a646-4a52634e3378-4'
```

<!-- cache-key: cdktf-0.20.1 input-636518bb950dc126d61f198f20edb87d205b9ff5d5e7c3a6c7ba631c4b79b4a7 -->