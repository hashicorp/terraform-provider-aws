---
subcategory: "SageMaker"
layout: "aws"
page_title: "AWS: aws_sagemaker_app"
description: |-
  Provides a SageMaker App resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sagemaker_app

Provides a SageMaker App resource.

## Example Usage

### Basic usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerApp } from "./.gen/providers/aws/sagemaker-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SagemakerApp(this, "example", {
      appName: "example",
      appType: "JupyterServer",
      domainId: Token.asString(awsSagemakerDomainExample.id),
      userProfileName: Token.asString(
        awsSagemakerUserProfileExample.userProfileName
      ),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `appName` - (Required) The name of the app.
* `appType` - (Required) The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway`, `TensorBoard`, `CodeEditor`, `JupyterLab`, `DetailedProfiler`, and `Canvas`.
* `domainId` - (Required) The domain ID.
* `resourceSpec` - (Optional) The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See [Resource Spec](#resource-spec) below.
* `spaceName` - (Optional) The name of the space. At least one of `userProfileName` or `spaceName` required.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `userProfileName` - (Optional) The user profile name. At least one of `userProfileName` or `spaceName` required.

### Resource Spec

* `instanceType` - (Optional) The instance type that the image version runs on. For valid values see [SageMaker Instance Types](https://docs.aws.amazon.com/sagemaker/latest/dg/notebooks-available-instance-types.html).
* `lifecycleConfigArn` - (Optional) The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
* `sagemakerImageArn` - (Optional) The ARN of the SageMaker image that the image version belongs to.
* `sagemakerImageVersionAlias` - (Optional) The SageMaker Image Version Alias.
* `sagemakerImageVersionArn` - (Optional) The ARN of the image version created on the instance.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Amazon Resource Name (ARN) of the app.
* `arn` - The Amazon Resource Name (ARN) of the app.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SageMaker Apps using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SagemakerApp } from "./.gen/providers/aws/sagemaker-app";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SagemakerApp.generateConfigForImport(
      this,
      "example",
      "arn:aws:sagemaker:us-west-2:012345678912:app/domain-id/user-profile-name/app-type/app-name"
    );
  }
}

```

Using `terraform import`, import SageMaker Apps using the `id`. For example:

```console
% terraform import aws_sagemaker_app.example arn:aws:sagemaker:us-west-2:012345678912:app/domain-id/user-profile-name/app-type/app-name
```

<!-- cache-key: cdktf-0.20.1 input-c8770f5c5bdaa350b78f188c0956e24e0436218e71233211ee24ef6b57b7dc3a -->