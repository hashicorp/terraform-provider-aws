---
subcategory: "S3 Glacier"
layout: "aws"
page_title: "AWS: aws_glacier_vault"
description: |-
  Provides a Glacier Vault.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glacier_vault

Provides a Glacier Vault Resource. You can refer to the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-vaults.html) for a full explanation of the Glacier Vault functionality

~> **NOTE:** When removing a Glacier Vault, the Vault must be empty.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { GlacierVault } from "./.gen/providers/aws/glacier-vault";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const awsSnsTopic = new SnsTopic(this, "aws_sns_topic", {
      name: "glacier-sns-topic",
    });
    const myArchive = new DataAwsIamPolicyDocument(this, "my_archive", {
      statement: [
        {
          actions: ["glacier:InitiateJob", "glacier:GetJobOutput"],
          effect: "Allow",
          principals: [
            {
              identifiers: ["*"],
              type: "*",
            },
          ],
          resources: [
            "arn:aws:glacier:eu-west-1:432981146916:vaults/MyArchive",
          ],
          sid: "add-read-only-perm",
        },
      ],
    });
    const awsGlacierVaultMyArchive = new GlacierVault(this, "my_archive_2", {
      accessPolicy: Token.asString(myArchive.json),
      name: "MyArchive",
      notification: {
        events: ["ArchiveRetrievalCompleted", "InventoryRetrievalCompleted"],
        snsTopic: awsSnsTopic.arn,
      },
      tags: {
        Test: "MyArchive",
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsGlacierVaultMyArchive.overrideLogicalId("my_archive");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Required) The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).
* `accessPolicy` - (Optional) The policy document. This is a JSON formatted string.
  The heredoc syntax or `file` function is helpful here. Use the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html) for more information on Glacier Vault Policy
* `notification` - (Optional) The notifications for the Vault. Fields documented below.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

**notification** supports the following:

* `events` - (Required) You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.
* `snsTopic` - (Required) The SNS Topic ARN.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `location` - The URI of the vault that was created.
* `arn` - The ARN of the vault.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glacier Vaults using the `name`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlacierVault } from "./.gen/providers/aws/glacier-vault";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GlacierVault.generateConfigForImport(this, "archive", "my_archive");
  }
}

```

Using `terraform import`, import Glacier Vaults using the `name`. For example:

```console
% terraform import aws_glacier_vault.archive my_archive
```

<!-- cache-key: cdktf-0.20.8 input-1bfb612252a42581f297e83a2d1f1c7c609160aeeb4a7bd67bccea5a3aa3cff5 -->