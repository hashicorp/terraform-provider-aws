---
subcategory: "CodePipeline"
layout: "aws"
page_title: "AWS: aws_codepipeline_custom_action_type"
description: |-
  Provides a CodePipeline CustomActionType.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codepipeline_custom_action_type

Provides a CodeDeploy CustomActionType

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodepipelineCustomActionType } from "./.gen/providers/aws/codepipeline-custom-action-type";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new CodepipelineCustomActionType(this, "example", {
      category: "Build",
      inputArtifactDetails: {
        maximumCount: 1,
        minimumCount: 0,
      },
      outputArtifactDetails: {
        maximumCount: 1,
        minimumCount: 0,
      },
      providerName: "example",
      version: "1",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `category` - (Required) The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`
* `configurationProperty` - (Optional) The configuration properties for the custom action. Max 10 items.

The `configurationProperty` object supports the following:

* `description` - (Optional) The description of the action configuration property.
* `key` - (Required) Whether the configuration property is a key.
* `name` - (Required) The name of the action configuration property.
* `queryable` - (Optional) Indicates that the property will be used in conjunction with PollForJobs.
* `required` - (Required) Whether the configuration property is a required value.
* `secret`- (Required) Whether the configuration property is secret.
* `type`- (Optional) The type of the configuration property. Valid values: `String`, `Number`, `Boolean`

* `inputArtifactDetails` - (Required) The details of the input artifact for the action.

The `inputArtifactDetails` object supports the following:

* `maximumCount` - (Required) The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
* `minimumCount` - (Required) The minimum number of artifacts allowed for the action type. Min: 0, Max: 5

* `outputArtifactDetails` - (Required) The details of the output artifact of the action.

The `outputArtifactDetails` object supports the following:

* `maximumCount` - (Required) The maximum number of artifacts allowed for the action type. Min: 0, Max: 5
* `minimumCount` - (Required) The minimum number of artifacts allowed for the action type. Min: 0, Max: 5

* `providerName` - (Required) The provider of the service used in the custom action
* `settings` - (Optional) The settings for an action type.

The `settings` object supports the following:

* `entityUrlTemplate` - (Optional) The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system.
* `executionUrlTemplate` - (Optional) The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system.
* `revisionUrlTemplate` - (Optional) The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
* `thirdPartyConfigurationUrl` - (Optional) The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.

* `tags` - (Optional) Map of tags to assign to this resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `version` - (Required) The version identifier of the custom action.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Composed of category, provider and version. For example, `Build:terraform:1`
* `arn` - The action ARN.
* `owner` - The creator of the action being called.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeDeploy CustomActionType using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodepipelineCustomActionType } from "./.gen/providers/aws/codepipeline-custom-action-type";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CodepipelineCustomActionType.generateConfigForImport(
      this,
      "example",
      "Build:terraform:1"
    );
  }
}

```

Using `terraform import`, import CodeDeploy CustomActionType using the `id`. For example:

```console
% terraform import aws_codepipeline_custom_action_type.example Build:terraform:1
```

<!-- cache-key: cdktf-0.20.8 input-618f4e853ef9774ea870455f957f72ac7ccbe371d784f81ae5996c728184b956 -->