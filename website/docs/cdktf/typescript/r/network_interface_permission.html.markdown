---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_network_interface_permission"
description: |-
  Grant cross-account access to an Elastic network interface (ENI).
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_network_interface_permission

Grant cross-account access to an Elastic network interface (ENI).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkInterface } from "./.gen/providers/aws/network-interface";
import { NetworkInterfacePermission } from "./.gen/providers/aws/network-interface-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new NetworkInterface(this, "example", {
      attachment: [
        {
          deviceIndex: 1,
          instance: Token.asString(awsInstanceExample.id),
        },
      ],
      privateIps: ["10.0.0.50"],
      securityGroups: [Token.asString(awsSecurityGroupExample.id)],
      subnetId: Token.asString(awsSubnetExample.id),
    });
    const awsNetworkInterfacePermissionExample = new NetworkInterfacePermission(
      this,
      "example_1",
      {
        awsAccountId: "123456789012",
        networkInterfaceId: example.id,
        permission: "INSTANCE-ATTACH",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsNetworkInterfacePermissionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `networkInterfaceId` - (Required) The ID of the network interface.
* `awsAccountId` - (Required) The Amazon Web Services account ID.
* `permission` - (Required) The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `networkInterfacePermissionId` - ENI permission ID.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Network Interface Permissions using the `networkInterfacePermissionId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { NetworkInterfacePermission } from "./.gen/providers/aws/network-interface-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    NetworkInterfacePermission.generateConfigForImport(
      this,
      "example",
      "eni-perm-056ad97ce2ac377ed"
    );
  }
}

```

Using `terraform import`, import Network Interface Permissions using the `networkInterfacePermissionId`. For example:

```console
% terraform import aws_network_interface_permission.example eni-perm-056ad97ce2ac377ed
```

<!-- cache-key: cdktf-0.20.8 input-e08ff2da3c3c712310790bfe46a4dc45da3e461a4648b91909a843cb15519f1a -->