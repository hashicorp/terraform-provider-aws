---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_endpoint_security_group_association"
description: |-
  Provides a resource to create an association between a VPC endpoint and a security group.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_endpoint_security_group_association

Provides a resource to create an association between a VPC endpoint and a security group.

~> **NOTE on VPC Endpoints and VPC Endpoint Security Group Associations:** Terraform provides
both a standalone VPC Endpoint Security Group Association (an association between a VPC endpoint
and a single `securityGroupId`) and a [VPC Endpoint](vpc_endpoint.html) resource with a `securityGroupIds`
attribute. Do not use the same security group ID in both a VPC Endpoint resource and a VPC Endpoint Security
Group Association resource. Doing so will cause a conflict of associations and will overwrite the association.

## Example Usage

Basic usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointSecurityGroupAssociation } from "./.gen/providers/aws/vpc-endpoint-security-group-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpcEndpointSecurityGroupAssociation(this, "sg_ec2", {
      securityGroupId: sg.id,
      vpcEndpointId: ec2.id,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `securityGroupId` - (Required) The ID of the security group to be associated with the VPC endpoint.
* `vpcEndpointId` - (Required) The ID of the VPC endpoint with which the security group will be associated.
* `replaceDefaultAssociation` - (Optional) Whether this association should replace the association with the VPC's default security group that is created when no security groups are specified during VPC endpoint creation. At most 1 association per-VPC endpoint should be configured with `replace_default_association = true`. `false` should be used when importing resources.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the association.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoint Security Group Associations using `vpcEndpointId` together with `securityGroupId`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointSecurityGroupAssociation } from "./.gen/providers/aws/vpc-endpoint-security-group-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcEndpointSecurityGroupAssociation.generateConfigForImport(
      this,
      "example",
      "vpce-aaaaaaaa/sg-bbbbbbbbbbbbbbbbb"
    );
  }
}

```

Using `terraform import`, import VPC Endpoint Security Group Associations using `vpcEndpointId` together with `securityGroupId`. For example:

```console
% terraform import aws_vpc_endpoint_security_group_association.example vpce-aaaaaaaa/sg-bbbbbbbbbbbbbbbbb
```

<!-- cache-key: cdktf-0.20.8 input-55be6a3bc9efb4a196c61c2562744c5a944f2ec11f35a8f9138208b0bcd2c421 -->