---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_catalog_database"
description: |-
  Provides a Glue Catalog Database.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_glue_catalog_database

Provides a Glue Catalog Database Resource. You can refer to the [Glue Developer Guide](http://docs.aws.amazon.com/glue/latest/dg/populate-data-catalog.html) for a full explanation of the Glue Data Catalog functionality

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogDatabase } from "./.gen/providers/aws/glue-catalog-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GlueCatalogDatabase(this, "example", {
      name: "MyCatalogDatabase",
    });
  }
}

```

### Create Table Default Permissions

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogDatabase } from "./.gen/providers/aws/glue-catalog-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new GlueCatalogDatabase(this, "example", {
      createTableDefaultPermission: [
        {
          permissions: ["SELECT"],
          principal: {
            dataLakePrincipalIdentifier: "IAM_ALLOWED_PRINCIPALS",
          },
        },
      ],
      name: "MyCatalogDatabase",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `catalogId` - (Optional) ID of the Glue Catalog to create the database in. If omitted, this defaults to the AWS Account ID.
* `createTableDefaultPermission` - (Optional) Creates a set of default permissions on the table for principals. See [`createTableDefaultPermission`](#create_table_default_permission) below.
* `description` - (Optional) Description of the database.
* `federatedDatabase` - (Optional) Configuration block that references an entity outside the AWS Glue Data Catalog. See [`federatedDatabase`](#federated_database) below.
* `locationUri` - (Optional) Location of the database (for example, an HDFS path).
* `name` - (Required) Name of the database. The acceptable characters are lowercase letters, numbers, and the underscore character.
* `parameters` - (Optional) List of key-value pairs that define parameters and properties of the database.
* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `targetDatabase` - (Optional) Configuration block for a target database for resource linking. See [`targetDatabase`](#target_database) below.

### federated_database

* `connectionName` - (Optional) Name of the connection to the external metastore.
* `identifier` - (Optional) Unique identifier for the federated database.

### target_database

* `catalogId` - (Required) ID of the Data Catalog in which the database resides.
* `databaseName` - (Required) Name of the catalog database.
* `region` - (Optional) Region of the target database.

### create_table_default_permission

* `permissions` - (Optional) The permissions that are granted to the principal.
* `principal` - (Optional) The principal who is granted permissions.. See [`principal`](#principal) below.

#### principal

* `dataLakePrincipalIdentifier` - (Optional) An identifier for the Lake Formation principal.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Glue Catalog Database.
* `id` - Catalog ID and name of the database.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue Catalog Databases using the `catalog_id:name`. If you have not set a Catalog ID specify the AWS Account ID that the database is in. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { GlueCatalogDatabase } from "./.gen/providers/aws/glue-catalog-database";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    GlueCatalogDatabase.generateConfigForImport(
      this,
      "database",
      "123456789012:my_database"
    );
  }
}

```

Using `terraform import`, import Glue Catalog Databases using the `catalog_id:name`. If you have not set a Catalog ID specify the AWS Account ID that the database is in. For example:

```console
% terraform import aws_glue_catalog_database.database 123456789012:my_database
```

<!-- cache-key: cdktf-0.20.8 input-f6ddbf330fc96789770c14c13d7df90a799c7886bd2a946dc50aba50cacf3d3c -->