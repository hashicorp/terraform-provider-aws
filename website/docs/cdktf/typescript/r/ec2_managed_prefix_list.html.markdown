---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_managed_prefix_list"
description: |-
  Provides a managed prefix list resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_managed_prefix_list

Provides a managed prefix list resource.

~> **NOTE on Managed Prefix Lists and Managed Prefix List Entries:** Terraform
currently provides both a standalone [Managed Prefix List Entry resource](ec2_managed_prefix_list_entry.html) (a single entry),
and a Managed Prefix List resource with entries defined in-line. At this time you
cannot use a Managed Prefix List with in-line rules in conjunction with any Managed
Prefix List Entry resources. Doing so will cause a conflict of entries and will overwrite entries.

~> **NOTE on `maxEntries`:** When you reference a Prefix List in a resource,
the maximum number of entries for the prefix lists counts as the same number of rules
or entries for the resource. For example, if you create a prefix list with a maximum
of 20 entries and you reference that prefix list in a security group rule, this counts
as 20 rules for the security group.

## Example Usage

Basic usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2ManagedPrefixList } from "./.gen/providers/aws/ec2-managed-prefix-list";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new Ec2ManagedPrefixList(this, "example", {
      addressFamily: "IPv4",
      entry: [
        {
          cidr: Token.asString(awsVpcExample.cidrBlock),
          description: "Primary",
        },
        {
          cidr: Token.asString(awsVpcIpv4CidrBlockAssociationExample.cidrBlock),
          description: "Secondary",
        },
      ],
      maxEntries: 5,
      name: "All VPC CIDR-s",
      tags: {
        Env: "live",
      },
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `addressFamily` - (Required, Forces new resource) Address family (`IPv4` or `IPv6`) of this prefix list.
* `entry` - (Optional) Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.
* `maxEntries` - (Required) Maximum number of entries that this prefix list can contain.
* `name` - (Required) Name of this resource. The name must not start with `com.amazonaws`.
* `tags` - (Optional) Map of tags to assign to this resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

### `entry`

* `cidr` - (Required) CIDR block of this entry.
* `description` - (Optional) Description of this entry. Due to API limitations, updating only the description of an existing entry requires temporarily removing and re-adding the entry.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the prefix list.
* `id` - ID of the prefix list.
* `ownerId` - ID of the AWS account that owns this prefix list.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `version` - Latest version of this prefix list.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Prefix Lists using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2ManagedPrefixList } from "./.gen/providers/aws/ec2-managed-prefix-list";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2ManagedPrefixList.generateConfigForImport(
      this,
      "default",
      "pl-0570a1d2d725c16be"
    );
  }
}

```

Using `terraform import`, import Prefix Lists using the `id`. For example:

```console
% terraform import aws_ec2_managed_prefix_list.default pl-0570a1d2d725c16be
```

<!-- cache-key: cdktf-0.20.8 input-f31ae5e52895be9c6e214e756efedf3f324fec164272531bc7a2c04e0cb5b0ae -->