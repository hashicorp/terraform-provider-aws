---
subcategory: "IAM (Identity & Access Management)"
layout: "aws"
page_title: "AWS: aws_iam_service_specific_credential"
description: |-
  Provides an IAM Service Specific Credential.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_iam_service_specific_credential

Provides an IAM Service Specific Credential.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IamServiceSpecificCredential } from "./.gen/providers/aws/iam-service-specific-credential";
import { IamUser } from "./.gen/providers/aws/iam-user";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new IamUser(this, "example", {
      name: "example",
    });
    const awsIamServiceSpecificCredentialExample =
      new IamServiceSpecificCredential(this, "example_1", {
        serviceName: "codecommit.amazonaws.com",
        userName: example.name,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsIamServiceSpecificCredentialExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `serviceName` - (Required) The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
* `userName` - (Required) The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.
* `status` - (Optional) The status to be assigned to the service-specific credential. Valid values are `Active` and `Inactive`. Default value is `Active`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The combination of `serviceName` and `userName` as such: `service_name:user_name:service_specific_credential_id`.
* `servicePassword` - The generated password for the service-specific credential.
* `serviceUserName` - The generated user name for the service-specific credential. This value is generated by combining the IAM user's name combined with the ID number of the AWS account, as in `jane-at-123456789012`, for example.
* `serviceSpecificCredentialId` - The unique identifier for the service-specific credential.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IAM Service Specific Credentials using the `service_name:user_name:service_specific_credential_id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { IamServiceSpecificCredential } from "./.gen/providers/aws/iam-service-specific-credential";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    IamServiceSpecificCredential.generateConfigForImport(
      this,
      "default",
      "`codecommit.amazonaws.com:example:some-id`"
    );
  }
}

```

Using `terraform import`, import IAM Service Specific Credentials using the `service_name:user_name:service_specific_credential_id`. For example:

```console
% terraform import aws_iam_service_specific_credential.default `codecommit.amazonaws.com:example:some-id`
```

<!-- cache-key: cdktf-0.20.8 input-1e83847adc046bae947086c436bc6f0c678e2771941ae818199da71c13912bb2 -->