---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_resource_gateway"
description: |-
  Terraform resource for managing an AWS VPC Lattice Resource Gateway.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_resource_gateway

Terraform resource for managing an AWS VPC Lattice Resource Gateway.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeResourceGateway } from "./.gen/providers/aws/vpclattice-resource-gateway";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpclatticeResourceGateway(this, "example", {
      name: "Example",
      subnetIds: [Token.asString(awsSubnetExample.id)],
      tags: {
        Environment: "Example",
      },
      vpcId: Token.asString(awsVpcExample.id),
    });
  }
}

```

### Specifying IP address type

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeResourceGateway } from "./.gen/providers/aws/vpclattice-resource-gateway";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpclatticeResourceGateway(this, "example", {
      ipAddressType: "DUALSTACK",
      name: "Example",
      subnetIds: [Token.asString(awsSubnetExample.id)],
      tags: {
        Environment: "Example",
      },
      vpcId: Token.asString(awsVpcExample.id),
    });
  }
}

```

### With security groups

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeResourceGateway } from "./.gen/providers/aws/vpclattice-resource-gateway";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpclatticeResourceGateway(this, "example", {
      name: "Example",
      securityGroupIds: [test.id],
      subnetIds: [Token.asString(awsSubnetExample.id)],
      vpcId: Token.asString(awsVpcExample.id),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - Name of the resource gateway.
* `subnetIds` - IDs of the VPC subnets in which to create the resource gateway.
* `vpcId` - ID of the VPC for the resource gateway.

The following arguments are optional:

* `ipAddressType` - (Optional) IP address type used by the resource gateway. Valid values are `IPV4`, `IPV6`, and `DUALSTACK`. The IP address type of a resource gateway must be compatible with the subnets of the resource gateway and the IP address type of the resource.
* `securityGroupIds` - (Optional) Security group IDs associated with the resource gateway. The security groups must be in the same VPC.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN of the resource gateway.
* `id` - ID of the resource gateway.
* `status` - Status of the resource gateway.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Lattice Resource Gateway using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpclatticeResourceGateway } from "./.gen/providers/aws/vpclattice-resource-gateway";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpclatticeResourceGateway.generateConfigForImport(
      this,
      "example",
      "rgw-0a1b2c3d4e5f"
    );
  }
}

```

Using `terraform import`, import VPC Lattice Resource Gateway using the `id`. For example:

```console
% terraform import aws_vpclattice_resource_gateway.example rgw-0a1b2c3d4e5f
```

<!-- cache-key: cdktf-0.20.8 input-95d9e1e3c5444df62fb4a3af8acf50b14b50b8a69a747481817cc374424a0a91 -->