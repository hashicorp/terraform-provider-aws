---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_ec2_managed_prefix_list_entry"
description: |-
  Use the `aws_ec2_managed_prefix_list_entry` resource to manage a managed prefix list entry.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_managed_prefix_list_entry

Use the `aws_prefix_list_entry` resource to manage a managed prefix list entry.

~> **NOTE:** Terraform currently provides two resources for managing Managed Prefix Lists and Managed Prefix List Entries. The standalone resource, [Managed Prefix List Entry](ec2_managed_prefix_list_entry.html), is used to manage a single entry. The [Managed Prefix List resource](ec2_managed_prefix_list.html) is used to manage multiple entries defined in-line. It is important to note that you cannot use a Managed Prefix List with in-line rules in conjunction with any Managed Prefix List Entry resources. This will result in a conflict of entries and will cause the entries to be overwritten.

~> **NOTE:** To improve execution times on larger updates, it is recommended to use the inline `entry` block as part of the Managed Prefix List resource when creating a prefix list with more than 100 entries. You can find more information about the resource [here](ec2_managed_prefix_list.html).

## Example Usage

Basic usage.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2ManagedPrefixList } from "./.gen/providers/aws/ec2-managed-prefix-list";
import { Ec2ManagedPrefixListEntryA } from "./.gen/providers/aws/ec2-managed-prefix-list-entry";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Ec2ManagedPrefixList(this, "example", {
      addressFamily: "IPv4",
      maxEntries: 5,
      name: "All VPC CIDR-s",
      tags: {
        Env: "live",
      },
    });
    new Ec2ManagedPrefixListEntryA(this, "entry_1", {
      cidr: Token.asString(awsVpcExample.cidrBlock),
      description: "Primary",
      prefixListId: example.id,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `cidr` - (Required) CIDR block of this entry.
* `description` - (Optional) Description of this entry. Please note that due to API limitations, updating only the description of an entry will require recreating the entry.
* `prefixListId` - (Required) The ID of the prefix list.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - ID of the managed prefix list entry.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import prefix list entries using `prefixListId` and `cidr` separated by a comma (`,`). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2ManagedPrefixListEntryA } from "./.gen/providers/aws/ec2-managed-prefix-list-entry";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2ManagedPrefixListEntryA.generateConfigForImport(
      this,
      "default",
      "pl-0570a1d2d725c16be,10.0.3.0/24"
    );
  }
}

```

Using `terraform import`, import prefix list entries using `prefixListId` and `cidr` separated by a comma (`,`). For example:

```console
% terraform import aws_ec2_managed_prefix_list_entry.default pl-0570a1d2d725c16be,10.0.3.0/24
```

<!-- cache-key: cdktf-0.20.8 input-3d44a4444122a301a9ec7b354d4857edd3200d8c413f7cb4c55f5979d3c06693 -->