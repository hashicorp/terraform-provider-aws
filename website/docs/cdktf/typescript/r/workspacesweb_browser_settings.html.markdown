---
subcategory: "WorkSpaces Web"
layout: "aws"
page_title: "AWS: aws_workspacesweb_browser_settings"
description: |-
  Terraform resource for managing an AWS WorkSpaces Web Browser Settings.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_workspacesweb_browser_settings

Terraform resource for managing an AWS WorkSpaces Web Browser Settings resource.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebBrowserSettings } from "./.gen/providers/aws/workspacesweb-browser-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new WorkspaceswebBrowserSettings(this, "example", {
      browserPolicy: Token.asString(
        Fn.jsonencode({
          AdditionalSettings: {
            DownloadsSettings: {
              Behavior: "DISABLE",
            },
          },
        })
      ),
    });
  }
}

```

### With All Arguments

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { KmsKey } from "./.gen/providers/aws/kms-key";
import { WorkspaceswebBrowserSettings } from "./.gen/providers/aws/workspacesweb-browser-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new KmsKey(this, "example", {
      deletionWindowInDays: 7,
      description: "KMS key for WorkSpaces Web Browser Settings",
    });
    const awsWorkspaceswebBrowserSettingsExample =
      new WorkspaceswebBrowserSettings(this, "example_1", {
        additionalEncryptionContext: {
          Environment: "Production",
        },
        browserPolicy: Token.asString(
          Fn.jsonencode({
            chromePolicies: {
              DefaultDownloadDirectory: {
                value: "/home/as2-streaming-user/MyFiles/TemporaryFiles1",
              },
            },
          })
        ),
        customerManagedKey: example.arn,
        tags: {
          Name: "example-browser-settings",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsWorkspaceswebBrowserSettingsExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are required:

* `browserPolicy` - (Required) Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.

The following arguments are optional:

* `additionalEncryptionContext` - (Optional) Additional encryption context for the browser settings.
* `customerManagedKey` - (Optional) ARN of the customer managed KMS key.
* `tags` - (Optional) Map of tags assigned to the resource. If configured with a provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `associatedPortalArns` - List of web portal ARNs to associate with the browser settings.
* `browserSettingsArn` - ARN of the browser settings resource.
* `tagsAll` - Map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import WorkSpaces Web Browser Settings using the `browserSettingsArn`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { WorkspaceswebBrowserSettings } from "./.gen/providers/aws/workspacesweb-browser-settings";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    WorkspaceswebBrowserSettings.generateConfigForImport(
      this,
      "example",
      "arn:aws:workspaces-web:us-west-2:123456789012:browsersettings/abcdef12345"
    );
  }
}

```

Using `terraform import`, import WorkSpaces Web Browser Settings using the `browserSettingsArn`. For example:

```console
% terraform import aws_workspacesweb_browser_settings.example arn:aws:workspacesweb:us-west-2:123456789012:browsersettings/abcdef12345
```

<!-- cache-key: cdktf-0.20.8 input-8956fece3587479152904150348e44c9f4accd67bc29a16db13d5334379de3cd -->