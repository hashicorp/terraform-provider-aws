---
subcategory: "OpenSearch"
layout: "aws"
page_title: "AWS: aws_opensearch_package_association"
description: |-
  Terraform resource for managing an AWS OpenSearch package association.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_opensearch_package_association

Manages an AWS Opensearch Package Association.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { OpensearchDomain } from "./.gen/providers/aws/opensearch-domain";
import { OpensearchPackage } from "./.gen/providers/aws/opensearch-package";
import { OpensearchPackageAssociation } from "./.gen/providers/aws/opensearch-package-association";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const myDomain = new OpensearchDomain(this, "my_domain", {
      clusterConfig: {
        instanceType: "r4.large.search",
      },
      domainName: "my-opensearch-domain",
      engineVersion: "Elasticsearch_7.10",
    });
    const example = new OpensearchPackage(this, "example", {
      packageName: "example-txt",
      packageSource: {
        s3BucketName: myOpensearchPackages.bucket,
        s3Key: Token.asString(awsS3ObjectExample.key),
      },
      packageType: "TXT-DICTIONARY",
    });
    const awsOpensearchPackageAssociationExample =
      new OpensearchPackageAssociation(this, "example_2", {
        domainName: myDomain.domainName,
        packageId: example.id,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsOpensearchPackageAssociationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `packageId` - (Required, Forces new resource) Internal ID of the package to associate with a domain.
* `domainName` - (Required, Forces new resource) Name of the domain to associate the package with.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The Id of the package association.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `10m`)
* `delete` - (Default `10m`)

<!-- cache-key: cdktf-0.20.8 input-4bf4fb6525081557853e76c5738da147fbc00142214c947d610c2b6a03303e42 -->