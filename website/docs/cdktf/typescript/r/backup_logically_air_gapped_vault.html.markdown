---
subcategory: "Backup"
layout: "aws"
page_title: "AWS: aws_backup_logically_air_gapped_vault"
description: |-
  Terraform resource for managing an AWS Backup Logically Air Gapped Vault.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_backup_logically_air_gapped_vault

Terraform resource for managing an AWS Backup Logically Air Gapped Vault.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BackupLogicallyAirGappedVault } from "./.gen/providers/aws/backup-logically-air-gapped-vault";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new BackupLogicallyAirGappedVault(this, "example", {
      maxRetentionDays: 7,
      minRetentionDays: 7,
      name: "lag-example-vault",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the Logically Air Gapped Backup Vault to create.
* `maxRetentionDays` - (Required) Maximum retention period that the Logically Air Gapped Backup Vault retains recovery points.
* `minRetentionDays` - (Required) Minimum retention period that the Logically Air Gapped Backup Vault retains recovery points.
* `tags` - (Optional) Metadata that you can assign to help organize the resources that you create. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The name of the Logically Air Gapped Backup Vault.
* `arn` - The ARN of the Logically Air Gapped Backup Vault.
* `recoveryPoints` - The number of recovery points that are stored in a Logically Air Gapped Backup Vault.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Backup Logically Air Gapped Vault using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { BackupLogicallyAirGappedVault } from "./.gen/providers/aws/backup-logically-air-gapped-vault";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    BackupLogicallyAirGappedVault.generateConfigForImport(
      this,
      "example",
      "lag-example-vault"
    );
  }
}

```

Using `terraform import`, import Backup Logically Air Gapped Vault using the `id`. For example:

```console
% terraform import aws_backup_logically_air_gapped_vault.example lag-example-vault
```

<!-- cache-key: cdktf-0.20.8 input-da77f247c1e95863bf20b1db72a05ad717f04d5ae1e812521cc9b3a879256789 -->