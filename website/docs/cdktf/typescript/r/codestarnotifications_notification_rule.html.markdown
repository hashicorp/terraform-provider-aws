---
subcategory: "CodeStar Notifications"
layout: "aws"
page_title: "AWS: aws_codestarnotifications_notification_rule"
description: |-
  Provides a CodeStar Notifications Rule
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_codestarnotifications_notification_rule

Provides a CodeStar Notifications Rule.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodecommitRepository } from "./.gen/providers/aws/codecommit-repository";
import { CodestarnotificationsNotificationRule } from "./.gen/providers/aws/codestarnotifications-notification-rule";
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
import { SnsTopicPolicy } from "./.gen/providers/aws/sns-topic-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const code = new CodecommitRepository(this, "code", {
      repositoryName: "example-code-repo",
    });
    const notif = new SnsTopic(this, "notif", {
      name: "notification",
    });
    const notifAccess = new DataAwsIamPolicyDocument(this, "notif_access", {
      statement: [
        {
          actions: ["sns:Publish"],
          principals: [
            {
              identifiers: ["codestar-notifications.amazonaws.com"],
              type: "Service",
            },
          ],
          resources: [notif.arn],
        },
      ],
    });
    new CodestarnotificationsNotificationRule(this, "commits", {
      detailType: "BASIC",
      eventTypeIds: ["codecommit-repository-comments-on-commits"],
      name: "example-code-repo-commits",
      resource: code.arn,
      target: [
        {
          address: notif.arn,
        },
      ],
    });
    new SnsTopicPolicy(this, "default", {
      arn: notif.arn,
      policy: Token.asString(notifAccess.json),
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `detailType` - (Required) The level of detail to include in the notifications for this resource. Possible values are `BASIC` and `FULL`.
* `eventTypeIds` - (Required) A list of event types associated with this notification rule.
  For list of allowed events see [here](https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api).
* `name` - (Required) The name of notification rule.
* `resource` - (Required) The ARN of the resource to associate with the notification rule.
* `status` - (Optional) The status of the notification rule. Possible values are `ENABLED` and `DISABLED`, default is `ENABLED`.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `target` - (Optional) Configuration blocks containing notification target information. Can be specified multiple times. At least one target must be specified on creation.

An `target` block supports the following arguments:

* `address` - (Required) The ARN of notification rule target. For example, a SNS Topic ARN.
* `type` - (Optional) The type of the notification target. Default value is `SNS`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The codestar notification rule ARN.
* `arn` - The codestar notification rule ARN.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeStar notification rule using the ARN. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodestarnotificationsNotificationRule } from "./.gen/providers/aws/codestarnotifications-notification-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    CodestarnotificationsNotificationRule.generateConfigForImport(
      this,
      "foo",
      "arn:aws:codestar-notifications:us-west-1:0123456789:notificationrule/2cdc68a3-8f7c-4893-b6a5-45b362bd4f2b"
    );
  }
}

```

Using `terraform import`, import CodeStar notification rule using the ARN. For example:

```console
% terraform import aws_codestarnotifications_notification_rule.foo arn:aws:codestar-notifications:us-west-1:0123456789:notificationrule/2cdc68a3-8f7c-4893-b6a5-45b362bd4f2b
```

<!-- cache-key: cdktf-0.20.8 input-4e53883c7fac8ce18f0f284d8670fbec11d282232b37f3e8c5d77110845632ed -->