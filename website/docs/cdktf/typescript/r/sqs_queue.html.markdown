---
subcategory: "SQS (Simple Queue)"
layout: "aws"
page_title: "AWS: aws_sqs_queue"
description: |-
  Provides a SQS resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_sqs_queue

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SqsQueue(this, "terraform_queue", {
      delaySeconds: 90,
      maxMessageSize: 2048,
      messageRetentionSeconds: 86400,
      name: "terraform-example-queue",
      receiveWaitTimeSeconds: 10,
      redrivePolicy: Token.asString(
        Fn.jsonencode({
          deadLetterTargetArn: terraformQueueDeadletter.arn,
          maxReceiveCount: 4,
        })
      ),
      tags: {
        Environment: "production",
      },
    });
  }
}

```

## FIFO queue

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SqsQueue(this, "terraform_queue", {
      contentBasedDeduplication: true,
      fifoQueue: true,
      name: "terraform-example-queue.fifo",
    });
  }
}

```

## High-throughput FIFO queue

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SqsQueue(this, "terraform_queue", {
      deduplicationScope: "messageGroup",
      fifoQueue: true,
      fifoThroughputLimit: "perMessageGroupId",
      name: "terraform-example-queue.fifo",
    });
  }
}

```

## Dead-letter queue

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
import { SqsQueueRedriveAllowPolicy } from "./.gen/providers/aws/sqs-queue-redrive-allow-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const terraformQueueDeadletter = new SqsQueue(
      this,
      "terraform_queue_deadletter",
      {
        name: "terraform-example-deadletter-queue",
      }
    );
    const terraformQueue = new SqsQueue(this, "terraform_queue", {
      name: "terraform-example-queue",
      redrivePolicy: Token.asString(
        Fn.jsonencode({
          deadLetterTargetArn: terraformQueueDeadletter.arn,
          maxReceiveCount: 4,
        })
      ),
    });
    new SqsQueueRedriveAllowPolicy(
      this,
      "terraform_queue_redrive_allow_policy",
      {
        queueUrl: terraformQueueDeadletter.id,
        redriveAllowPolicy: Token.asString(
          Fn.jsonencode({
            redrivePermission: "byQueue",
            sourceQueueArns: [terraformQueue.arn],
          })
        ),
      }
    );
  }
}

```

## Server-side encryption (SSE)

Using [SSE-SQS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html):

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SqsQueue(this, "terraform_queue", {
      name: "terraform-example-queue",
      sqsManagedSseEnabled: true,
    });
  }
}

```

Using [SSE-KMS](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html):

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new SqsQueue(this, "terraform_queue", {
      kmsDataKeyReusePeriodSeconds: 300,
      kmsMasterKeyId: "alias/aws/sqs",
      name: "terraform-example-queue",
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `name` - (Optional) The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the `.fifo` suffix. If omitted, Terraform will assign a random, unique name. Conflicts with `namePrefix`
* `namePrefix` - (Optional) Creates a unique name beginning with the specified prefix. Conflicts with `name`
* `visibilityTimeoutSeconds` - (Optional) The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html).
* `messageRetentionSeconds` - (Optional) The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
* `maxMessageSize` - (Optional) The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
* `delaySeconds` - (Optional) The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
* `receiveWaitTimeSeconds` - (Optional) The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
* `policy` - (Optional) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).
* `redrivePolicy` - (Optional) The JSON policy to set up the Dead Letter Queue, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html). **Note:** when specifying `maxReceiveCount`, you must specify it as an integer (`5`), and not a string (`"5"`).
* `redriveAllowPolicy` - (Optional) The JSON policy to set up the Dead Letter Queue redrive permission, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html).
* `fifoQueue` - (Optional) Boolean designating a FIFO queue. If not set, it defaults to `false` making it standard.
* `contentBasedDeduplication` - (Optional) Enables content-based deduplication for FIFO queues. For more information, see the [related documentation](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing)
* `sqsManagedSseEnabled` - (Optional) Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. See [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html). Terraform will only perform drift detection of its value when present in a configuration.
* `kmsMasterKeyId` - (Optional) The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see [Key Terms](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms).
* `kmsDataKeyReusePeriodSeconds` - (Optional) The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
* `deduplicationScope` - (Optional) Specifies whether message deduplication occurs at the message group or queue level. Valid values are `messageGroup` and `queue` (default).
* `fifoThroughputLimit` - (Optional) Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are `perQueue` (default) and `perMessageGroupId`.
* `tags` - (Optional) A map of tags to assign to the queue. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The URL for the created Amazon SQS queue.
* `arn` - The ARN of the SQS queue
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).
* `url` - Same as `id`: The URL for the created Amazon SQS queue.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import SQS Queues using the queue `url`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { SqsQueue } from "./.gen/providers/aws/sqs-queue";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    SqsQueue.generateConfigForImport(
      this,
      "publicQueue",
      "https://queue.amazonaws.com/80398EXAMPLE/MyQueue"
    );
  }
}

```

Using `terraform import`, import SQS Queues using the queue `url`. For example:

```console
% terraform import aws_sqs_queue.public_queue https://queue.amazonaws.com/80398EXAMPLE/MyQueue
```

<!-- cache-key: cdktf-0.20.8 input-73d659bd50569b3c8fc9416a390ac20884b69a87261e4c407bc298935589e844 -->