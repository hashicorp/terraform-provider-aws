---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_endpoint_policy"
description: |-
  Provides a VPC Endpoint Policy resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_endpoint_policy

Provides a VPC Endpoint Policy resource.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsVpcEndpointService } from "./.gen/providers/aws/data-aws-vpc-endpoint-service";
import { Vpc } from "./.gen/providers/aws/vpc";
import { VpcEndpoint } from "./.gen/providers/aws/vpc-endpoint";
import { VpcEndpointPolicy } from "./.gen/providers/aws/vpc-endpoint-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Vpc(this, "example", {
      cidrBlock: "10.0.0.0/16",
    });
    const dataAwsVpcEndpointServiceExample = new DataAwsVpcEndpointService(
      this,
      "example_1",
      {
        service: "dynamodb",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsVpcEndpointServiceExample.overrideLogicalId("example");
    const awsVpcEndpointExample = new VpcEndpoint(this, "example_2", {
      serviceName: Token.asString(dataAwsVpcEndpointServiceExample.serviceName),
      vpcId: example.id,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpcEndpointExample.overrideLogicalId("example");
    const awsVpcEndpointPolicyExample = new VpcEndpointPolicy(
      this,
      "example_3",
      {
        policy: Token.asString(
          Fn.jsonencode({
            Statement: [
              {
                Action: ["dynamodb:*"],
                Effect: "Allow",
                Principal: {
                  AWS: "*",
                },
                Resource: "*",
                Sid: "AllowAll",
              },
            ],
            Version: "2012-10-17",
          })
        ),
        vpcEndpointId: Token.asString(awsVpcEndpointExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpcEndpointPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `vpcEndpointId` - (Required) The VPC Endpoint ID.
* `policy` - (Optional) A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the VPC endpoint.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoint Policies using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcEndpointPolicy } from "./.gen/providers/aws/vpc-endpoint-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    VpcEndpointPolicy.generateConfigForImport(this, "example", "vpce-3ecf2a57");
  }
}

```

Using `terraform import`, import VPC Endpoint Policies using the `id`. For example:

```console
% terraform import aws_vpc_endpoint_policy.example vpce-3ecf2a57
```

<!-- cache-key: cdktf-0.20.8 input-a5b2784f8f44ade8f56c203390d38d1010def6c1bdaafcb341605772236d19d6 -->