---
subcategory: "VPN (Client)"
layout: "aws"
page_title: "AWS: aws_ec2_client_vpn_route"
description: |-
  Provides additional routes for AWS Client VPN endpoints.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_ec2_client_vpn_route

Provides additional routes for AWS Client VPN endpoints. For more information on usage, please see the
[AWS Client VPN Administrator's Guide](https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/what-is.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2ClientVpnEndpoint } from "./.gen/providers/aws/ec2-client-vpn-endpoint";
import { Ec2ClientVpnNetworkAssociation } from "./.gen/providers/aws/ec2-client-vpn-network-association";
import { Ec2ClientVpnRoute } from "./.gen/providers/aws/ec2-client-vpn-route";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new Ec2ClientVpnEndpoint(this, "example", {
      authenticationOptions: [
        {
          rootCertificateChainArn: Token.asString(awsAcmCertificateExample.arn),
          type: "certificate-authentication",
        },
      ],
      clientCidrBlock: "10.0.0.0/16",
      connectionLogOptions: {
        enabled: false,
      },
      description: "Example Client VPN endpoint",
      serverCertificateArn: Token.asString(awsAcmCertificateExample.arn),
    });
    const awsEc2ClientVpnNetworkAssociationExample =
      new Ec2ClientVpnNetworkAssociation(this, "example_1", {
        clientVpnEndpointId: example.id,
        subnetId: Token.asString(awsSubnetExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEc2ClientVpnNetworkAssociationExample.overrideLogicalId("example");
    const awsEc2ClientVpnRouteExample = new Ec2ClientVpnRoute(
      this,
      "example_2",
      {
        clientVpnEndpointId: example.id,
        destinationCidrBlock: "0.0.0.0/0",
        targetVpcSubnetId: Token.asString(
          awsEc2ClientVpnNetworkAssociationExample.subnetId
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEc2ClientVpnRouteExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This resource supports the following arguments:

* `clientVpnEndpointId` - (Required) The ID of the Client VPN endpoint.
* `destinationCidrBlock` - (Required) The IPv4 address range, in CIDR notation, of the route destination.
* `description` - (Optional) A brief description of the route.
* `targetVpcSubnetId` - (Required) The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - The ID of the Client VPN endpoint.
* `origin` - Indicates how the Client VPN route was added. Will be `add-route` for routes created by this resource.
* `type` - The type of the route.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `create` - (Default `4m`)
- `delete` - (Default `4m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS Client VPN routes using the endpoint ID, target subnet ID, and destination CIDR block. All values are separated by a `,`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Ec2ClientVpnRoute } from "./.gen/providers/aws/ec2-client-vpn-route";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    Ec2ClientVpnRoute.generateConfigForImport(
      this,
      "example",
      "cvpn-endpoint-1234567890abcdef,subnet-9876543210fedcba,10.1.0.0/24"
    );
  }
}

```

Using `terraform import`, import AWS Client VPN routes using the endpoint ID, target subnet ID, and destination CIDR block. All values are separated by a `,`. For example:

```console
% terraform import aws_ec2_client_vpn_route.example cvpn-endpoint-1234567890abcdef,subnet-9876543210fedcba,10.1.0.0/24
```

<!-- cache-key: cdktf-0.20.8 input-144efd2b6259f86199d398e7181456f408b908b3630ac4f3343668fe63a992b9 -->