---
subcategory: "S3 Control"
layout: "aws"
page_title: "AWS: aws_s3control_bucket_policy"
description: |-
  Manages an S3 Control Bucket Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_s3control_bucket_policy

Provides a resource to manage an S3 Control Bucket Policy.

-> This functionality is for managing [S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html). To manage S3 Bucket Policies in an AWS Partition, see the [`aws_s3_bucket_policy` resource](/docs/providers/aws/r/s3_bucket_policy.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlBucketPolicy } from "./.gen/providers/aws/s3-control-bucket-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new S3ControlBucketPolicy(this, "example", {
      bucket: Token.asString(awsS3ControlBucketExample.arn),
      policy: Token.asString(
        Fn.jsonencode({
          Id: "testBucketPolicy",
          Statement: [
            {
              Action: "s3-outposts:PutBucketLifecycleConfiguration",
              Effect: "Deny",
              Principal: {
                AWS: "*",
              },
              Resource: awsS3ControlBucketExample.arn,
              Sid: "statement1",
            },
          ],
          Version: "2012-10-17",
        })
      ),
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `bucket` - (Required) Amazon Resource Name (ARN) of the bucket.
* `policy` - (Required) JSON string of the resource policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - Amazon Resource Name (ARN) of the bucket.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 Control Bucket Policies using the Amazon Resource Name (ARN). For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3ControlBucketPolicy } from "./.gen/providers/aws/s3-control-bucket-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    S3ControlBucketPolicy.generateConfigForImport(
      this,
      "example",
      "arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/bucket/example"
    );
  }
}

```

Using `terraform import`, import S3 Control Bucket Policies using the Amazon Resource Name (ARN). For example:

```console
% terraform import aws_s3control_bucket_policy.example arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-12345678/bucket/example
```

<!-- cache-key: cdktf-0.20.8 input-476caf1030f6a6d008cc6514d741ddf15b7e806dd275bf24bf545b7689e2f554 -->