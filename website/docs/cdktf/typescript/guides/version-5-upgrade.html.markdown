---
subcategory: ""
layout: "aws"
page_title: "Terraform AWS Provider Version 5 Upgrade Guide"
description: |-
  Terraform AWS Provider Version 5 Upgrade Guide
---


<!-- Please do not edit this file, it is generated. -->
# Terraform AWS Provider Version 5 Upgrade Guide

Version 5.0.0 of the AWS provider for Terraform is a major release and includes changes that you need to consider when upgrading. This guide will help with that process and focuses only on changes from version 4.x to version 5.0.0. See the [Version 4 Upgrade Guide](/docs/providers/aws/guides/version-4-upgrade.html) for information on upgrading from 3.x to version 4.0.0.

Upgrade topics:

<!-- TOC depthFrom:2 depthTo:2 -->

- [Provider Version Configuration](#provider-version-configuration)
- [Provider Arguments](#provider-arguments)
- [Default Tags](#default-tags)
- [EC2-Classic Retirement](#ec2-classic-retirement)
- [Macie Classic Retirement](#macie-classic-retirement)
- [resource/aws_acmpca_certificate_authority](#resourceaws_acmpca_certificate_authority)
- [resource/aws_api_gateway_rest_api](#resourceaws_api_gateway_rest_api)
- [resource/aws_autoscaling_attachment](#resourceaws_autoscaling_attachment)
- [resource/aws_autoscaling_group](#resourceaws_autoscaling_group)
- [resource/aws_budgets_budget](#resourceaws_budgets_budget)
- [resource/aws_ce_anomaly_subscription](#resourceaws_ce_anomaly_subscription)
- [resource/aws_cloudwatch_event_target](#resourceaws_cloudwatch_event_target)
- [resource/aws_codebuild_project](#resourceaws_codebuild_project)
- [resource/aws_connect_hours_of_operation](#resourceaws_connect_hours_of_operation)
- [resource/aws_connect_queue](#resourceaws_connect_queue)
- [resource/aws_connect_routing_profile](#resourceaws_connect_routing_profile)
- [resource/aws_db_event_subscription](#resourceaws_db_event_subscription)
- [resource/aws_db_instance_role_association](#resourceaws_db_instance_role_association)
- [resource/aws_db_instance](#resourceaws_db_instance)
- [resource/aws_db_proxy_target](#resourceaws_db_proxy_target)
- [resource/aws_db_security_group](#resourceaws_db_security_group)
- [resource/aws_db_snapshot](#resourceaws_db_snapshot)
- [resource/aws_default_vpc](#resourceaws_default_vpc)
- [resource/aws_dms_endpoint](#resourceaws_dms_endpoint)
- [resource/aws_docdb_cluster](#resourceaws_docdb_cluster)
- [resource/aws_dx_gateway_association](#resourceaws_dx_gateway_association)
- [resource/aws_ec2_client_vpn_endpoint](#resourceaws_ec2_client_vpn_endpoint)
- [resource/aws_ec2_client_vpn_network_association](#resourceaws_ec2_client_vpn_network_association)
- [resource/aws_ecs_cluster](#resourceaws_ecs_cluster)
- [resource/aws_eip](#resourceaws_eip)
- [resource/aws_eip_association](#resourceaws_eip_association)
- [resource/aws_eks_addon](#resourceaws_eks_addon)
- [resource/aws_elasticache_cluster](#resourceaws_elasticache_cluster)
- [resource/aws_elasticache_replication_group](#resourceaws_elasticache_replication_group)
- [resource/aws_elasticache_security_group](#resourceaws_elasticache_security_group)
- [resource/aws_flow_log](#resourceaws_flow_log)
- [resource/aws_guardduty_organization_configuration](#resourceaws_guardduty_organization_configuration)
- [resource/aws_kinesis_firehose_delivery_stream](#resourceaws_kinesis_firehose_delivery_stream)
- [resource/aws_launch_configuration](#resourceaws_launch_configuration)
- [resource/aws_launch_template](#resourceaws_launch_template)
- [resource/aws_lightsail_instance](#resourceaws_lightsail_instance)
- [resource/aws_macie_member_account_association](#resourceaws_macie_member_account_association)
- [resource/aws_macie_s3_bucket_association](#resourceaws_macie_s3_bucket_association)
- [resource/aws_medialive_multiplex_program](#resourceaws_medialive_multiplex_program)
- [resource/aws_msk_cluster](#resourceaws_msk_cluster)
- [resource/aws_neptune_cluster](#resourceaws_neptune_cluster)
- [resource/aws_networkmanager_core_network](#resourceaws_networkmanager_core_network)
- [resource/aws_opensearch_domain](#resourceaws_opensearch_domain)
- [resource/aws_rds_cluster](#resourceaws_rds_cluster)
- [resource/aws_rds_cluster_instance](#resourceaws_rds_cluster_instance)
- [resource/aws_redshift_cluster](#resourceaws_redshift_cluster)
- [resource/aws_redshift_security_group](#resourceaws_redshift_security_group)
- [resource/aws_route](#resourceaws_route)
- [resource/aws_route_table](#resourceaws_route_table)
- [resource/aws_s3_object](#resourceaws_s3_object)
- [resource/aws_s3_object_copy](#resourceaws_s3_object_copy)
- [resource/aws_secretsmanager_secret](#resourceaws_secretsmanager_secret)
- [resource/aws_security_group](#resourceaws_security_group)
- [resource/aws_security_group_rule](#resourceaws_security_group_rule)
- [resource/aws_servicecatalog_product](#resourceaws_servicecatalog_product)
- [resource/aws_ssm_association](#resourceaws_ssm_association)
- [resource/aws_ssm_parameter](#resourceaws_ssm_parameter)
- [resource/aws_vpc](#resourceaws_vpc)
- [resource/aws_vpc_peering_connection](#resourceaws_vpc_peering_connection)
- [resource/aws_vpc_peering_connection_accepter](#resourceaws_vpc_peering_connection_accepter)
- [resource/aws_vpc_peering_connection_options](#resourceaws_vpc_peering_connection_options)
- [resource/aws_wafv2_web_acl](#resourceaws_wafv2_web_acl)
- [resource/aws_wafv2_web_acl_logging_configuration](#resourceaws_wafv2_web_acl_logging_configuration)
- [data-source/aws_api_gateway_rest_api](#data-sourceaws_api_gateway_rest_api)
- [data-source/aws_connect_hours_of_operation](#data-sourceaws_connect_hours_of_operation)
- [data-source/aws_db_instance](#data-sourceaws_db_instance)
- [data-source/aws_elasticache_cluster](#data-sourceaws_elasticache_cluster)
- [data-source/aws_elasticache_replication_group](#data-sourceaws_elasticache_replication_group)
- [data-source/aws_iam_policy_document](#data-sourceaws_iam_policy_document)
- [data-source/aws_identitystore_group](#data-sourceaws_identitystore_group)
- [data-source/aws_identitystore_user](#data-sourceaws_identitystore_user)
- [data-source/aws_launch_configuration](#data-sourceaws_launch_configuration)
- [data-source/aws_opensearch_domain](#data-sourceaws_opensearch_domain)
- [data-source/aws_quicksight_data_set](#data-sourceaws_quicksight_data_set)
- [data-source/aws_redshift_cluster](#data-sourceaws_redshift_cluster)
- [data-source/aws_redshift_service_account](#data-sourceaws_redshift_service_account)
- [data-source/aws_secretsmanager_secret](#data-sourceaws_secretsmanager_secret)
- [data-source/aws_service_discovery_service](#data-sourceaws_service_discovery_service)
- [data-source/aws_subnet_ids](#data-sourceaws_subnet_ids)
- [data-source/aws_vpc_peering_connection](#data-sourceaws_vpc_peering_connection)

<!-- /TOC -->

## Provider Version Configuration

-> Before upgrading to version 5.0.0, upgrade to the most recent 4.X version of the provider and ensure that your environment successfully runs [`terraform plan`](https://www.terraform.io/docs/commands/plan.html). You should not see changes you don't expect or deprecation notices.

Use [version constraints when configuring Terraform providers](https://www.terraform.io/docs/configuration/providers.html#provider-versions). If you are following that recommendation, update the version constraints in your Terraform configuration and run [`terraform init -upgrade`](https://www.terraform.io/docs/commands/init.html) to download the new version.

For example, given this previous configuration:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AwsProvider } from "./.gen/providers/aws/provider";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AwsProvider(this, "aws", {});
  }
}

```

Update to the latest 5.X version:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AwsProvider } from "./.gen/providers/aws/provider";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new AwsProvider(this, "aws", {});
  }
}

```

## Provider Arguments

Version 5.0.0 removes these `provider` arguments:

* `assume_role.duration_seconds` - Use `assume_role.duration` instead
* `assume_role_with_web_identity.duration_seconds` - Use `assume_role_with_web_identity.duration` instead
* `s3_force_path_style` - Use `s3UsePathStyle` instead
* `shared_credentials_file` - Use `sharedCredentialsFiles` instead
* `skip_get_ec2_platforms` - Removed following the retirement of EC2-Classic

## Default Tags

The following enhancements are included:

* Duplicate `defaultTags` can now be included and will be overwritten by resource `tags`.
* Zero value tags, `""`, can now be included in both `defaultTags` and resource `tags`.
* Tags can now be `computed`.

## EC2-Classic Retirement

Following the retirement of EC2-Classic, we removed a number of resources, arguments, and attributes. This list summarizes what we _removed_:

* `aws_db_security_group` resource
* `aws_elasticache_security_group` resource
* `aws_redshift_security_group` resource
* [`aws_db_instance`](/docs/providers/aws/r/db_instance.html) resource's `securityGroupNames` argument
* [`aws_elasticache_cluster`](/docs/providers/aws/r/elasticache_cluster.html) resource's `securityGroupNames` argument
* [`aws_redshift_cluster`](/docs/providers/aws/r/redshift_cluster.html) resource's `cluster_security_groups` argument
* [`aws_launch_configuration`](/docs/providers/aws/r/launch_configuration.html) resource's `vpc_classic_link_id` and `vpc_classic_link_security_groups` arguments
* [`aws_vpc`](/docs/providers/aws/r/vpc.html) resource's `enable_classiclink` and `enable_classiclink_dns_support` arguments
* [`aws_default_vpc`](/docs/providers/aws/r/default_vpc.html) resource's `enable_classiclink` and `enable_classiclink_dns_support` arguments
* [`aws_vpc_peering_connection`](/docs/providers/aws/r/vpc_peering_connection.html) resource's `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` arguments
* [`aws_vpc_peering_connection_accepter`](/docs/providers/aws/r/vpc_peering_connection_accepter.html) resource's `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` arguments
* [`aws_vpc_peering_connection_options`](/docs/providers/aws/r/vpc_peering_connection_options.html) resource's `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` arguments
* [`aws_db_instance`](/docs/providers/aws/d/db_instance.html) data source's `db_security_groups` attribute
* [`aws_elasticache_cluster`](/docs/providers/aws/d/elasticache_cluster.html) data source's `securityGroupNames` attribute
* [`aws_redshift_cluster`](/docs/providers/aws/d/redshift_cluster.html) data source's `cluster_security_groups` attribute
* [`aws_launch_configuration`](/docs/providers/aws/d/launch_configuration.html) data source's `vpc_classic_link_id` and `vpc_classic_link_security_groups` attributes

## Macie Classic Retirement

Following the retirement of Amazon Macie Classic, we removed these resources:

* `aws_macie_member_account_association`
* `aws_macie_s3_bucket_association`

## resource/aws_acmpca_certificate_authority

Remove `status` from configurations as it no longer exists.

## resource/aws_api_gateway_rest_api

The `minimumCompressionSize` attribute is now a String type, allowing it to be computed when set via the `body` attribute. Valid values remain the same.

## resource/aws_autoscaling_attachment

Change `alb_target_group_arn`, which no longer exists, to `lbTargetGroupArn` in configurations.

## resource/aws_autoscaling_group

Remove `tags` from configurations as it no longer exists. Use the `tag` attribute instead. For use cases requiring dynamic tags, see the [Dynamic Tagging example](../r/autoscaling_group.html.markdown#dynamic-tagging).

## resource/aws_budgets_budget

Remove `cost_filters` from configurations as it no longer exists.

## resource/aws_ce_anomaly_subscription

Remove `threshold` from configurations as it no longer exists.

## resource/aws_cloudwatch_event_target

The `ecs_target.propagate_tags` attribute now has no default value. If no value is specified, the tags are not propagated.

## resource/aws_codebuild_project

Remove `secondary_sources.auth` and `source.auth` from configurations as they no longer exist.

## resource/aws_connect_hours_of_operation

Remove `hours_of_operation_arn` from configurations as it no longer exists.

## resource/aws_connect_queue

Remove `quick_connect_ids_associated` from configurations as it no longer exists.

## resource/aws_connect_routing_profile

Remove `queue_configs_associated` from configurations as it no longer exists.

## resource/aws_db_event_subscription

Configurations that define `sourceIds` using the `id` attribute of `aws_db_instance` must be updated to use `identifier` instead. For example, `source_ids = [aws_db_instance.example.id]` must be updated to `source_ids = [aws_db_instance.example.identifier]`.

## resource/aws_db_instance

`aws_db_instance` has had a number of changes:

1. [`id` is no longer the identifier](#aws_db_instanceid-is-no-longer-the-identifier)
2. [Use `dbName` instead of `name`](#use-db_name-instead-of-name)
3. [Remove `db_security_groups`](#remove-db_security_groups)

### aws_db_instance.id is no longer the identifier

**What `id` _is_ has changed and can have far-reaching consequences.** Fortunately, fixing configurations is straightforward.

`id` is _now_ the DBI Resource ID (_i.e._, `dbi-resource-id`), an immutable "identifier" for an instance. `id` is now the same as the `resourceId`. (We recommend using `resourceId` rather than `id` when you need to refer to the DBI Resource ID.) _Previously_, `id` was the DB Identifier. Now when you need to refer to the _DB Identifier_, use `identifier`.

Fixing configurations involves changing any `id` references to `identifier`, where the reference expects the DB Identifier. For example, if you're replicating an `aws_db_instance`, you can no longer use `id` to define the `replicateSourceDb`.

This configuration will now result in an error since `replicateSourceDb` expects a _DB Identifier_:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DbInstance } from "./.gen/providers/aws/db-instance";
interface MyConfig {
  instanceClass: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new DbInstance(this, "test", {
      replicateSourceDb: source.id,
      instanceClass: config.instanceClass,
    });
  }
}

```

You can fix the configuration like this:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DbInstance } from "./.gen/providers/aws/db-instance";
interface MyConfig {
  instanceClass: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new DbInstance(this, "test", {
      replicateSourceDb: source.identifier,
      instanceClass: config.instanceClass,
    });
  }
}

```

### Use `dbName` instead of `name`

Change `name` to `dbName` in configurations as `name` no longer exists.

### Remove `db_security_groups`

Remove `db_security_groups` from configurations as it no longer exists. We removed it as part of the EC2-Classic retirement.

## resource/aws_db_instance_role_association

Configurations that define `dbInstanceIdentifier` using the `id` attribute of `aws_db_instance` must be updated to use `identifier` instead. For example, `db_instance_identifier = aws_db_instance.example.id` must be updated to `db_instance_identifier = aws_db_instance.example.identifier`.

## resource/aws_db_proxy_target

Configurations that define `dbInstanceIdentifier` using the `id` attribute of `aws_db_instance` must be updated to use `identifier` instead. For example, `db_instance_identifier = aws_db_instance.example.id` must be updated to `db_instance_identifier = aws_db_instance.example.identifier`.

## resource/aws_db_security_group

We removed this resource as part of the EC2-Classic retirement.

## resource/aws_db_snapshot

Configurations that define `dbInstanceIdentifier` using the `id` attribute of `aws_db_instance` must be updated to use `identifier` instead. For example, `db_instance_identifier = aws_db_instance.example.id` must be updated to `db_instance_identifier = aws_db_instance.example.identifier`.

## resource/aws_default_vpc

Remove `enable_classiclink` and `enable_classiclink_dns_support` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

## resource/aws_dms_endpoint

Remove `s3_settings.ignore_headers_row` from configurations as it no longer exists. **Be careful to not confuse `ignore_headers_row`, which no longer exists, with `ignoreHeaderRows`, which still exists.**

## resource/aws_docdb_cluster

Changes to the `snapshotIdentifier` attribute will now correctly force re-creation of the resource. Previously, changing this attribute would result in a successful apply, but without the cluster being restored (only the resource state was changed). This change brings behavior of the cluster `snapshotIdentifier` attribute into alignment with other RDS resources, such as `aws_db_instance`.

Automated snapshots **should not** be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.

## resource/aws_dx_gateway_association

The `vpnGatewayId` attribute has been deprecated. All configurations using `vpnGatewayId` should be updated to use the `associatedGatewayId` attribute instead.

## resource/aws_ec2_client_vpn_endpoint

Remove `status` from configurations as it no longer exists.

## resource/aws_ec2_client_vpn_network_association

Remove `securityGroups` and `status` from configurations as they no longer exist.

## resource/aws_ecs_cluster

Remove `capacityProviders` and `defaultCapacityProviderStrategy` from configurations as they no longer exist.

## resource/aws_eip

* With the retirement of EC2-Classic, the `standard` domain is no longer supported.
* The `vpc` argument has been deprecated. Use `domain` argument instead.

## resource/aws_eip_association

With the retirement of EC2-Classic, the `standard` domain is no longer supported.

## resource/aws_eks_addon

The `resolveConflicts` argument has been deprecated. Use the `resolveConflictsOnCreate` and/or `resolveConflictsOnUpdate` arguments instead.

## resource/aws_elasticache_cluster

Remove `securityGroupNames` from configurations as it no longer exists. We removed it as part of the EC2-Classic retirement.

## resource/aws_elasticache_replication_group

* Remove the `clusterMode` configuration block. Use top-level `numNodeGroups` and `replicasPerNodeGroup` instead.
* Remove `availabilityZones`, `number_cache_clusters`, `replication_group_description` arguments from configurations as they no longer exist.  Use `preferredCacheClusterAzs`, `numCacheClusters`, and `description`, respectively, instead.

## resource/aws_elasticache_security_group

We removed this resource as part of the EC2-Classic retirement.

## resource/aws_flow_log

The `logGroupName` attribute has been deprecated. All configurations using `logGroupName` should be updated to use the `logDestination` attribute instead.

## resource/aws_guardduty_organization_configuration

The `autoEnable` argument has been deprecated. Use the `autoEnableOrganizationMembers` argument instead.

## resource/aws_kinesis_firehose_delivery_stream

* Remove the `s3Configuration` attribute from the root of the resource. `s3Configuration` is now a part of the following blocks: `elasticsearchConfiguration`, `opensearchConfiguration`, `redshiftConfiguration`, `splunkConfiguration`, and `httpEndpointConfiguration`.
* Remove `s3` as an option for `destination`. Use `extended_s3` instead
* Rename `extended_s3_configuration.0.s3_backup_configuration.0.buffer_size` and `extended_s3_configuration.0.s3_backup_configuration.0.buffer_interval` to `extended_s3_configuration.0.s3_backup_configuration.0.buffering_size` and `extended_s3_configuration.0.s3_backup_configuration.0.buffering_interval`, respectively.
* Rename `redshift_configuration.0.s3_backup_configuration.0.buffer_size` and `redshift_configuration.0.s3_backup_configuration.0.buffer_interval` to `redshift_configuration.0.s3_backup_configuration.0.buffering_size` and `redshift_configuration.0.s3_backup_configuration.0.buffering_interval`, respectively.
* Rename `s3_configuration.0.buffer_size` and `s3_configuration.0.buffer_interval` to `s3_configuration.0.buffering_size` and `s3_configuration.0.buffering_interval`, respectively.

## resource/aws_launch_configuration

Remove `vpc_classic_link_id` and `vpc_classic_link_security_groups` from configurations as they no longer exist. We removed them as part of the EC2-Classic retirement.

## resource/aws_launch_template

We removed defaults from `metatadata_options`. Launch template metadata options will now default to unset values, which is the AWS default behavior.

## resource/aws_lightsail_instance

Remove `ipv6Address` from configurations as it no longer exists.

## resource/aws_macie_member_account_association

We removed this resource as part of the Macie Classic retirement.

## resource/aws_macie_s3_bucket_association

We removed this resource as part of the Macie Classic retirement.

## resource/aws_medialive_multiplex_program

Change `statemux_settings`, which no longer exists, to `statmuxSettings` in configurations.

## resource/aws_msk_cluster

Remove `broker_node_group_info.ebs_volume_size` from configurations as it no longer exists.

## resource/aws_neptune_cluster

Changes to the `snapshotIdentifier` attribute will now correctly force re-creation of the resource. Previously, changing this attribute would result in a successful apply, but without the cluster being restored (only the resource state was changed). This change brings behavior of the cluster `snapshotIdentifier` attribute into alignment with other RDS resources, such as `aws_db_instance`.

Automated snapshots **should not** be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.

## resource/aws_networkmanager_core_network

Remove `policyDocument` from configurations as it no longer exists. Use the `aws_networkmanager_core_network_policy_attachment` resource instead.

## resource/aws_opensearch_domain

* The `kibanaEndpoint` attribute has been deprecated. All configurations using `kibanaEndpoint` should be updated to use the `dashboardEndpoint` attribute instead.
* The `engineVersion` attribute no longer has a default value. Omitting this attribute will now create a domain with the latest OpenSearch version, consistent with the behavior of the AWS API.

## resource/aws_rds_cluster

* Update configurations to always include `engine` since it is now required and has no default. Previously, not including `engine` was equivalent to `engine = "aurora"` and created a MySQL-5.6-compatible cluster.
* Changes to the `snapshotIdentifier` attribute will now correctly force re-creation of the resource. Previously, changing this attribute would result in a successful apply, but without the cluster being restored (only the resource state was changed). This change brings behavior of the cluster `snapshotIdentifier` attribute into alignment with other RDS resources, such as `aws_db_instance`. **NOTE:** Automated snapshots **should not** be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.

## resource/aws_rds_cluster_instance

Update configurations to always include `engine` since it is now required and has no default. Previously, not including `engine` was equivalent to `engine = "aurora"` and created a MySQL-5.6-compatible cluster.

## resource/aws_redshift_cluster

Remove `cluster_security_groups` from configurations as it no longer exists. We removed it as part of the EC2-Classic retirement.

## resource/aws_redshift_security_group

We removed this resource as part of the EC2-Classic retirement.

## resource/aws_route

Update configurations to use `networkInterfaceId` rather than `instanceId`, which no longer exists.

For example, this configuration is _no longer valid_:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route } from "./.gen/providers/aws/route";
interface MyConfig {
  routeTableId: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new Route(this, "example", {
      instanceId: Token.asString(awsInstanceExample.id),
      routeTableId: config.routeTableId,
    });
  }
}

```

One possible way to fix this configuration involves referring to the `primaryNetworkInterfaceId` of an instance:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Route } from "./.gen/providers/aws/route";
interface MyConfig {
  routeTableId: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new Route(this, "example", {
      networkInterfaceId: Token.asString(
        awsInstanceExample.primaryNetworkInterfaceId
      ),
      routeTableId: config.routeTableId,
    });
  }
}

```

Another fix is to use an ENI:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Instance } from "./.gen/providers/aws/instance";
import { NetworkInterface } from "./.gen/providers/aws/network-interface";
import { Route } from "./.gen/providers/aws/route";
interface MyConfig {
  subnetId: any;
  deviceIndex: any;
  routeTableId: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const example = new NetworkInterface(this, "example", {
      subnetId: config.subnetId,
    });
    const awsInstanceExample = new Instance(this, "example_1", {
      networkInterface: [
        {
          networkInterfaceId: example.id,
          deviceIndex: config.deviceIndex,
        },
      ],
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsInstanceExample.overrideLogicalId("example");
    const awsRouteExample = new Route(this, "example_2", {
      dependsOn: [awsInstanceExample],
      networkInterfaceId: example.id,
      routeTableId: config.routeTableId,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRouteExample.overrideLogicalId("example");
  }
}

```

## resource/aws_route_table

Update configurations to use `route.*.network_interface_id` rather than `route.*.instance_id`, which no longer exists.

For example, this configuration is _no longer valid_:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RouteTable } from "./.gen/providers/aws/route-table";
interface MyConfig {
  vpcId: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new RouteTable(this, "example", {
      route: [
        {
          instance_id: awsInstanceExample.id,
        },
      ],
      vpcId: config.vpcId,
    });
  }
}

```

One possible way to fix this configuration involves referring to the `primaryNetworkInterfaceId` of an instance:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { RouteTable } from "./.gen/providers/aws/route-table";
interface MyConfig {
  vpcId: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new RouteTable(this, "example", {
      route: [
        {
          networkInterfaceId: Token.asString(
            awsInstanceExample.primaryNetworkInterfaceId
          ),
        },
      ],
      vpcId: config.vpcId,
    });
  }
}

```

Another fix is to use an ENI:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { Instance } from "./.gen/providers/aws/instance";
import { NetworkInterface } from "./.gen/providers/aws/network-interface";
import { RouteTable } from "./.gen/providers/aws/route-table";
interface MyConfig {
  subnetId: any;
  deviceIndex: any;
  vpcId: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const example = new NetworkInterface(this, "example", {
      subnetId: config.subnetId,
    });
    const awsInstanceExample = new Instance(this, "example_1", {
      networkInterface: [
        {
          networkInterfaceId: example.id,
          deviceIndex: config.deviceIndex,
        },
      ],
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsInstanceExample.overrideLogicalId("example");
    const awsRouteTableExample = new RouteTable(this, "example_2", {
      dependsOn: [awsInstanceExample],
      route: [
        {
          networkInterfaceId: example.id,
        },
      ],
      vpcId: config.vpcId,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsRouteTableExample.overrideLogicalId("example");
  }
}

```

## resource/aws_s3_object

The `acl` attribute no longer has a default value. Previously this was set to `private` when omitted. Objects requiring a private ACL should now explicitly set this attribute.

## resource/aws_s3_object_copy

The `acl` attribute no longer has a default value. Previously this was set to `private` when omitted. Object copies requiring a private ACL should now explicitly set this attribute.

## resource/aws_secretsmanager_secret

Remove `rotationEnabled`, `rotationLambdaArn` and `rotationRules` from configurations as they no longer exist.

## resource/aws_security_group

With the retirement of EC2-Classic, non-VPC security groups are no longer supported.

## resource/aws_security_group_rule

With the retirement of EC2-Classic, non-VPC security groups are no longer supported.

## resource/aws_servicecatalog_product

Changes to any `provisioningArtifactParameters` arguments now properly trigger a replacement. This fixes incorrect behavior, but may technically be breaking for configurations expecting non-functional in-place updates.

## resource/aws_ssm_association

The `instanceId` attribute has been deprecated. All configurations using `instanceId` should be updated to use the `targets` attribute instead.

## resource/aws_ssm_parameter

The `overwrite` attribute has been deprecated. Existing parameters should be explicitly imported rather than relying on the "import on create" behavior previously enabled by setting `overwrite = true`. In a future major version the `overwrite` attribute will be removed and attempting to create a parameter that already exists will fail.

## resource/aws_vpc

Remove `enable_classiclink` and `enable_classiclink_dns_support` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

## resource/aws_vpc_peering_connection

Remove `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

## resource/aws_vpc_peering_connection_accepter

Remove `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

## resource/aws_vpc_peering_connection_options

Remove `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

## resource/aws_wafv2_web_acl

* Remove `statement.managed_rule_group_statement.excluded_rule` and `statement.rule_group_reference_statement.excluded_rule` from configurations as they no longer exist.
* The `statement.rule_group_reference_statement.rule_action_override` attribute has been added.

## resource/aws_wafv2_web_acl_logging_configuration

Remove `redacted_fields.all_query_arguments`, `redacted_fields.body` and `redacted_fields.single_query_argument` from configurations as they no longer exist.

## data-source/aws_api_gateway_rest_api

The `minimumCompressionSize` attribute is now a String type, allowing it to be computed when set via the `body` attribute.

## data-source/aws_connect_hours_of_operation

Remove `hours_of_operation_arn` from configurations as it no longer exists.

## data-source/aws_db_instance

Remove `db_security_groups` from configurations as it no longer exists. We removed it as part of the EC2-Classic retirement.

## data-source/aws_elasticache_cluster

Remove `securityGroupNames` from configurations as it no longer exists. We removed it as part of the EC2-Classic retirement.

## data-source/aws_elasticache_replication_group

Rename `number_cache_clusters` and `replication_group_description`, which no longer exist, to `numCacheClusters`, and `description`, respectively.

## data-source/aws_iam_policy_document

* Remove `sourceJson` and `overrideJson` from configurations. Use `sourcePolicyDocuments` and `overridePolicyDocuments`, respectively, instead.
* Don't add empty `statement.sid` values to `json` attribute value.

## data-source/aws_identitystore_group

Remove `filter` from configurations as it no longer exists.

## data-source/aws_identitystore_user

Remove `filter` from configurations as it no longer exists.

## data-source/aws_launch_configuration

Remove `vpc_classic_link_id` and `vpc_classic_link_security_groups` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

## data-source/aws_opensearch_domain

The `kibanaEndpoint` attribute has been deprecated. All configurations using `kibanaEndpoint` should be updated to use the `dashboardEndpoint` attribute instead.

## data-source/aws_quicksight_data_set

The `tagsAll` attribute has been deprecated and will be removed in a future version.

## data-source/aws_redshift_cluster

Remove `cluster_security_groups` from configurations as it no longer exists. We removed it as part of the EC2-Classic retirement.

## data-source/aws_redshift_service_account

[AWS document](https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html#db-auditing-bucket-permissions) that [a service principal name](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services) be used instead of AWS account ID in any relevant IAM policy.
The [`aws_redshift_service_account`](/docs/providers/aws/d/redshift_service_account.html) data source should now be considered deprecated and will be removed in a future version.

## data-source/aws_service_discovery_service

The `tagsAll` attribute has been deprecated and will be removed in a future version.

## data-source/aws_secretsmanager_secret

Remove `rotationEnabled`, `rotationLambdaArn` and `rotationRules` from configurations as they no longer exist.

## data-source/aws_subnet_ids

We removed the `aws_subnet_ids` data source. Use the [`aws_subnets`](/docs/providers/aws/d/subnets.html) data source instead.

## data-source/aws_vpc_peering_connection

Remove `allow_classic_link_to_remote_vpc` and `allow_vpc_to_remote_classic_link` from configurations as they no longer exist. They were part of the EC2-Classic retirement.

<!-- cache-key: cdktf-0.20.8 input-aca6d1f7e7d666acb626774a0855d9b010ab540c0e171c9acb88a23401334cb9 -->