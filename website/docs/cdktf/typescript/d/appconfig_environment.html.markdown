---
subcategory: "AppConfig"
layout: "aws"
page_title: "AWS: aws_appconfig_environment"
description: |-
  Terraform data source for managing an AWS AppConfig Environment.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_appconfig_environment

Provides access to an AppConfig Environment.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAppconfigEnvironment } from "./.gen/providers/aws/data-aws-appconfig-environment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsAppconfigEnvironment(this, "example", {
      applicationId: "b5d5gpj",
      environmentId: "qrbb1c1",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `applicationId` - (Required) ID of the AppConfig Application to which this Environment belongs.
* `environmentId` - (Required) ID of the AppConfig Environment.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the environment.
* `name` - Name of the environment.
* `description` - Name of the environment.
* `monitor` - Set of Amazon CloudWatch alarms to monitor during the deployment process.
    * `alarmArn` - ARN of the Amazon CloudWatch alarm.
    * `alarmRoleArn` - ARN of an IAM role for AWS AppConfig to monitor.
* `state` - State of the environment. Possible values are `READY_FOR_DEPLOYMENT`, `DEPLOYING`, `ROLLING_BACK`
  or `ROLLED_BACK`.
* `tags` - Map of tags for the resource.

<!-- cache-key: cdktf-0.20.8 input-2536eae28938ccf1a8bf0a1e33718611d0fbfe4294f71a133d77dbe21bc83180 -->