---
subcategory: "VPN (Client)"
layout: "aws"
page_title: "AWS: aws_ec2_client_vpn_endpoint"
description: |-
  Get information on an EC2 Client VPN endpoint
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_ec2_client_vpn_endpoint

Get information on an EC2 Client VPN endpoint.

## Example Usage

### By Filter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEc2ClientVpnEndpoint } from "./.gen/providers/aws/data-aws-ec2-client-vpn-endpoint";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEc2ClientVpnEndpoint(this, "example", {
      filter: [
        {
          name: "tag:Name",
          values: ["ExampleVpn"],
        },
      ],
    });
  }
}

```

### By Identifier

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEc2ClientVpnEndpoint } from "./.gen/providers/aws/data-aws-ec2-client-vpn-endpoint";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEc2ClientVpnEndpoint(this, "example", {
      clientVpnEndpointId: "cvpn-endpoint-083cf50d6eb314f21",
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `clientVpnEndpointId` - (Optional) ID of the Client VPN endpoint.
* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.
* `tags` - (Optional) Map of tags, each pair of which must exactly match a pair on the desired endpoint.

### filter

This block allows for complex filters. You can use one or more `filter` blocks.

The following arguments are required:

* `name` - (Required) Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeClientVpnEndpoints.html).
* `values` - (Required) Set of values that are accepted for the given field. An endpoint will be selected if any one of the given values matches.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` -  The ARN of the Client VPN endpoint.
* `authenticationOptions` - Information about the authentication method used by the Client VPN endpoint.
* `clientCidrBlock` - IPv4 address range, in CIDR notation, from which client IP addresses are assigned.
* `clientConnectOptions` - The options for managing connection authorization for new client connections.
* `clientLoginBannerOptions` - Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.
* `connectionLogOptions` - Information about the client connection logging options for the Client VPN endpoint.
* `description` - Brief description of the endpoint.
* `dnsName` - DNS name to be used by clients when connecting to the Client VPN endpoint.
* `dnsServers` - Information about the DNS servers to be used for DNS resolution.
* `securityGroupIds` - IDs of the security groups for the target network associated with the Client VPN endpoint.
* `selfServicePortal` - Whether the self-service portal for the Client VPN endpoint is enabled.
* `selfServicePortalUrl` - The URL of the self-service portal.
* `serverCertificateArn` - The ARN of the server certificate.
* `sessionTimeoutHours` - The maximum VPN session duration time in hours.
* `splitTunnel` - Whether split-tunnel is enabled in the AWS Client VPN endpoint.
* `transportProtocol` - Transport protocol used by the Client VPN endpoint.
* `vpcId` - ID of the VPC associated with the Client VPN endpoint.
* `vpnPort` - Port number for the Client VPN endpoint.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.8 input-bc05f6bb24f9086ff19f5d3ed7d1f4948088a83b4e318db8a86fe506a18104cf -->