---
subcategory: "ElastiCache"
layout: "aws"
page_title: "AWS: aws_elasticache_serverless_cache"
description: |-
  Get information on an ElastiCache Serverless Cache resource.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_elasticache_serverless_cache

Use this data source to get information about an ElastiCache Serverless Cache.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsElasticacheServerlessCache } from "./.gen/providers/aws/data-aws-elasticache-serverless-cache";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsElasticacheServerlessCache(this, "example", {
      name: "example",
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `name` – (Required) Identifier for the serverless cache.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of the serverless cache.
* `cacheUsageLimits` - The cache usage limits for storage and ElastiCache Processing Units for the cache. See [`cacheUsageLimits` Block](#cache_usage_limits-block) for details.
* `createTime` - Timestamp of when the serverless cache was created.
* `dailySnapshotTime` - The daily time that snapshots will be created from the new serverless cache. Only available for engine types `"redis"` and `"valkey"`.
* `description` - Description of the serverless cache.
* `endpoint` - Represents the information required for client programs to connect to the cache. See [`endpoint` Block](#endpoint-block) for details.
* `engine` – Name of the cache engine.
* `fullEngineVersion` - The name and version number of the engine the serverless cache is compatible with.
* `kmsKeyId` - ARN of the customer managed key for encrypting the data at rest.
* `majorEngineVersion` - The version number of the engine the serverless cache is compatible with.
* `readerEndpoint` - Represents the information required for client programs to connect to a cache node. See [`readerEndpoint` Block](#reader_endpoint-block) for details.
* `securityGroupIds` - A list of the one or more VPC security groups associated with the serverless cache.
* `snapshotRetentionLimit` - The number of snapshots that will be retained for the serverless cache. Available for Redis only.
* `status` - The current status of the serverless cache.
* `subnetIds` – A list of the identifiers of the subnets where the VPC endpoint for the serverless cache are deployed.
* `userGroupId` - The identifier of the UserGroup associated with the serverless cache. Available for Redis only.

### `cacheUsageLimits` Block

The `cacheUsageLimits` block supports the following attributes:

* `dataStorage` - The maximum data storage limit in the cache, expressed in Gigabytes. See [`dataStorage` Block](#data_storage-block) for details.
* `ecpuPerSecond` - The configured number of ElastiCache Processing Units (ECPU) the cache can consume per second. See [`ecpuPerSecond` Block](#ecpu_per_second-block) for details.

### `dataStorage` Block

The `dataStorage` block supports the following attributes:

* `minimum` - The lower limit for data storage the cache is set to use.
* `maximum` - The upper limit for data storage the cache is set to use.
* `unit` - The unit that the storage is measured in.

### `ecpuPerSecond` Block

The `ecpuPerSecond` block supports the following attributes:

* `minimum` - The minimum number of ECPUs the cache can consume per second.
* `maximum` - The maximum number of ECPUs the cache can consume per second.

### `endpoint` Block

The `endpoint` block exports the following attributes:

* `address` - The DNS hostname of the cache node.
* `port` - The port number that the cache engine is listening on. Set as integer.

### `readerEndpoint` Block

The `readerEndpoint` block exports the following attributes:

* `address` - The DNS hostname of the cache node.
* `port` - The port number that the cache engine is listening on. Set as integer.

<!-- cache-key: cdktf-0.20.8 input-d2aefac0ebbbe62167539f079f29f724c5f6b79e6dc1f34257d5078b71badbe1 -->