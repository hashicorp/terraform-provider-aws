---
subcategory: "CodeBuild"
layout: "aws"
page_title: "AWS: aws_codebuild_fleet"
description: |-
  Retrieve information about an CodeBuild Fleet
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_codebuild_fleet

Retrieve information about an CodeBuild Fleet.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CodebuildFleet } from "./.gen/providers/aws/codebuild-fleet";
import { DataAwsCodebuildFleet } from "./.gen/providers/aws/data-aws-codebuild-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new CodebuildFleet(this, "test", {
      baseCapacity: 2,
      computeType: "BUILD_GENERAL1_SMALL",
      environmentType: "LINUX_CONTAINER",
      name: "full-example-codebuild-fleet",
      overflowBehavior: "QUEUE",
      scalingConfiguration: {
        maxCapacity: 5,
        scalingType: "TARGET_TRACKING_SCALING",
        targetTrackingScalingConfigs: [
          {
            metricType: "FLEET_UTILIZATION_RATE",
            targetValue: 97.5,
          },
        ],
      },
    });
    const dataAwsCodebuildFleetTest = new DataAwsCodebuildFleet(
      this,
      "test_1",
      {
        name: test.name,
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAwsCodebuildFleetTest.overrideLogicalId("test");
  }
}

```

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCodebuildFleet } from "./.gen/providers/aws/data-aws-codebuild-fleet";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsCodebuildFleet(this, "example", {
      name: "my-codebuild-fleet-name",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Fleet name.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Fleet.
* `baseCapacity` - Number of machines allocated to the ﬂeet.
* `computeType` - Compute resources the compute fleet uses.
* `created` - Creation time of the fleet.
* `environmentType` - Environment type of the compute fleet.
* `fleetServiceRole` - The service role associated with the compute fleet.
* `id` - ARN of the Fleet.
* `imageId` - The Amazon Machine Image (AMI) of the compute fleet.
* `lastModified` - Last modification time of the fleet.
* `overflowBehavior` - Overflow behavior for compute fleet.
* `scalingConfiguration` -  Nested attribute containing information about the scaling configuration.
    * `desiredCapacity` - The desired number of instances in the ﬂeet when auto-scaling.
    * `maxCapacity` - The maximum number of instances in the ﬂeet when auto-scaling.
    * `scalingType` - The scaling type for a compute fleet.
    * `targetTrackingScalingConfigs` - Nested attribute containing information about thresholds when new instance is auto-scaled into the compute fleet.
        * `metricType` - The metric type to determine auto-scaling.
        * `targetValue` - The value of metric_type when to start scaling.
* `status` - Nested attribute containing information about the current status of the fleet.
    * `context` - Additional information about a compute fleet.
    * `message` - Message associated with the status of a compute fleet.
    * `statusCode` - Status code of the compute fleet.
* `tags` - Mapping of Key-Value tags for the resource.
* `vpcConfig` - Nested attribute containing information about the VPC configuration.
    * `securityGroupIds` - A list of one or more security groups IDs in your Amazon VPC.
    * `subnets` - A list of one or more subnet IDs in your Amazon VPC.
    * `vpcId` - The ID of the Amazon VPC.

<!-- cache-key: cdktf-0.20.8 input-1dd0c64b00818aba259878581a28993546ff6920dd1e6d4faaf8fd87b76f41ae -->