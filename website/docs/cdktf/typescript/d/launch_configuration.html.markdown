---
subcategory: "Auto Scaling"
layout: "aws"
page_title: "AWS: aws_launch_configuration"
description: |-
  Provides a Launch Configuration data source.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_launch_configuration

Provides information about a Launch Configuration.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsLaunchConfiguration } from "./.gen/providers/aws/data-aws-launch-configuration";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsLaunchConfiguration(this, "ubuntu", {
      name: "test-launch-config",
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `name` - (Required) Name of the launch configuration.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `id` - ID of the launch configuration.
* `arn` - Amazon Resource Name of the launch configuration.
* `name` - Name of the launch configuration.
* `imageId` - EC2 Image ID of the instance.
* `instanceType` - Instance Type of the instance to launch.
* `iamInstanceProfile` - The IAM Instance Profile to associate with launched instances.
* `keyName` - Key Name that should be used for the instance.
* `metadataOptions` - Metadata options for the instance.
    * `httpEndpoint` - State of the metadata service: `enabled`, `disabled`.
    * `httpTokens` - If session tokens are required: `optional`, `required`.
    * `httpPutResponseHopLimit` - The desired HTTP PUT response hop limit for instance metadata requests.
* `securityGroups` - List of associated Security Group IDS.
* `associatePublicIpAddress` - Whether a Public IP address is associated with the instance.
* `primary_ipv6` - Whether the first IPv6 GUA will be made the primary IPv6 address.
* `userData` - User Data of the instance.
* `enableMonitoring` - Whether Detailed Monitoring is Enabled.
* `ebsOptimized` - Whether the launched EC2 instance will be EBS-optimized.
* `rootBlockDevice` - Root Block Device of the instance.
* `ebsBlockDevice` - EBS Block Devices attached to the instance.
* `ephemeralBlockDevice` - The Ephemeral volumes on the instance.
* `spotPrice` - Price to use for reserving Spot instances.
* `placementTenancy` - Tenancy of the instance.

`rootBlockDevice` is exported with the following attributes:

* `deleteOnTermination` - Whether the EBS Volume will be deleted on instance termination.
* `encrypted` - Whether the volume is Encrypted.
* `iops` - Provisioned IOPs of the volume.
* `throughput` - Throughput of the volume.
* `volumeSize` - Size of the volume.
* `volumeType` - Type of the volume.

`ebsBlockDevice` is exported with the following attributes:

* `deleteOnTermination` - Whether the EBS Volume will be deleted on instance termination.
* `deviceName` - Name of the device.
* `encrypted` - Whether the volume is Encrypted.
* `iops` - Provisioned IOPs of the volume.
* `noDevice` - Whether the device in the block device mapping of the AMI is suppressed.
* `snapshotId` - Snapshot ID of the mount.
* `throughput` - Throughput of the volume.
* `volumeSize` - Size of the volume.
* `volumeType` - Type of the volume.

`ephemeralBlockDevice` is exported with the following attributes:

* `deviceName` - Name of the device.
* `virtualName` - Virtual Name of the device.

<!-- cache-key: cdktf-0.20.1 input-0f7904ad6942115d54298c7ae804e89f82902ce14639bff2f34ee2ea3c0c7e22 -->