---
subcategory: "ECS (Elastic Container)"
layout: "aws"
page_title: "AWS: aws_ecs_container_definition"
description: |-
    Provides details about a single container within an ecs task definition
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_ecs_container_definition

The ECS container definition data source allows access to details of
a specific container within an AWS ECS service.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEcsContainerDefinition } from "./.gen/providers/aws/data-aws-ecs-container-definition";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEcsContainerDefinition(this, "ecs-mongo", {
      containerName: "mongodb",
      taskDefinition: mongo.id,
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
* `taskDefinition` - (Required) ARN of the task definition which contains the container
* `containerName` - (Required) Name of the container definition

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `image` - Docker image in use, including the digest
* `imageDigest` - Digest of the docker image in use
* `cpu` - CPU limit for this container definition
* `memory` - Memory limit for this container definition
* `memoryReservation` - Soft limit (in MiB) of memory to reserve for the container. When system memory is under contention, Docker attempts to keep the container memory to this soft limit
* `environment` - Environment in use
* `disableNetworking` - Indicator if networking is disabled
* `dockerLabels` - Set docker labels

<!-- cache-key: cdktf-0.20.8 input-5a79e71eef0676cddea5801ec0cadc55533a0dffc064e3f3e93876d89516b895 -->