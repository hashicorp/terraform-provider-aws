---
subcategory: "KMS (Key Management)"
layout: "aws"
page_title: "AWS: aws_kms_ciphertext"
description: |-
    Provides ciphertext encrypted using a KMS key
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_kms_ciphertext

The KMS ciphertext data source allows you to encrypt plaintext into ciphertext
by using an AWS KMS customer master key. The value returned by this data source
changes every apply. For a stable ciphertext value, see the [`aws_kms_ciphertext`
resource](/docs/providers/aws/r/kms_ciphertext.html).

~> **Note:** All arguments including the plaintext be stored in the raw state as plain-text.
[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsKmsCiphertext } from "./.gen/providers/aws/data-aws-kms-ciphertext";
import { KmsKey } from "./.gen/providers/aws/kms-key";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const oauthConfig = new KmsKey(this, "oauth_config", {
      description: "oauth config",
      isEnabled: true,
    });
    new DataAwsKmsCiphertext(this, "oauth", {
      keyId: oauthConfig.keyId,
      plaintext:
        '{\n  "client_id": "e587dbae22222f55da22",\n  "client_secret": "8289575d00000ace55e1815ec13673955721b8a5"\n}\n\n',
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `plaintext` - (Required) Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.
* `keyId` - (Required) Globally unique key ID for the customer master key.
* `context` - (Optional) An optional mapping that makes up the encryption context.

## Attribute Reference

All of the argument attributes are also exported as result attributes.

* `id` - Globally unique key ID for the customer master key.
* `ciphertextBlob` - Base64 encoded ciphertext

<!-- cache-key: cdktf-0.20.8 input-b95133cf0e6d636d0e7e0bba6f81265bceaccd42767260a7c1b7aa55fb5a81e8 -->