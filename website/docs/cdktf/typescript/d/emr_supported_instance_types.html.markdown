---
subcategory: "EMR"
layout: "aws"
page_title: "AWS: aws_emr_supported_instance_types"
description: |-
  Terraform data source for managing AWS EMR Supported Instance Types.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_emr_supported_instance_types

Terraform data source for managing AWS EMR Supported Instance Types.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEmrSupportedInstanceTypes } from "./.gen/providers/aws/data-aws-emr-supported-instance-types";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEmrSupportedInstanceTypes(this, "example", {
      releaseLabel: "ebs-6.15.0",
    });
  }
}

```

### With a Lifecycle Pre-Condition

This data source can be used with a [lifecycle precondition](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#custom-condition-checks) to ensure a given instance type is supported by EMR.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEmrSupportedInstanceTypes } from "./.gen/providers/aws/data-aws-emr-supported-instance-types";
import { EmrCluster } from "./.gen/providers/aws/emr-cluster";
interface MyConfig {
  name: any;
  serviceRole: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const instanceType = "r7g.large";
    const releaseLabel = "emr-6.15.0";
    const test = new DataAwsEmrSupportedInstanceTypes(this, "test", {
      releaseLabel: releaseLabel,
    });
    const awsEmrClusterTest = new EmrCluster(this, "test_1", {
      lifecycle: {
        precondition: [
          {
            condition: Fn.contains(
              Fn.lookupNested(test.supportedInstanceTypes, ["*", "type"]),
              instanceType
            ),
            errorMessage:
              "${" +
              instanceType +
              "} is not supported with this EMR release label!",
          },
        ],
      },
      masterInstanceGroup: {
        instanceType: instanceType,
      },
      releaseLabel: releaseLabel,
      name: config.name,
      serviceRole: config.serviceRole,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsEmrClusterTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

The following arguments are required:

* `releaseLabel` - (Required) Amazon EMR release label. For more information about Amazon EMR releases and their included application versions and features, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `supportedInstanceTypes` - List of supported instance types. See [`supportedInstanceTypes`](#supported_instance_types-attribute-reference) below.

### `supportedInstanceTypes` Attribute Reference

* `architecture` - CPU architecture.
* `ebsOptimizedAvailable` - Indicates whether the instance type supports Amazon EBS optimization.
* `ebsOptimizedByDefault` - Indicates whether the instance type uses Amazon EBS optimization by default.
* `ebsStorageOnly` - Indicates whether the instance type only supports Amazon EBS.
* `instanceFamilyId` - The Amazon EC2 family and generation for the instance type.
* `is64BitsOnly` - Indicates whether the instance type only supports 64-bit architecture.
* `memoryGb` - Memory that is available to Amazon EMR from the instance type.
* `numberOfDisks` - Number of disks for the instance type.
* `storageGb` - Storage capacity of the instance type.
* `type` - Amazon EC2 instance type. For example, `m5.xlarge`.
* `vcpu` - The number of vCPUs available for the instance type.

<!-- cache-key: cdktf-0.20.8 input-ba212951c23add89500cd142afe5608d4a6a81dcaef51a7d3aedfa014eec03d7 -->