---
subcategory: "Resource Groups Tagging"
layout: "aws"
page_title: "AWS: aws_resourcegroupstaggingapi_resources"
description: |-
  Provides details about resource tagging.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_resourcegroupstaggingapi_resources

Provides details about resource tagging.

## Example Usage

### Get All Resource Tag Mappings

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsResourcegroupstaggingapiResources } from "./.gen/providers/aws/data-aws-resourcegroupstaggingapi-resources";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsResourcegroupstaggingapiResources(this, "test", {});
  }
}

```

### Filter By Tag Key and Value

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsResourcegroupstaggingapiResources } from "./.gen/providers/aws/data-aws-resourcegroupstaggingapi-resources";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsResourcegroupstaggingapiResources(this, "test", {
      tagFilter: [
        {
          key: "tag-key",
          values: ["tag-value-1", "tag-value-2"],
        },
      ],
    });
  }
}

```

### Filter By Resource Type

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsResourcegroupstaggingapiResources } from "./.gen/providers/aws/data-aws-resourcegroupstaggingapi-resources";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsResourcegroupstaggingapiResources(this, "test", {
      resourceTypeFilters: ["ec2:instance"],
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `excludeCompliantResources` - (Optional) Specifies whether to exclude resources that are compliant with the tag policy. You can use this parameter only if the `includeComplianceDetails` argument is also set to `true`.
* `includeComplianceDetails` - (Optional) Specifies whether to include details regarding the compliance with the effective tag policy.
* `tagFilter` - (Optional) Specifies a list of Tag Filters (keys and values) to restrict the output to only those resources that have the specified tag and, if included, the specified value. See [Tag Filter](#tag-filter) below. Conflicts with `resourceArnList`.
* `resourceTypeFilters` - (Optional) Constraints on the resources that you want returned. The format of each resource type is `service:resourceType`. For example, specifying a resource type of `ec2` returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of `ec2:instance` returns only EC2 instances.
* `resourceArnList` - (Optional) Specifies a list of ARNs of resources for which you want to retrieve tag data. Conflicts with `filter`.

### Tag Filter

A `tagFilter` block supports the following arguments:

If you do specify `tagFilter`, the response returns only those resources that are currently associated with the specified tag.
If you don't specify a `tagFilter`, the response includes all resources that were ever associated with tags. Resources that currently don't have associated tags are shown with an empty tag set.

* `key` - (Required) One part of a key-value pair that makes up a tag.
* `values` - (Optional) Optional part of a key-value pair that make up a tag.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `resourceTagMappingList` - List of objects matching the search criteria.
    * `compliance_details` - List of objects with information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.
        * `complianceStatus` - Whether the resource is compliant.
        * `keys_with_noncompliant_values ` - Set of tag keys with non-compliant tag values.
        * `non_compliant_keys ` - Set of non-compliant tag keys.
    * `resourceArn` - ARN of the resource.
    * `tags` - Map of tags assigned to the resource.

<!-- cache-key: cdktf-0.20.8 input-dfacd28e615a77cfbad3e63cc2c0fab691bf6f824574bd266ed9fe2b81be6bdc -->