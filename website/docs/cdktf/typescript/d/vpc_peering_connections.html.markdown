---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_peering_connections"
description: |-
    Lists peering connections
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_vpc_peering_connections

Use this data source to get IDs of Amazon VPC peering connections
To get more details on each connection, use the data resource [aws_vpc_peering_connection](/docs/providers/aws/d/vpc_peering_connection.html)

Note: To use this data source in a count, the resources should exist before trying to access
the data source, as noted in [issue 4149](https://github.com/hashicorp/terraform/issues/4149)

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformCount, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsVpcPeeringConnection } from "./.gen/providers/aws/data-aws-vpc-peering-connection";
import { DataAwsVpcPeeringConnections } from "./.gen/providers/aws/data-aws-vpc-peering-connections";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const pcs = new DataAwsVpcPeeringConnections(this, "pcs", {
      filter: [
        {
          name: "requester-vpc-info.vpc-id",
          values: [foo.id],
        },
      ],
    });
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const pcCount = TerraformCount.of(Token.asNumber(Fn.lengthOf(pcs.ids)));
    new DataAwsVpcPeeringConnection(this, "pc", {
      id: Token.asString(Fn.lookupNested(pcs.ids, [pcCount.index])),
      count: pcCount,
    });
  }
}

```

## Argument Reference

The arguments of this data source act as filters for querying the available VPC peering connections.

* `filter` - (Optional) Custom filter block as described below.

* `tags` - (Optional) Mapping of tags, each pair of which must exactly match
  a pair on the desired VPC Peering Connection.

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:

* `name` - (Required) Name of the field to filter by, as defined by
  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).

* `values` - (Required) Set of values that are accepted for the given field.
  A VPC Peering Connection will be selected if any one of the given values matches.

## Attribute Reference

All of the argument attributes except `filter` are also exported as result attributes.

* `id` - AWS Region.
* `ids` - IDs of the VPC Peering Connections.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.8 input-a9c5018aed4e1e6786cc7bb5dd8607ab1c1d2ea0787591a3d91d06ccfee33928 -->