---
subcategory: "EKS (Elastic Kubernetes)"
layout: "aws"
page_title: "AWS: aws_eks_node_group"
description: |-
  Retrieve information about an EKS Node Group
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_eks_node_group

Retrieve information about an EKS Node Group.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEksNodeGroup } from "./.gen/providers/aws/data-aws-eks-node-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEksNodeGroup(this, "example", {
      clusterName: "example",
      nodeGroupName: "example",
    });
  }
}

```

## Argument Reference

* `clusterName` - (Required) Name of the cluster.
* `nodeGroupName` - (Required) Name of the node group.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `id` - EKS Cluster name and EKS Node Group name separated by a colon (`:`).
* `amiType` - Type of Amazon Machine Image (AMI) associated with the EKS Node Group.
* `arn` - ARN of the EKS Node Group.
* `capacityType` - Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`.
* `diskSize` - Disk size in GiB for worker nodes.
* `instanceTypes` - Set of instance types associated with the EKS Node Group.
* `labels` - Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.
* `launchTemplate` - Nested attribute containing information about the launch template used to create the EKS Node Group.
    * `id` - The ID of the launch template.
    * `name` - The name of the launch template.
    * `version` - The version number of the launch template.
* `nodeRoleArn` – ARN of the IAM Role that provides permissions for the EKS Node Group.
* `releaseVersion` – AMI version of the EKS Node Group.
* `remoteAccess` - Configuration block with remote access settings.
    * `ec2SshKey` - EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.
    * `sourceSecurityGroupIds` - Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.
* `resources` - List of objects containing information about underlying resources.
    * `autoscalingGroups` - List of objects containing information about AutoScaling Groups.
        * `name` - Name of the AutoScaling Group.
    * `remote_access_security_group_id` - Identifier of the remote access EC2 Security Group.
* `scalingConfig` - Configuration block with scaling settings.
    * `desiredSize` - Desired number of worker nodes.
    * `maxSize` - Maximum number of worker nodes.
    * `minSize` - Minimum number of worker nodes.
* `status` - Status of the EKS Node Group.
* `subnetIds` – Identifiers of EC2 Subnets to associate with the EKS Node Group.
* `taints` - List of objects containing information about taints applied to the nodes in the EKS Node Group.
    * `key` - The key of the taint.
    * `value` - The value of the taint.
    * `effect` - The effect of the taint.
* `tags` - Key-value map of resource tags.
* `version` – Kubernetes version.

<!-- cache-key: cdktf-0.20.8 input-455f97b7456c88e1697131f0d9d93c38151b37400a9cfe93bcaa3f2bceee01a2 -->