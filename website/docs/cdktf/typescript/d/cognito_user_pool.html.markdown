---
subcategory: "Cognito IDP (Identity Provider)"
layout: "aws"
page_title: "AWS: aws_cognito_user_pool"
description: |-
  Terraform data source for managing an AWS Cognito User Pool.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_cognito_user_pool

Terraform data source for managing an AWS Cognito User Pool.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCognitoUserPool } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsCognitoUserPool(this, "example", {
      user_pool_id: "us-west-2_aaaaaaaaa",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `userPoolId` - (Required) The cognito pool ID

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the User Pool.
* [account_recovery_setting](#account-recover-setting) - The available verified method a user can use to recover their password when they call ForgotPassword. You can use this setting to define a preferred method when a user has more than one method available. With this setting, SMS doesn't qualify for a valid password recovery mechanism if the user also has SMS multi-factor authentication (MFA) activated. In the absence of this setting, Amazon Cognito uses the legacy behavior to determine the recovery method where SMS is preferred through email.
* [admin_create_user_config](#admin-create-user-config) - The configuration for AdminCreateUser requests.
* `autoVerifiedAttributes` - The attributes that are auto-verified in a user pool.
* `creationDate` - The date and time, in ISO 8601 format, when the item was created.
* `customDomain` - A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. An example of a custom domain name might be auth.example.com.
* `deletionProtection` - When active, DeletionProtection prevents accidental deletion of your user pool. Before you can delete a user pool that you have protected against deletion, you must deactivate this feature.
* [device_configuration](#device-configuration) - The device-remembering configuration for a user pool. A null value indicates that you have deactivated device remembering in your user pool.
* `domain` - The domain prefix, if the user pool has a domain associated with it.
* [email_configuration](#email-configuration) - The email configuration of your user pool. The email configuration type sets your preferred sending method, AWS Region, and sender for messages from your user pool.
* `estimatedNumberOfUsers` - A number estimating the size of the user pool.
* [lambda_config](#lambda-config) - The AWS Lambda triggers associated with the user pool.
* `lastModifiedDate` - The date and time, in ISO 8601 format, when the item was modified.
* `mfaConfiguration` - Can be one of the following values: `OFF` | `ON` | `OPTIONAL`
* `name` - The name of the user pool.
* [schema_attributes](#schema-attributes) - A list of the user attributes and their properties in your user pool. The attribute schema contains standard attributes, custom attributes with a custom: prefix, and developer attributes with a dev: prefix. For more information, see User pool attributes.
* `smsAuthenticationMessage` - The contents of the SMS authentication message.
* `sms_configuration_failure` - The reason why the SMS configuration can't send the messages to your users.
* `smsVerificationMessage` - The contents of the SMS authentication message.
* `user_pool_tags` - The tags that are assigned to the user pool. A tag is a label that you can apply to user pools to categorize and manage them in different ways, such as by purpose, owner, environment, or other criteria.
* `usernameAttributes` - Specifies whether a user can use an email address or phone number as a username when they sign up.

### account recover setting

* [recovery_mechanism](#recovery-mechanism) - Details about an individual recovery mechanism.

### recovery mechanism

* `name` - Name of the recovery mechanism (e.g., email, phone number).
* `priority` - Priority of this mechanism in the recovery process (lower numbers are higher priority).

### admin create user config

* `allowAdminCreateUserOnly` - Whether only admins can create users.
* `unused_account_validity_days` - Number of days an unconfirmed user account remains valid.
* [invite_message_template](#invite-message-template) - Templates for invitation messages.

### invite message template

* `emailMessage` - Email message content.
* `emailSubject` - Email message subject.
* `smsMessage` - SMS message content.

### device configuration

* `challengeRequiredOnNewDevice` - Whether a challenge is required on new devices.
* `deviceOnlyRememberedOnUserPrompt` - Whether devices are only remembered if the user prompts it.

### email configuration

* `configurationSet` - Configuration set used for sending emails.
* `emailSendingAccount` - Email sending account.
* `from` - Email sender address.
* `replyToEmailAddress` - Reply-to email address.
* `sourceArn` - Source Amazon Resource Name (ARN) for emails.

### lambda config

* [custom_email_sender](#lambda-function) - Configuration for a custom email sender Lambda function.
* [custom_sms_sender](#lambda-function) - Configuration for a custom SMS sender Lambda function
* [pre_token_generation_config](#lambda-function) - Configuration for a Lambda function that executes before token generation.

### lambda function

* `lambdaArn` - ARN of the Lambda function.
* `lambdaVersion` - Version of the Lambda function.

### schema attributes

* `attributeDataType` - Data type of the attribute (e.g., string, number).
* `developerOnlyAttribute` - Whether the attribute is for developer use only.
* `mutable` - Whether the attribute can be changed after user creation.
* `name` - Name of the attribute.
* `required` - Whether the attribute is required during user registration.
* [number_attribute_constraints](#number-attribute-constraints) - Constraints for numeric attributes.
* [string_attribute_constraints](#string-attribute-constraints) - Constraints for string attributes.

### number attribute constraints

* `maxValue` - Maximum allowed value.
* `minValue` - Minimum allowed value.

### string attribute constraints

* `maxLength` - Maximum allowed length.
* `minLength` - Minimum allowed length.

<!-- cache-key: cdktf-0.20.1 input-6414f93a1d42555285aa8bfd3568720a717746ce22c45c58bb57438d1f2fa18f -->