---
subcategory: "Lambda"
layout: "aws"
page_title: "AWS: aws_lambda_alias"
description: |-
  Provides details about an AWS Lambda Alias.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_lambda_alias

Provides details about an AWS Lambda Alias. Use this data source to retrieve information about an existing Lambda function alias for traffic management, deployment strategies, or API integrations.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformOutput, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsLambdaAlias } from "./.gen/providers/aws/data-aws-lambda-alias";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsLambdaAlias(this, "example", {
      functionName: "my-lambda-function",
      name: "production",
    });
    new TerraformOutput(this, "alias_arn", {
      value: example.arn,
    });
  }
}

```

### API Gateway Integration

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ApiGatewayIntegration } from "./.gen/providers/aws/api-gateway-integration";
import { DataAwsLambdaAlias } from "./.gen/providers/aws/data-aws-lambda-alias";
import { LambdaPermission } from "./.gen/providers/aws/lambda-permission";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const apiHandler = new DataAwsLambdaAlias(this, "api_handler", {
      functionName: "api-handler",
      name: "live",
    });
    new ApiGatewayIntegration(this, "example", {
      httpMethod: Token.asString(awsApiGatewayMethodExample.httpMethod),
      integrationHttpMethod: "POST",
      resourceId: Token.asString(awsApiGatewayResourceExample.id),
      restApiId: Token.asString(awsApiGatewayRestApiExample.id),
      type: "AWS_PROXY",
      uri: Token.asString(apiHandler.invokeArn),
    });
    new LambdaPermission(this, "api_gateway", {
      action: "lambda:InvokeFunction",
      functionName: Token.asString(apiHandler.functionName),
      principal: "apigateway.amazonaws.com",
      qualifier: Token.asString(apiHandler.name),
      sourceArn: "${" + awsApiGatewayRestApiExample.executionArn + "}/*/*",
      statementId: "AllowExecutionFromAPIGateway",
    });
  }
}

```

### Deployment Version Tracking

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Op, TerraformOutput, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsLambdaAlias } from "./.gen/providers/aws/data-aws-lambda-alias";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const production = new DataAwsLambdaAlias(this, "production", {
      functionName: "payment-processor",
      name: "production",
    });
    const staging = new DataAwsLambdaAlias(this, "staging", {
      functionName: "payment-processor",
      name: "staging",
    });
    const versionDrift = Op.neq(
      production.functionVersion,
      staging.functionVersion
    );
    new TerraformOutput(this, "deployment_status", {
      value: [
        {
          production_version: production.functionVersion,
          ready_for_promotion: Op.not(versionDrift),
          staging_version: staging.functionVersion,
          version_drift: versionDrift,
        },
      ],
    });
  }
}

```

### EventBridge Rule Target

```terraform
data "aws_lambda_alias" "event_processor" {
  function_name = "event-processor"
  name          = "stable"
}

resource "aws_cloudwatch_event_rule" "example" {
  name        = "capture-events"
  description = "Capture events for processing"

  event_pattern = jsonencode({
    source      = ["myapp.orders"]
    detail-type = ["Order Placed"]
  })
}

resource "aws_cloudwatch_event_target" "lambda" {
  rule      = aws_cloudwatch_event_rule.example.name
  target_id = "SendToLambda"
  arn       = data.aws_lambda_alias.event_processor.arn
}

resource "aws_lambda_permission" "allow_eventbridge" {
  statement_id  = "AllowExecutionFromEventBridge"
  action        = "lambda:InvokeFunction"
  function_name = data.aws_lambda_alias.event_processor.function_name
  principal     = "events.amazonaws.com"
  qualifier     = data.aws_lambda_alias.event_processor.name
  source_arn    = aws_cloudwatch_event_rule.example.arn
}
```

## Argument Reference

The following arguments are required:

* `functionName` - (Required) Name of the aliased Lambda function.
* `name` - (Required) Name of the Lambda alias.

The following arguments are optional:

* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN identifying the Lambda function alias.
* `description` - Description of the alias.
* `functionVersion` - Lambda function version which the alias uses.
* `invokeArn` - ARN to be used for invoking Lambda Function from API Gateway - to be used in [`aws_api_gateway_integration`](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration)'s `uri`.

<!-- cache-key: cdktf-0.20.8 input-11b78896156aba40f752576974481d256a662e57f09240815c5ca9f41bd4e576 -->