---
subcategory: "VPC IPAM (IP Address Manager)"
layout: "aws"
page_title: "AWS: aws_vpc_ipam_preview_next_cidr"
description: |-
  Previews a CIDR from an IPAM address pool.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_vpc_ipam_preview_next_cidr

Previews a CIDR from an IPAM address pool. Only works for private IPv4.

~> **NOTE:** This functionality is also encapsulated in a resource sharing the same name. The data source can be used when you need to use the cidr in a calculation of the same Root module, `count` for example. However, once a cidr range has been allocated that was previewed, the next refresh will find a **new** cidr and may force new resources downstream. Make sure to use Terraform's lifecycle `ignore_changes` policy if this is undesirable.

## Example Usage

Basic usage:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsVpcIpamPreviewNextCidr } from "./.gen/providers/aws/data-aws-vpc-ipam-preview-next-cidr";
import { VpcIpamPoolCidrAllocation } from "./.gen/providers/aws/vpc-ipam-pool-cidr-allocation";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const test = new DataAwsVpcIpamPreviewNextCidr(this, "test", {
      dependsOn: [awsVpcIpamPoolCidrTest],
      ipamPoolId: Token.asString(awsVpcIpamPoolTest.id),
      netmaskLength: 28,
    });
    const awsVpcIpamPoolCidrAllocationTest = new VpcIpamPoolCidrAllocation(
      this,
      "test_1",
      {
        cidr: Token.asString(test.cidr),
        ipamPoolId: Token.asString(awsVpcIpamPoolTest.id),
        lifecycle: {
          ignoreChanges: [cidr],
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsVpcIpamPoolCidrAllocationTest.overrideLogicalId("test");
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `disallowedCidrs` - (Optional) Exclude a particular CIDR range from being returned by the pool.
* `ipamPoolId` - (Required) ID of the pool to which you want to assign a CIDR.
* `netmaskLength` - (Optional) Netmask length of the CIDR you would like to preview from the IPAM pool.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `cidr` - Previewed CIDR from the pool.
* `id` - ID of the preview.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.8 input-dd816317496f53d47089ea622a6d2495e074267b1372edce322e33a4007d026b -->