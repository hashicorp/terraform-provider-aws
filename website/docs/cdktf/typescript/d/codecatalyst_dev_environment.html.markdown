---
subcategory: "CodeCatalyst"
layout: "aws"
page_title: "AWS: aws_codecatalyst_dev_environment"
description: |-
  Terraform data source for managing an AWS CodeCatalyst Dev Environment.
---

<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_codecatalyst_dev_environment

Terraform data source for managing an AWS CodeCatalyst Dev Environment.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsCodecatalystDevEnvironment } from "./.gen/providers/aws/data-aws-codecatalyst-dev-environment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsCodecatalystDevEnvironment(this, "example", {
      envId: Token.asString(awsCodecatalystDevEnvironmentExample.id),
      projectName: "myproject",
      spaceName: "myspace",
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `envId` - - (Required) The system-generated unique ID of the Dev Environment for which you want to view information. To retrieve a list of Dev Environment IDs, use [ListDevEnvironments](https://docs.aws.amazon.com/codecatalyst/latest/APIReference/API_ListDevEnvironments.html).
* `projectName` - (Required) The name of the project in the space.
* `spaceName` - (Required) The name of the space.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `alias` - The user-specified alias for the Dev Environment.
* `creatorId` - The system-generated unique ID of the user who created the Dev Environment.
* `ides` - Information about the integrated development environment (IDE) configured for a Dev Environment.
* `inactivityTimeoutMinutes` - The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
* `instanceType` - The Amazon EC2 instace type to use for the Dev Environment.
* `lastUpdatedTime` - The time when the Dev Environment was last updated, in coordinated universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
* `persistentStorage` - Information about the amount of storage allocated to the Dev Environment.
* `repositories` - The source repository that contains the branch to clone into the Dev Environment.
* `status` - The current status of the Dev Environment. From: PENDING | RUNNING | STARTING | STOPPING | STOPPED | FAILED | DELETING | DELETED.
* `statusReason` - The reason for the status.

<!-- cache-key: cdktf-0.20.8 input-c61bba638996c2149ec91b8cd25afae8ff1fa5829987e15f55f2b47440b45e86 -->