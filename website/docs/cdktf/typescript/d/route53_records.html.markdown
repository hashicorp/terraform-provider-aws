---
subcategory: "Route 53"
layout: "aws"
page_title: "AWS: aws_route53_records"
description: |-
  Get information about a set of Route 53 resource records.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_route53_records

Use this data source to get the details of resource records in a Route 53 hosted zone.

## Example Usage

### Basic Usage

Return all records in the zone.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsRoute53Records } from "./.gen/providers/aws/data-aws-route53-records";
import { DataAwsRoute53Zone } from "./.gen/providers/aws/data-aws-route53-zone";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const selected = new DataAwsRoute53Zone(this, "selected", {
      name: "test.com.",
      privateZone: true,
    });
    new DataAwsRoute53Records(this, "example", {
      zoneId: Token.asString(selected.zoneId),
    });
  }
}

```

### Basic Usage with filter

Return the records that starts with `www`.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsRoute53Records } from "./.gen/providers/aws/data-aws-route53-records";
import { DataAwsRoute53Zone } from "./.gen/providers/aws/data-aws-route53-zone";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const selected = new DataAwsRoute53Zone(this, "selected", {
      name: "test.com.",
      privateZone: true,
    });
    new DataAwsRoute53Records(this, "example", {
      nameRegex: "^www",
      zoneId: Token.asString(selected.zoneId),
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `nameRegex` - (Optional) Regex string to apply to the resource record names returned by AWS.
* `zoneId` - (Required) The ID of the hosted zone that contains the resource record sets that you want to list.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `resourceRecordSets` - The resource records sets.
    * `alias_target` -  Information about the AWS resource traffic is routed to.
        * `dnsName` - Target DNS name.
        * `evaluateTargetHealth` - Whether an alias resource record set inherits the health of the referenced AWS resource.
        * `hostedZoneId` - Target hosted zone ID.
    * `cidr_routing_config` - Information about the CIDR location traffic is routed to.
        * `collectionId` - The CIDR collection ID.
        * `locationName` - The CIDR collection location name.
    * `failover` - `PRIMARY` or `SECONDARY`.
    * `geolocation` - Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        * `continent_code` - The two-letter code for the continent.
        * `countryCode` - The two-letter code for a country.
        * `subdivision_code` - The two-letter code for a state of the United States.
    * `geoproximity_location` - Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        * `awsRegion` - The AWS Region the resource you are directing DNS traffic to, is in.
        * `bias` - The bias increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
        * `coordinates` - Contains the longitude and latitude for a geographic region.
            * `latitude` - Latitude.
            * `longitude` - Longitude.
        * `localZoneGroup` - An AWS Local Zone Group.
    * `healthCheckId` - ID of any applicable health check.
    * `multi_value_answer` - Traffic is routed approximately randomly to multiple resources.
    * `name` - The name of the record.
    * `region` - The Amazon EC2 Region of the resource that this resource record set refers to.
    * `resource_records` - The resource records.
        * `value` - The DNS record value.
    * `setIdentifier` - An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
    * `traffic_policy_instance_id` - The ID of any traffic policy instance that Route 53 created this resource record set for.
    * `ttl` - The resource record cache time to live (TTL), in seconds.
    * `type` - The DNS record type.
    * `weight` - Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.

<!-- cache-key: cdktf-0.20.8 input-bb6c1af4b5e8bc2e97742ea6add2eb560026b8807e9c56327ef1101f08702303 -->