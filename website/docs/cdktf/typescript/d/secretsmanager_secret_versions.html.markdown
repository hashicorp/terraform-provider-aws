---
subcategory: "Secrets Manager"
layout: "aws"
page_title: "AWS: aws_secretsmanager_secret_versions"
description: |-
  Retrieve the versions of a Secrets Manager secret
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_secretsmanager_secret_versions

Retrieve the versions of a Secrets Manager secret. To retrieve secret metadata, see the data sources [`aws_secretsmanager_secret`](/docs/providers/aws/d/secretsmanager_secret.html) and [`aws_secretsmanager_secret_version`](/docs/providers/aws/d/secretsmanager_secret_version.html).

## Example Usage

### Retrieve All Versions of a Secret

By default, this data sources retrieves all versions of a secret.

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsSecretsmanagerSecretVersions } from "./.gen/providers/aws/data-aws-secretsmanager-secret-versions";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsSecretsmanagerSecretVersions(this, "secret-versions", {
      secretId: Token.asString(example.id),
    });
  }
}

```

### Retrieve Specific Secret Version

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsSecretsmanagerSecretVersion } from "./.gen/providers/aws/data-aws-secretsmanager-secret-version";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsSecretsmanagerSecretVersion(this, "by-version-stage", {
      secretId: Token.asString(example.id),
      versionStage: "example",
    });
  }
}

```

### Handling Key-Value Secret Strings in JSON

Reading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the [`jsondecode()` function](https://www.terraform.io/docs/configuration/functions/jsondecode.html):

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformOutput, Fn, Token, TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new TerraformOutput(this, "example", {
      value: Fn.lookupNested(
        Fn.jsondecode(Token.asString(example.secretString)),
        ['"key1"']
      ),
    });
  }
}

```

## Argument Reference

* `secretId` - (Required) Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.
* `includeDeprecated` - (Optional) If true, all deprecated secret versions are included in the response.
If false, no deprecated secret versions are included in the response. If no value is specified, the default value is `false`.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the secret.
* `id` - Secret id.
* `versions` - List of the versions of the secret. Attributes are specified below.

### versions

* `createdDate` - Date and time this version of the secret was created.
* `lastAccessedDate` - Date that this version of the secret was last accessed.
* `versionId` - Unique version identifier of this version of the secret.
* `versionStage` - Staging label attached to the version.

<!-- cache-key: cdktf-0.20.8 input-596ee491979af3a0973c463d5c307cdbedc26652f3a013026f6591e3a4084f60 -->