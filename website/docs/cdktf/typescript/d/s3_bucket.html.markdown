---
subcategory: "S3 (Simple Storage)"
layout: "aws"
page_title: "AWS: aws_s3_bucket"
description: |-
    Provides details about a specific S3 bucket
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_s3_bucket

Provides details about a specific S3 bucket.

This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront
Distribution.

## Example Usage

### Route53 Record

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsRoute53Zone } from "./.gen/providers/aws/data-aws-route53-zone";
import { DataAwsS3Bucket } from "./.gen/providers/aws/data-aws-s3-bucket";
import { Route53Record } from "./.gen/providers/aws/route53-record";
interface MyConfig {
  evaluateTargetHealth: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const testZone = new DataAwsRoute53Zone(this, "test_zone", {
      name: "test.com.",
    });
    const selected = new DataAwsS3Bucket(this, "selected", {
      bucket: "bucket.test.com",
    });
    new Route53Record(this, "example", {
      alias: {
        name: Token.asString(selected.websiteDomain),
        zoneId: Token.asString(selected.hostedZoneId),
        evaluateTargetHealth: config.evaluateTargetHealth,
      },
      name: "bucket",
      type: "A",
      zoneId: Token.asString(testZone.id),
    });
  }
}

```

### CloudFront Origin

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { CloudfrontDistribution } from "./.gen/providers/aws/cloudfront-distribution";
import { DataAwsS3Bucket } from "./.gen/providers/aws/data-aws-s3-bucket";
interface MyConfig {
  defaultCacheBehavior: any;
  enabled: any;
  restrictions: any;
  viewerCertificate: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    const selected = new DataAwsS3Bucket(this, "selected", {
      bucket: "a-test-bucket",
    });
    new CloudfrontDistribution(this, "test", {
      origin: [
        {
          domainName: Token.asString(selected.bucketDomainName),
          originId: "s3-selected-bucket",
        },
      ],
      defaultCacheBehavior: config.defaultCacheBehavior,
      enabled: config.enabled,
      restrictions: config.restrictions,
      viewerCertificate: config.viewerCertificate,
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `bucket` - (Required) Name of the bucket

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `id` - Name of the bucket.
* `arn` - ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
* `bucketDomainName` - Bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
* `bucketRegionalDomainName` - The bucket region-specific domain name. The bucket domain name including the region name. Please refer to the [S3 endpoints reference](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) for format. Note: AWS CloudFront allows specifying an S3 region-specific endpoint when creating an S3 origin. This will prevent redirect issues from CloudFront to the S3 Origin URL. For more information, see the [Virtual Hosted-Style Requests for Other Regions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#deprecated-global-endpoint) section in the AWS S3 User Guide.
* `hostedZoneId` - The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
* `region` - AWS region this bucket resides in.
* `websiteEndpoint` - Website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
* `websiteDomain` - Domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.

<!-- cache-key: cdktf-0.20.8 input-1b3882cef2e383d7b94a441272b1a5c90afe56f7bd4eade88c86484fd024b52a -->