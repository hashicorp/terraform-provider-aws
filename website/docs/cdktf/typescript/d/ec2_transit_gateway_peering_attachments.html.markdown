---
subcategory: "Transit Gateway"
layout: "aws"
page_title: "AWS: aws_ec2_transit_gateway_peering_attachments"
description: |-
  Get information on EC2 Transit Gateway Peering Attachments
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_ec2_transit_gateway_peering_attachments

Get information on EC2 Transit Gateway Peering Attachments.

## Example Usage

### All Resources

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEc2TransitGatewayPeeringAttachments } from "./.gen/providers/aws/";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEc2TransitGatewayPeeringAttachments(this, "test", {});
  }
}

```

### By Filter

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Fn, Token, TerraformCount, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEc2TransitGatewayPeeringAttachments } from "./.gen/providers/aws/";
import { DataAwsEc2TransitGatewayPeeringAttachment } from "./.gen/providers/aws/data-aws-ec2-transit-gateway-peering-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const filtered = new DataAwsEc2TransitGatewayPeeringAttachments(
      this,
      "filtered",
      {
        filter: [
          {
            name: "state",
            values: ["pendingAcceptance"],
          },
        ],
      }
    );
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const unitCount = TerraformCount.of(
      Token.asNumber(Fn.lengthOf(filtered.ids))
    );
    new DataAwsEc2TransitGatewayPeeringAttachment(this, "unit", {
      id: Token.asString(Fn.lookupNested(filtered.ids, [unitCount.index])),
      count: unitCount,
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.

### filter Argument Reference

* `name` - (Required) Name of the field to filter by, as defined by [the underlying AWS API][1]
* `values` - (Required) List of one or more values for the filter.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `ids` A list of all attachments ids matching the filter. You can retrieve more information about the attachment using the [aws_ec2_transit_gateway_peering_attachment][2] data source, searching by identifier.

[1]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html
[2]: https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ec2_transit_gateway_peering_attachment

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20m`)

<!-- cache-key: cdktf-0.20.1 input-b3e93364fc7a2123f1def158db8ce8c818facf6aeffe3642603bdae2f2525b1d -->