---
subcategory: "Connect"
layout: "aws"
page_title: "AWS: aws_connect_routing_profile"
description: |-
  Provides details about a specific Amazon Connect Routing Profile.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_connect_routing_profile

Provides details about a specific Amazon Connect Routing Profile.

## Example Usage

By `name`

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsConnectRoutingProfile } from "./.gen/providers/aws/data-aws-connect-routing-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsConnectRoutingProfile(this, "example", {
      instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
      name: "Example",
    });
  }
}

```

By `routingProfileId`

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsConnectRoutingProfile } from "./.gen/providers/aws/data-aws-connect-routing-profile";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsConnectRoutingProfile(this, "example", {
      instanceId: "aaaaaaaa-bbbb-cccc-dddd-111111111111",
      routingProfileId: "cccccccc-bbbb-cccc-dddd-111111111111",
    });
  }
}

```

## Argument Reference

~> **NOTE:** `instanceId` and one of either `name` or `routingProfileId` is required.

This data source supports the following arguments:

* `instanceId` - Reference to the hosting Amazon Connect Instance
* `name` - (Optional) Returns information on a specific Routing Profile by name
* `routingProfileId` - (Optional) Returns information on a specific Routing Profile by Routing Profile id

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the Routing Profile.
* `defaultOutboundQueueId` - Specifies the default outbound queue for the Routing Profile.
* `description` - Description of the Routing Profile.
* `id` - Identifier of the hosting Amazon Connect Instance and identifier of the Routing Profile separated by a colon (`:`).
* `mediaConcurrencies` - One or more `mediaConcurrencies` blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The `mediaConcurrencies` block is documented below.
* `queueConfigs` - One or more `queueConfigs` blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The `queueConfigs` block is documented below.
* `tags` - Map of tags to assign to the Routing Profile.

A `mediaConcurrencies` block supports the following attributes:

* `channel` - Channels that agents can handle in the Contact Control Panel (CCP). Valid values are `VOICE`, `CHAT`, `TASK`.
* `concurrency` - Number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.

A `queueConfigs` block supports the following attributes:

* `channel` - Channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.
* `delay` - Delay, in seconds, that a contact should be in the queue before they are routed to an available agent
* `priority` - Order in which contacts are to be handled for the queue.
* `queueArn` - ARN for the queue.
* `queueId` - Identifier for the queue.
* `queueName` - Name for the queue.

<!-- cache-key: cdktf-0.20.1 input-4bef98269c30e5e318435de8076afc54af062a6b62cb6767304c69bb9d6f3ee9 -->