---
subcategory: "MQ"
layout: "aws"
page_title: "AWS: aws_mq_broker"
description: |-
  Provides details about an existing Amazon MQ broker.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_mq_broker

Provides details about an existing Amazon MQ broker. Use this data source to retrieve configuration and metadata for an Amazon MQ broker by ID or name.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsMqBroker } from "./.gen/providers/aws/data-aws-mq-broker";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsMqBroker(this, "example", {
      brokerId: "b-1234a5b6-78cd-901e-2fgh-3i45j6k178l9",
    });
  }
}

```

## Argument Reference

The following arguments are optional:

* `brokerId` - (Optional) Unique ID of the MQ broker.
* `brokerName` - (Optional) Unique name of the MQ broker.
* `region` - (Optional) Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the [provider configuration](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#aws-configuration-reference).
~> **Note:** Either `brokerId` or `brokerName` must be specified.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the broker.
* `authenticationStrategy` - Authentication strategy used to secure the broker.
* `autoMinorVersionUpgrade` - Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.
* `configuration` - Configuration block for broker configuration. See [Configuration](#configuration) below.
* `deploymentMode` - Deployment mode of the broker.
* `encryptionOptions` - Configuration block containing encryption options. See [Encryption Options](#encryption-options) below.
* `engineType` - Type of broker engine.
* `engineVersion` - Version of the broker engine.
* `hostInstanceType` - Broker's instance type.
* `instances` - List of information about allocated brokers (both active & standby). See [Instances](#instances) below.
* `ldapServerMetadata` - Configuration block for the LDAP server used to authenticate and authorize connections to the broker. See [LDAP Server Metadata](#ldap-server-metadata) below.
* `logs` - Configuration block for the logging configuration of the broker. See [Logs](#logs) below.
* `maintenanceWindowStartTime` - Configuration block for the maintenance window start time. See [Maintenance Window Start Time](#maintenance-window-start-time) below.
* `publiclyAccessible` - Whether to enable connections from applications outside of the VPC that hosts the broker's subnets.
* `securityGroups` - List of security group IDs assigned to the broker.
* `storageType` - Storage type of the broker.
* `subnetIds` - List of subnet IDs in which to launch the broker.
* `tags` - Map of tags assigned to the broker.
* `user` - Configuration block for broker users. See [User](#user) below.

### Configuration

* `id` - Configuration ID.
* `revision` - Revision of the Configuration.

### Encryption Options

* `kmsKeyId` - Amazon Resource Name (ARN) of Key Management Service (KMS) Customer Master Key (CMK) to use for encryption at rest.
* `useAwsOwnedKey` - Whether to enable an AWS-owned KMS CMK that is not in your account.

### Instances

* `console_url` - URL of the ActiveMQ Web Console or the RabbitMQ Management UI depending on `engineType`.
* `endpoints` - Broker's wire-level protocol endpoints.
* `ipAddress` - IP Address of the broker.

### LDAP Server Metadata

* `hosts` - List of a fully qualified domain name of the LDAP server and an optional failover server.
* `roleBase` - Fully qualified name of the directory to search for a user's groups.
* `roleName` - LDAP attribute that identifies the group name attribute in the object returned from the group membership query.
* `roleSearchMatching` - Search criteria for groups.
* `roleSearchSubtree` - Whether the directory search scope is the entire sub-tree.
* `serviceAccountPassword` - Service account password.
* `serviceAccountUsername` - Service account username.
* `userBase` - Fully qualified name of the directory where you want to search for users.
* `userRoleName` - Name of the LDAP attribute for the user group membership.
* `userSearchMatching` - Search criteria for users.
* `userSearchSubtree` - Whether the directory search scope is the entire sub-tree.

### Logs

* `audit` - Whether audit logging is enabled.
* `general` - Whether general logging is enabled.

### Maintenance Window Start Time

* `dayOfWeek` - Day of the week.
* `timeOfDay` - Time, in 24-hour format.
* `timeZone` - Time zone in either the Country/City format or the UTC offset format.

### User

* `consoleAccess` - Whether to enable access to the ActiveMQ Web Console for the user.
* `groups` - List of groups to which the ActiveMQ user belongs.
* `replicationUser` - Whether to set replication user.
* `username` - Username of the user.

<!-- cache-key: cdktf-0.20.8 input-e06386f5526c9e3430762c2c632b74fe87bba0abccb4bb05ca44e247744cdbf5 -->