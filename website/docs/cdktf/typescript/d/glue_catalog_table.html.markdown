---
subcategory: "Glue"
layout: "aws"
page_title: "AWS: aws_glue_catalog_table"
description: |-
  Get information on AWS Glue Data Catalog Table
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_glue_catalog_table

This data source can be used to fetch information about an AWS Glue Data Catalog Table.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsGlueCatalogTable } from "./.gen/providers/aws/data-aws-glue-catalog-table";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsGlueCatalogTable(this, "example", {
      databaseName: "MyCatalogDatabase",
      name: "MyCatalogTable",
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `name` - (Required) Name of the table.
* `databaseName` - (Required) Name of the metadata database where the table metadata resides.
* `catalogId` - (Optional) ID of the Glue Catalog and database where the table metadata resides. If omitted, this defaults to the current AWS Account ID.
* `queryAsOfTime`- (Optional) The time as of when to read the table contents. If not set, the most recent transaction commit time will be used. Cannot be specified along with `transactionId`. Specified in RFC 3339 format, e.g. `2006-01-02T15:04:05Z07:00`.
* `transactionId` - (Optional) The transaction ID at which to read the table contents.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `id` - Catalog ID, Database name and of the name table.
* `arn` - The ARN of the Glue Table.
* `description` - Description of the table.
* `owner` - Owner of the table.
* `parameters` - Properties associated with this table, as a list of key-value pairs.
* `partitionIndex` - Configuration block for a maximum of 3 partition indexes. See [`partitionIndex`](#partition_index) below.
* `partitionKeys` - Configuration block of columns by which the table is partitioned. Only primitive types are supported as partition keys. See [`partitionKeys`](#partition_keys) below.
* `retention` - Retention time for this table.
* `storageDescriptor` - Configuration block for information about the physical storage of this table. For more information, refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor). See [`storageDescriptor`](#storage_descriptor) below.
* `tableType` - Type of this table (EXTERNAL_TABLE, VIRTUAL_VIEW, etc.). While optional, some Athena DDL queries such as `ALTER TABLE` and `SHOW CREATE TABLE` will fail if this argument is empty.
* `targetTable` - Configuration block of a target table for resource linking. See [`targetTable`](#target_table) below.
* `viewExpandedText` - If the table is a view, the expanded text of the view; otherwise null.
* `viewOriginalText` - If the table is a view, the original text of the view; otherwise null.

### partition_index

* `indexName` - Name of the partition index.
* `keys` - Keys for the partition index.

### partition_keys

* `comment` - Free-form text comment.
* `name` - Name of the Partition Key.
* `type` - Datatype of data in the Partition Key.

### storage_descriptor

* `additional_locations` - List of locations that point to the path where a Delta table is located
* `bucketColumns` - List of reducer grouping columns, clustering columns, and bucketing columns in the table.
* `columns` - Configuration block for columns in the table. See [`columns`](#columns) below.
* `compressed` - Whether the data in the table is compressed.
* `inputFormat` - Input format: SequenceFileInputFormat (binary), or TextInputFormat, or a custom format.
* `location` - Physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
* `numberOfBuckets` - Is if the table contains any dimension columns.
* `outputFormat` - Output format: SequenceFileOutputFormat (binary), or IgnoreKeyTextOutputFormat, or a custom format.
* `parameters` - User-supplied properties in key-value form.
* `schemaReference` - Object that references a schema stored in the AWS Glue Schema Registry. See [`schemaReference`](#schema_reference) below.
* `serDeInfo` - Configuration block for serialization and deserialization ("SerDe") information. See [`serDeInfo`](#ser_de_info) below.
* `skewedInfo` - Configuration block with information about values that appear very frequently in a column (skewed values). See [`skewedInfo`](#skewed_info) below.
* `sortColumns` - Configuration block for the sort order of each bucket in the table. See [`sortColumns`](#sort_columns) below.
* `storedAsSubDirectories` - Whether the table data is stored in subdirectories.

#### columns

* `comment` - Free-form text comment.
* `name` - Name of the Column.
* `parameters` - Key-value pairs defining properties associated with the column.
* `type` - Datatype of data in the Column.

#### schema_reference

* `schemaId` - Configuration block that contains schema identity fields. See [`schemaId`](#schema_id) below.
* `schemaVersionId` - Unique ID assigned to a version of the schema.
* `schemaVersionNumber` - Version number of the schema.

##### schema_id

* `registryName` - Name of the schema registry that contains the schema.
* `schemaArn` - ARN of the schema.
* `schemaName` - Name of the schema.

#### ser_de_info

* `name` - Name of the SerDe.
* `parameters` - Map of initialization parameters for the SerDe, in key-value form.
* `serializationLibrary` - Usually the class that implements the SerDe. An example is `org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe`.

#### sort_columns

* `column` - Name of the column.
* `sortOrder` - Whether the column is sorted in ascending (`1`) or descending order (`0`).

#### skewed_info

* `skewedColumnNames` - List of names of columns that contain skewed values.
* `skewedColumnValueLocationMaps` - List of values that appear so frequently as to be considered skewed.
* `skewedColumnValues` - Map of skewed values to the columns that contain them.

### target_table

* `catalogId` - ID of the Data Catalog in which the table resides.
* `databaseName` - Name of the catalog database that contains the target table.
* `name` - Name of the target table.
* `region` - Region of the target table.

<!-- cache-key: cdktf-0.20.1 input-6aa148fa876b8e857555bdad7d827e6584f2528c3ddc31f0e55e804050c5f778 -->