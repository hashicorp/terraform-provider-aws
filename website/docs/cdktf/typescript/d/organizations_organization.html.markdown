---
subcategory: "Organizations"
layout: "aws"
page_title: "AWS: aws_organizations_organization"
description: |-
  Get information about the organization that the user's account belongs to
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_organizations_organization

Get information about the organization that the user's account belongs to

## Example Usage

### List all account IDs for the organization

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformOutput, Fn, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsOrganizationsOrganization } from "./.gen/providers/aws/data-aws-organizations-organization";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsOrganizationsOrganization(this, "example", {});
    new TerraformOutput(this, "account_ids", {
      value: Fn.lookupNested(example.accounts, ["*", "id"]),
    });
  }
}

```

### SNS topic that can be interacted by the organization only

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsIamPolicyDocument } from "./.gen/providers/aws/data-aws-iam-policy-document";
import { DataAwsOrganizationsOrganization } from "./.gen/providers/aws/data-aws-organizations-organization";
import { SnsTopic } from "./.gen/providers/aws/sns-topic";
import { SnsTopicPolicy } from "./.gen/providers/aws/sns-topic-policy";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const snsTopic = new SnsTopic(this, "sns_topic", {
      name: "my-sns-topic",
    });
    const example = new DataAwsOrganizationsOrganization(this, "example", {});
    const snsTopicPolicy = new DataAwsIamPolicyDocument(
      this,
      "sns_topic_policy",
      {
        statement: [
          {
            actions: ["SNS:Subscribe", "SNS:Publish"],
            condition: [
              {
                test: "StringEquals",
                values: [Token.asString(example.id)],
                variable: "aws:PrincipalOrgID",
              },
            ],
            effect: "Allow",
            principals: [
              {
                identifiers: ["*"],
                type: "AWS",
              },
            ],
            resources: [snsTopic.arn],
          },
        ],
      }
    );
    const awsSnsTopicPolicySnsTopicPolicy = new SnsTopicPolicy(
      this,
      "sns_topic_policy_3",
      {
        arn: snsTopic.arn,
        policy: Token.asString(snsTopicPolicy.json),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsSnsTopicPolicySnsTopicPolicy.overrideLogicalId("sns_topic_policy");
  }
}

```

## Argument Reference

There are no arguments available for this data source.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of the organization.
* `featureSet` - FeatureSet of the organization.
* `id` - ID of the organization.
* `masterAccountArn` - ARN of the account that is designated as the master account for the organization.
* `masterAccountEmail` - The email address that is associated with the AWS account that is designated as the master account for the organization.
* `masterAccountId` - Unique identifier (ID) of the master account of an organization.
* `masterAccountName` - Name of the master account of an organization.

### Master Account or Delegated Administrator Attribute Reference

If the account is the master account or a delegated administrator for the organization, the following attributes are also exported:

* `accounts` - List of organization accounts including the master account. For a list excluding the master account, see the `nonMasterAccounts` attribute. All elements have these attributes:
    * `arn` - ARN of the account
    * `email` - Email of the account
    * `id` - Identifier of the account
    * `name` - Name of the account
    * `status` - Status of the account
* `awsServiceAccessPrincipals` - A list of AWS service principal names that have integration enabled with your organization. Organization must have `featureSet` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).
* `enabledPolicyTypes` - A list of Organizations policy types that are enabled in the Organization Root. Organization must have `featureSet` set to `ALL`. For additional information about valid policy types (e.g., `SERVICE_CONTROL_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
* `nonMasterAccounts` - List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
    * `arn` - ARN of the account
    * `email` - Email of the account
    * `id` - Identifier of the account
    * `name` - Name of the account
    * `status` - Status of the account
* `roots` - List of organization roots. All elements have these attributes:
    * `arn` - ARN of the root
    * `id` - Identifier of the root
    * `name` - Name of the root
    * `policy_types` - List of policy types enabled for this root. All elements have these attributes:
        * `name` - The name of the policy type
        * `status` - The status of the policy type as it relates to the associated root

<!-- cache-key: cdktf-0.20.1 input-3f9a5e0bb85e9f8cdd8dcfa0c9353de9ba55a603cd7bf0529bbfabb7df52d6fd -->