---
subcategory: "Meta Data Sources"
layout: "aws"
page_title: "AWS: aws_default_tags"
description: |-
  Access the default tags configured on the provider.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_default_tags

Use this data source to get the default tags configured on the provider.

With this data source, you can apply default tags to resources not _directly_ managed by a Terraform resource, such as the instances underneath an Auto Scaling group or the volumes created for an EC2 instance.

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsDefaultTags } from "./.gen/providers/aws/data-aws-default-tags";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsDefaultTags(this, "example", {});
  }
}

```

### Dynamically Apply Default Tags to Auto Scaling Group

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformIterator, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { AutoscalingGroup } from "./.gen/providers/aws/autoscaling-group";
import { DataAwsDefaultTags } from "./.gen/providers/aws/data-aws-default-tags";
import { AwsProvider } from "./.gen/providers/aws/provider";
interface MyConfig {
  maxSize: any;
  minSize: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new AwsProvider(this, "aws", {
      defaultTags: [
        {
          tags: {
            Environment: "Test",
            Name: "Provider Tag",
          },
        },
      ],
    });
    const example = new DataAwsDefaultTags(this, "example", {});
    /*In most cases loops should be handled in the programming language context and 
    not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
    you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
    you need to keep this like it is.*/
    const exampleDynamicIterator0 = TerraformIterator.fromList(
      Token.asAny(example.tags)
    );
    const awsAutoscalingGroupExample = new AutoscalingGroup(this, "example_2", {
      tag: exampleDynamicIterator0.dynamic({
        key: exampleDynamicIterator0.key,
        propagate_at_launch: true,
        value: exampleDynamicIterator0.value,
      }),
      maxSize: config.maxSize,
      minSize: config.minSize,
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    awsAutoscalingGroupExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

This data source has no arguments.

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `tags` - Key-value mapping of provider default tags.

<!-- cache-key: cdktf-0.20.1 input-5379afa329280e66ecb9be70d287e86ad43906ae22d2b8976a3316d39a343709 -->