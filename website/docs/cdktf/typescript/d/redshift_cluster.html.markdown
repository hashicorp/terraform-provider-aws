---
subcategory: "Redshift"
layout: "aws"
page_title: "AWS: aws_redshift_cluster"
description: |-
    Provides details about a specific redshift cluster
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_redshift_cluster

Provides details about a specific redshift cluster.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsRedshiftCluster } from "./.gen/providers/aws/data-aws-redshift-cluster";
import { KinesisFirehoseDeliveryStream } from "./.gen/providers/aws/kinesis-firehose-delivery-stream";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new DataAwsRedshiftCluster(this, "example", {
      clusterIdentifier: "example-cluster",
    });
    new KinesisFirehoseDeliveryStream(this, "example_stream", {
      destination: "redshift",
      name: "terraform-kinesis-firehose-example-stream",
      redshiftConfiguration: {
        clusterJdbcurl:
          "jdbc:redshift://${" +
          example.endpoint +
          "}/${" +
          example.databaseName +
          "}",
        copyOptions: "delimiter '|'",
        dataTableColumns: "example-col",
        dataTableName: "example-table",
        password: "Exampl3Pass",
        roleArn: firehoseRole.arn,
        s3Configuration: {
          bucketArn: bucket.arn,
          buffer_interval: 400,
          buffer_size: 10,
          compressionFormat: "GZIP",
          roleArn: firehoseRole.arn,
        },
        username: "exampleuser",
      },
    });
  }
}

```

## Argument Reference

This data source supports the following arguments:

* `clusterIdentifier` - (Required) Cluster identifier

## Attribute Reference

This data source exports the following attributes in addition to the arguments above:

* `arn` - ARN of cluster.
* `allowVersionUpgrade` - Whether major version upgrades can be applied during maintenance period
* `automatedSnapshotRetentionPeriod` - The backup retention period
* `aquaConfigurationStatus` - The value represents how the cluster is configured to use AQUA.
* `availabilityZone` - Availability zone of the cluster
* `availabilityZoneRelocationEnabled` - Indicates whether the cluster is able to be relocated to another availability zone.
* `bucketName` - Name of the S3 bucket where the log files are to be stored
* `clusterIdentifier` - Cluster identifier
* `clusterNodes` - Nodes in the cluster. Cluster node blocks are documented below
* `clusterParameterGroupName` - The name of the parameter group to be associated with this cluster
* `clusterPublicKey` - Public key for the cluster
* `clusterRevisionNumber` - The cluster revision number
* `clusterSubnetGroupName` - The name of a cluster subnet group to be associated with this cluster
* `clusterType` - Cluster type
* `clusterNamespaceArn` - The namespace Amazon Resource Name (ARN) of the cluster
* `databaseName` - Name of the default database in the cluster
* `defaultIamRoleArn` - The ARN for the IAM role that was set as default for the cluster when the cluster was created.
* `elasticIp` - Elastic IP of the cluster
* `enableLogging` - Whether cluster logging is enabled
* `encrypted` - Whether the cluster data is encrypted
* `endpoint` - Cluster endpoint
* `enhancedVpcRouting` - Whether enhanced VPC routing is enabled
* `iamRoles` - IAM roles associated to the cluster
* `kmsKeyId` - KMS encryption key associated to the cluster
* `masterUsername` - Username for the master DB user
* `multiAz` - If the cluster is a Multi-AZ deployment
* `nodeType` - Cluster node type
* `numberOfNodes` - Number of nodes in the cluster
* `maintenanceTrackName` - The name of the maintenance track for the restored cluster.
* `manualSnapshotRetentionPeriod` - (Optional)  The default number of days to retain a manual snapshot.
* `port` - Port the cluster responds on
* `preferredMaintenanceWindow` - The maintenance window
* `publiclyAccessible` - Whether the cluster is publicly accessible
* `s3KeyPrefix` - Folder inside the S3 bucket where the log files are stored
* `logDestinationType` - The log destination type.
* `logExports` - Collection of exported log types. Log types include the connection log, user log and user activity log.
* `tags` - Tags associated to the cluster
* `vpcId` - VPC Id associated with the cluster
* `vpcSecurityGroupIds` - The VPC security group Ids associated with the cluster

Cluster nodes (for `clusterNodes`) support the following attributes:

* `node_role` - Whether the node is a leader node or a compute node
* `privateIpAddress` - Private IP address of a node within a cluster
* `publicIpAddress` - Public IP address of a node within a cluster

<!-- cache-key: cdktf-0.20.8 input-aab68f73a05c65a75cc35fff468fa2c875296239afeda093db3bbc836a929675 -->