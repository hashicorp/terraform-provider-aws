---
subcategory: "Auto Scaling"
layout: "aws"
page_title: "AWS: aws_autoscaling_group"
description: |-
  Get information on an Amazon EC2 Autoscaling Group.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_autoscaling_group

Use this data source to get information on an existing autoscaling group.

## Example Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsAutoscalingGroup } from "./.gen/providers/aws/data-aws-autoscaling-group";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsAutoscalingGroup(this, "foo", {
      name: "foo",
    });
  }
}

```

## Argument Reference

* `name` - Specify the exact name of the desired autoscaling group.

## Attribute Reference

~> **NOTE:** Some values are not always set and may not be available for
interpolation.

* `arn` - ARN of the Auto Scaling group.
* `availabilityZones` - One or more Availability Zones for the group.
* `default_cool_down` - Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
* `desiredCapacity` - Desired size of the group.
* `desiredCapacityType` - The unit of measurement for the value returned for `desiredCapacity`.
* `enabledMetrics` - List of metrics enabled for collection.
* `healthCheckGracePeriod` - The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.
* `healthCheckType` - Service to use for the health checks. The valid values are EC2 and ELB.
* `id` - Name of the Auto Scaling Group.
* `instanceMaintenancePolicy` - Instance maintenance policy for the group.
    * `minHealthyPercentage` - Specifies the lower limit on the number of instances that must be in the InService state with a healthy status during an instance replacement activity.
    * `maxHealthyPercentage` - Specifies the upper limit on the number of instances that are in the InService or Pending state with a healthy status during an instance replacement activity.
* `launchConfiguration` - The name of the associated launch configuration.
* `launchTemplate` - List of launch templates for the group.
    * `id` - ID of the launch template.
    * `name` - Name of the launch template.
    * `version` - Template version.
* `loadBalancers` - One or more load balancers associated with the group.
* `maxInstanceLifetime` - Maximum amount of time, in seconds, that an instance can be in service.
* `maxSize` - Maximum size of the group.
* `minSize` - Minimum size of the group.
* `mixedInstancesPolicy` - List of mixed instances policy objects for the group.
    * `instancesDistribution` - List of instances distribution objects.
        * `onDemandAllocationStrategy` - Strategy used when launching on-demand instances.
        * `onDemandBaseCapacity` -  Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances.
        * `spotAllocationStrategy` - Strategy used when launching Spot instances.
        * `spotInstancePools` - Number of Spot pools per availability zone to allocate capacity.
        * `spotMaxPrice` - Maximum price per unit hour that the user is willing to pay for the Spot instances.
    * `launchTemplate` - List of launch templates along with the overrides.
        * `launchTemplateSpecification` - List of launch template specification objects.
            * `launchTemplateId` - ID of the launch template.
            * `launchTemplateName` - Name of the launch template.
            * `version` - Template version.
        * `override` - List of properties overriding the same properties in the launch template.
            * `instanceRequirements` - List of instance requirements objects.
                * `accelerator_count - List of objects describing the minimum and maximum number of accelerators for an instance type.
                    * `min` - Minimum.
                    * `max` - Maximum.
                * `acceleratorManufacturers` - List of accelerator manufacturer names.
                * `acceleratorNames` - List of accelerator names.
                * `acceleratorTotalMemoryMib` - List of objects describing the minimum and maximum total memory of the accelerators.
                * `acceleratorTypes` - List of accelerator types.
                * `allowedInstanceTypes` - List of instance types to apply the specified attributes against.
                * `bareMetal` - Indicates whether bare metal instances are included, excluded, or required.
                * `baselineEbsBandwidthMbps` - List of objects describing the minimum and maximum baseline EBS bandwidth (Mbps).
                    * `min` - Minimum.
                    * `max` - Maximum.
                * `burstablePerformance` - Indicates whether burstable performance instance types are included, excluded, or required.
                * `cpuManufacturers` - List of CPU manufacturer names.
                * `excludedInstanceTypes` - List of excluded instance types.
                * `instanceGenerations` - List of instance generation names.
                * `localStorage` - Indicates whether instance types with instance store volumes are included, excluded, or required.
                * `localStorageTypes` - List of local storage type names.
                * `maxSpotPriceAsPercentageOfOptimalOnDemandPrice` - Price protection threshold for Spot Instances.
                * `memoryGibPerVcpu` - List of objects describing the minimum and maximum amount of memory (GiB) per vCPU.
                    * `min` - Minimum.
                    * `max` - Maximum.
                * `memoryMib` - List of objects describing the minimum and maximum amount of memory (MiB).
                    * `min` - Minimum.
                    * `max` - Maximum.
                * `networkBandwidthGbps` - List of objects describing the minimum and maximum amount of network bandwidth (Gbps).
                    * `min` - Minimum.
                    * `max`- Maximum.
                * `networkInterfaceCount` - List of objects describing the minimum and maximum amount of network interfaces.
                    * `min` - Minimum.
                    * `max` - Maximum.
                * `onDemandMaxPricePercentageOverLowestPrice` - Price protection threshold for On-Demand Instances.
                * `requireHibernateSupport` - Indicates whether instance types must support On-Demand Instance Hibernation.
                * `spotMaxPricePercentageOverLowestPrice` - Price protection threshold for Spot Instances.
                * `totalLocalStorageGb` - List of objects describing the minimum and maximum total storage (GB).
                    * `min` - Minimum.
                    * `max` - Maximum.
                * `vcpuCount` - List of objects describing the minimum and maximum number of vCPUs.
                    * `min` - Minimum.
                    * `max` - Maximum.
            * `instanceType` - Overriding instance type.
            * `launchTemplateSpecification` - List of overriding launch template specification objects.
                * `launchTemplateId` - ID of the launch template.
                * `launchTemplateName` - Name of the launch template.
                * `version` - Template version.
            * `weightedCapacity` - Number of capacity units, which gives the instance type a proportional weight to other instance types.
* `name` - Name of the Auto Scaling Group.
* `placementGroup` - Name of the placement group into which to launch your instances, if any. For more information, see Placement Groups (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon Elastic Compute Cloud User Guide.
* `predictedCapacity` - Predicted capacity of the group.
* `serviceLinkedRoleArn` - ARN of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf.
* `status` - Current state of the group when DeleteAutoScalingGroup is in progress.
* `suspendedProcesses` - List of processes suspended processes for the Auto Scaling Group.
* `tag` - List of tags for the group.
    * `key` - Key.
    * `value` - Value.
    * `propagateAtLaunch` - Whether the tag is propagated to Amazon EC2 instances launched via this ASG.
* `targetGroupArns` - ARNs of the target groups for your load balancer.
* `terminationPolicies` - The termination policies for the group.
* `trafficSource` -Traffic sources.
    * `identifier` - Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.
    * `type` - Traffic source type.
* `vpcZoneIdentifier` - VPC ID for the group.
* `warmPool` - List of warm pool configuration objects.
    * `instanceReusePolicy` - List of instance reuse policy objects.
        * `reuseOnScaleIn` - Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in.
    * `max_group_prepared_policy` - Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
    * `minSize` - Minimum number of instances to maintain in the warm pool.
    * `poolState` - Instance state to transition to after the lifecycle actions are complete.
* `warmPoolSize` - Current size of the warm pool.

<!-- cache-key: cdktf-0.20.1 input-ebf8888e7d02b248dc689ab89018f2682fdfa4054d736231065c99862872c406 -->